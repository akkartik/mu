9999 parse: instruction: assume-screen
9999 parse:   ingredient: {name: "30", properties: ["30": "literal", "width": ]}
9999 parse:   ingredient: {name: "12", properties: ["12": "literal", "height": ]}
9999 parse: instruction: run
9999 parse:   ingredient: {name: "\n    2:address:array:address:array:character/board <- initial-position\n    3:address:move <- new move:type\n    4:address:number <- get-address *3:address:move, from-file:offset\n    *4:address:number <- copy 6/g\n    5:address:number <- get-address *3:address:move, from-rank:offset\n    *5:address:number <- copy 1/'2'\n    6:address:number <- get-address *3:address:move, to-file:offset\n    *6:address:number <- copy 6/g\n    7:address:number <- get-address *3:address:move, to-rank:offset\n    *7:address:number <- copy 3/'4'\n    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move\n    screen:address <- print-board screen:address, 2:address:array:address:array:character/board\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: screen-should-contain
9999 parse:   ingredient: {name: "\n  #  012345678901234567890123456789\n    .8 | r n b q k b n r           .\n    .7 | p p p p p p p p           .\n    .6 |                           .\n    .5 |                           .\n    .4 |             P             .\n    .3 |                           .\n    .2 | P P P P P P   P           .\n    .1 | R N B Q K B N R           .\n    .  +----------------           .\n    .    a b c d e f g h           .\n    .                              .\n  ", properties: [_: "literal-string"]}
9999 after-brace: recipe scenario-making-a-move
9999 after-brace: new-fake-screen ...
9999 after-brace: run ...
9999 after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-making-a-move
 101 run: screen:address <- new-fake-screen 30/width, 12/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 30 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 12 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 30
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 12
9999 mem: storing 360 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 360
9999 mem: array size is 360
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1735
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1737
 103 run: break-unless sc, 
9999 mem: location 1737 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1737 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1737 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1738
 103 run: max:number <- length *buf
9999 mem: location 1738 is 1014
9999 mem: storing 360 in location 1739
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1740
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 0
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 0
9999 mem: storing 1015 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1742 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1742 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1740 is 0
9999 mem: storing 1 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 1
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 1
9999 mem: storing 1017 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1742 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1742 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1740 is 1
9999 mem: storing 2 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 2
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 2
9999 mem: storing 1019 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1742 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1742 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1740 is 2
9999 mem: storing 3 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 3
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 3
9999 mem: storing 1021 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1742 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1742 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1740 is 3
9999 mem: storing 4 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 4
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 4
9999 mem: storing 1023 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1742 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1742 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1740 is 4
9999 mem: storing 5 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 5
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 5
9999 mem: storing 1025 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1742 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1742 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1740 is 5
9999 mem: storing 6 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 6
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 6
9999 mem: storing 1027 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1742 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1742 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1740 is 6
9999 mem: storing 7 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 7
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 7
9999 mem: storing 1029 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1742 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1742 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1740 is 7
9999 mem: storing 8 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 8
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 8
9999 mem: storing 1031 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1742 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1742 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1740 is 8
9999 mem: storing 9 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 9
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 9
9999 mem: storing 1033 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1742 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1742 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1740 is 9
9999 mem: storing 10 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 10
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 10
9999 mem: storing 1035 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1742 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1742 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1740 is 10
9999 mem: storing 11 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 11
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 11
9999 mem: storing 1037 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1742 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1742 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1740 is 11
9999 mem: storing 12 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 12
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 12
9999 mem: storing 1039 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1742 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1742 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1740 is 12
9999 mem: storing 13 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 13
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 13
9999 mem: storing 1041 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1742 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1742 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1740 is 13
9999 mem: storing 14 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 14
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 14
9999 mem: storing 1043 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1742 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1742 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1740 is 14
9999 mem: storing 15 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 15
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 15
9999 mem: storing 1045 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1742 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1742 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1740 is 15
9999 mem: storing 16 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 16
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 16
9999 mem: storing 1047 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1742 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1742 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1740 is 16
9999 mem: storing 17 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 17
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 17
9999 mem: storing 1049 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1742 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1742 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1740 is 17
9999 mem: storing 18 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 18
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 18
9999 mem: storing 1051 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1742 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1742 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1740 is 18
9999 mem: storing 19 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 19
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 19
9999 mem: storing 1053 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1742 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1742 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1740 is 19
9999 mem: storing 20 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 20
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 20
9999 mem: storing 1055 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1742 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1742 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1056
9999 mem: storing 7 in location 1056
 103 run: i <- add i, 1
9999 mem: location 1740 is 20
9999 mem: storing 21 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 21
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 21
9999 mem: storing 1057 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1742 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1742 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1058
9999 mem: storing 7 in location 1058
 103 run: i <- add i, 1
9999 mem: location 1740 is 21
9999 mem: storing 22 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 22
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 22
9999 mem: storing 1059 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1742 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1742 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1060
9999 mem: storing 7 in location 1060
 103 run: i <- add i, 1
9999 mem: location 1740 is 22
9999 mem: storing 23 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 23
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 23
9999 mem: storing 1061 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1742 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1742 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1062
9999 mem: storing 7 in location 1062
 103 run: i <- add i, 1
9999 mem: location 1740 is 23
9999 mem: storing 24 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 24
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 24
9999 mem: storing 1063 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1742 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1742 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1064
9999 mem: storing 7 in location 1064
 103 run: i <- add i, 1
9999 mem: location 1740 is 24
9999 mem: storing 25 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 25
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 25
9999 mem: storing 1065 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1742 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1742 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1066
9999 mem: storing 7 in location 1066
 103 run: i <- add i, 1
9999 mem: location 1740 is 25
9999 mem: storing 26 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 26
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 26
9999 mem: storing 1067 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1742 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1742 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1068
9999 mem: storing 7 in location 1068
 103 run: i <- add i, 1
9999 mem: location 1740 is 26
9999 mem: storing 27 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 27
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 27
9999 mem: storing 1069 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1742 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1742 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1070
9999 mem: storing 7 in location 1070
 103 run: i <- add i, 1
9999 mem: location 1740 is 27
9999 mem: storing 28 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 28
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 28
9999 mem: storing 1071 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1742 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1742 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1072
9999 mem: storing 7 in location 1072
 103 run: i <- add i, 1
9999 mem: location 1740 is 28
9999 mem: storing 29 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 29
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 29
9999 mem: storing 1073 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1742 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1742 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1074
9999 mem: storing 7 in location 1074
 103 run: i <- add i, 1
9999 mem: location 1740 is 29
9999 mem: storing 30 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 30
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 30
9999 mem: storing 1075 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1742 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1742 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1076
9999 mem: storing 7 in location 1076
 103 run: i <- add i, 1
9999 mem: location 1740 is 30
9999 mem: storing 31 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 31
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 31
9999 mem: storing 1077 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1742 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1742 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1078
9999 mem: storing 7 in location 1078
 103 run: i <- add i, 1
9999 mem: location 1740 is 31
9999 mem: storing 32 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 32
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 32
9999 mem: storing 1079 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1742 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1742 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1080
9999 mem: storing 7 in location 1080
 103 run: i <- add i, 1
9999 mem: location 1740 is 32
9999 mem: storing 33 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 33
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 33
9999 mem: storing 1081 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1742 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1742 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1082
9999 mem: storing 7 in location 1082
 103 run: i <- add i, 1
9999 mem: location 1740 is 33
9999 mem: storing 34 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 34
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 34
9999 mem: storing 1083 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1742 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1742 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1084
9999 mem: storing 7 in location 1084
 103 run: i <- add i, 1
9999 mem: location 1740 is 34
9999 mem: storing 35 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 35
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 35
9999 mem: storing 1085 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1742 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1742 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1086
9999 mem: storing 7 in location 1086
 103 run: i <- add i, 1
9999 mem: location 1740 is 35
9999 mem: storing 36 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 36
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 36
9999 mem: storing 1087 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1742 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1742 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1088
9999 mem: storing 7 in location 1088
 103 run: i <- add i, 1
9999 mem: location 1740 is 36
9999 mem: storing 37 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 37
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 37
9999 mem: storing 1089 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1742 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1742 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1090
9999 mem: storing 7 in location 1090
 103 run: i <- add i, 1
9999 mem: location 1740 is 37
9999 mem: storing 38 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 38
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 38
9999 mem: storing 1091 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1742 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1742 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1092
9999 mem: storing 7 in location 1092
 103 run: i <- add i, 1
9999 mem: location 1740 is 38
9999 mem: storing 39 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 39
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 39
9999 mem: storing 1093 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1742 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1742 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1094
9999 mem: storing 7 in location 1094
 103 run: i <- add i, 1
9999 mem: location 1740 is 39
9999 mem: storing 40 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 40
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 40
9999 mem: storing 1095 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1742 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1742 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1096
9999 mem: storing 7 in location 1096
 103 run: i <- add i, 1
9999 mem: location 1740 is 40
9999 mem: storing 41 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 41
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 41
9999 mem: storing 1097 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1742 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1742 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1098
9999 mem: storing 7 in location 1098
 103 run: i <- add i, 1
9999 mem: location 1740 is 41
9999 mem: storing 42 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 42
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 42
9999 mem: storing 1099 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1742 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1742 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1100
9999 mem: storing 7 in location 1100
 103 run: i <- add i, 1
9999 mem: location 1740 is 42
9999 mem: storing 43 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 43
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 43
9999 mem: storing 1101 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1742 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1742 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1102
9999 mem: storing 7 in location 1102
 103 run: i <- add i, 1
9999 mem: location 1740 is 43
9999 mem: storing 44 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 44
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 44
9999 mem: storing 1103 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1742 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1742 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1104
9999 mem: storing 7 in location 1104
 103 run: i <- add i, 1
9999 mem: location 1740 is 44
9999 mem: storing 45 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 45
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 45
9999 mem: storing 1105 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1742 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1742 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1106
9999 mem: storing 7 in location 1106
 103 run: i <- add i, 1
9999 mem: location 1740 is 45
9999 mem: storing 46 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 46
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 46
9999 mem: storing 1107 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1742 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1742 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1108
9999 mem: storing 7 in location 1108
 103 run: i <- add i, 1
9999 mem: location 1740 is 46
9999 mem: storing 47 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 47
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 47
9999 mem: storing 1109 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1742 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1742 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1110
9999 mem: storing 7 in location 1110
 103 run: i <- add i, 1
9999 mem: location 1740 is 47
9999 mem: storing 48 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 48
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 48
9999 mem: storing 1111 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1742 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1742 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1112
9999 mem: storing 7 in location 1112
 103 run: i <- add i, 1
9999 mem: location 1740 is 48
9999 mem: storing 49 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 49
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 49
9999 mem: storing 1113 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1742 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1742 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1114
9999 mem: storing 7 in location 1114
 103 run: i <- add i, 1
9999 mem: location 1740 is 49
9999 mem: storing 50 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 50
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 50
9999 mem: storing 1115 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1742 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1115
9999 mem: storing 0 in location 1115
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1742 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1116
9999 mem: storing 7 in location 1116
 103 run: i <- add i, 1
9999 mem: location 1740 is 50
9999 mem: storing 51 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 51
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 51
9999 mem: storing 1117 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1117
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1742 is 1117
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1117
9999 mem: storing 0 in location 1117
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1117
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1742 is 1117
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1118
9999 mem: storing 7 in location 1118
 103 run: i <- add i, 1
9999 mem: location 1740 is 51
9999 mem: storing 52 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 52
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 52
9999 mem: storing 1119 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1119
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1742 is 1119
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1119
9999 mem: storing 0 in location 1119
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1119
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1742 is 1119
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1120
9999 mem: storing 7 in location 1120
 103 run: i <- add i, 1
9999 mem: location 1740 is 52
9999 mem: storing 53 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 53
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 53
9999 mem: storing 1121 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1121
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1742 is 1121
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1121
9999 mem: storing 0 in location 1121
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1121
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1742 is 1121
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1122
9999 mem: storing 7 in location 1122
 103 run: i <- add i, 1
9999 mem: location 1740 is 53
9999 mem: storing 54 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 54
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 54
9999 mem: storing 1123 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1123
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1742 is 1123
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1123
9999 mem: storing 0 in location 1123
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1123
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1742 is 1123
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1124
9999 mem: storing 7 in location 1124
 103 run: i <- add i, 1
9999 mem: location 1740 is 54
9999 mem: storing 55 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 55
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 55
9999 mem: storing 1125 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1125
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1742 is 1125
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1125
9999 mem: storing 0 in location 1125
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1125
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1742 is 1125
9999 run: address to copy is 1126
9999 mem: storing 1126 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1126
9999 mem: storing 7 in location 1126
 103 run: i <- add i, 1
9999 mem: location 1740 is 55
9999 mem: storing 56 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 56
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 56
9999 mem: storing 1127 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1127
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1742 is 1127
9999 run: address to copy is 1127
9999 mem: storing 1127 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1127
9999 mem: storing 0 in location 1127
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1127
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1742 is 1127
9999 run: address to copy is 1128
9999 mem: storing 1128 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1128
9999 mem: storing 7 in location 1128
 103 run: i <- add i, 1
9999 mem: location 1740 is 56
9999 mem: storing 57 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 57
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 57
9999 mem: storing 1129 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1129
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1742 is 1129
9999 run: address to copy is 1129
9999 mem: storing 1129 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1129
9999 mem: storing 0 in location 1129
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1129
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1742 is 1129
9999 run: address to copy is 1130
9999 mem: storing 1130 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1130
9999 mem: storing 7 in location 1130
 103 run: i <- add i, 1
9999 mem: location 1740 is 57
9999 mem: storing 58 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 58
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 58
9999 mem: storing 1131 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1131
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1742 is 1131
9999 run: address to copy is 1131
9999 mem: storing 1131 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1131
9999 mem: storing 0 in location 1131
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1131
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1742 is 1131
9999 run: address to copy is 1132
9999 mem: storing 1132 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1132
9999 mem: storing 7 in location 1132
 103 run: i <- add i, 1
9999 mem: location 1740 is 58
9999 mem: storing 59 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 59
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 59
9999 mem: storing 1133 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1742 is 1133
9999 run: address to copy is 1133
9999 mem: storing 1133 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1133
9999 mem: storing 0 in location 1133
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1742 is 1133
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1134
9999 mem: storing 7 in location 1134
 103 run: i <- add i, 1
9999 mem: location 1740 is 59
9999 mem: storing 60 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 60
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 60
9999 mem: storing 1135 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1742 is 1135
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1135
9999 mem: storing 0 in location 1135
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1742 is 1135
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1136
9999 mem: storing 7 in location 1136
 103 run: i <- add i, 1
9999 mem: location 1740 is 60
9999 mem: storing 61 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 61
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 61
9999 mem: storing 1137 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1742 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1137
9999 mem: storing 0 in location 1137
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1742 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1138
9999 mem: storing 7 in location 1138
 103 run: i <- add i, 1
9999 mem: location 1740 is 61
9999 mem: storing 62 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 62
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 62
9999 mem: storing 1139 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1139
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1742 is 1139
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1139
9999 mem: storing 0 in location 1139
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1139
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1742 is 1139
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1140
9999 mem: storing 7 in location 1140
 103 run: i <- add i, 1
9999 mem: location 1740 is 62
9999 mem: storing 63 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 63
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 63
9999 mem: storing 1141 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1141
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1742 is 1141
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1141
9999 mem: storing 0 in location 1141
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1141
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1742 is 1141
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1142
9999 mem: storing 7 in location 1142
 103 run: i <- add i, 1
9999 mem: location 1740 is 63
9999 mem: storing 64 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 64
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 64
9999 mem: storing 1143 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1143
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1742 is 1143
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1143
9999 mem: storing 0 in location 1143
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1143
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1742 is 1143
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1144
9999 mem: storing 7 in location 1144
 103 run: i <- add i, 1
9999 mem: location 1740 is 64
9999 mem: storing 65 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 65
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 65
9999 mem: storing 1145 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1742 is 1145
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1145
9999 mem: storing 0 in location 1145
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1742 is 1145
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1146
9999 mem: storing 7 in location 1146
 103 run: i <- add i, 1
9999 mem: location 1740 is 65
9999 mem: storing 66 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 66
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 66
9999 mem: storing 1147 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1742 is 1147
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1147
9999 mem: storing 0 in location 1147
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1742 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1148
9999 mem: storing 7 in location 1148
 103 run: i <- add i, 1
9999 mem: location 1740 is 66
9999 mem: storing 67 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 67
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 67
9999 mem: storing 1149 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1742 is 1149
9999 run: address to copy is 1149
9999 mem: storing 1149 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1149
9999 mem: storing 0 in location 1149
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1742 is 1149
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1150
9999 mem: storing 7 in location 1150
 103 run: i <- add i, 1
9999 mem: location 1740 is 67
9999 mem: storing 68 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 68
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 68
9999 mem: storing 1151 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1151
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1742 is 1151
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1151
9999 mem: storing 0 in location 1151
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1151
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1742 is 1151
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1152
9999 mem: storing 7 in location 1152
 103 run: i <- add i, 1
9999 mem: location 1740 is 68
9999 mem: storing 69 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 69
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 69
9999 mem: storing 1153 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1742 is 1153
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1153
9999 mem: storing 0 in location 1153
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1742 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1154
9999 mem: storing 7 in location 1154
 103 run: i <- add i, 1
9999 mem: location 1740 is 69
9999 mem: storing 70 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 70
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 70
9999 mem: storing 1155 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1742 is 1155
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1155
9999 mem: storing 0 in location 1155
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1742 is 1155
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1156
9999 mem: storing 7 in location 1156
 103 run: i <- add i, 1
9999 mem: location 1740 is 70
9999 mem: storing 71 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 71
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 71
9999 mem: storing 1157 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1742 is 1157
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1157
9999 mem: storing 0 in location 1157
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1742 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1158
9999 mem: storing 7 in location 1158
 103 run: i <- add i, 1
9999 mem: location 1740 is 71
9999 mem: storing 72 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 72
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 72
9999 mem: storing 1159 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1159
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1742 is 1159
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1159
9999 mem: storing 0 in location 1159
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1159
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1742 is 1159
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1160
9999 mem: storing 7 in location 1160
 103 run: i <- add i, 1
9999 mem: location 1740 is 72
9999 mem: storing 73 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 73
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 73
9999 mem: storing 1161 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1742 is 1161
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1161
9999 mem: storing 0 in location 1161
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1742 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1162
9999 mem: storing 7 in location 1162
 103 run: i <- add i, 1
9999 mem: location 1740 is 73
9999 mem: storing 74 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 74
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 74
9999 mem: storing 1163 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1742 is 1163
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1163
9999 mem: storing 0 in location 1163
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1742 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1164
9999 mem: storing 7 in location 1164
 103 run: i <- add i, 1
9999 mem: location 1740 is 74
9999 mem: storing 75 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 75
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 75
9999 mem: storing 1165 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1742 is 1165
9999 run: address to copy is 1165
9999 mem: storing 1165 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1165
9999 mem: storing 0 in location 1165
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1742 is 1165
9999 run: address to copy is 1166
9999 mem: storing 1166 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1166
9999 mem: storing 7 in location 1166
 103 run: i <- add i, 1
9999 mem: location 1740 is 75
9999 mem: storing 76 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 76
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 76
9999 mem: storing 1167 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1742 is 1167
9999 run: address to copy is 1167
9999 mem: storing 1167 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1167
9999 mem: storing 0 in location 1167
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1742 is 1167
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1168
9999 mem: storing 7 in location 1168
 103 run: i <- add i, 1
9999 mem: location 1740 is 76
9999 mem: storing 77 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 77
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 77
9999 mem: storing 1169 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1742 is 1169
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1169
9999 mem: storing 0 in location 1169
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1742 is 1169
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1170
9999 mem: storing 7 in location 1170
 103 run: i <- add i, 1
9999 mem: location 1740 is 77
9999 mem: storing 78 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 78
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 78
9999 mem: storing 1171 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1171
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1742 is 1171
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1171
9999 mem: storing 0 in location 1171
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1171
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1742 is 1171
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1172
9999 mem: storing 7 in location 1172
 103 run: i <- add i, 1
9999 mem: location 1740 is 78
9999 mem: storing 79 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 79
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 79
9999 mem: storing 1173 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1173
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1742 is 1173
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1173
9999 mem: storing 0 in location 1173
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1173
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1742 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1174
9999 mem: storing 7 in location 1174
 103 run: i <- add i, 1
9999 mem: location 1740 is 79
9999 mem: storing 80 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 80
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 80
9999 mem: storing 1175 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1175
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1742 is 1175
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1175
9999 mem: storing 0 in location 1175
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1175
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1742 is 1175
9999 run: address to copy is 1176
9999 mem: storing 1176 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1176
9999 mem: storing 7 in location 1176
 103 run: i <- add i, 1
9999 mem: location 1740 is 80
9999 mem: storing 81 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 81
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 81
9999 mem: storing 1177 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1742 is 1177
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1177
9999 mem: storing 0 in location 1177
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1742 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1178
9999 mem: storing 7 in location 1178
 103 run: i <- add i, 1
9999 mem: location 1740 is 81
9999 mem: storing 82 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 82
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 82
9999 mem: storing 1179 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1742 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1179
9999 mem: storing 0 in location 1179
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1742 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1180
9999 mem: storing 7 in location 1180
 103 run: i <- add i, 1
9999 mem: location 1740 is 82
9999 mem: storing 83 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 83
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 83
9999 mem: storing 1181 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1181
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1742 is 1181
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1181
9999 mem: storing 0 in location 1181
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1181
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1742 is 1181
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1182
9999 mem: storing 7 in location 1182
 103 run: i <- add i, 1
9999 mem: location 1740 is 83
9999 mem: storing 84 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 84
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 84
9999 mem: storing 1183 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1183
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1742 is 1183
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1183
9999 mem: storing 0 in location 1183
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1183
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1742 is 1183
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1184
9999 mem: storing 7 in location 1184
 103 run: i <- add i, 1
9999 mem: location 1740 is 84
9999 mem: storing 85 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 85
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 85
9999 mem: storing 1185 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1185
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1742 is 1185
9999 run: address to copy is 1185
9999 mem: storing 1185 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1185
9999 mem: storing 0 in location 1185
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1185
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1742 is 1185
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1186
9999 mem: storing 7 in location 1186
 103 run: i <- add i, 1
9999 mem: location 1740 is 85
9999 mem: storing 86 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 86
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 86
9999 mem: storing 1187 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1187
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1742 is 1187
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1187
9999 mem: storing 0 in location 1187
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1187
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1742 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1188
9999 mem: storing 7 in location 1188
 103 run: i <- add i, 1
9999 mem: location 1740 is 86
9999 mem: storing 87 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 87
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 87
9999 mem: storing 1189 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1189
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1742 is 1189
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1189
9999 mem: storing 0 in location 1189
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1189
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1742 is 1189
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1190
9999 mem: storing 7 in location 1190
 103 run: i <- add i, 1
9999 mem: location 1740 is 87
9999 mem: storing 88 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 88
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 88
9999 mem: storing 1191 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1191
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1742 is 1191
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1191
9999 mem: storing 0 in location 1191
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1191
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1742 is 1191
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1192
9999 mem: storing 7 in location 1192
 103 run: i <- add i, 1
9999 mem: location 1740 is 88
9999 mem: storing 89 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 89
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 89
9999 mem: storing 1193 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1193
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1742 is 1193
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1193
9999 mem: storing 0 in location 1193
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1193
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1742 is 1193
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1194
9999 mem: storing 7 in location 1194
 103 run: i <- add i, 1
9999 mem: location 1740 is 89
9999 mem: storing 90 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 90
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 90
9999 mem: storing 1195 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1195
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1742 is 1195
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1195
9999 mem: storing 0 in location 1195
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1195
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1742 is 1195
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1196
9999 mem: storing 7 in location 1196
 103 run: i <- add i, 1
9999 mem: location 1740 is 90
9999 mem: storing 91 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 91
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 91
9999 mem: storing 1197 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1197
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1742 is 1197
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1197
9999 mem: storing 0 in location 1197
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1197
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1742 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1198
9999 mem: storing 7 in location 1198
 103 run: i <- add i, 1
9999 mem: location 1740 is 91
9999 mem: storing 92 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 92
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 92
9999 mem: storing 1199 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1199
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1742 is 1199
9999 run: address to copy is 1199
9999 mem: storing 1199 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1199
9999 mem: storing 0 in location 1199
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1199
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1742 is 1199
9999 run: address to copy is 1200
9999 mem: storing 1200 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1200
9999 mem: storing 7 in location 1200
 103 run: i <- add i, 1
9999 mem: location 1740 is 92
9999 mem: storing 93 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 93
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 93
9999 mem: storing 1201 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1201
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1742 is 1201
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1201
9999 mem: storing 0 in location 1201
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1201
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1742 is 1201
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1202
9999 mem: storing 7 in location 1202
 103 run: i <- add i, 1
9999 mem: location 1740 is 93
9999 mem: storing 94 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 94
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 94
9999 mem: storing 1203 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1203
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1742 is 1203
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1203
9999 mem: storing 0 in location 1203
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1203
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1742 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1204
9999 mem: storing 7 in location 1204
 103 run: i <- add i, 1
9999 mem: location 1740 is 94
9999 mem: storing 95 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 95
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 95
9999 mem: storing 1205 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1205
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1742 is 1205
9999 run: address to copy is 1205
9999 mem: storing 1205 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1205
9999 mem: storing 0 in location 1205
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1205
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1742 is 1205
9999 run: address to copy is 1206
9999 mem: storing 1206 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1206
9999 mem: storing 7 in location 1206
 103 run: i <- add i, 1
9999 mem: location 1740 is 95
9999 mem: storing 96 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 96
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 96
9999 mem: storing 1207 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1742 is 1207
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1207
9999 mem: storing 0 in location 1207
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1742 is 1207
9999 run: address to copy is 1208
9999 mem: storing 1208 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1208
9999 mem: storing 7 in location 1208
 103 run: i <- add i, 1
9999 mem: location 1740 is 96
9999 mem: storing 97 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 97
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 97
9999 mem: storing 1209 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1209
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1742 is 1209
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1209
9999 mem: storing 0 in location 1209
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1209
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1742 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1210
9999 mem: storing 7 in location 1210
 103 run: i <- add i, 1
9999 mem: location 1740 is 97
9999 mem: storing 98 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 98
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 98
9999 mem: storing 1211 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1742 is 1211
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1211
9999 mem: storing 0 in location 1211
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1742 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1212
9999 mem: storing 7 in location 1212
 103 run: i <- add i, 1
9999 mem: location 1740 is 98
9999 mem: storing 99 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 99
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 99
9999 mem: storing 1213 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1213
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1742 is 1213
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1213
9999 mem: storing 0 in location 1213
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1213
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1742 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1214
9999 mem: storing 7 in location 1214
 103 run: i <- add i, 1
9999 mem: location 1740 is 99
9999 mem: storing 100 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 100
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 100
9999 mem: storing 1215 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1742 is 1215
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1215
9999 mem: storing 0 in location 1215
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1742 is 1215
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1216
9999 mem: storing 7 in location 1216
 103 run: i <- add i, 1
9999 mem: location 1740 is 100
9999 mem: storing 101 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 101
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 101
9999 mem: storing 1217 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1742 is 1217
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1217
9999 mem: storing 0 in location 1217
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1742 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1218
9999 mem: storing 7 in location 1218
 103 run: i <- add i, 1
9999 mem: location 1740 is 101
9999 mem: storing 102 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 102
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 102
9999 mem: storing 1219 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1219
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1742 is 1219
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1219
9999 mem: storing 0 in location 1219
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1219
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1742 is 1219
9999 run: address to copy is 1220
9999 mem: storing 1220 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1220
9999 mem: storing 7 in location 1220
 103 run: i <- add i, 1
9999 mem: location 1740 is 102
9999 mem: storing 103 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 103
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 103
9999 mem: storing 1221 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1221
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1742 is 1221
9999 run: address to copy is 1221
9999 mem: storing 1221 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1221
9999 mem: storing 0 in location 1221
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1221
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1742 is 1221
9999 run: address to copy is 1222
9999 mem: storing 1222 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1222
9999 mem: storing 7 in location 1222
 103 run: i <- add i, 1
9999 mem: location 1740 is 103
9999 mem: storing 104 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 104
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 104
9999 mem: storing 1223 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1223
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1742 is 1223
9999 run: address to copy is 1223
9999 mem: storing 1223 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1223
9999 mem: storing 0 in location 1223
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1223
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1742 is 1223
9999 run: address to copy is 1224
9999 mem: storing 1224 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1224
9999 mem: storing 7 in location 1224
 103 run: i <- add i, 1
9999 mem: location 1740 is 104
9999 mem: storing 105 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 105
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 105
9999 mem: storing 1225 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1225
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1742 is 1225
9999 run: address to copy is 1225
9999 mem: storing 1225 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1225
9999 mem: storing 0 in location 1225
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1225
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1742 is 1225
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1226
9999 mem: storing 7 in location 1226
 103 run: i <- add i, 1
9999 mem: location 1740 is 105
9999 mem: storing 106 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 106
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 106
9999 mem: storing 1227 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1227
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1742 is 1227
9999 run: address to copy is 1227
9999 mem: storing 1227 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1227
9999 mem: storing 0 in location 1227
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1227
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1742 is 1227
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1228
9999 mem: storing 7 in location 1228
 103 run: i <- add i, 1
9999 mem: location 1740 is 106
9999 mem: storing 107 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 107
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 107
9999 mem: storing 1229 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1229
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1742 is 1229
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1229
9999 mem: storing 0 in location 1229
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1229
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1742 is 1229
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1230
9999 mem: storing 7 in location 1230
 103 run: i <- add i, 1
9999 mem: location 1740 is 107
9999 mem: storing 108 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 108
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 108
9999 mem: storing 1231 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1231
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1742 is 1231
9999 run: address to copy is 1231
9999 mem: storing 1231 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1231
9999 mem: storing 0 in location 1231
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1231
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1742 is 1231
9999 run: address to copy is 1232
9999 mem: storing 1232 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1232
9999 mem: storing 7 in location 1232
 103 run: i <- add i, 1
9999 mem: location 1740 is 108
9999 mem: storing 109 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 109
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 109
9999 mem: storing 1233 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1233
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1742 is 1233
9999 run: address to copy is 1233
9999 mem: storing 1233 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1233
9999 mem: storing 0 in location 1233
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1233
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1742 is 1233
9999 run: address to copy is 1234
9999 mem: storing 1234 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1234
9999 mem: storing 7 in location 1234
 103 run: i <- add i, 1
9999 mem: location 1740 is 109
9999 mem: storing 110 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 110
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 110
9999 mem: storing 1235 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1235
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1742 is 1235
9999 run: address to copy is 1235
9999 mem: storing 1235 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1235
9999 mem: storing 0 in location 1235
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1235
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1742 is 1235
9999 run: address to copy is 1236
9999 mem: storing 1236 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1236
9999 mem: storing 7 in location 1236
 103 run: i <- add i, 1
9999 mem: location 1740 is 110
9999 mem: storing 111 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 111
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 111
9999 mem: storing 1237 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1237
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1742 is 1237
9999 run: address to copy is 1237
9999 mem: storing 1237 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1237
9999 mem: storing 0 in location 1237
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1237
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1742 is 1237
9999 run: address to copy is 1238
9999 mem: storing 1238 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1238
9999 mem: storing 7 in location 1238
 103 run: i <- add i, 1
9999 mem: location 1740 is 111
9999 mem: storing 112 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 112
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 112
9999 mem: storing 1239 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1239
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1742 is 1239
9999 run: address to copy is 1239
9999 mem: storing 1239 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1239
9999 mem: storing 0 in location 1239
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1239
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1742 is 1239
9999 run: address to copy is 1240
9999 mem: storing 1240 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1240
9999 mem: storing 7 in location 1240
 103 run: i <- add i, 1
9999 mem: location 1740 is 112
9999 mem: storing 113 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 113
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 113
9999 mem: storing 1241 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1241
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1742 is 1241
9999 run: address to copy is 1241
9999 mem: storing 1241 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1241
9999 mem: storing 0 in location 1241
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1241
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1742 is 1241
9999 run: address to copy is 1242
9999 mem: storing 1242 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1242
9999 mem: storing 7 in location 1242
 103 run: i <- add i, 1
9999 mem: location 1740 is 113
9999 mem: storing 114 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 114
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 114
9999 mem: storing 1243 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1243
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1742 is 1243
9999 run: address to copy is 1243
9999 mem: storing 1243 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1243
9999 mem: storing 0 in location 1243
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1243
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1742 is 1243
9999 run: address to copy is 1244
9999 mem: storing 1244 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1244
9999 mem: storing 7 in location 1244
 103 run: i <- add i, 1
9999 mem: location 1740 is 114
9999 mem: storing 115 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 115
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 115
9999 mem: storing 1245 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1245
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1742 is 1245
9999 run: address to copy is 1245
9999 mem: storing 1245 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1245
9999 mem: storing 0 in location 1245
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1245
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1742 is 1245
9999 run: address to copy is 1246
9999 mem: storing 1246 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1246
9999 mem: storing 7 in location 1246
 103 run: i <- add i, 1
9999 mem: location 1740 is 115
9999 mem: storing 116 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 116
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 116
9999 mem: storing 1247 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1247
9999 mem: location 1247 is 0
9999 mem: location 1248 is 0
9999 mem: location 1742 is 1247
9999 run: address to copy is 1247
9999 mem: storing 1247 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1247
9999 mem: storing 0 in location 1247
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1247
9999 mem: location 1247 is 0
9999 mem: location 1248 is 0
9999 mem: location 1742 is 1247
9999 run: address to copy is 1248
9999 mem: storing 1248 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1248
9999 mem: storing 7 in location 1248
 103 run: i <- add i, 1
9999 mem: location 1740 is 116
9999 mem: storing 117 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 117
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 117
9999 mem: storing 1249 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1249
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1742 is 1249
9999 run: address to copy is 1249
9999 mem: storing 1249 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1249
9999 mem: storing 0 in location 1249
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1249
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1742 is 1249
9999 run: address to copy is 1250
9999 mem: storing 1250 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1250
9999 mem: storing 7 in location 1250
 103 run: i <- add i, 1
9999 mem: location 1740 is 117
9999 mem: storing 118 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 118
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 118
9999 mem: storing 1251 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1251
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1742 is 1251
9999 run: address to copy is 1251
9999 mem: storing 1251 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1251
9999 mem: storing 0 in location 1251
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1251
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1742 is 1251
9999 run: address to copy is 1252
9999 mem: storing 1252 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1252
9999 mem: storing 7 in location 1252
 103 run: i <- add i, 1
9999 mem: location 1740 is 118
9999 mem: storing 119 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 119
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 119
9999 mem: storing 1253 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1742 is 1253
9999 run: address to copy is 1253
9999 mem: storing 1253 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1253
9999 mem: storing 0 in location 1253
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1253
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1742 is 1253
9999 run: address to copy is 1254
9999 mem: storing 1254 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1254
9999 mem: storing 7 in location 1254
 103 run: i <- add i, 1
9999 mem: location 1740 is 119
9999 mem: storing 120 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 120
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 120
9999 mem: storing 1255 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1255
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1742 is 1255
9999 run: address to copy is 1255
9999 mem: storing 1255 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1255
9999 mem: storing 0 in location 1255
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1255
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1742 is 1255
9999 run: address to copy is 1256
9999 mem: storing 1256 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1256
9999 mem: storing 7 in location 1256
 103 run: i <- add i, 1
9999 mem: location 1740 is 120
9999 mem: storing 121 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 121
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 121
9999 mem: storing 1257 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1257
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1742 is 1257
9999 run: address to copy is 1257
9999 mem: storing 1257 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1257
9999 mem: storing 0 in location 1257
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1257
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1742 is 1257
9999 run: address to copy is 1258
9999 mem: storing 1258 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1258
9999 mem: storing 7 in location 1258
 103 run: i <- add i, 1
9999 mem: location 1740 is 121
9999 mem: storing 122 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 122
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 122
9999 mem: storing 1259 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1259
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1742 is 1259
9999 run: address to copy is 1259
9999 mem: storing 1259 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1259
9999 mem: storing 0 in location 1259
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1259
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1742 is 1259
9999 run: address to copy is 1260
9999 mem: storing 1260 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1260
9999 mem: storing 7 in location 1260
 103 run: i <- add i, 1
9999 mem: location 1740 is 122
9999 mem: storing 123 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 123
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 123
9999 mem: storing 1261 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1261
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1742 is 1261
9999 run: address to copy is 1261
9999 mem: storing 1261 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1261
9999 mem: storing 0 in location 1261
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1261
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1742 is 1261
9999 run: address to copy is 1262
9999 mem: storing 1262 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1262
9999 mem: storing 7 in location 1262
 103 run: i <- add i, 1
9999 mem: location 1740 is 123
9999 mem: storing 124 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 124
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 124
9999 mem: storing 1263 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1263
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1742 is 1263
9999 run: address to copy is 1263
9999 mem: storing 1263 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1263
9999 mem: storing 0 in location 1263
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1263
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1742 is 1263
9999 run: address to copy is 1264
9999 mem: storing 1264 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1264
9999 mem: storing 7 in location 1264
 103 run: i <- add i, 1
9999 mem: location 1740 is 124
9999 mem: storing 125 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 125
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 125
9999 mem: storing 1265 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1265
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1742 is 1265
9999 run: address to copy is 1265
9999 mem: storing 1265 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1265
9999 mem: storing 0 in location 1265
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1265
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1742 is 1265
9999 run: address to copy is 1266
9999 mem: storing 1266 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1266
9999 mem: storing 7 in location 1266
 103 run: i <- add i, 1
9999 mem: location 1740 is 125
9999 mem: storing 126 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 126
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 126
9999 mem: storing 1267 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1267
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1742 is 1267
9999 run: address to copy is 1267
9999 mem: storing 1267 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1267
9999 mem: storing 0 in location 1267
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1267
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1742 is 1267
9999 run: address to copy is 1268
9999 mem: storing 1268 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1268
9999 mem: storing 7 in location 1268
 103 run: i <- add i, 1
9999 mem: location 1740 is 126
9999 mem: storing 127 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 127
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 127
9999 mem: storing 1269 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1269
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1742 is 1269
9999 run: address to copy is 1269
9999 mem: storing 1269 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1269
9999 mem: storing 0 in location 1269
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1269
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1742 is 1269
9999 run: address to copy is 1270
9999 mem: storing 1270 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1270
9999 mem: storing 7 in location 1270
 103 run: i <- add i, 1
9999 mem: location 1740 is 127
9999 mem: storing 128 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 128
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 128
9999 mem: storing 1271 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1271
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1742 is 1271
9999 run: address to copy is 1271
9999 mem: storing 1271 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1271
9999 mem: storing 0 in location 1271
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1271
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1742 is 1271
9999 run: address to copy is 1272
9999 mem: storing 1272 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1272
9999 mem: storing 7 in location 1272
 103 run: i <- add i, 1
9999 mem: location 1740 is 128
9999 mem: storing 129 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 129
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 129
9999 mem: storing 1273 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1273
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1742 is 1273
9999 run: address to copy is 1273
9999 mem: storing 1273 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1273
9999 mem: storing 0 in location 1273
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1273
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1742 is 1273
9999 run: address to copy is 1274
9999 mem: storing 1274 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1274
9999 mem: storing 7 in location 1274
 103 run: i <- add i, 1
9999 mem: location 1740 is 129
9999 mem: storing 130 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 130
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 130
9999 mem: storing 1275 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1275
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1742 is 1275
9999 run: address to copy is 1275
9999 mem: storing 1275 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1275
9999 mem: storing 0 in location 1275
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1275
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1742 is 1275
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1276
9999 mem: storing 7 in location 1276
 103 run: i <- add i, 1
9999 mem: location 1740 is 130
9999 mem: storing 131 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 131
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 131
9999 mem: storing 1277 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1277
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1742 is 1277
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1277
9999 mem: storing 0 in location 1277
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1277
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1742 is 1277
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1278
9999 mem: storing 7 in location 1278
 103 run: i <- add i, 1
9999 mem: location 1740 is 131
9999 mem: storing 132 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 132
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 132
9999 mem: storing 1279 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1279
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1742 is 1279
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1279
9999 mem: storing 0 in location 1279
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1279
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1742 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1280
9999 mem: storing 7 in location 1280
 103 run: i <- add i, 1
9999 mem: location 1740 is 132
9999 mem: storing 133 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 133
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 133
9999 mem: storing 1281 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1281
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1742 is 1281
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1281
9999 mem: storing 0 in location 1281
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1281
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1742 is 1281
9999 run: address to copy is 1282
9999 mem: storing 1282 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1282
9999 mem: storing 7 in location 1282
 103 run: i <- add i, 1
9999 mem: location 1740 is 133
9999 mem: storing 134 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 134
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 134
9999 mem: storing 1283 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1283
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1742 is 1283
9999 run: address to copy is 1283
9999 mem: storing 1283 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1283
9999 mem: storing 0 in location 1283
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1283
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1742 is 1283
9999 run: address to copy is 1284
9999 mem: storing 1284 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1284
9999 mem: storing 7 in location 1284
 103 run: i <- add i, 1
9999 mem: location 1740 is 134
9999 mem: storing 135 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 135
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 135
9999 mem: storing 1285 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1285
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1742 is 1285
9999 run: address to copy is 1285
9999 mem: storing 1285 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1285
9999 mem: storing 0 in location 1285
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1285
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1742 is 1285
9999 run: address to copy is 1286
9999 mem: storing 1286 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1286
9999 mem: storing 7 in location 1286
 103 run: i <- add i, 1
9999 mem: location 1740 is 135
9999 mem: storing 136 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 136
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 136
9999 mem: storing 1287 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1287
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1742 is 1287
9999 run: address to copy is 1287
9999 mem: storing 1287 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1287
9999 mem: storing 0 in location 1287
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1287
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1742 is 1287
9999 run: address to copy is 1288
9999 mem: storing 1288 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1288
9999 mem: storing 7 in location 1288
 103 run: i <- add i, 1
9999 mem: location 1740 is 136
9999 mem: storing 137 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 137
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 137
9999 mem: storing 1289 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1742 is 1289
9999 run: address to copy is 1289
9999 mem: storing 1289 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1289
9999 mem: storing 0 in location 1289
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1742 is 1289
9999 run: address to copy is 1290
9999 mem: storing 1290 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1290
9999 mem: storing 7 in location 1290
 103 run: i <- add i, 1
9999 mem: location 1740 is 137
9999 mem: storing 138 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 138
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 138
9999 mem: storing 1291 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1291
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1742 is 1291
9999 run: address to copy is 1291
9999 mem: storing 1291 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1291
9999 mem: storing 0 in location 1291
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1291
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1742 is 1291
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1292
9999 mem: storing 7 in location 1292
 103 run: i <- add i, 1
9999 mem: location 1740 is 138
9999 mem: storing 139 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 139
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 139
9999 mem: storing 1293 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1742 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1293
9999 mem: storing 0 in location 1293
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1742 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1294
9999 mem: storing 7 in location 1294
 103 run: i <- add i, 1
9999 mem: location 1740 is 139
9999 mem: storing 140 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 140
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 140
9999 mem: storing 1295 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1295
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1742 is 1295
9999 run: address to copy is 1295
9999 mem: storing 1295 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1295
9999 mem: storing 0 in location 1295
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1295
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1742 is 1295
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1296
9999 mem: storing 7 in location 1296
 103 run: i <- add i, 1
9999 mem: location 1740 is 140
9999 mem: storing 141 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 141
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 141
9999 mem: storing 1297 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1297
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: location 1742 is 1297
9999 run: address to copy is 1297
9999 mem: storing 1297 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1297
9999 mem: storing 0 in location 1297
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1297
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: location 1742 is 1297
9999 run: address to copy is 1298
9999 mem: storing 1298 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1298
9999 mem: storing 7 in location 1298
 103 run: i <- add i, 1
9999 mem: location 1740 is 141
9999 mem: storing 142 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 142
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 142
9999 mem: storing 1299 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1742 is 1299
9999 run: address to copy is 1299
9999 mem: storing 1299 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1299
9999 mem: storing 0 in location 1299
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1742 is 1299
9999 run: address to copy is 1300
9999 mem: storing 1300 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1300
9999 mem: storing 7 in location 1300
 103 run: i <- add i, 1
9999 mem: location 1740 is 142
9999 mem: storing 143 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 143
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 143
9999 mem: storing 1301 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1301
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: location 1742 is 1301
9999 run: address to copy is 1301
9999 mem: storing 1301 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1301
9999 mem: storing 0 in location 1301
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1301
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: location 1742 is 1301
9999 run: address to copy is 1302
9999 mem: storing 1302 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1302
9999 mem: storing 7 in location 1302
 103 run: i <- add i, 1
9999 mem: location 1740 is 143
9999 mem: storing 144 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 144
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 144
9999 mem: storing 1303 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1303
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1742 is 1303
9999 run: address to copy is 1303
9999 mem: storing 1303 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1303
9999 mem: storing 0 in location 1303
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1303
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1742 is 1303
9999 run: address to copy is 1304
9999 mem: storing 1304 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1304
9999 mem: storing 7 in location 1304
 103 run: i <- add i, 1
9999 mem: location 1740 is 144
9999 mem: storing 145 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 145
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 145
9999 mem: storing 1305 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1305
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1742 is 1305
9999 run: address to copy is 1305
9999 mem: storing 1305 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1305
9999 mem: storing 0 in location 1305
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1305
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1742 is 1305
9999 run: address to copy is 1306
9999 mem: storing 1306 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1306
9999 mem: storing 7 in location 1306
 103 run: i <- add i, 1
9999 mem: location 1740 is 145
9999 mem: storing 146 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 146
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 146
9999 mem: storing 1307 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1307
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1742 is 1307
9999 run: address to copy is 1307
9999 mem: storing 1307 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1307
9999 mem: storing 0 in location 1307
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1307
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1742 is 1307
9999 run: address to copy is 1308
9999 mem: storing 1308 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1308
9999 mem: storing 7 in location 1308
 103 run: i <- add i, 1
9999 mem: location 1740 is 146
9999 mem: storing 147 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 147
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 147
9999 mem: storing 1309 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1309
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1742 is 1309
9999 run: address to copy is 1309
9999 mem: storing 1309 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1309
9999 mem: storing 0 in location 1309
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1309
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1742 is 1309
9999 run: address to copy is 1310
9999 mem: storing 1310 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1310
9999 mem: storing 7 in location 1310
 103 run: i <- add i, 1
9999 mem: location 1740 is 147
9999 mem: storing 148 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 148
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 148
9999 mem: storing 1311 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1311
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1742 is 1311
9999 run: address to copy is 1311
9999 mem: storing 1311 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1311
9999 mem: storing 0 in location 1311
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1311
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1742 is 1311
9999 run: address to copy is 1312
9999 mem: storing 1312 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1312
9999 mem: storing 7 in location 1312
 103 run: i <- add i, 1
9999 mem: location 1740 is 148
9999 mem: storing 149 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 149
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 149
9999 mem: storing 1313 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1313
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: location 1742 is 1313
9999 run: address to copy is 1313
9999 mem: storing 1313 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1313
9999 mem: storing 0 in location 1313
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1313
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: location 1742 is 1313
9999 run: address to copy is 1314
9999 mem: storing 1314 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1314
9999 mem: storing 7 in location 1314
 103 run: i <- add i, 1
9999 mem: location 1740 is 149
9999 mem: storing 150 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 150
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 150
9999 mem: storing 1315 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1315
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1742 is 1315
9999 run: address to copy is 1315
9999 mem: storing 1315 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1315
9999 mem: storing 0 in location 1315
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1315
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1742 is 1315
9999 run: address to copy is 1316
9999 mem: storing 1316 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1316
9999 mem: storing 7 in location 1316
 103 run: i <- add i, 1
9999 mem: location 1740 is 150
9999 mem: storing 151 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 151
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 151
9999 mem: storing 1317 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1317
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: location 1742 is 1317
9999 run: address to copy is 1317
9999 mem: storing 1317 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1317
9999 mem: storing 0 in location 1317
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1317
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: location 1742 is 1317
9999 run: address to copy is 1318
9999 mem: storing 1318 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1318
9999 mem: storing 7 in location 1318
 103 run: i <- add i, 1
9999 mem: location 1740 is 151
9999 mem: storing 152 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 152
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 152
9999 mem: storing 1319 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1319
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1742 is 1319
9999 run: address to copy is 1319
9999 mem: storing 1319 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1319
9999 mem: storing 0 in location 1319
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1319
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1742 is 1319
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1320
9999 mem: storing 7 in location 1320
 103 run: i <- add i, 1
9999 mem: location 1740 is 152
9999 mem: storing 153 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 153
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 153
9999 mem: storing 1321 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1321
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: location 1742 is 1321
9999 run: address to copy is 1321
9999 mem: storing 1321 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1321
9999 mem: storing 0 in location 1321
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1321
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: location 1742 is 1321
9999 run: address to copy is 1322
9999 mem: storing 1322 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1322
9999 mem: storing 7 in location 1322
 103 run: i <- add i, 1
9999 mem: location 1740 is 153
9999 mem: storing 154 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 154
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 154
9999 mem: storing 1323 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1742 is 1323
9999 run: address to copy is 1323
9999 mem: storing 1323 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1323
9999 mem: storing 0 in location 1323
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1742 is 1323
9999 run: address to copy is 1324
9999 mem: storing 1324 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1324
9999 mem: storing 7 in location 1324
 103 run: i <- add i, 1
9999 mem: location 1740 is 154
9999 mem: storing 155 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 155
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 155
9999 mem: storing 1325 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1742 is 1325
9999 run: address to copy is 1325
9999 mem: storing 1325 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1325
9999 mem: storing 0 in location 1325
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1742 is 1325
9999 run: address to copy is 1326
9999 mem: storing 1326 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1326
9999 mem: storing 7 in location 1326
 103 run: i <- add i, 1
9999 mem: location 1740 is 155
9999 mem: storing 156 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 156
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 156
9999 mem: storing 1327 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1327
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: location 1742 is 1327
9999 run: address to copy is 1327
9999 mem: storing 1327 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1327
9999 mem: storing 0 in location 1327
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1327
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: location 1742 is 1327
9999 run: address to copy is 1328
9999 mem: storing 1328 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1328
9999 mem: storing 7 in location 1328
 103 run: i <- add i, 1
9999 mem: location 1740 is 156
9999 mem: storing 157 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 157
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 157
9999 mem: storing 1329 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1329
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1742 is 1329
9999 run: address to copy is 1329
9999 mem: storing 1329 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1329
9999 mem: storing 0 in location 1329
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1329
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1742 is 1329
9999 run: address to copy is 1330
9999 mem: storing 1330 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1330
9999 mem: storing 7 in location 1330
 103 run: i <- add i, 1
9999 mem: location 1740 is 157
9999 mem: storing 158 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 158
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 158
9999 mem: storing 1331 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1331
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: location 1742 is 1331
9999 run: address to copy is 1331
9999 mem: storing 1331 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1331
9999 mem: storing 0 in location 1331
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1331
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: location 1742 is 1331
9999 run: address to copy is 1332
9999 mem: storing 1332 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1332
9999 mem: storing 7 in location 1332
 103 run: i <- add i, 1
9999 mem: location 1740 is 158
9999 mem: storing 159 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 159
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 159
9999 mem: storing 1333 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1333
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: location 1742 is 1333
9999 run: address to copy is 1333
9999 mem: storing 1333 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1333
9999 mem: storing 0 in location 1333
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1333
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: location 1742 is 1333
9999 run: address to copy is 1334
9999 mem: storing 1334 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1334
9999 mem: storing 7 in location 1334
 103 run: i <- add i, 1
9999 mem: location 1740 is 159
9999 mem: storing 160 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 160
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 160
9999 mem: storing 1335 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1335
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: location 1742 is 1335
9999 run: address to copy is 1335
9999 mem: storing 1335 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1335
9999 mem: storing 0 in location 1335
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1335
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: location 1742 is 1335
9999 run: address to copy is 1336
9999 mem: storing 1336 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1336
9999 mem: storing 7 in location 1336
 103 run: i <- add i, 1
9999 mem: location 1740 is 160
9999 mem: storing 161 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 161
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 161
9999 mem: storing 1337 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: location 1742 is 1337
9999 run: address to copy is 1337
9999 mem: storing 1337 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1337
9999 mem: storing 0 in location 1337
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: location 1742 is 1337
9999 run: address to copy is 1338
9999 mem: storing 1338 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1338
9999 mem: storing 7 in location 1338
 103 run: i <- add i, 1
9999 mem: location 1740 is 161
9999 mem: storing 162 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 162
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 162
9999 mem: storing 1339 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1742 is 1339
9999 run: address to copy is 1339
9999 mem: storing 1339 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1339
9999 mem: storing 0 in location 1339
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1742 is 1339
9999 run: address to copy is 1340
9999 mem: storing 1340 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1340
9999 mem: storing 7 in location 1340
 103 run: i <- add i, 1
9999 mem: location 1740 is 162
9999 mem: storing 163 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 163
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 163
9999 mem: storing 1341 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1742 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1341
9999 mem: storing 0 in location 1341
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1742 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1342
9999 mem: storing 7 in location 1342
 103 run: i <- add i, 1
9999 mem: location 1740 is 163
9999 mem: storing 164 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 164
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 164
9999 mem: storing 1343 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: location 1742 is 1343
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1343
9999 mem: storing 0 in location 1343
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: location 1742 is 1343
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1344
9999 mem: storing 7 in location 1344
 103 run: i <- add i, 1
9999 mem: location 1740 is 164
9999 mem: storing 165 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 165
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 165
9999 mem: storing 1345 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1345
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1742 is 1345
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1345
9999 mem: storing 0 in location 1345
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1345
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1742 is 1345
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1346
9999 mem: storing 7 in location 1346
 103 run: i <- add i, 1
9999 mem: location 1740 is 165
9999 mem: storing 166 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 166
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 166
9999 mem: storing 1347 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1347
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: location 1742 is 1347
9999 run: address to copy is 1347
9999 mem: storing 1347 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1347
9999 mem: storing 0 in location 1347
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1347
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: location 1742 is 1347
9999 run: address to copy is 1348
9999 mem: storing 1348 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1348
9999 mem: storing 7 in location 1348
 103 run: i <- add i, 1
9999 mem: location 1740 is 166
9999 mem: storing 167 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 167
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 167
9999 mem: storing 1349 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1349
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: location 1742 is 1349
9999 run: address to copy is 1349
9999 mem: storing 1349 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1349
9999 mem: storing 0 in location 1349
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1349
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: location 1742 is 1349
9999 run: address to copy is 1350
9999 mem: storing 1350 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1350
9999 mem: storing 7 in location 1350
 103 run: i <- add i, 1
9999 mem: location 1740 is 167
9999 mem: storing 168 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 168
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 168
9999 mem: storing 1351 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: location 1742 is 1351
9999 run: address to copy is 1351
9999 mem: storing 1351 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1351
9999 mem: storing 0 in location 1351
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: location 1742 is 1351
9999 run: address to copy is 1352
9999 mem: storing 1352 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1352
9999 mem: storing 7 in location 1352
 103 run: i <- add i, 1
9999 mem: location 1740 is 168
9999 mem: storing 169 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 169
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 169
9999 mem: storing 1353 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1353
9999 mem: location 1353 is 0
9999 mem: location 1354 is 0
9999 mem: location 1742 is 1353
9999 run: address to copy is 1353
9999 mem: storing 1353 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1353
9999 mem: storing 0 in location 1353
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1353
9999 mem: location 1353 is 0
9999 mem: location 1354 is 0
9999 mem: location 1742 is 1353
9999 run: address to copy is 1354
9999 mem: storing 1354 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1354
9999 mem: storing 7 in location 1354
 103 run: i <- add i, 1
9999 mem: location 1740 is 169
9999 mem: storing 170 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 170
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 170
9999 mem: storing 1355 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1355
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: location 1742 is 1355
9999 run: address to copy is 1355
9999 mem: storing 1355 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1355
9999 mem: storing 0 in location 1355
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1355
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: location 1742 is 1355
9999 run: address to copy is 1356
9999 mem: storing 1356 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1356
9999 mem: storing 7 in location 1356
 103 run: i <- add i, 1
9999 mem: location 1740 is 170
9999 mem: storing 171 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 171
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 171
9999 mem: storing 1357 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1357
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: location 1742 is 1357
9999 run: address to copy is 1357
9999 mem: storing 1357 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1357
9999 mem: storing 0 in location 1357
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1357
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: location 1742 is 1357
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1358
9999 mem: storing 7 in location 1358
 103 run: i <- add i, 1
9999 mem: location 1740 is 171
9999 mem: storing 172 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 172
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 172
9999 mem: storing 1359 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1742 is 1359
9999 run: address to copy is 1359
9999 mem: storing 1359 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1359
9999 mem: storing 0 in location 1359
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1359
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1742 is 1359
9999 run: address to copy is 1360
9999 mem: storing 1360 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1360
9999 mem: storing 7 in location 1360
 103 run: i <- add i, 1
9999 mem: location 1740 is 172
9999 mem: storing 173 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 173
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 173
9999 mem: storing 1361 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1361
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1742 is 1361
9999 run: address to copy is 1361
9999 mem: storing 1361 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1361
9999 mem: storing 0 in location 1361
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1361
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1742 is 1361
9999 run: address to copy is 1362
9999 mem: storing 1362 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1362
9999 mem: storing 7 in location 1362
 103 run: i <- add i, 1
9999 mem: location 1740 is 173
9999 mem: storing 174 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 174
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 174
9999 mem: storing 1363 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1363
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: location 1742 is 1363
9999 run: address to copy is 1363
9999 mem: storing 1363 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1363
9999 mem: storing 0 in location 1363
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1363
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: location 1742 is 1363
9999 run: address to copy is 1364
9999 mem: storing 1364 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1364
9999 mem: storing 7 in location 1364
 103 run: i <- add i, 1
9999 mem: location 1740 is 174
9999 mem: storing 175 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 175
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 175
9999 mem: storing 1365 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1365
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: location 1742 is 1365
9999 run: address to copy is 1365
9999 mem: storing 1365 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1365
9999 mem: storing 0 in location 1365
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1365
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: location 1742 is 1365
9999 run: address to copy is 1366
9999 mem: storing 1366 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1366
9999 mem: storing 7 in location 1366
 103 run: i <- add i, 1
9999 mem: location 1740 is 175
9999 mem: storing 176 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 176
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 176
9999 mem: storing 1367 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1367
9999 mem: location 1367 is 0
9999 mem: location 1368 is 0
9999 mem: location 1742 is 1367
9999 run: address to copy is 1367
9999 mem: storing 1367 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1367
9999 mem: storing 0 in location 1367
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1367
9999 mem: location 1367 is 0
9999 mem: location 1368 is 0
9999 mem: location 1742 is 1367
9999 run: address to copy is 1368
9999 mem: storing 1368 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1368
9999 mem: storing 7 in location 1368
 103 run: i <- add i, 1
9999 mem: location 1740 is 176
9999 mem: storing 177 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 177
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 177
9999 mem: storing 1369 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1369
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: location 1742 is 1369
9999 run: address to copy is 1369
9999 mem: storing 1369 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1369
9999 mem: storing 0 in location 1369
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1369
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: location 1742 is 1369
9999 run: address to copy is 1370
9999 mem: storing 1370 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1370
9999 mem: storing 7 in location 1370
 103 run: i <- add i, 1
9999 mem: location 1740 is 177
9999 mem: storing 178 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 178
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 178
9999 mem: storing 1371 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1371
9999 mem: location 1371 is 0
9999 mem: location 1372 is 0
9999 mem: location 1742 is 1371
9999 run: address to copy is 1371
9999 mem: storing 1371 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1371
9999 mem: storing 0 in location 1371
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1371
9999 mem: location 1371 is 0
9999 mem: location 1372 is 0
9999 mem: location 1742 is 1371
9999 run: address to copy is 1372
9999 mem: storing 1372 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1372
9999 mem: storing 7 in location 1372
 103 run: i <- add i, 1
9999 mem: location 1740 is 178
9999 mem: storing 179 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 179
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 179
9999 mem: storing 1373 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1373
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: location 1742 is 1373
9999 run: address to copy is 1373
9999 mem: storing 1373 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1373
9999 mem: storing 0 in location 1373
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1373
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: location 1742 is 1373
9999 run: address to copy is 1374
9999 mem: storing 1374 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1374
9999 mem: storing 7 in location 1374
 103 run: i <- add i, 1
9999 mem: location 1740 is 179
9999 mem: storing 180 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 180
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 180
9999 mem: storing 1375 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1375
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: location 1742 is 1375
9999 run: address to copy is 1375
9999 mem: storing 1375 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1375
9999 mem: storing 0 in location 1375
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1375
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: location 1742 is 1375
9999 run: address to copy is 1376
9999 mem: storing 1376 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1376
9999 mem: storing 7 in location 1376
 103 run: i <- add i, 1
9999 mem: location 1740 is 180
9999 mem: storing 181 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 181
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 181
9999 mem: storing 1377 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 0
9999 mem: location 1742 is 1377
9999 run: address to copy is 1377
9999 mem: storing 1377 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1377
9999 mem: storing 0 in location 1377
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 0
9999 mem: location 1742 is 1377
9999 run: address to copy is 1378
9999 mem: storing 1378 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1378
9999 mem: storing 7 in location 1378
 103 run: i <- add i, 1
9999 mem: location 1740 is 181
9999 mem: storing 182 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 182
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 182
9999 mem: storing 1379 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1379
9999 mem: location 1379 is 0
9999 mem: location 1380 is 0
9999 mem: location 1742 is 1379
9999 run: address to copy is 1379
9999 mem: storing 1379 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1379
9999 mem: storing 0 in location 1379
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1379
9999 mem: location 1379 is 0
9999 mem: location 1380 is 0
9999 mem: location 1742 is 1379
9999 run: address to copy is 1380
9999 mem: storing 1380 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1380
9999 mem: storing 7 in location 1380
 103 run: i <- add i, 1
9999 mem: location 1740 is 182
9999 mem: storing 183 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 183
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 183
9999 mem: storing 1381 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1381
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: location 1742 is 1381
9999 run: address to copy is 1381
9999 mem: storing 1381 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1381
9999 mem: storing 0 in location 1381
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1381
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: location 1742 is 1381
9999 run: address to copy is 1382
9999 mem: storing 1382 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1382
9999 mem: storing 7 in location 1382
 103 run: i <- add i, 1
9999 mem: location 1740 is 183
9999 mem: storing 184 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 184
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 184
9999 mem: storing 1383 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1383
9999 mem: location 1383 is 0
9999 mem: location 1384 is 0
9999 mem: location 1742 is 1383
9999 run: address to copy is 1383
9999 mem: storing 1383 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1383
9999 mem: storing 0 in location 1383
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1383
9999 mem: location 1383 is 0
9999 mem: location 1384 is 0
9999 mem: location 1742 is 1383
9999 run: address to copy is 1384
9999 mem: storing 1384 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1384
9999 mem: storing 7 in location 1384
 103 run: i <- add i, 1
9999 mem: location 1740 is 184
9999 mem: storing 185 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 185
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 185
9999 mem: storing 1385 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1385
9999 mem: location 1385 is 0
9999 mem: location 1386 is 0
9999 mem: location 1742 is 1385
9999 run: address to copy is 1385
9999 mem: storing 1385 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1385
9999 mem: storing 0 in location 1385
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1385
9999 mem: location 1385 is 0
9999 mem: location 1386 is 0
9999 mem: location 1742 is 1385
9999 run: address to copy is 1386
9999 mem: storing 1386 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1386
9999 mem: storing 7 in location 1386
 103 run: i <- add i, 1
9999 mem: location 1740 is 185
9999 mem: storing 186 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 186
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 186
9999 mem: storing 1387 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1387
9999 mem: location 1387 is 0
9999 mem: location 1388 is 0
9999 mem: location 1742 is 1387
9999 run: address to copy is 1387
9999 mem: storing 1387 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1387
9999 mem: storing 0 in location 1387
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1387
9999 mem: location 1387 is 0
9999 mem: location 1388 is 0
9999 mem: location 1742 is 1387
9999 run: address to copy is 1388
9999 mem: storing 1388 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1388
9999 mem: storing 7 in location 1388
 103 run: i <- add i, 1
9999 mem: location 1740 is 186
9999 mem: storing 187 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 187
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 187
9999 mem: storing 1389 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1389
9999 mem: location 1389 is 0
9999 mem: location 1390 is 0
9999 mem: location 1742 is 1389
9999 run: address to copy is 1389
9999 mem: storing 1389 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1389
9999 mem: storing 0 in location 1389
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1389
9999 mem: location 1389 is 0
9999 mem: location 1390 is 0
9999 mem: location 1742 is 1389
9999 run: address to copy is 1390
9999 mem: storing 1390 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1390
9999 mem: storing 7 in location 1390
 103 run: i <- add i, 1
9999 mem: location 1740 is 187
9999 mem: storing 188 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 188
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 188
9999 mem: storing 1391 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1391
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: location 1742 is 1391
9999 run: address to copy is 1391
9999 mem: storing 1391 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1391
9999 mem: storing 0 in location 1391
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1391
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: location 1742 is 1391
9999 run: address to copy is 1392
9999 mem: storing 1392 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1392
9999 mem: storing 7 in location 1392
 103 run: i <- add i, 1
9999 mem: location 1740 is 188
9999 mem: storing 189 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 189
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 189
9999 mem: storing 1393 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1393
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: location 1742 is 1393
9999 run: address to copy is 1393
9999 mem: storing 1393 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1393
9999 mem: storing 0 in location 1393
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1393
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: location 1742 is 1393
9999 run: address to copy is 1394
9999 mem: storing 1394 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1394
9999 mem: storing 7 in location 1394
 103 run: i <- add i, 1
9999 mem: location 1740 is 189
9999 mem: storing 190 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 190
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 190
9999 mem: storing 1395 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1395
9999 mem: location 1395 is 0
9999 mem: location 1396 is 0
9999 mem: location 1742 is 1395
9999 run: address to copy is 1395
9999 mem: storing 1395 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1395
9999 mem: storing 0 in location 1395
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1395
9999 mem: location 1395 is 0
9999 mem: location 1396 is 0
9999 mem: location 1742 is 1395
9999 run: address to copy is 1396
9999 mem: storing 1396 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1396
9999 mem: storing 7 in location 1396
 103 run: i <- add i, 1
9999 mem: location 1740 is 190
9999 mem: storing 191 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 191
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 191
9999 mem: storing 1397 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1397
9999 mem: location 1397 is 0
9999 mem: location 1398 is 0
9999 mem: location 1742 is 1397
9999 run: address to copy is 1397
9999 mem: storing 1397 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1397
9999 mem: storing 0 in location 1397
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1397
9999 mem: location 1397 is 0
9999 mem: location 1398 is 0
9999 mem: location 1742 is 1397
9999 run: address to copy is 1398
9999 mem: storing 1398 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1398
9999 mem: storing 7 in location 1398
 103 run: i <- add i, 1
9999 mem: location 1740 is 191
9999 mem: storing 192 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 192
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 192
9999 mem: storing 1399 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1399
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: location 1742 is 1399
9999 run: address to copy is 1399
9999 mem: storing 1399 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1399
9999 mem: storing 0 in location 1399
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1399
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: location 1742 is 1399
9999 run: address to copy is 1400
9999 mem: storing 1400 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1400
9999 mem: storing 7 in location 1400
 103 run: i <- add i, 1
9999 mem: location 1740 is 192
9999 mem: storing 193 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 193
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 193
9999 mem: storing 1401 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: location 1742 is 1401
9999 run: address to copy is 1401
9999 mem: storing 1401 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1401
9999 mem: storing 0 in location 1401
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: location 1742 is 1401
9999 run: address to copy is 1402
9999 mem: storing 1402 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1402
9999 mem: storing 7 in location 1402
 103 run: i <- add i, 1
9999 mem: location 1740 is 193
9999 mem: storing 194 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 194
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 194
9999 mem: storing 1403 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1403
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1742 is 1403
9999 run: address to copy is 1403
9999 mem: storing 1403 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1403
9999 mem: storing 0 in location 1403
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1403
9999 mem: location 1403 is 0
9999 mem: location 1404 is 0
9999 mem: location 1742 is 1403
9999 run: address to copy is 1404
9999 mem: storing 1404 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1404
9999 mem: storing 7 in location 1404
 103 run: i <- add i, 1
9999 mem: location 1740 is 194
9999 mem: storing 195 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 195
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 195
9999 mem: storing 1405 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: location 1742 is 1405
9999 run: address to copy is 1405
9999 mem: storing 1405 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1405
9999 mem: storing 0 in location 1405
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: location 1742 is 1405
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1406
9999 mem: storing 7 in location 1406
 103 run: i <- add i, 1
9999 mem: location 1740 is 195
9999 mem: storing 196 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 196
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 196
9999 mem: storing 1407 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1742 is 1407
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1407
9999 mem: storing 0 in location 1407
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1742 is 1407
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1408
9999 mem: storing 7 in location 1408
 103 run: i <- add i, 1
9999 mem: location 1740 is 196
9999 mem: storing 197 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 197
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 197
9999 mem: storing 1409 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1742 is 1409
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1409
9999 mem: storing 0 in location 1409
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1742 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1410
9999 mem: storing 7 in location 1410
 103 run: i <- add i, 1
9999 mem: location 1740 is 197
9999 mem: storing 198 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 198
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 198
9999 mem: storing 1411 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1411
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1742 is 1411
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1411
9999 mem: storing 0 in location 1411
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1411
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1742 is 1411
9999 run: address to copy is 1412
9999 mem: storing 1412 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1412
9999 mem: storing 7 in location 1412
 103 run: i <- add i, 1
9999 mem: location 1740 is 198
9999 mem: storing 199 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 199
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 199
9999 mem: storing 1413 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1413
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1742 is 1413
9999 run: address to copy is 1413
9999 mem: storing 1413 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1413
9999 mem: storing 0 in location 1413
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1413
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1742 is 1413
9999 run: address to copy is 1414
9999 mem: storing 1414 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1414
9999 mem: storing 7 in location 1414
 103 run: i <- add i, 1
9999 mem: location 1740 is 199
9999 mem: storing 200 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 200
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 200
9999 mem: storing 1415 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1415
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1742 is 1415
9999 run: address to copy is 1415
9999 mem: storing 1415 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1415
9999 mem: storing 0 in location 1415
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1415
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1742 is 1415
9999 run: address to copy is 1416
9999 mem: storing 1416 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1416
9999 mem: storing 7 in location 1416
 103 run: i <- add i, 1
9999 mem: location 1740 is 200
9999 mem: storing 201 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 201
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 201
9999 mem: storing 1417 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1417
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: location 1742 is 1417
9999 run: address to copy is 1417
9999 mem: storing 1417 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1417
9999 mem: storing 0 in location 1417
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1417
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: location 1742 is 1417
9999 run: address to copy is 1418
9999 mem: storing 1418 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1418
9999 mem: storing 7 in location 1418
 103 run: i <- add i, 1
9999 mem: location 1740 is 201
9999 mem: storing 202 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 202
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 202
9999 mem: storing 1419 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1419
9999 mem: location 1419 is 0
9999 mem: location 1420 is 0
9999 mem: location 1742 is 1419
9999 run: address to copy is 1419
9999 mem: storing 1419 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1419
9999 mem: storing 0 in location 1419
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1419
9999 mem: location 1419 is 0
9999 mem: location 1420 is 0
9999 mem: location 1742 is 1419
9999 run: address to copy is 1420
9999 mem: storing 1420 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1420
9999 mem: storing 7 in location 1420
 103 run: i <- add i, 1
9999 mem: location 1740 is 202
9999 mem: storing 203 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 203
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 203
9999 mem: storing 1421 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1742 is 1421
9999 run: address to copy is 1421
9999 mem: storing 1421 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1421
9999 mem: storing 0 in location 1421
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1742 is 1421
9999 run: address to copy is 1422
9999 mem: storing 1422 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1422
9999 mem: storing 7 in location 1422
 103 run: i <- add i, 1
9999 mem: location 1740 is 203
9999 mem: storing 204 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 204
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 204
9999 mem: storing 1423 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: location 1742 is 1423
9999 run: address to copy is 1423
9999 mem: storing 1423 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1423
9999 mem: storing 0 in location 1423
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: location 1742 is 1423
9999 run: address to copy is 1424
9999 mem: storing 1424 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1424
9999 mem: storing 7 in location 1424
 103 run: i <- add i, 1
9999 mem: location 1740 is 204
9999 mem: storing 205 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 205
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 205
9999 mem: storing 1425 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: location 1742 is 1425
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1425
9999 mem: storing 0 in location 1425
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: location 1742 is 1425
9999 run: address to copy is 1426
9999 mem: storing 1426 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1426
9999 mem: storing 7 in location 1426
 103 run: i <- add i, 1
9999 mem: location 1740 is 205
9999 mem: storing 206 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 206
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 206
9999 mem: storing 1427 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1427
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1742 is 1427
9999 run: address to copy is 1427
9999 mem: storing 1427 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1427
9999 mem: storing 0 in location 1427
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1427
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1742 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1428
9999 mem: storing 7 in location 1428
 103 run: i <- add i, 1
9999 mem: location 1740 is 206
9999 mem: storing 207 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 207
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 207
9999 mem: storing 1429 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1429
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: location 1742 is 1429
9999 run: address to copy is 1429
9999 mem: storing 1429 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1429
9999 mem: storing 0 in location 1429
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1429
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: location 1742 is 1429
9999 run: address to copy is 1430
9999 mem: storing 1430 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1430
9999 mem: storing 7 in location 1430
 103 run: i <- add i, 1
9999 mem: location 1740 is 207
9999 mem: storing 208 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 208
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 208
9999 mem: storing 1431 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1431
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: location 1742 is 1431
9999 run: address to copy is 1431
9999 mem: storing 1431 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1431
9999 mem: storing 0 in location 1431
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1431
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: location 1742 is 1431
9999 run: address to copy is 1432
9999 mem: storing 1432 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1432
9999 mem: storing 7 in location 1432
 103 run: i <- add i, 1
9999 mem: location 1740 is 208
9999 mem: storing 209 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 209
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 209
9999 mem: storing 1433 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1433
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: location 1742 is 1433
9999 run: address to copy is 1433
9999 mem: storing 1433 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1433
9999 mem: storing 0 in location 1433
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1433
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: location 1742 is 1433
9999 run: address to copy is 1434
9999 mem: storing 1434 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1434
9999 mem: storing 7 in location 1434
 103 run: i <- add i, 1
9999 mem: location 1740 is 209
9999 mem: storing 210 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 210
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 210
9999 mem: storing 1435 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1435
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1742 is 1435
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1435
9999 mem: storing 0 in location 1435
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1435
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1742 is 1435
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1436
9999 mem: storing 7 in location 1436
 103 run: i <- add i, 1
9999 mem: location 1740 is 210
9999 mem: storing 211 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 211
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 211
9999 mem: storing 1437 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1437
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1742 is 1437
9999 run: address to copy is 1437
9999 mem: storing 1437 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1437
9999 mem: storing 0 in location 1437
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1437
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1742 is 1437
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1438
9999 mem: storing 7 in location 1438
 103 run: i <- add i, 1
9999 mem: location 1740 is 211
9999 mem: storing 212 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 212
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 212
9999 mem: storing 1439 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1439
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1742 is 1439
9999 run: address to copy is 1439
9999 mem: storing 1439 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1439
9999 mem: storing 0 in location 1439
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1439
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1742 is 1439
9999 run: address to copy is 1440
9999 mem: storing 1440 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1440
9999 mem: storing 7 in location 1440
 103 run: i <- add i, 1
9999 mem: location 1740 is 212
9999 mem: storing 213 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 213
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 213
9999 mem: storing 1441 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1441
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1742 is 1441
9999 run: address to copy is 1441
9999 mem: storing 1441 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1441
9999 mem: storing 0 in location 1441
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1441
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1742 is 1441
9999 run: address to copy is 1442
9999 mem: storing 1442 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1442
9999 mem: storing 7 in location 1442
 103 run: i <- add i, 1
9999 mem: location 1740 is 213
9999 mem: storing 214 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 214
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 214
9999 mem: storing 1443 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1443
9999 mem: location 1443 is 0
9999 mem: location 1444 is 0
9999 mem: location 1742 is 1443
9999 run: address to copy is 1443
9999 mem: storing 1443 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1443
9999 mem: storing 0 in location 1443
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1443
9999 mem: location 1443 is 0
9999 mem: location 1444 is 0
9999 mem: location 1742 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1444
9999 mem: storing 7 in location 1444
 103 run: i <- add i, 1
9999 mem: location 1740 is 214
9999 mem: storing 215 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 215
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 215
9999 mem: storing 1445 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1445
9999 mem: location 1445 is 0
9999 mem: location 1446 is 0
9999 mem: location 1742 is 1445
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1445
9999 mem: storing 0 in location 1445
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1445
9999 mem: location 1445 is 0
9999 mem: location 1446 is 0
9999 mem: location 1742 is 1445
9999 run: address to copy is 1446
9999 mem: storing 1446 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1446
9999 mem: storing 7 in location 1446
 103 run: i <- add i, 1
9999 mem: location 1740 is 215
9999 mem: storing 216 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 216
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 216
9999 mem: storing 1447 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1742 is 1447
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1447
9999 mem: storing 0 in location 1447
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1742 is 1447
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1448
9999 mem: storing 7 in location 1448
 103 run: i <- add i, 1
9999 mem: location 1740 is 216
9999 mem: storing 217 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 217
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 217
9999 mem: storing 1449 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1742 is 1449
9999 run: address to copy is 1449
9999 mem: storing 1449 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1449
9999 mem: storing 0 in location 1449
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1742 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1450
9999 mem: storing 7 in location 1450
 103 run: i <- add i, 1
9999 mem: location 1740 is 217
9999 mem: storing 218 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 218
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 218
9999 mem: storing 1451 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1451
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1742 is 1451
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1451
9999 mem: storing 0 in location 1451
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1451
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1742 is 1451
9999 run: address to copy is 1452
9999 mem: storing 1452 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1452
9999 mem: storing 7 in location 1452
 103 run: i <- add i, 1
9999 mem: location 1740 is 218
9999 mem: storing 219 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 219
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 219
9999 mem: storing 1453 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1453
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1742 is 1453
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1453
9999 mem: storing 0 in location 1453
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1453
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1742 is 1453
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 1744
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1454
9999 mem: storing 7 in location 1454
 103 run: i <- add i, 1
9999 mem: location 1740 is 219
9999 mem: storing 220 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 220
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 220
9999 mem: storing 1455 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1455
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1742 is 1455
9999 run: address to copy is 1455
9999 mem: storing 1455 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1455
9999 mem: storing 0 in location 1455
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1455
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1742 is 1455
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1456
9999 mem: storing 7 in location 1456
 103 run: i <- add i, 1
9999 mem: location 1740 is 220
9999 mem: storing 221 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 221
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 221
9999 mem: storing 1457 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1742 is 1457
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1457
9999 mem: storing 0 in location 1457
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1742 is 1457
9999 run: address to copy is 1458
9999 mem: storing 1458 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1458
9999 mem: storing 7 in location 1458
 103 run: i <- add i, 1
9999 mem: location 1740 is 221
9999 mem: storing 222 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 222
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 222
9999 mem: storing 1459 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1742 is 1459
9999 run: address to copy is 1459
9999 mem: storing 1459 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1459
9999 mem: storing 0 in location 1459
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1742 is 1459
9999 run: address to copy is 1460
9999 mem: storing 1460 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1460
9999 mem: storing 7 in location 1460
 103 run: i <- add i, 1
9999 mem: location 1740 is 222
9999 mem: storing 223 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 223
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 223
9999 mem: storing 1461 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1461
9999 mem: location 1461 is 0
9999 mem: location 1462 is 0
9999 mem: location 1742 is 1461
9999 run: address to copy is 1461
9999 mem: storing 1461 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1461
9999 mem: storing 0 in location 1461
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1461
9999 mem: location 1461 is 0
9999 mem: location 1462 is 0
9999 mem: location 1742 is 1461
9999 run: address to copy is 1462
9999 mem: storing 1462 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1462
9999 mem: storing 7 in location 1462
 103 run: i <- add i, 1
9999 mem: location 1740 is 223
9999 mem: storing 224 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 224
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 224
9999 mem: storing 1463 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1463
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1742 is 1463
9999 run: address to copy is 1463
9999 mem: storing 1463 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1463
9999 mem: storing 0 in location 1463
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1463
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1742 is 1463
9999 run: address to copy is 1464
9999 mem: storing 1464 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1464
9999 mem: storing 7 in location 1464
 103 run: i <- add i, 1
9999 mem: location 1740 is 224
9999 mem: storing 225 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 225
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 225
9999 mem: storing 1465 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1465
9999 mem: location 1465 is 0
9999 mem: location 1466 is 0
9999 mem: location 1742 is 1465
9999 run: address to copy is 1465
9999 mem: storing 1465 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1465
9999 mem: storing 0 in location 1465
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1465
9999 mem: location 1465 is 0
9999 mem: location 1466 is 0
9999 mem: location 1742 is 1465
9999 run: address to copy is 1466
9999 mem: storing 1466 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1466
9999 mem: storing 7 in location 1466
 103 run: i <- add i, 1
9999 mem: location 1740 is 225
9999 mem: storing 226 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 226
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 226
9999 mem: storing 1467 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: location 1742 is 1467
9999 run: address to copy is 1467
9999 mem: storing 1467 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1467
9999 mem: storing 0 in location 1467
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: location 1742 is 1467
9999 run: address to copy is 1468
9999 mem: storing 1468 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1468
9999 mem: storing 7 in location 1468
 103 run: i <- add i, 1
9999 mem: location 1740 is 226
9999 mem: storing 227 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 227
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 227
9999 mem: storing 1469 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1469
9999 mem: location 1469 is 0
9999 mem: location 1470 is 0
9999 mem: location 1742 is 1469
9999 run: address to copy is 1469
9999 mem: storing 1469 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1469
9999 mem: storing 0 in location 1469
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1469
9999 mem: location 1469 is 0
9999 mem: location 1470 is 0
9999 mem: location 1742 is 1469
9999 run: address to copy is 1470
9999 mem: storing 1470 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1470
9999 mem: storing 7 in location 1470
 103 run: i <- add i, 1
9999 mem: location 1740 is 227
9999 mem: storing 228 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 228
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 228
9999 mem: storing 1471 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1471
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1742 is 1471
9999 run: address to copy is 1471
9999 mem: storing 1471 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1471
9999 mem: storing 0 in location 1471
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1471
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1742 is 1471
9999 run: address to copy is 1472
9999 mem: storing 1472 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1472
9999 mem: storing 7 in location 1472
 103 run: i <- add i, 1
9999 mem: location 1740 is 228
9999 mem: storing 229 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 229
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 229
9999 mem: storing 1473 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1473
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1742 is 1473
9999 run: address to copy is 1473
9999 mem: storing 1473 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1473
9999 mem: storing 0 in location 1473
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1473
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1742 is 1473
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1474
9999 mem: storing 7 in location 1474
 103 run: i <- add i, 1
9999 mem: location 1740 is 229
9999 mem: storing 230 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 230
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 230
9999 mem: storing 1475 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1475
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1742 is 1475
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1475
9999 mem: storing 0 in location 1475
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1475
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1742 is 1475
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1476
9999 mem: storing 7 in location 1476
 103 run: i <- add i, 1
9999 mem: location 1740 is 230
9999 mem: storing 231 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 231
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 231
9999 mem: storing 1477 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1477
9999 mem: location 1477 is 0
9999 mem: location 1478 is 0
9999 mem: location 1742 is 1477
9999 run: address to copy is 1477
9999 mem: storing 1477 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1477
9999 mem: storing 0 in location 1477
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1477
9999 mem: location 1477 is 0
9999 mem: location 1478 is 0
9999 mem: location 1742 is 1477
9999 run: address to copy is 1478
9999 mem: storing 1478 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1478
9999 mem: storing 7 in location 1478
 103 run: i <- add i, 1
9999 mem: location 1740 is 231
9999 mem: storing 232 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 232
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 232
9999 mem: storing 1479 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1479
9999 mem: location 1479 is 0
9999 mem: location 1480 is 0
9999 mem: location 1742 is 1479
9999 run: address to copy is 1479
9999 mem: storing 1479 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1479
9999 mem: storing 0 in location 1479
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1479
9999 mem: location 1479 is 0
9999 mem: location 1480 is 0
9999 mem: location 1742 is 1479
9999 run: address to copy is 1480
9999 mem: storing 1480 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1480
9999 mem: storing 7 in location 1480
 103 run: i <- add i, 1
9999 mem: location 1740 is 232
9999 mem: storing 233 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 233
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 233
9999 mem: storing 1481 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1481
9999 mem: location 1481 is 0
9999 mem: location 1482 is 0
9999 mem: location 1742 is 1481
9999 run: address to copy is 1481
9999 mem: storing 1481 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1481
9999 mem: storing 0 in location 1481
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1481
9999 mem: location 1481 is 0
9999 mem: location 1482 is 0
9999 mem: location 1742 is 1481
9999 run: address to copy is 1482
9999 mem: storing 1482 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1482
9999 mem: storing 7 in location 1482
 103 run: i <- add i, 1
9999 mem: location 1740 is 233
9999 mem: storing 234 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 234
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 234
9999 mem: storing 1483 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1483
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1742 is 1483
9999 run: address to copy is 1483
9999 mem: storing 1483 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1483
9999 mem: storing 0 in location 1483
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1483
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1742 is 1483
9999 run: address to copy is 1484
9999 mem: storing 1484 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1484
9999 mem: storing 7 in location 1484
 103 run: i <- add i, 1
9999 mem: location 1740 is 234
9999 mem: storing 235 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 235
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 235
9999 mem: storing 1485 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1485
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1742 is 1485
9999 run: address to copy is 1485
9999 mem: storing 1485 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1485
9999 mem: storing 0 in location 1485
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1485
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1742 is 1485
9999 run: address to copy is 1486
9999 mem: storing 1486 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1486
9999 mem: storing 7 in location 1486
 103 run: i <- add i, 1
9999 mem: location 1740 is 235
9999 mem: storing 236 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 236
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 236
9999 mem: storing 1487 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1487
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1742 is 1487
9999 run: address to copy is 1487
9999 mem: storing 1487 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1487
9999 mem: storing 0 in location 1487
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1487
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1742 is 1487
9999 run: address to copy is 1488
9999 mem: storing 1488 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1488
9999 mem: storing 7 in location 1488
 103 run: i <- add i, 1
9999 mem: location 1740 is 236
9999 mem: storing 237 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 237
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 237
9999 mem: storing 1489 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1489
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1742 is 1489
9999 run: address to copy is 1489
9999 mem: storing 1489 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1489
9999 mem: storing 0 in location 1489
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1489
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1742 is 1489
9999 run: address to copy is 1490
9999 mem: storing 1490 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1490
9999 mem: storing 7 in location 1490
 103 run: i <- add i, 1
9999 mem: location 1740 is 237
9999 mem: storing 238 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 238
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 238
9999 mem: storing 1491 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1491
9999 mem: location 1491 is 0
9999 mem: location 1492 is 0
9999 mem: location 1742 is 1491
9999 run: address to copy is 1491
9999 mem: storing 1491 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1491
9999 mem: storing 0 in location 1491
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1491
9999 mem: location 1491 is 0
9999 mem: location 1492 is 0
9999 mem: location 1742 is 1491
9999 run: address to copy is 1492
9999 mem: storing 1492 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1492
9999 mem: storing 7 in location 1492
 103 run: i <- add i, 1
9999 mem: location 1740 is 238
9999 mem: storing 239 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 239
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 239
9999 mem: storing 1493 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1493
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1742 is 1493
9999 run: address to copy is 1493
9999 mem: storing 1493 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1493
9999 mem: storing 0 in location 1493
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1493
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1742 is 1493
9999 run: address to copy is 1494
9999 mem: storing 1494 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1494
9999 mem: storing 7 in location 1494
 103 run: i <- add i, 1
9999 mem: location 1740 is 239
9999 mem: storing 240 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 240
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 240
9999 mem: storing 1495 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1495
9999 mem: location 1495 is 0
9999 mem: location 1496 is 0
9999 mem: location 1742 is 1495
9999 run: address to copy is 1495
9999 mem: storing 1495 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1495
9999 mem: storing 0 in location 1495
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1495
9999 mem: location 1495 is 0
9999 mem: location 1496 is 0
9999 mem: location 1742 is 1495
9999 run: address to copy is 1496
9999 mem: storing 1496 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1496
9999 mem: storing 7 in location 1496
 103 run: i <- add i, 1
9999 mem: location 1740 is 240
9999 mem: storing 241 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 241
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 241
9999 mem: storing 1497 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1497
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1742 is 1497
9999 run: address to copy is 1497
9999 mem: storing 1497 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1497
9999 mem: storing 0 in location 1497
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1497
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1742 is 1497
9999 run: address to copy is 1498
9999 mem: storing 1498 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1498
9999 mem: storing 7 in location 1498
 103 run: i <- add i, 1
9999 mem: location 1740 is 241
9999 mem: storing 242 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 242
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 242
9999 mem: storing 1499 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1499
9999 mem: location 1499 is 0
9999 mem: location 1500 is 0
9999 mem: location 1742 is 1499
9999 run: address to copy is 1499
9999 mem: storing 1499 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1499
9999 mem: storing 0 in location 1499
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1499
9999 mem: location 1499 is 0
9999 mem: location 1500 is 0
9999 mem: location 1742 is 1499
9999 run: address to copy is 1500
9999 mem: storing 1500 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1500
9999 mem: storing 7 in location 1500
 103 run: i <- add i, 1
9999 mem: location 1740 is 242
9999 mem: storing 243 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 243
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 243
9999 mem: storing 1501 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1501
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1742 is 1501
9999 run: address to copy is 1501
9999 mem: storing 1501 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1501
9999 mem: storing 0 in location 1501
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1501
9999 mem: location 1501 is 0
9999 mem: location 1502 is 0
9999 mem: location 1742 is 1501
9999 run: address to copy is 1502
9999 mem: storing 1502 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1502
9999 mem: storing 7 in location 1502
 103 run: i <- add i, 1
9999 mem: location 1740 is 243
9999 mem: storing 244 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 244
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 244
9999 mem: storing 1503 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1503
9999 mem: location 1503 is 0
9999 mem: location 1504 is 0
9999 mem: location 1742 is 1503
9999 run: address to copy is 1503
9999 mem: storing 1503 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1503
9999 mem: storing 0 in location 1503
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1503
9999 mem: location 1503 is 0
9999 mem: location 1504 is 0
9999 mem: location 1742 is 1503
9999 run: address to copy is 1504
9999 mem: storing 1504 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1504
9999 mem: storing 7 in location 1504
 103 run: i <- add i, 1
9999 mem: location 1740 is 244
9999 mem: storing 245 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 245
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 245
9999 mem: storing 1505 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1505
9999 mem: location 1505 is 0
9999 mem: location 1506 is 0
9999 mem: location 1742 is 1505
9999 run: address to copy is 1505
9999 mem: storing 1505 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1505
9999 mem: storing 0 in location 1505
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1505
9999 mem: location 1505 is 0
9999 mem: location 1506 is 0
9999 mem: location 1742 is 1505
9999 run: address to copy is 1506
9999 mem: storing 1506 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1506
9999 mem: storing 7 in location 1506
 103 run: i <- add i, 1
9999 mem: location 1740 is 245
9999 mem: storing 246 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 246
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 246
9999 mem: storing 1507 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1507
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: location 1742 is 1507
9999 run: address to copy is 1507
9999 mem: storing 1507 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1507
9999 mem: storing 0 in location 1507
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1507
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: location 1742 is 1507
9999 run: address to copy is 1508
9999 mem: storing 1508 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1508
9999 mem: storing 7 in location 1508
 103 run: i <- add i, 1
9999 mem: location 1740 is 246
9999 mem: storing 247 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 247
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 247
9999 mem: storing 1509 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1509
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1742 is 1509
9999 run: address to copy is 1509
9999 mem: storing 1509 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1509
9999 mem: storing 0 in location 1509
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1509
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1742 is 1509
9999 run: address to copy is 1510
9999 mem: storing 1510 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1510
9999 mem: storing 7 in location 1510
 103 run: i <- add i, 1
9999 mem: location 1740 is 247
9999 mem: storing 248 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 248
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 248
9999 mem: storing 1511 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1511
9999 mem: location 1511 is 0
9999 mem: location 1512 is 0
9999 mem: location 1742 is 1511
9999 run: address to copy is 1511
9999 mem: storing 1511 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1511
9999 mem: storing 0 in location 1511
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1511
9999 mem: location 1511 is 0
9999 mem: location 1512 is 0
9999 mem: location 1742 is 1511
9999 run: address to copy is 1512
9999 mem: storing 1512 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1512
9999 mem: storing 7 in location 1512
 103 run: i <- add i, 1
9999 mem: location 1740 is 248
9999 mem: storing 249 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 249
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 249
9999 mem: storing 1513 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1513
9999 mem: location 1513 is 0
9999 mem: location 1514 is 0
9999 mem: location 1742 is 1513
9999 run: address to copy is 1513
9999 mem: storing 1513 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1513
9999 mem: storing 0 in location 1513
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1513
9999 mem: location 1513 is 0
9999 mem: location 1514 is 0
9999 mem: location 1742 is 1513
9999 run: address to copy is 1514
9999 mem: storing 1514 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1514
9999 mem: storing 7 in location 1514
 103 run: i <- add i, 1
9999 mem: location 1740 is 249
9999 mem: storing 250 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 250
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 250
9999 mem: storing 1515 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1516 is 0
9999 mem: location 1742 is 1515
9999 run: address to copy is 1515
9999 mem: storing 1515 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1515
9999 mem: storing 0 in location 1515
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1516 is 0
9999 mem: location 1742 is 1515
9999 run: address to copy is 1516
9999 mem: storing 1516 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1516
9999 mem: storing 7 in location 1516
 103 run: i <- add i, 1
9999 mem: location 1740 is 250
9999 mem: storing 251 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 251
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 251
9999 mem: storing 1517 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1517
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1742 is 1517
9999 run: address to copy is 1517
9999 mem: storing 1517 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1517
9999 mem: storing 0 in location 1517
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1517
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1742 is 1517
9999 run: address to copy is 1518
9999 mem: storing 1518 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1518
9999 mem: storing 7 in location 1518
 103 run: i <- add i, 1
9999 mem: location 1740 is 251
9999 mem: storing 252 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 252
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 252
9999 mem: storing 1519 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1519
9999 mem: location 1519 is 0
9999 mem: location 1520 is 0
9999 mem: location 1742 is 1519
9999 run: address to copy is 1519
9999 mem: storing 1519 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1519
9999 mem: storing 0 in location 1519
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1519
9999 mem: location 1519 is 0
9999 mem: location 1520 is 0
9999 mem: location 1742 is 1519
9999 run: address to copy is 1520
9999 mem: storing 1520 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1520
9999 mem: storing 7 in location 1520
 103 run: i <- add i, 1
9999 mem: location 1740 is 252
9999 mem: storing 253 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 253
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 253
9999 mem: storing 1521 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1521
9999 mem: location 1521 is 0
9999 mem: location 1522 is 0
9999 mem: location 1742 is 1521
9999 run: address to copy is 1521
9999 mem: storing 1521 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1521
9999 mem: storing 0 in location 1521
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1521
9999 mem: location 1521 is 0
9999 mem: location 1522 is 0
9999 mem: location 1742 is 1521
9999 run: address to copy is 1522
9999 mem: storing 1522 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1522
9999 mem: storing 7 in location 1522
 103 run: i <- add i, 1
9999 mem: location 1740 is 253
9999 mem: storing 254 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 254
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 254
9999 mem: storing 1523 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1523
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1742 is 1523
9999 run: address to copy is 1523
9999 mem: storing 1523 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1523
9999 mem: storing 0 in location 1523
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1523
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1742 is 1523
9999 run: address to copy is 1524
9999 mem: storing 1524 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1524
9999 mem: storing 7 in location 1524
 103 run: i <- add i, 1
9999 mem: location 1740 is 254
9999 mem: storing 255 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 255
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 255
9999 mem: storing 1525 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1525
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1742 is 1525
9999 run: address to copy is 1525
9999 mem: storing 1525 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1525
9999 mem: storing 0 in location 1525
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1525
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1742 is 1525
9999 run: address to copy is 1526
9999 mem: storing 1526 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1526
9999 mem: storing 7 in location 1526
 103 run: i <- add i, 1
9999 mem: location 1740 is 255
9999 mem: storing 256 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 256
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 256
9999 mem: storing 1527 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1527
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1742 is 1527
9999 run: address to copy is 1527
9999 mem: storing 1527 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1527
9999 mem: storing 0 in location 1527
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1527
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1742 is 1527
9999 run: address to copy is 1528
9999 mem: storing 1528 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1528
9999 mem: storing 7 in location 1528
 103 run: i <- add i, 1
9999 mem: location 1740 is 256
9999 mem: storing 257 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 257
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 257
9999 mem: storing 1529 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1529
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1742 is 1529
9999 run: address to copy is 1529
9999 mem: storing 1529 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1529
9999 mem: storing 0 in location 1529
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1529
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1742 is 1529
9999 run: address to copy is 1530
9999 mem: storing 1530 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1530
9999 mem: storing 7 in location 1530
 103 run: i <- add i, 1
9999 mem: location 1740 is 257
9999 mem: storing 258 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 258
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 258
9999 mem: storing 1531 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1531
9999 mem: location 1531 is 0
9999 mem: location 1532 is 0
9999 mem: location 1742 is 1531
9999 run: address to copy is 1531
9999 mem: storing 1531 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1531
9999 mem: storing 0 in location 1531
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1531
9999 mem: location 1531 is 0
9999 mem: location 1532 is 0
9999 mem: location 1742 is 1531
9999 run: address to copy is 1532
9999 mem: storing 1532 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1532
9999 mem: storing 7 in location 1532
 103 run: i <- add i, 1
9999 mem: location 1740 is 258
9999 mem: storing 259 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 259
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 259
9999 mem: storing 1533 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1533
9999 mem: location 1533 is 0
9999 mem: location 1534 is 0
9999 mem: location 1742 is 1533
9999 run: address to copy is 1533
9999 mem: storing 1533 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1533
9999 mem: storing 0 in location 1533
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1533
9999 mem: location 1533 is 0
9999 mem: location 1534 is 0
9999 mem: location 1742 is 1533
9999 run: address to copy is 1534
9999 mem: storing 1534 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1534
9999 mem: storing 7 in location 1534
 103 run: i <- add i, 1
9999 mem: location 1740 is 259
9999 mem: storing 260 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 260
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 260
9999 mem: storing 1535 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1535
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1742 is 1535
9999 run: address to copy is 1535
9999 mem: storing 1535 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1535
9999 mem: storing 0 in location 1535
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1535
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1742 is 1535
9999 run: address to copy is 1536
9999 mem: storing 1536 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1536
9999 mem: storing 7 in location 1536
 103 run: i <- add i, 1
9999 mem: location 1740 is 260
9999 mem: storing 261 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 261
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 261
9999 mem: storing 1537 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1537
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1742 is 1537
9999 run: address to copy is 1537
9999 mem: storing 1537 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1537
9999 mem: storing 0 in location 1537
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1537
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1742 is 1537
9999 run: address to copy is 1538
9999 mem: storing 1538 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1538
9999 mem: storing 7 in location 1538
 103 run: i <- add i, 1
9999 mem: location 1740 is 261
9999 mem: storing 262 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 262
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 262
9999 mem: storing 1539 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1539
9999 mem: location 1539 is 0
9999 mem: location 1540 is 0
9999 mem: location 1742 is 1539
9999 run: address to copy is 1539
9999 mem: storing 1539 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1539
9999 mem: storing 0 in location 1539
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1539
9999 mem: location 1539 is 0
9999 mem: location 1540 is 0
9999 mem: location 1742 is 1539
9999 run: address to copy is 1540
9999 mem: storing 1540 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1540
9999 mem: storing 7 in location 1540
 103 run: i <- add i, 1
9999 mem: location 1740 is 262
9999 mem: storing 263 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 263
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 263
9999 mem: storing 1541 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1541
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1742 is 1541
9999 run: address to copy is 1541
9999 mem: storing 1541 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1541
9999 mem: storing 0 in location 1541
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1541
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1742 is 1541
9999 run: address to copy is 1542
9999 mem: storing 1542 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1542
9999 mem: storing 7 in location 1542
 103 run: i <- add i, 1
9999 mem: location 1740 is 263
9999 mem: storing 264 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 264
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 264
9999 mem: storing 1543 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1543
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1742 is 1543
9999 run: address to copy is 1543
9999 mem: storing 1543 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1543
9999 mem: storing 0 in location 1543
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1543
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1742 is 1543
9999 run: address to copy is 1544
9999 mem: storing 1544 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1544
9999 mem: storing 7 in location 1544
 103 run: i <- add i, 1
9999 mem: location 1740 is 264
9999 mem: storing 265 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 265
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 265
9999 mem: storing 1545 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1545
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: location 1742 is 1545
9999 run: address to copy is 1545
9999 mem: storing 1545 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1545
9999 mem: storing 0 in location 1545
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1545
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: location 1742 is 1545
9999 run: address to copy is 1546
9999 mem: storing 1546 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1546
9999 mem: storing 7 in location 1546
 103 run: i <- add i, 1
9999 mem: location 1740 is 265
9999 mem: storing 266 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 266
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 266
9999 mem: storing 1547 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1547
9999 mem: location 1547 is 0
9999 mem: location 1548 is 0
9999 mem: location 1742 is 1547
9999 run: address to copy is 1547
9999 mem: storing 1547 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1547
9999 mem: storing 0 in location 1547
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1547
9999 mem: location 1547 is 0
9999 mem: location 1548 is 0
9999 mem: location 1742 is 1547
9999 run: address to copy is 1548
9999 mem: storing 1548 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1548
9999 mem: storing 7 in location 1548
 103 run: i <- add i, 1
9999 mem: location 1740 is 266
9999 mem: storing 267 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 267
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 267
9999 mem: storing 1549 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1550 is 0
9999 mem: location 1742 is 1549
9999 run: address to copy is 1549
9999 mem: storing 1549 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1549
9999 mem: storing 0 in location 1549
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1550 is 0
9999 mem: location 1742 is 1549
9999 run: address to copy is 1550
9999 mem: storing 1550 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1550
9999 mem: storing 7 in location 1550
 103 run: i <- add i, 1
9999 mem: location 1740 is 267
9999 mem: storing 268 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 268
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 268
9999 mem: storing 1551 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1552 is 0
9999 mem: location 1742 is 1551
9999 run: address to copy is 1551
9999 mem: storing 1551 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1551
9999 mem: storing 0 in location 1551
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1552 is 0
9999 mem: location 1742 is 1551
9999 run: address to copy is 1552
9999 mem: storing 1552 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1552
9999 mem: storing 7 in location 1552
 103 run: i <- add i, 1
9999 mem: location 1740 is 268
9999 mem: storing 269 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 269
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 269
9999 mem: storing 1553 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1553
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1742 is 1553
9999 run: address to copy is 1553
9999 mem: storing 1553 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1553
9999 mem: storing 0 in location 1553
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1553
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1742 is 1553
9999 run: address to copy is 1554
9999 mem: storing 1554 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1554
9999 mem: storing 7 in location 1554
 103 run: i <- add i, 1
9999 mem: location 1740 is 269
9999 mem: storing 270 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 270
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 270
9999 mem: storing 1555 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1742 is 1555
9999 run: address to copy is 1555
9999 mem: storing 1555 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1555
9999 mem: storing 0 in location 1555
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1742 is 1555
9999 run: address to copy is 1556
9999 mem: storing 1556 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1556
9999 mem: storing 7 in location 1556
 103 run: i <- add i, 1
9999 mem: location 1740 is 270
9999 mem: storing 271 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 271
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 271
9999 mem: storing 1557 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1557
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1742 is 1557
9999 run: address to copy is 1557
9999 mem: storing 1557 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1557
9999 mem: storing 0 in location 1557
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1557
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1742 is 1557
9999 run: address to copy is 1558
9999 mem: storing 1558 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1558
9999 mem: storing 7 in location 1558
 103 run: i <- add i, 1
9999 mem: location 1740 is 271
9999 mem: storing 272 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 272
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 272
9999 mem: storing 1559 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1559
9999 mem: location 1559 is 0
9999 mem: location 1560 is 0
9999 mem: location 1742 is 1559
9999 run: address to copy is 1559
9999 mem: storing 1559 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1559
9999 mem: storing 0 in location 1559
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1559
9999 mem: location 1559 is 0
9999 mem: location 1560 is 0
9999 mem: location 1742 is 1559
9999 run: address to copy is 1560
9999 mem: storing 1560 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1560
9999 mem: storing 7 in location 1560
 103 run: i <- add i, 1
9999 mem: location 1740 is 272
9999 mem: storing 273 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 273
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 273
9999 mem: storing 1561 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1561
9999 mem: location 1561 is 0
9999 mem: location 1562 is 0
9999 mem: location 1742 is 1561
9999 run: address to copy is 1561
9999 mem: storing 1561 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1561
9999 mem: storing 0 in location 1561
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1561
9999 mem: location 1561 is 0
9999 mem: location 1562 is 0
9999 mem: location 1742 is 1561
9999 run: address to copy is 1562
9999 mem: storing 1562 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1562
9999 mem: storing 7 in location 1562
 103 run: i <- add i, 1
9999 mem: location 1740 is 273
9999 mem: storing 274 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 274
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 274
9999 mem: storing 1563 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1563
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: location 1742 is 1563
9999 run: address to copy is 1563
9999 mem: storing 1563 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1563
9999 mem: storing 0 in location 1563
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1563
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: location 1742 is 1563
9999 run: address to copy is 1564
9999 mem: storing 1564 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1564
9999 mem: storing 7 in location 1564
 103 run: i <- add i, 1
9999 mem: location 1740 is 274
9999 mem: storing 275 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 275
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 275
9999 mem: storing 1565 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1566 is 0
9999 mem: location 1742 is 1565
9999 run: address to copy is 1565
9999 mem: storing 1565 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1565
9999 mem: storing 0 in location 1565
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1566 is 0
9999 mem: location 1742 is 1565
9999 run: address to copy is 1566
9999 mem: storing 1566 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1566
9999 mem: storing 7 in location 1566
 103 run: i <- add i, 1
9999 mem: location 1740 is 275
9999 mem: storing 276 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 276
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 276
9999 mem: storing 1567 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 0
9999 mem: location 1742 is 1567
9999 run: address to copy is 1567
9999 mem: storing 1567 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1567
9999 mem: storing 0 in location 1567
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 0
9999 mem: location 1742 is 1567
9999 run: address to copy is 1568
9999 mem: storing 1568 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1568
9999 mem: storing 7 in location 1568
 103 run: i <- add i, 1
9999 mem: location 1740 is 276
9999 mem: storing 277 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 277
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 277
9999 mem: storing 1569 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1570 is 0
9999 mem: location 1742 is 1569
9999 run: address to copy is 1569
9999 mem: storing 1569 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1569
9999 mem: storing 0 in location 1569
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1570 is 0
9999 mem: location 1742 is 1569
9999 run: address to copy is 1570
9999 mem: storing 1570 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1570
9999 mem: storing 7 in location 1570
 103 run: i <- add i, 1
9999 mem: location 1740 is 277
9999 mem: storing 278 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 278
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 278
9999 mem: storing 1571 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1571
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: location 1742 is 1571
9999 run: address to copy is 1571
9999 mem: storing 1571 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1571
9999 mem: storing 0 in location 1571
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1571
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: location 1742 is 1571
9999 run: address to copy is 1572
9999 mem: storing 1572 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1572
9999 mem: storing 7 in location 1572
 103 run: i <- add i, 1
9999 mem: location 1740 is 278
9999 mem: storing 279 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 279
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 279
9999 mem: storing 1573 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1573
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1742 is 1573
9999 run: address to copy is 1573
9999 mem: storing 1573 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1573
9999 mem: storing 0 in location 1573
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1573
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1742 is 1573
9999 run: address to copy is 1574
9999 mem: storing 1574 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1574
9999 mem: storing 7 in location 1574
 103 run: i <- add i, 1
9999 mem: location 1740 is 279
9999 mem: storing 280 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 280
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 280
9999 mem: storing 1575 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1575
9999 mem: location 1575 is 0
9999 mem: location 1576 is 0
9999 mem: location 1742 is 1575
9999 run: address to copy is 1575
9999 mem: storing 1575 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1575
9999 mem: storing 0 in location 1575
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1575
9999 mem: location 1575 is 0
9999 mem: location 1576 is 0
9999 mem: location 1742 is 1575
9999 run: address to copy is 1576
9999 mem: storing 1576 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1576
9999 mem: storing 7 in location 1576
 103 run: i <- add i, 1
9999 mem: location 1740 is 280
9999 mem: storing 281 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 281
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 281
9999 mem: storing 1577 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1577
9999 mem: location 1577 is 0
9999 mem: location 1578 is 0
9999 mem: location 1742 is 1577
9999 run: address to copy is 1577
9999 mem: storing 1577 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1577
9999 mem: storing 0 in location 1577
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1577
9999 mem: location 1577 is 0
9999 mem: location 1578 is 0
9999 mem: location 1742 is 1577
9999 run: address to copy is 1578
9999 mem: storing 1578 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1578
9999 mem: storing 7 in location 1578
 103 run: i <- add i, 1
9999 mem: location 1740 is 281
9999 mem: storing 282 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 282
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 282
9999 mem: storing 1579 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1579
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1742 is 1579
9999 run: address to copy is 1579
9999 mem: storing 1579 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1579
9999 mem: storing 0 in location 1579
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1579
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1742 is 1579
9999 run: address to copy is 1580
9999 mem: storing 1580 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1580
9999 mem: storing 7 in location 1580
 103 run: i <- add i, 1
9999 mem: location 1740 is 282
9999 mem: storing 283 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 283
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 283
9999 mem: storing 1581 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1581
9999 mem: location 1581 is 0
9999 mem: location 1582 is 0
9999 mem: location 1742 is 1581
9999 run: address to copy is 1581
9999 mem: storing 1581 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1581
9999 mem: storing 0 in location 1581
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1581
9999 mem: location 1581 is 0
9999 mem: location 1582 is 0
9999 mem: location 1742 is 1581
9999 run: address to copy is 1582
9999 mem: storing 1582 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1582
9999 mem: storing 7 in location 1582
 103 run: i <- add i, 1
9999 mem: location 1740 is 283
9999 mem: storing 284 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 284
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 284
9999 mem: storing 1583 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1583
9999 mem: location 1583 is 0
9999 mem: location 1584 is 0
9999 mem: location 1742 is 1583
9999 run: address to copy is 1583
9999 mem: storing 1583 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1583
9999 mem: storing 0 in location 1583
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1583
9999 mem: location 1583 is 0
9999 mem: location 1584 is 0
9999 mem: location 1742 is 1583
9999 run: address to copy is 1584
9999 mem: storing 1584 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1584
9999 mem: storing 7 in location 1584
 103 run: i <- add i, 1
9999 mem: location 1740 is 284
9999 mem: storing 285 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 285
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 285
9999 mem: storing 1585 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1585
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1742 is 1585
9999 run: address to copy is 1585
9999 mem: storing 1585 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1585
9999 mem: storing 0 in location 1585
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1585
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1742 is 1585
9999 run: address to copy is 1586
9999 mem: storing 1586 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1586
9999 mem: storing 7 in location 1586
 103 run: i <- add i, 1
9999 mem: location 1740 is 285
9999 mem: storing 286 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 286
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 286
9999 mem: storing 1587 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1588 is 0
9999 mem: location 1742 is 1587
9999 run: address to copy is 1587
9999 mem: storing 1587 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1587
9999 mem: storing 0 in location 1587
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1588 is 0
9999 mem: location 1742 is 1587
9999 run: address to copy is 1588
9999 mem: storing 1588 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1588
9999 mem: storing 7 in location 1588
 103 run: i <- add i, 1
9999 mem: location 1740 is 286
9999 mem: storing 287 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 287
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 287
9999 mem: storing 1589 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1589
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1742 is 1589
9999 run: address to copy is 1589
9999 mem: storing 1589 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1589
9999 mem: storing 0 in location 1589
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1589
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1742 is 1589
9999 run: address to copy is 1590
9999 mem: storing 1590 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1590
9999 mem: storing 7 in location 1590
 103 run: i <- add i, 1
9999 mem: location 1740 is 287
9999 mem: storing 288 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 288
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 288
9999 mem: storing 1591 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1591
9999 mem: location 1591 is 0
9999 mem: location 1592 is 0
9999 mem: location 1742 is 1591
9999 run: address to copy is 1591
9999 mem: storing 1591 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1591
9999 mem: storing 0 in location 1591
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1591
9999 mem: location 1591 is 0
9999 mem: location 1592 is 0
9999 mem: location 1742 is 1591
9999 run: address to copy is 1592
9999 mem: storing 1592 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1592
9999 mem: storing 7 in location 1592
 103 run: i <- add i, 1
9999 mem: location 1740 is 288
9999 mem: storing 289 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 289
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 289
9999 mem: storing 1593 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1593
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1742 is 1593
9999 run: address to copy is 1593
9999 mem: storing 1593 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1593
9999 mem: storing 0 in location 1593
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1593
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1742 is 1593
9999 run: address to copy is 1594
9999 mem: storing 1594 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1594
9999 mem: storing 7 in location 1594
 103 run: i <- add i, 1
9999 mem: location 1740 is 289
9999 mem: storing 290 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 290
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 290
9999 mem: storing 1595 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1595
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: location 1742 is 1595
9999 run: address to copy is 1595
9999 mem: storing 1595 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1595
9999 mem: storing 0 in location 1595
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1595
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: location 1742 is 1595
9999 run: address to copy is 1596
9999 mem: storing 1596 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1596
9999 mem: storing 7 in location 1596
 103 run: i <- add i, 1
9999 mem: location 1740 is 290
9999 mem: storing 291 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 291
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 291
9999 mem: storing 1597 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1597
9999 mem: location 1597 is 0
9999 mem: location 1598 is 0
9999 mem: location 1742 is 1597
9999 run: address to copy is 1597
9999 mem: storing 1597 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1597
9999 mem: storing 0 in location 1597
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1597
9999 mem: location 1597 is 0
9999 mem: location 1598 is 0
9999 mem: location 1742 is 1597
9999 run: address to copy is 1598
9999 mem: storing 1598 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1598
9999 mem: storing 7 in location 1598
 103 run: i <- add i, 1
9999 mem: location 1740 is 291
9999 mem: storing 292 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 292
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 292
9999 mem: storing 1599 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1599
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: location 1742 is 1599
9999 run: address to copy is 1599
9999 mem: storing 1599 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1599
9999 mem: storing 0 in location 1599
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1599
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: location 1742 is 1599
9999 run: address to copy is 1600
9999 mem: storing 1600 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1600
9999 mem: storing 7 in location 1600
 103 run: i <- add i, 1
9999 mem: location 1740 is 292
9999 mem: storing 293 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 293
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 293
9999 mem: storing 1601 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1602 is 0
9999 mem: location 1742 is 1601
9999 run: address to copy is 1601
9999 mem: storing 1601 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1601
9999 mem: storing 0 in location 1601
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1601
9999 mem: location 1601 is 0
9999 mem: location 1602 is 0
9999 mem: location 1742 is 1601
9999 run: address to copy is 1602
9999 mem: storing 1602 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1602
9999 mem: storing 7 in location 1602
 103 run: i <- add i, 1
9999 mem: location 1740 is 293
9999 mem: storing 294 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 294
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 294
9999 mem: storing 1603 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1603
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1742 is 1603
9999 run: address to copy is 1603
9999 mem: storing 1603 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1603
9999 mem: storing 0 in location 1603
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1603
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1742 is 1603
9999 run: address to copy is 1604
9999 mem: storing 1604 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1604
9999 mem: storing 7 in location 1604
 103 run: i <- add i, 1
9999 mem: location 1740 is 294
9999 mem: storing 295 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 295
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 295
9999 mem: storing 1605 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1605
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1742 is 1605
9999 run: address to copy is 1605
9999 mem: storing 1605 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1605
9999 mem: storing 0 in location 1605
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1605
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1742 is 1605
9999 run: address to copy is 1606
9999 mem: storing 1606 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1606
9999 mem: storing 7 in location 1606
 103 run: i <- add i, 1
9999 mem: location 1740 is 295
9999 mem: storing 296 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 296
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 296
9999 mem: storing 1607 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1607
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1742 is 1607
9999 run: address to copy is 1607
9999 mem: storing 1607 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1607
9999 mem: storing 0 in location 1607
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1607
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1742 is 1607
9999 run: address to copy is 1608
9999 mem: storing 1608 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1608
9999 mem: storing 7 in location 1608
 103 run: i <- add i, 1
9999 mem: location 1740 is 296
9999 mem: storing 297 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 297
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 297
9999 mem: storing 1609 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1609
9999 mem: location 1609 is 0
9999 mem: location 1610 is 0
9999 mem: location 1742 is 1609
9999 run: address to copy is 1609
9999 mem: storing 1609 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1609
9999 mem: storing 0 in location 1609
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1609
9999 mem: location 1609 is 0
9999 mem: location 1610 is 0
9999 mem: location 1742 is 1609
9999 run: address to copy is 1610
9999 mem: storing 1610 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1610
9999 mem: storing 7 in location 1610
 103 run: i <- add i, 1
9999 mem: location 1740 is 297
9999 mem: storing 298 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 298
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 298
9999 mem: storing 1611 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1611
9999 mem: location 1611 is 0
9999 mem: location 1612 is 0
9999 mem: location 1742 is 1611
9999 run: address to copy is 1611
9999 mem: storing 1611 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1611
9999 mem: storing 0 in location 1611
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1611
9999 mem: location 1611 is 0
9999 mem: location 1612 is 0
9999 mem: location 1742 is 1611
9999 run: address to copy is 1612
9999 mem: storing 1612 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1612
9999 mem: storing 7 in location 1612
 103 run: i <- add i, 1
9999 mem: location 1740 is 298
9999 mem: storing 299 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 299
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 299
9999 mem: storing 1613 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1613
9999 mem: location 1613 is 0
9999 mem: location 1614 is 0
9999 mem: location 1742 is 1613
9999 run: address to copy is 1613
9999 mem: storing 1613 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1613
9999 mem: storing 0 in location 1613
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1613
9999 mem: location 1613 is 0
9999 mem: location 1614 is 0
9999 mem: location 1742 is 1613
9999 run: address to copy is 1614
9999 mem: storing 1614 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1614
9999 mem: storing 7 in location 1614
 103 run: i <- add i, 1
9999 mem: location 1740 is 299
9999 mem: storing 300 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 300
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 300
9999 mem: storing 1615 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1615
9999 mem: location 1615 is 0
9999 mem: location 1616 is 0
9999 mem: location 1742 is 1615
9999 run: address to copy is 1615
9999 mem: storing 1615 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1615
9999 mem: storing 0 in location 1615
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1615
9999 mem: location 1615 is 0
9999 mem: location 1616 is 0
9999 mem: location 1742 is 1615
9999 run: address to copy is 1616
9999 mem: storing 1616 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1616
9999 mem: storing 7 in location 1616
 103 run: i <- add i, 1
9999 mem: location 1740 is 300
9999 mem: storing 301 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 301
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 301
9999 mem: storing 1617 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1617
9999 mem: location 1617 is 0
9999 mem: location 1618 is 0
9999 mem: location 1742 is 1617
9999 run: address to copy is 1617
9999 mem: storing 1617 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1617
9999 mem: storing 0 in location 1617
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1617
9999 mem: location 1617 is 0
9999 mem: location 1618 is 0
9999 mem: location 1742 is 1617
9999 run: address to copy is 1618
9999 mem: storing 1618 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1618
9999 mem: storing 7 in location 1618
 103 run: i <- add i, 1
9999 mem: location 1740 is 301
9999 mem: storing 302 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 302
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 302
9999 mem: storing 1619 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1619
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1742 is 1619
9999 run: address to copy is 1619
9999 mem: storing 1619 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1619
9999 mem: storing 0 in location 1619
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1619
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1742 is 1619
9999 run: address to copy is 1620
9999 mem: storing 1620 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1620
9999 mem: storing 7 in location 1620
 103 run: i <- add i, 1
9999 mem: location 1740 is 302
9999 mem: storing 303 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 303
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 303
9999 mem: storing 1621 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1621
9999 mem: location 1621 is 0
9999 mem: location 1622 is 0
9999 mem: location 1742 is 1621
9999 run: address to copy is 1621
9999 mem: storing 1621 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1621
9999 mem: storing 0 in location 1621
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1621
9999 mem: location 1621 is 0
9999 mem: location 1622 is 0
9999 mem: location 1742 is 1621
9999 run: address to copy is 1622
9999 mem: storing 1622 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1622
9999 mem: storing 7 in location 1622
 103 run: i <- add i, 1
9999 mem: location 1740 is 303
9999 mem: storing 304 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 304
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 304
9999 mem: storing 1623 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1623
9999 mem: location 1623 is 0
9999 mem: location 1624 is 0
9999 mem: location 1742 is 1623
9999 run: address to copy is 1623
9999 mem: storing 1623 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1623
9999 mem: storing 0 in location 1623
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1623
9999 mem: location 1623 is 0
9999 mem: location 1624 is 0
9999 mem: location 1742 is 1623
9999 run: address to copy is 1624
9999 mem: storing 1624 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1624
9999 mem: storing 7 in location 1624
 103 run: i <- add i, 1
9999 mem: location 1740 is 304
9999 mem: storing 305 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 305
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 305
9999 mem: storing 1625 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1626 is 0
9999 mem: location 1742 is 1625
9999 run: address to copy is 1625
9999 mem: storing 1625 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1625
9999 mem: storing 0 in location 1625
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1625
9999 mem: location 1625 is 0
9999 mem: location 1626 is 0
9999 mem: location 1742 is 1625
9999 run: address to copy is 1626
9999 mem: storing 1626 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1626
9999 mem: storing 7 in location 1626
 103 run: i <- add i, 1
9999 mem: location 1740 is 305
9999 mem: storing 306 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 306
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 306
9999 mem: storing 1627 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1627
9999 mem: location 1627 is 0
9999 mem: location 1628 is 0
9999 mem: location 1742 is 1627
9999 run: address to copy is 1627
9999 mem: storing 1627 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1627
9999 mem: storing 0 in location 1627
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1627
9999 mem: location 1627 is 0
9999 mem: location 1628 is 0
9999 mem: location 1742 is 1627
9999 run: address to copy is 1628
9999 mem: storing 1628 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1628
9999 mem: storing 7 in location 1628
 103 run: i <- add i, 1
9999 mem: location 1740 is 306
9999 mem: storing 307 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 307
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 307
9999 mem: storing 1629 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1629
9999 mem: location 1629 is 0
9999 mem: location 1630 is 0
9999 mem: location 1742 is 1629
9999 run: address to copy is 1629
9999 mem: storing 1629 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1629
9999 mem: storing 0 in location 1629
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1629
9999 mem: location 1629 is 0
9999 mem: location 1630 is 0
9999 mem: location 1742 is 1629
9999 run: address to copy is 1630
9999 mem: storing 1630 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1630
9999 mem: storing 7 in location 1630
 103 run: i <- add i, 1
9999 mem: location 1740 is 307
9999 mem: storing 308 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 308
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 308
9999 mem: storing 1631 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1631
9999 mem: location 1631 is 0
9999 mem: location 1632 is 0
9999 mem: location 1742 is 1631
9999 run: address to copy is 1631
9999 mem: storing 1631 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1631
9999 mem: storing 0 in location 1631
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1631
9999 mem: location 1631 is 0
9999 mem: location 1632 is 0
9999 mem: location 1742 is 1631
9999 run: address to copy is 1632
9999 mem: storing 1632 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1632
9999 mem: storing 7 in location 1632
 103 run: i <- add i, 1
9999 mem: location 1740 is 308
9999 mem: storing 309 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 309
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 309
9999 mem: storing 1633 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1633
9999 mem: location 1633 is 0
9999 mem: location 1634 is 0
9999 mem: location 1742 is 1633
9999 run: address to copy is 1633
9999 mem: storing 1633 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1633
9999 mem: storing 0 in location 1633
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1633
9999 mem: location 1633 is 0
9999 mem: location 1634 is 0
9999 mem: location 1742 is 1633
9999 run: address to copy is 1634
9999 mem: storing 1634 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1634
9999 mem: storing 7 in location 1634
 103 run: i <- add i, 1
9999 mem: location 1740 is 309
9999 mem: storing 310 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 310
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 310
9999 mem: storing 1635 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1635
9999 mem: location 1635 is 0
9999 mem: location 1636 is 0
9999 mem: location 1742 is 1635
9999 run: address to copy is 1635
9999 mem: storing 1635 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1635
9999 mem: storing 0 in location 1635
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1635
9999 mem: location 1635 is 0
9999 mem: location 1636 is 0
9999 mem: location 1742 is 1635
9999 run: address to copy is 1636
9999 mem: storing 1636 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1636
9999 mem: storing 7 in location 1636
 103 run: i <- add i, 1
9999 mem: location 1740 is 310
9999 mem: storing 311 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 311
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 311
9999 mem: storing 1637 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1637
9999 mem: location 1637 is 0
9999 mem: location 1638 is 0
9999 mem: location 1742 is 1637
9999 run: address to copy is 1637
9999 mem: storing 1637 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1637
9999 mem: storing 0 in location 1637
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1637
9999 mem: location 1637 is 0
9999 mem: location 1638 is 0
9999 mem: location 1742 is 1637
9999 run: address to copy is 1638
9999 mem: storing 1638 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1638
9999 mem: storing 7 in location 1638
 103 run: i <- add i, 1
9999 mem: location 1740 is 311
9999 mem: storing 312 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 312
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 312
9999 mem: storing 1639 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1639
9999 mem: location 1639 is 0
9999 mem: location 1640 is 0
9999 mem: location 1742 is 1639
9999 run: address to copy is 1639
9999 mem: storing 1639 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1639
9999 mem: storing 0 in location 1639
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1639
9999 mem: location 1639 is 0
9999 mem: location 1640 is 0
9999 mem: location 1742 is 1639
9999 run: address to copy is 1640
9999 mem: storing 1640 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1640
9999 mem: storing 7 in location 1640
 103 run: i <- add i, 1
9999 mem: location 1740 is 312
9999 mem: storing 313 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 313
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 313
9999 mem: storing 1641 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1641
9999 mem: location 1641 is 0
9999 mem: location 1642 is 0
9999 mem: location 1742 is 1641
9999 run: address to copy is 1641
9999 mem: storing 1641 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1641
9999 mem: storing 0 in location 1641
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1641
9999 mem: location 1641 is 0
9999 mem: location 1642 is 0
9999 mem: location 1742 is 1641
9999 run: address to copy is 1642
9999 mem: storing 1642 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1642
9999 mem: storing 7 in location 1642
 103 run: i <- add i, 1
9999 mem: location 1740 is 313
9999 mem: storing 314 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 314
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 314
9999 mem: storing 1643 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1643
9999 mem: location 1643 is 0
9999 mem: location 1644 is 0
9999 mem: location 1742 is 1643
9999 run: address to copy is 1643
9999 mem: storing 1643 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1643
9999 mem: storing 0 in location 1643
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1643
9999 mem: location 1643 is 0
9999 mem: location 1644 is 0
9999 mem: location 1742 is 1643
9999 run: address to copy is 1644
9999 mem: storing 1644 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1644
9999 mem: storing 7 in location 1644
 103 run: i <- add i, 1
9999 mem: location 1740 is 314
9999 mem: storing 315 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 315
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 315
9999 mem: storing 1645 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1645
9999 mem: location 1645 is 0
9999 mem: location 1646 is 0
9999 mem: location 1742 is 1645
9999 run: address to copy is 1645
9999 mem: storing 1645 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1645
9999 mem: storing 0 in location 1645
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1645
9999 mem: location 1645 is 0
9999 mem: location 1646 is 0
9999 mem: location 1742 is 1645
9999 run: address to copy is 1646
9999 mem: storing 1646 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1646
9999 mem: storing 7 in location 1646
 103 run: i <- add i, 1
9999 mem: location 1740 is 315
9999 mem: storing 316 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 316
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 316
9999 mem: storing 1647 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1647
9999 mem: location 1647 is 0
9999 mem: location 1648 is 0
9999 mem: location 1742 is 1647
9999 run: address to copy is 1647
9999 mem: storing 1647 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1647
9999 mem: storing 0 in location 1647
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1647
9999 mem: location 1647 is 0
9999 mem: location 1648 is 0
9999 mem: location 1742 is 1647
9999 run: address to copy is 1648
9999 mem: storing 1648 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1648
9999 mem: storing 7 in location 1648
 103 run: i <- add i, 1
9999 mem: location 1740 is 316
9999 mem: storing 317 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 317
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 317
9999 mem: storing 1649 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1649
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: location 1742 is 1649
9999 run: address to copy is 1649
9999 mem: storing 1649 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1649
9999 mem: storing 0 in location 1649
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1649
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: location 1742 is 1649
9999 run: address to copy is 1650
9999 mem: storing 1650 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1650
9999 mem: storing 7 in location 1650
 103 run: i <- add i, 1
9999 mem: location 1740 is 317
9999 mem: storing 318 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 318
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 318
9999 mem: storing 1651 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1652 is 0
9999 mem: location 1742 is 1651
9999 run: address to copy is 1651
9999 mem: storing 1651 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1651
9999 mem: storing 0 in location 1651
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1651
9999 mem: location 1651 is 0
9999 mem: location 1652 is 0
9999 mem: location 1742 is 1651
9999 run: address to copy is 1652
9999 mem: storing 1652 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1652
9999 mem: storing 7 in location 1652
 103 run: i <- add i, 1
9999 mem: location 1740 is 318
9999 mem: storing 319 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 319
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 319
9999 mem: storing 1653 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1653
9999 mem: location 1653 is 0
9999 mem: location 1654 is 0
9999 mem: location 1742 is 1653
9999 run: address to copy is 1653
9999 mem: storing 1653 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1653
9999 mem: storing 0 in location 1653
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1653
9999 mem: location 1653 is 0
9999 mem: location 1654 is 0
9999 mem: location 1742 is 1653
9999 run: address to copy is 1654
9999 mem: storing 1654 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1654
9999 mem: storing 7 in location 1654
 103 run: i <- add i, 1
9999 mem: location 1740 is 319
9999 mem: storing 320 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 320
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 320
9999 mem: storing 1655 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1655
9999 mem: location 1655 is 0
9999 mem: location 1656 is 0
9999 mem: location 1742 is 1655
9999 run: address to copy is 1655
9999 mem: storing 1655 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1655
9999 mem: storing 0 in location 1655
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1655
9999 mem: location 1655 is 0
9999 mem: location 1656 is 0
9999 mem: location 1742 is 1655
9999 run: address to copy is 1656
9999 mem: storing 1656 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1656
9999 mem: storing 7 in location 1656
 103 run: i <- add i, 1
9999 mem: location 1740 is 320
9999 mem: storing 321 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 321
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 321
9999 mem: storing 1657 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1657
9999 mem: location 1657 is 0
9999 mem: location 1658 is 0
9999 mem: location 1742 is 1657
9999 run: address to copy is 1657
9999 mem: storing 1657 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1657
9999 mem: storing 0 in location 1657
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1657
9999 mem: location 1657 is 0
9999 mem: location 1658 is 0
9999 mem: location 1742 is 1657
9999 run: address to copy is 1658
9999 mem: storing 1658 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1658
9999 mem: storing 7 in location 1658
 103 run: i <- add i, 1
9999 mem: location 1740 is 321
9999 mem: storing 322 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 322
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 322
9999 mem: storing 1659 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1659
9999 mem: location 1659 is 0
9999 mem: location 1660 is 0
9999 mem: location 1742 is 1659
9999 run: address to copy is 1659
9999 mem: storing 1659 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1659
9999 mem: storing 0 in location 1659
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1659
9999 mem: location 1659 is 0
9999 mem: location 1660 is 0
9999 mem: location 1742 is 1659
9999 run: address to copy is 1660
9999 mem: storing 1660 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1660
9999 mem: storing 7 in location 1660
 103 run: i <- add i, 1
9999 mem: location 1740 is 322
9999 mem: storing 323 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 323
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 323
9999 mem: storing 1661 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1661
9999 mem: location 1661 is 0
9999 mem: location 1662 is 0
9999 mem: location 1742 is 1661
9999 run: address to copy is 1661
9999 mem: storing 1661 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1661
9999 mem: storing 0 in location 1661
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1661
9999 mem: location 1661 is 0
9999 mem: location 1662 is 0
9999 mem: location 1742 is 1661
9999 run: address to copy is 1662
9999 mem: storing 1662 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1662
9999 mem: storing 7 in location 1662
 103 run: i <- add i, 1
9999 mem: location 1740 is 323
9999 mem: storing 324 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 324
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 324
9999 mem: storing 1663 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1663
9999 mem: location 1663 is 0
9999 mem: location 1664 is 0
9999 mem: location 1742 is 1663
9999 run: address to copy is 1663
9999 mem: storing 1663 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1663
9999 mem: storing 0 in location 1663
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1663
9999 mem: location 1663 is 0
9999 mem: location 1664 is 0
9999 mem: location 1742 is 1663
9999 run: address to copy is 1664
9999 mem: storing 1664 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1664
9999 mem: storing 7 in location 1664
 103 run: i <- add i, 1
9999 mem: location 1740 is 324
9999 mem: storing 325 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 325
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 325
9999 mem: storing 1665 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1665
9999 mem: location 1665 is 0
9999 mem: location 1666 is 0
9999 mem: location 1742 is 1665
9999 run: address to copy is 1665
9999 mem: storing 1665 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1665
9999 mem: storing 0 in location 1665
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1665
9999 mem: location 1665 is 0
9999 mem: location 1666 is 0
9999 mem: location 1742 is 1665
9999 run: address to copy is 1666
9999 mem: storing 1666 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1666
9999 mem: storing 7 in location 1666
 103 run: i <- add i, 1
9999 mem: location 1740 is 325
9999 mem: storing 326 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 326
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 326
9999 mem: storing 1667 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1667
9999 mem: location 1667 is 0
9999 mem: location 1668 is 0
9999 mem: location 1742 is 1667
9999 run: address to copy is 1667
9999 mem: storing 1667 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1667
9999 mem: storing 0 in location 1667
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1667
9999 mem: location 1667 is 0
9999 mem: location 1668 is 0
9999 mem: location 1742 is 1667
9999 run: address to copy is 1668
9999 mem: storing 1668 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1668
9999 mem: storing 7 in location 1668
 103 run: i <- add i, 1
9999 mem: location 1740 is 326
9999 mem: storing 327 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 327
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 327
9999 mem: storing 1669 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1669
9999 mem: location 1669 is 0
9999 mem: location 1670 is 0
9999 mem: location 1742 is 1669
9999 run: address to copy is 1669
9999 mem: storing 1669 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1669
9999 mem: storing 0 in location 1669
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1669
9999 mem: location 1669 is 0
9999 mem: location 1670 is 0
9999 mem: location 1742 is 1669
9999 run: address to copy is 1670
9999 mem: storing 1670 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1670
9999 mem: storing 7 in location 1670
 103 run: i <- add i, 1
9999 mem: location 1740 is 327
9999 mem: storing 328 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 328
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 328
9999 mem: storing 1671 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1671
9999 mem: location 1671 is 0
9999 mem: location 1672 is 0
9999 mem: location 1742 is 1671
9999 run: address to copy is 1671
9999 mem: storing 1671 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1671
9999 mem: storing 0 in location 1671
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1671
9999 mem: location 1671 is 0
9999 mem: location 1672 is 0
9999 mem: location 1742 is 1671
9999 run: address to copy is 1672
9999 mem: storing 1672 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1672
9999 mem: storing 7 in location 1672
 103 run: i <- add i, 1
9999 mem: location 1740 is 328
9999 mem: storing 329 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 329
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 329
9999 mem: storing 1673 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1673
9999 mem: location 1673 is 0
9999 mem: location 1674 is 0
9999 mem: location 1742 is 1673
9999 run: address to copy is 1673
9999 mem: storing 1673 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1673
9999 mem: storing 0 in location 1673
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1673
9999 mem: location 1673 is 0
9999 mem: location 1674 is 0
9999 mem: location 1742 is 1673
9999 run: address to copy is 1674
9999 mem: storing 1674 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1674
9999 mem: storing 7 in location 1674
 103 run: i <- add i, 1
9999 mem: location 1740 is 329
9999 mem: storing 330 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 330
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 330
9999 mem: storing 1675 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1675
9999 mem: location 1675 is 0
9999 mem: location 1676 is 0
9999 mem: location 1742 is 1675
9999 run: address to copy is 1675
9999 mem: storing 1675 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1675
9999 mem: storing 0 in location 1675
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1675
9999 mem: location 1675 is 0
9999 mem: location 1676 is 0
9999 mem: location 1742 is 1675
9999 run: address to copy is 1676
9999 mem: storing 1676 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1676
9999 mem: storing 7 in location 1676
9999 schedule: clear-screen/new-fake-screen/scenario-making-a-move
 103 run: i <- add i, 1
9999 mem: location 1740 is 330
9999 mem: storing 331 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 331
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 331
9999 mem: storing 1677 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1678 is 0
9999 mem: location 1742 is 1677
9999 run: address to copy is 1677
9999 mem: storing 1677 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1677
9999 mem: storing 0 in location 1677
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1677
9999 mem: location 1677 is 0
9999 mem: location 1678 is 0
9999 mem: location 1742 is 1677
9999 run: address to copy is 1678
9999 mem: storing 1678 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1678
9999 mem: storing 7 in location 1678
 103 run: i <- add i, 1
9999 mem: location 1740 is 331
9999 mem: storing 332 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 332
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 332
9999 mem: storing 1679 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1679
9999 mem: location 1679 is 0
9999 mem: location 1680 is 0
9999 mem: location 1742 is 1679
9999 run: address to copy is 1679
9999 mem: storing 1679 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1679
9999 mem: storing 0 in location 1679
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1679
9999 mem: location 1679 is 0
9999 mem: location 1680 is 0
9999 mem: location 1742 is 1679
9999 run: address to copy is 1680
9999 mem: storing 1680 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1680
9999 mem: storing 7 in location 1680
 103 run: i <- add i, 1
9999 mem: location 1740 is 332
9999 mem: storing 333 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 333
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 333
9999 mem: storing 1681 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1681
9999 mem: location 1681 is 0
9999 mem: location 1682 is 0
9999 mem: location 1742 is 1681
9999 run: address to copy is 1681
9999 mem: storing 1681 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1681
9999 mem: storing 0 in location 1681
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1681
9999 mem: location 1681 is 0
9999 mem: location 1682 is 0
9999 mem: location 1742 is 1681
9999 run: address to copy is 1682
9999 mem: storing 1682 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1682
9999 mem: storing 7 in location 1682
 103 run: i <- add i, 1
9999 mem: location 1740 is 333
9999 mem: storing 334 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 334
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 334
9999 mem: storing 1683 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1683
9999 mem: location 1683 is 0
9999 mem: location 1684 is 0
9999 mem: location 1742 is 1683
9999 run: address to copy is 1683
9999 mem: storing 1683 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1683
9999 mem: storing 0 in location 1683
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1683
9999 mem: location 1683 is 0
9999 mem: location 1684 is 0
9999 mem: location 1742 is 1683
9999 run: address to copy is 1684
9999 mem: storing 1684 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1684
9999 mem: storing 7 in location 1684
 103 run: i <- add i, 1
9999 mem: location 1740 is 334
9999 mem: storing 335 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 335
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 335
9999 mem: storing 1685 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1685
9999 mem: location 1685 is 0
9999 mem: location 1686 is 0
9999 mem: location 1742 is 1685
9999 run: address to copy is 1685
9999 mem: storing 1685 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1685
9999 mem: storing 0 in location 1685
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1685
9999 mem: location 1685 is 0
9999 mem: location 1686 is 0
9999 mem: location 1742 is 1685
9999 run: address to copy is 1686
9999 mem: storing 1686 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1686
9999 mem: storing 7 in location 1686
 103 run: i <- add i, 1
9999 mem: location 1740 is 335
9999 mem: storing 336 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 336
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 336
9999 mem: storing 1687 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1687
9999 mem: location 1687 is 0
9999 mem: location 1688 is 0
9999 mem: location 1742 is 1687
9999 run: address to copy is 1687
9999 mem: storing 1687 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1687
9999 mem: storing 0 in location 1687
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1687
9999 mem: location 1687 is 0
9999 mem: location 1688 is 0
9999 mem: location 1742 is 1687
9999 run: address to copy is 1688
9999 mem: storing 1688 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1688
9999 mem: storing 7 in location 1688
 103 run: i <- add i, 1
9999 mem: location 1740 is 336
9999 mem: storing 337 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 337
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 337
9999 mem: storing 1689 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1689
9999 mem: location 1689 is 0
9999 mem: location 1690 is 0
9999 mem: location 1742 is 1689
9999 run: address to copy is 1689
9999 mem: storing 1689 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1689
9999 mem: storing 0 in location 1689
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1689
9999 mem: location 1689 is 0
9999 mem: location 1690 is 0
9999 mem: location 1742 is 1689
9999 run: address to copy is 1690
9999 mem: storing 1690 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1690
9999 mem: storing 7 in location 1690
 103 run: i <- add i, 1
9999 mem: location 1740 is 337
9999 mem: storing 338 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 338
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 338
9999 mem: storing 1691 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1691
9999 mem: location 1691 is 0
9999 mem: location 1692 is 0
9999 mem: location 1742 is 1691
9999 run: address to copy is 1691
9999 mem: storing 1691 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1691
9999 mem: storing 0 in location 1691
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1691
9999 mem: location 1691 is 0
9999 mem: location 1692 is 0
9999 mem: location 1742 is 1691
9999 run: address to copy is 1692
9999 mem: storing 1692 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1692
9999 mem: storing 7 in location 1692
 103 run: i <- add i, 1
9999 mem: location 1740 is 338
9999 mem: storing 339 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 339
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 339
9999 mem: storing 1693 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1693
9999 mem: location 1693 is 0
9999 mem: location 1694 is 0
9999 mem: location 1742 is 1693
9999 run: address to copy is 1693
9999 mem: storing 1693 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1693
9999 mem: storing 0 in location 1693
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1693
9999 mem: location 1693 is 0
9999 mem: location 1694 is 0
9999 mem: location 1742 is 1693
9999 run: address to copy is 1694
9999 mem: storing 1694 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1694
9999 mem: storing 7 in location 1694
 103 run: i <- add i, 1
9999 mem: location 1740 is 339
9999 mem: storing 340 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 340
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 340
9999 mem: storing 1695 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1695
9999 mem: location 1695 is 0
9999 mem: location 1696 is 0
9999 mem: location 1742 is 1695
9999 run: address to copy is 1695
9999 mem: storing 1695 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1695
9999 mem: storing 0 in location 1695
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1695
9999 mem: location 1695 is 0
9999 mem: location 1696 is 0
9999 mem: location 1742 is 1695
9999 run: address to copy is 1696
9999 mem: storing 1696 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1696
9999 mem: storing 7 in location 1696
 103 run: i <- add i, 1
9999 mem: location 1740 is 340
9999 mem: storing 341 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 341
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 341
9999 mem: storing 1697 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1697
9999 mem: location 1697 is 0
9999 mem: location 1698 is 0
9999 mem: location 1742 is 1697
9999 run: address to copy is 1697
9999 mem: storing 1697 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1697
9999 mem: storing 0 in location 1697
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1697
9999 mem: location 1697 is 0
9999 mem: location 1698 is 0
9999 mem: location 1742 is 1697
9999 run: address to copy is 1698
9999 mem: storing 1698 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1698
9999 mem: storing 7 in location 1698
 103 run: i <- add i, 1
9999 mem: location 1740 is 341
9999 mem: storing 342 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 342
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 342
9999 mem: storing 1699 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1699
9999 mem: location 1699 is 0
9999 mem: location 1700 is 0
9999 mem: location 1742 is 1699
9999 run: address to copy is 1699
9999 mem: storing 1699 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1699
9999 mem: storing 0 in location 1699
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1699
9999 mem: location 1699 is 0
9999 mem: location 1700 is 0
9999 mem: location 1742 is 1699
9999 run: address to copy is 1700
9999 mem: storing 1700 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1700
9999 mem: storing 7 in location 1700
 103 run: i <- add i, 1
9999 mem: location 1740 is 342
9999 mem: storing 343 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 343
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 343
9999 mem: storing 1701 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1701
9999 mem: location 1701 is 0
9999 mem: location 1702 is 0
9999 mem: location 1742 is 1701
9999 run: address to copy is 1701
9999 mem: storing 1701 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1701
9999 mem: storing 0 in location 1701
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1701
9999 mem: location 1701 is 0
9999 mem: location 1702 is 0
9999 mem: location 1742 is 1701
9999 run: address to copy is 1702
9999 mem: storing 1702 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1702
9999 mem: storing 7 in location 1702
 103 run: i <- add i, 1
9999 mem: location 1740 is 343
9999 mem: storing 344 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 344
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 344
9999 mem: storing 1703 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1703
9999 mem: location 1703 is 0
9999 mem: location 1704 is 0
9999 mem: location 1742 is 1703
9999 run: address to copy is 1703
9999 mem: storing 1703 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1703
9999 mem: storing 0 in location 1703
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1703
9999 mem: location 1703 is 0
9999 mem: location 1704 is 0
9999 mem: location 1742 is 1703
9999 run: address to copy is 1704
9999 mem: storing 1704 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1704
9999 mem: storing 7 in location 1704
 103 run: i <- add i, 1
9999 mem: location 1740 is 344
9999 mem: storing 345 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 345
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 345
9999 mem: storing 1705 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1705
9999 mem: location 1705 is 0
9999 mem: location 1706 is 0
9999 mem: location 1742 is 1705
9999 run: address to copy is 1705
9999 mem: storing 1705 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1705
9999 mem: storing 0 in location 1705
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1705
9999 mem: location 1705 is 0
9999 mem: location 1706 is 0
9999 mem: location 1742 is 1705
9999 run: address to copy is 1706
9999 mem: storing 1706 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1706
9999 mem: storing 7 in location 1706
 103 run: i <- add i, 1
9999 mem: location 1740 is 345
9999 mem: storing 346 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 346
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 346
9999 mem: storing 1707 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1707
9999 mem: location 1707 is 0
9999 mem: location 1708 is 0
9999 mem: location 1742 is 1707
9999 run: address to copy is 1707
9999 mem: storing 1707 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1707
9999 mem: storing 0 in location 1707
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1707
9999 mem: location 1707 is 0
9999 mem: location 1708 is 0
9999 mem: location 1742 is 1707
9999 run: address to copy is 1708
9999 mem: storing 1708 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1708
9999 mem: storing 7 in location 1708
 103 run: i <- add i, 1
9999 mem: location 1740 is 346
9999 mem: storing 347 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 347
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 347
9999 mem: storing 1709 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1709
9999 mem: location 1709 is 0
9999 mem: location 1710 is 0
9999 mem: location 1742 is 1709
9999 run: address to copy is 1709
9999 mem: storing 1709 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1709
9999 mem: storing 0 in location 1709
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1709
9999 mem: location 1709 is 0
9999 mem: location 1710 is 0
9999 mem: location 1742 is 1709
9999 run: address to copy is 1710
9999 mem: storing 1710 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1710
9999 mem: storing 7 in location 1710
 103 run: i <- add i, 1
9999 mem: location 1740 is 347
9999 mem: storing 348 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 348
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 348
9999 mem: storing 1711 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1711
9999 mem: location 1711 is 0
9999 mem: location 1712 is 0
9999 mem: location 1742 is 1711
9999 run: address to copy is 1711
9999 mem: storing 1711 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1711
9999 mem: storing 0 in location 1711
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1711
9999 mem: location 1711 is 0
9999 mem: location 1712 is 0
9999 mem: location 1742 is 1711
9999 run: address to copy is 1712
9999 mem: storing 1712 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1712
9999 mem: storing 7 in location 1712
 103 run: i <- add i, 1
9999 mem: location 1740 is 348
9999 mem: storing 349 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 349
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 349
9999 mem: storing 1713 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1713
9999 mem: location 1713 is 0
9999 mem: location 1714 is 0
9999 mem: location 1742 is 1713
9999 run: address to copy is 1713
9999 mem: storing 1713 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1713
9999 mem: storing 0 in location 1713
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1713
9999 mem: location 1713 is 0
9999 mem: location 1714 is 0
9999 mem: location 1742 is 1713
9999 run: address to copy is 1714
9999 mem: storing 1714 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1714
9999 mem: storing 7 in location 1714
 103 run: i <- add i, 1
9999 mem: location 1740 is 349
9999 mem: storing 350 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 350
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 350
9999 mem: storing 1715 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1715
9999 mem: location 1715 is 0
9999 mem: location 1716 is 0
9999 mem: location 1742 is 1715
9999 run: address to copy is 1715
9999 mem: storing 1715 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1715
9999 mem: storing 0 in location 1715
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1715
9999 mem: location 1715 is 0
9999 mem: location 1716 is 0
9999 mem: location 1742 is 1715
9999 run: address to copy is 1716
9999 mem: storing 1716 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1716
9999 mem: storing 7 in location 1716
 103 run: i <- add i, 1
9999 mem: location 1740 is 350
9999 mem: storing 351 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 351
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 351
9999 mem: storing 1717 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1717
9999 mem: location 1717 is 0
9999 mem: location 1718 is 0
9999 mem: location 1742 is 1717
9999 run: address to copy is 1717
9999 mem: storing 1717 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1717
9999 mem: storing 0 in location 1717
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1717
9999 mem: location 1717 is 0
9999 mem: location 1718 is 0
9999 mem: location 1742 is 1717
9999 run: address to copy is 1718
9999 mem: storing 1718 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1718
9999 mem: storing 7 in location 1718
 103 run: i <- add i, 1
9999 mem: location 1740 is 351
9999 mem: storing 352 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 352
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 352
9999 mem: storing 1719 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1719
9999 mem: location 1719 is 0
9999 mem: location 1720 is 0
9999 mem: location 1742 is 1719
9999 run: address to copy is 1719
9999 mem: storing 1719 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1719
9999 mem: storing 0 in location 1719
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1719
9999 mem: location 1719 is 0
9999 mem: location 1720 is 0
9999 mem: location 1742 is 1719
9999 run: address to copy is 1720
9999 mem: storing 1720 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1720
9999 mem: storing 7 in location 1720
 103 run: i <- add i, 1
9999 mem: location 1740 is 352
9999 mem: storing 353 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 353
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 353
9999 mem: storing 1721 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1721
9999 mem: location 1721 is 0
9999 mem: location 1722 is 0
9999 mem: location 1742 is 1721
9999 run: address to copy is 1721
9999 mem: storing 1721 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1721
9999 mem: storing 0 in location 1721
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1721
9999 mem: location 1721 is 0
9999 mem: location 1722 is 0
9999 mem: location 1742 is 1721
9999 run: address to copy is 1722
9999 mem: storing 1722 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1722
9999 mem: storing 7 in location 1722
 103 run: i <- add i, 1
9999 mem: location 1740 is 353
9999 mem: storing 354 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 354
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 354
9999 mem: storing 1723 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1723
9999 mem: location 1723 is 0
9999 mem: location 1724 is 0
9999 mem: location 1742 is 1723
9999 run: address to copy is 1723
9999 mem: storing 1723 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1723
9999 mem: storing 0 in location 1723
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1723
9999 mem: location 1723 is 0
9999 mem: location 1724 is 0
9999 mem: location 1742 is 1723
9999 run: address to copy is 1724
9999 mem: storing 1724 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1724
9999 mem: storing 7 in location 1724
 103 run: i <- add i, 1
9999 mem: location 1740 is 354
9999 mem: storing 355 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 355
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 355
9999 mem: storing 1725 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1725
9999 mem: location 1725 is 0
9999 mem: location 1726 is 0
9999 mem: location 1742 is 1725
9999 run: address to copy is 1725
9999 mem: storing 1725 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1725
9999 mem: storing 0 in location 1725
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1725
9999 mem: location 1725 is 0
9999 mem: location 1726 is 0
9999 mem: location 1742 is 1725
9999 run: address to copy is 1726
9999 mem: storing 1726 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1726
9999 mem: storing 7 in location 1726
 103 run: i <- add i, 1
9999 mem: location 1740 is 355
9999 mem: storing 356 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 356
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 356
9999 mem: storing 1727 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1727
9999 mem: location 1727 is 0
9999 mem: location 1728 is 0
9999 mem: location 1742 is 1727
9999 run: address to copy is 1727
9999 mem: storing 1727 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1727
9999 mem: storing 0 in location 1727
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1727
9999 mem: location 1727 is 0
9999 mem: location 1728 is 0
9999 mem: location 1742 is 1727
9999 run: address to copy is 1728
9999 mem: storing 1728 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1728
9999 mem: storing 7 in location 1728
 103 run: i <- add i, 1
9999 mem: location 1740 is 356
9999 mem: storing 357 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 357
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 357
9999 mem: storing 1729 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1729
9999 mem: location 1729 is 0
9999 mem: location 1730 is 0
9999 mem: location 1742 is 1729
9999 run: address to copy is 1729
9999 mem: storing 1729 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1729
9999 mem: storing 0 in location 1729
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1729
9999 mem: location 1729 is 0
9999 mem: location 1730 is 0
9999 mem: location 1742 is 1729
9999 run: address to copy is 1730
9999 mem: storing 1730 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1730
9999 mem: storing 7 in location 1730
 103 run: i <- add i, 1
9999 mem: location 1740 is 357
9999 mem: storing 358 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 358
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 358
9999 mem: storing 1731 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1731
9999 mem: location 1731 is 0
9999 mem: location 1732 is 0
9999 mem: location 1742 is 1731
9999 run: address to copy is 1731
9999 mem: storing 1731 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1731
9999 mem: storing 0 in location 1731
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1731
9999 mem: location 1731 is 0
9999 mem: location 1732 is 0
9999 mem: location 1742 is 1731
9999 run: address to copy is 1732
9999 mem: storing 1732 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1732
9999 mem: storing 7 in location 1732
 103 run: i <- add i, 1
9999 mem: location 1740 is 358
9999 mem: storing 359 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 359
9999 mem: location 1739 is 360
9999 mem: storing 0 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1738 is 1014
9999 mem: location 1740 is 359
9999 mem: storing 1733 in location 1742
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1742 is 1733
9999 mem: location 1733 is 0
9999 mem: location 1734 is 0
9999 mem: location 1742 is 1733
9999 run: address to copy is 1733
9999 mem: storing 1733 in location 1743
 103 run: *curr-content <- copy 0/empty
9999 mem: location 1743 is 1733
9999 mem: storing 0 in location 1733
 103 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1742 is 1733
9999 mem: location 1733 is 0
9999 mem: location 1734 is 0
9999 mem: location 1742 is 1733
9999 run: address to copy is 1734
9999 mem: storing 1734 in location 1744
 103 run: *curr-color <- copy 7/white
9999 mem: location 1744 is 1734
9999 mem: storing 7 in location 1734
 103 run: i <- add i, 1
9999 mem: location 1740 is 359
9999 mem: storing 360 in location 1740
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1740 is 360
9999 mem: location 1739 is 360
9999 mem: storing 1 in location 1741
 103 run: break-if done?, 
9999 mem: location 1741 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1737 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1737 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1745
 103 run: *x <- copy 0
9999 mem: location 1745 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1737 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1737 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1745
 103 run: *x <- copy 0
9999 mem: location 1745 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1737 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: run [
    2:address:array:address:array:character/board <- initial-position
    3:address:move <- new move:type
    4:address:number <- get-address *3:address:move, from-file:offset
    *4:address:number <- copy 6/g
    5:address:number <- get-address *3:address:move, from-rank:offset
    *5:address:number <- copy 1/'2'
    6:address:number <- get-address *3:address:move, to-file:offset
    *6:address:number <- copy 6/g
    7:address:number <- get-address *3:address:move, to-rank:offset
    *7:address:number <- copy 3/'4'
    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move
    screen:address <- print-board screen:address, 2:address:array:address:array:character/board
  ]
9999 parse: instruction: initial-position
9999 parse:   product: {name: "2", properties: ["2": "address":"array":"address":"array":"character", "board": ]}
9999 parse: instruction: new
9999 parse:   ingredient: {name: "move", properties: ["move": "type"]}
9999 parse:   product: {name: "3", properties: ["3": "address":"move"]}
9999 parse: instruction: get-address
9999 parse:   ingredient: {name: "3", properties: ["*3": "address":"move", "lookup": ]}
9999 parse:   ingredient: {name: "from-file", properties: ["from-file": "offset"]}
9999 parse:   product: {name: "4", properties: ["4": "address":"number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "6", properties: ["6": "literal", "g": ]}
9999 parse:   product: {name: "4", properties: ["*4": "address":"number", "lookup": ]}
9999 parse: instruction: get-address
9999 parse:   ingredient: {name: "3", properties: ["*3": "address":"move", "lookup": ]}
9999 parse:   ingredient: {name: "from-rank", properties: ["from-rank": "offset"]}
9999 parse:   product: {name: "5", properties: ["5": "address":"number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "1", properties: ["1": "literal", "'2'": ]}
9999 parse:   product: {name: "5", properties: ["*5": "address":"number", "lookup": ]}
9999 parse: instruction: get-address
9999 parse:   ingredient: {name: "3", properties: ["*3": "address":"move", "lookup": ]}
9999 parse:   ingredient: {name: "to-file", properties: ["to-file": "offset"]}
9999 parse:   product: {name: "6", properties: ["6": "address":"number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "6", properties: ["6": "literal", "g": ]}
9999 parse:   product: {name: "6", properties: ["*6": "address":"number", "lookup": ]}
9999 parse: instruction: get-address
9999 parse:   ingredient: {name: "3", properties: ["*3": "address":"move", "lookup": ]}
9999 parse:   ingredient: {name: "to-rank", properties: ["to-rank": "offset"]}
9999 parse:   product: {name: "7", properties: ["7": "address":"number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "3", properties: ["3": "literal", "'4'": ]}
9999 parse:   product: {name: "7", properties: ["*7": "address":"number", "lookup": ]}
9999 parse: instruction: make-move
9999 parse:   ingredient: {name: "2", properties: ["2": "address":"array":"address":"array":"character", "board": ]}
9999 parse:   ingredient: {name: "3", properties: ["3": "address":"move"]}
9999 parse:   product: {name: "2", properties: ["2": "address":"array":"address":"array":"character", "board": ]}
9999 parse: instruction: print-board
9999 parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
9999 parse:   ingredient: {name: "2", properties: ["2": "address":"array":"address":"array":"character", "board": ]}
9999 parse:   product: {name: "screen", properties: ["screen": "address"]}
9999 new: move -> move
9999 name: element from-file of type move is at offset 0
9999 name: element from-rank of type move is at offset 1
9999 name: element to-file of type move is at offset 2
9999 name: element to-rank of type move is at offset 3
9999 after-brace: recipe run1001
9999 after-brace: initial-position ...
9999 after-brace: new ...
9999 after-brace: get-address ...
9999 after-brace: copy ...
9999 after-brace: get-address ...
9999 after-brace: copy ...
9999 after-brace: get-address ...
9999 after-brace: copy ...
9999 after-brace: get-address ...
9999 after-brace: copy ...
9999 after-brace: make-move ...
9999 after-brace: print-board ...
 101 run: 2:address:array:address:array:character/board <- initial-position 
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1746
 102 run: initial-position:address:array:character <- new-array 82/R, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 114/r, 78/N, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 110/n, 66/B, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 98/b, 81/Q, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 113/q, 75/K, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 107/k, 66/B, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 98/b, 78/N, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 110/n, 82/R, 80/P, 32/blank, 32/blank, 32/blank, 32/blank, 112/p, 114/r
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: capacity:number <- copy 0
9999 mem: storing 0 in location 1002
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 82 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 0
9999 mem: storing 1 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 1
9999 mem: storing 2 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 2
9999 mem: storing 3 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 3
9999 mem: storing 4 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 4
9999 mem: storing 5 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 5
9999 mem: storing 6 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 6
9999 mem: storing 7 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 114 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 7
9999 mem: storing 8 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 78 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 8
9999 mem: storing 9 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 9
9999 mem: storing 10 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 10
9999 mem: storing 11 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 11
9999 mem: storing 12 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 12
9999 mem: storing 13 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 13
9999 mem: storing 14 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 14
9999 mem: storing 15 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 110 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 15
9999 mem: storing 16 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 66 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 16
9999 mem: storing 17 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 17
9999 mem: storing 18 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 18
9999 mem: storing 19 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 19
9999 mem: storing 20 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 20
9999 mem: storing 21 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 21
9999 mem: storing 22 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 22
9999 mem: storing 23 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 98 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 23
9999 mem: storing 24 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 81 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 24
9999 mem: storing 25 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 25
9999 mem: storing 26 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 26
9999 mem: storing 27 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 27
9999 mem: storing 28 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 28
9999 mem: storing 29 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 29
9999 mem: storing 30 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 30
9999 mem: storing 31 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 113 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 31
9999 mem: storing 32 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 75 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 32
9999 mem: storing 33 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 33
9999 mem: storing 34 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 34
9999 mem: storing 35 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 35
9999 mem: storing 36 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 36
9999 mem: storing 37 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 37
9999 mem: storing 38 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 38
9999 mem: storing 39 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 107 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 39
9999 mem: storing 40 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 66 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 40
9999 mem: storing 41 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 41
9999 mem: storing 42 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 42
9999 mem: storing 43 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 43
9999 mem: storing 44 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 44
9999 mem: storing 45 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 45
9999 mem: storing 46 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 46
9999 mem: storing 47 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 98 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 47
9999 mem: storing 48 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 78 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 48
9999 mem: storing 49 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 49
9999 mem: storing 50 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 50
9999 mem: storing 51 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 51
9999 mem: storing 52 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 52
9999 mem: storing 53 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 53
9999 mem: storing 54 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 54
9999 mem: storing 55 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 110 in location 1003
9999 mem: storing 1 in location 1004
9999 schedule: new-array/initial-position/run1001/scenario-making-a-move
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 55
9999 mem: storing 56 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 82 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 56
9999 mem: storing 57 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 57
9999 mem: storing 58 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 58
9999 mem: storing 59 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 59
9999 mem: storing 60 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 60
9999 mem: storing 61 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 61
9999 mem: storing 62 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 62
9999 mem: storing 63 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 114 in location 1003
9999 mem: storing 1 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 1
9999 run: jump-unless fell through
 103 run: capacity <- add capacity, 1
9999 mem: location 1002 is 63
9999 mem: storing 64 in location 1002
 103 run: loop 
9999 run: jumping to instruction 3
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1003
9999 mem: storing 0 in location 1004
 103 run: break-unless exists?, 
9999 mem: location 1004 is 0
9999 run: jumping to instruction 7
 103 run: result:address:array:character <- new character:type, capacity
9999 mem: location 1002 is 64
9999 mem: array size is 64
9999 mem: new alloc: 1750
9999 mem: storing 1750 in location 1005
 103 run: rewind-ingredients 
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1006
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 0
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 82 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 0
9999 mem: storing 1751 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 82
9999 mem: location 1008 is 1751
9999 mem: storing 82 in location 1751
 103 run: i <- add i, 1
9999 mem: location 1006 is 0
9999 mem: storing 1 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 1
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 1
9999 mem: storing 1752 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1752
9999 mem: storing 80 in location 1752
 103 run: i <- add i, 1
9999 mem: location 1006 is 1
9999 mem: storing 2 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 2
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 2
9999 mem: storing 1753 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1753
9999 mem: storing 32 in location 1753
 103 run: i <- add i, 1
9999 mem: location 1006 is 2
9999 mem: storing 3 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 3
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 3
9999 mem: storing 1754 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1754
9999 mem: storing 32 in location 1754
 103 run: i <- add i, 1
9999 mem: location 1006 is 3
9999 mem: storing 4 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 4
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 4
9999 mem: storing 1755 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1755
9999 mem: storing 32 in location 1755
 103 run: i <- add i, 1
9999 mem: location 1006 is 4
9999 mem: storing 5 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 5
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 5
9999 mem: storing 1756 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1756
9999 mem: storing 32 in location 1756
 103 run: i <- add i, 1
9999 mem: location 1006 is 5
9999 mem: storing 6 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 6
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 6
9999 mem: storing 1757 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1757
9999 mem: storing 112 in location 1757
 103 run: i <- add i, 1
9999 mem: location 1006 is 6
9999 mem: storing 7 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 7
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 114 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 7
9999 mem: storing 1758 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 114
9999 mem: location 1008 is 1758
9999 mem: storing 114 in location 1758
 103 run: i <- add i, 1
9999 mem: location 1006 is 7
9999 mem: storing 8 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 8
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 78 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 8
9999 mem: storing 1759 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 78
9999 mem: location 1008 is 1759
9999 mem: storing 78 in location 1759
 103 run: i <- add i, 1
9999 mem: location 1006 is 8
9999 mem: storing 9 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 9
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 9
9999 mem: storing 1760 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1760
9999 mem: storing 80 in location 1760
 103 run: i <- add i, 1
9999 mem: location 1006 is 9
9999 mem: storing 10 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 10
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 10
9999 mem: storing 1761 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1761
9999 mem: storing 32 in location 1761
 103 run: i <- add i, 1
9999 mem: location 1006 is 10
9999 mem: storing 11 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 11
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 11
9999 mem: storing 1762 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1762
9999 mem: storing 32 in location 1762
 103 run: i <- add i, 1
9999 mem: location 1006 is 11
9999 mem: storing 12 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 12
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 12
9999 mem: storing 1763 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1763
9999 mem: storing 32 in location 1763
 103 run: i <- add i, 1
9999 mem: location 1006 is 12
9999 mem: storing 13 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 13
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 13
9999 mem: storing 1764 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1764
9999 mem: storing 32 in location 1764
 103 run: i <- add i, 1
9999 mem: location 1006 is 13
9999 mem: storing 14 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 14
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 14
9999 mem: storing 1765 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1765
9999 mem: storing 112 in location 1765
 103 run: i <- add i, 1
9999 mem: location 1006 is 14
9999 mem: storing 15 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 15
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 110 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 15
9999 mem: storing 1766 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 110
9999 mem: location 1008 is 1766
9999 mem: storing 110 in location 1766
 103 run: i <- add i, 1
9999 mem: location 1006 is 15
9999 mem: storing 16 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 16
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 66 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 16
9999 mem: storing 1767 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 66
9999 mem: location 1008 is 1767
9999 mem: storing 66 in location 1767
 103 run: i <- add i, 1
9999 mem: location 1006 is 16
9999 mem: storing 17 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 17
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 17
9999 mem: storing 1768 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1768
9999 mem: storing 80 in location 1768
 103 run: i <- add i, 1
9999 mem: location 1006 is 17
9999 mem: storing 18 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 18
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 18
9999 mem: storing 1769 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1769
9999 mem: storing 32 in location 1769
 103 run: i <- add i, 1
9999 mem: location 1006 is 18
9999 mem: storing 19 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 19
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 19
9999 mem: storing 1770 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1770
9999 mem: storing 32 in location 1770
 103 run: i <- add i, 1
9999 mem: location 1006 is 19
9999 mem: storing 20 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 20
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 20
9999 mem: storing 1771 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1771
9999 mem: storing 32 in location 1771
 103 run: i <- add i, 1
9999 mem: location 1006 is 20
9999 mem: storing 21 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 21
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 21
9999 mem: storing 1772 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1772
9999 mem: storing 32 in location 1772
 103 run: i <- add i, 1
9999 mem: location 1006 is 21
9999 mem: storing 22 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 22
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 22
9999 mem: storing 1773 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1773
9999 mem: storing 112 in location 1773
 103 run: i <- add i, 1
9999 mem: location 1006 is 22
9999 mem: storing 23 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 23
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 98 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 23
9999 mem: storing 1774 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 98
9999 mem: location 1008 is 1774
9999 mem: storing 98 in location 1774
 103 run: i <- add i, 1
9999 mem: location 1006 is 23
9999 mem: storing 24 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 24
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 81 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 24
9999 mem: storing 1775 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 81
9999 mem: location 1008 is 1775
9999 mem: storing 81 in location 1775
 103 run: i <- add i, 1
9999 mem: location 1006 is 24
9999 mem: storing 25 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 25
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 25
9999 mem: storing 1776 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1776
9999 mem: storing 80 in location 1776
 103 run: i <- add i, 1
9999 mem: location 1006 is 25
9999 mem: storing 26 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 26
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 26
9999 mem: storing 1777 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1777
9999 mem: storing 32 in location 1777
 103 run: i <- add i, 1
9999 mem: location 1006 is 26
9999 mem: storing 27 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 27
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 27
9999 mem: storing 1778 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1778
9999 mem: storing 32 in location 1778
 103 run: i <- add i, 1
9999 mem: location 1006 is 27
9999 mem: storing 28 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 28
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 28
9999 mem: storing 1779 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1779
9999 mem: storing 32 in location 1779
 103 run: i <- add i, 1
9999 mem: location 1006 is 28
9999 mem: storing 29 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 29
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 29
9999 mem: storing 1780 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1780
9999 mem: storing 32 in location 1780
 103 run: i <- add i, 1
9999 mem: location 1006 is 29
9999 mem: storing 30 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 30
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 30
9999 mem: storing 1781 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1781
9999 mem: storing 112 in location 1781
 103 run: i <- add i, 1
9999 mem: location 1006 is 30
9999 mem: storing 31 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 31
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 113 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 31
9999 mem: storing 1782 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 113
9999 mem: location 1008 is 1782
9999 mem: storing 113 in location 1782
 103 run: i <- add i, 1
9999 mem: location 1006 is 31
9999 mem: storing 32 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 32
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 75 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 32
9999 mem: storing 1783 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 75
9999 mem: location 1008 is 1783
9999 mem: storing 75 in location 1783
 103 run: i <- add i, 1
9999 mem: location 1006 is 32
9999 mem: storing 33 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 33
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 33
9999 mem: storing 1784 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1784
9999 mem: storing 80 in location 1784
 103 run: i <- add i, 1
9999 mem: location 1006 is 33
9999 mem: storing 34 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 34
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 34
9999 mem: storing 1785 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1785
9999 mem: storing 32 in location 1785
 103 run: i <- add i, 1
9999 mem: location 1006 is 34
9999 mem: storing 35 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 35
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 35
9999 mem: storing 1786 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1786
9999 mem: storing 32 in location 1786
 103 run: i <- add i, 1
9999 mem: location 1006 is 35
9999 mem: storing 36 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 36
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 36
9999 mem: storing 1787 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1787
9999 mem: storing 32 in location 1787
 103 run: i <- add i, 1
9999 mem: location 1006 is 36
9999 mem: storing 37 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 37
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 37
9999 mem: storing 1788 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1788
9999 mem: storing 32 in location 1788
 103 run: i <- add i, 1
9999 mem: location 1006 is 37
9999 mem: storing 38 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 38
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 38
9999 mem: storing 1789 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1789
9999 mem: storing 112 in location 1789
 103 run: i <- add i, 1
9999 mem: location 1006 is 38
9999 mem: storing 39 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 39
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 107 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 39
9999 mem: storing 1790 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 107
9999 mem: location 1008 is 1790
9999 mem: storing 107 in location 1790
 103 run: i <- add i, 1
9999 mem: location 1006 is 39
9999 mem: storing 40 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 40
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 66 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 40
9999 mem: storing 1791 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 66
9999 mem: location 1008 is 1791
9999 mem: storing 66 in location 1791
 103 run: i <- add i, 1
9999 mem: location 1006 is 40
9999 mem: storing 41 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 41
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 41
9999 mem: storing 1792 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1792
9999 mem: storing 80 in location 1792
 103 run: i <- add i, 1
9999 mem: location 1006 is 41
9999 mem: storing 42 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 42
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 42
9999 mem: storing 1793 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1793
9999 mem: storing 32 in location 1793
 103 run: i <- add i, 1
9999 mem: location 1006 is 42
9999 mem: storing 43 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 43
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 43
9999 mem: storing 1794 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1794
9999 mem: storing 32 in location 1794
 103 run: i <- add i, 1
9999 mem: location 1006 is 43
9999 mem: storing 44 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 44
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 44
9999 mem: storing 1795 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1795
9999 mem: storing 32 in location 1795
 103 run: i <- add i, 1
9999 mem: location 1006 is 44
9999 mem: storing 45 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 45
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 45
9999 mem: storing 1796 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1796
9999 mem: storing 32 in location 1796
 103 run: i <- add i, 1
9999 mem: location 1006 is 45
9999 mem: storing 46 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 46
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 46
9999 mem: storing 1797 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1797
9999 mem: storing 112 in location 1797
 103 run: i <- add i, 1
9999 mem: location 1006 is 46
9999 mem: storing 47 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 47
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 98 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 47
9999 mem: storing 1798 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 98
9999 mem: location 1008 is 1798
9999 mem: storing 98 in location 1798
 103 run: i <- add i, 1
9999 mem: location 1006 is 47
9999 mem: storing 48 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 48
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 78 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 48
9999 mem: storing 1799 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 78
9999 mem: location 1008 is 1799
9999 mem: storing 78 in location 1799
 103 run: i <- add i, 1
9999 mem: location 1006 is 48
9999 mem: storing 49 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 49
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 49
9999 mem: storing 1800 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1800
9999 mem: storing 80 in location 1800
 103 run: i <- add i, 1
9999 mem: location 1006 is 49
9999 mem: storing 50 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 50
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 50
9999 mem: storing 1801 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1801
9999 mem: storing 32 in location 1801
 103 run: i <- add i, 1
9999 mem: location 1006 is 50
9999 mem: storing 51 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 51
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 51
9999 mem: storing 1802 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1802
9999 mem: storing 32 in location 1802
 103 run: i <- add i, 1
9999 mem: location 1006 is 51
9999 mem: storing 52 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 52
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 52
9999 mem: storing 1803 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1803
9999 mem: storing 32 in location 1803
 103 run: i <- add i, 1
9999 mem: location 1006 is 52
9999 mem: storing 53 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 53
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 53
9999 mem: storing 1804 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1804
9999 mem: storing 32 in location 1804
 103 run: i <- add i, 1
9999 mem: location 1006 is 53
9999 mem: storing 54 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 54
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 54
9999 mem: storing 1805 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1805
9999 mem: storing 112 in location 1805
 103 run: i <- add i, 1
9999 mem: location 1006 is 54
9999 mem: storing 55 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 55
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 110 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 55
9999 mem: storing 1806 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 110
9999 mem: location 1008 is 1806
9999 mem: storing 110 in location 1806
 103 run: i <- add i, 1
9999 mem: location 1006 is 55
9999 mem: storing 56 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 56
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 82 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 56
9999 mem: storing 1807 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 82
9999 mem: location 1008 is 1807
9999 mem: storing 82 in location 1807
 103 run: i <- add i, 1
9999 mem: location 1006 is 56
9999 mem: storing 57 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 57
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
9999 schedule: new-array/initial-position/run1001/scenario-making-a-move
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 80 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 57
9999 mem: storing 1808 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 80
9999 mem: location 1008 is 1808
9999 mem: storing 80 in location 1808
 103 run: i <- add i, 1
9999 mem: location 1006 is 57
9999 mem: storing 58 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 58
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 58
9999 mem: storing 1809 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1809
9999 mem: storing 32 in location 1809
 103 run: i <- add i, 1
9999 mem: location 1006 is 58
9999 mem: storing 59 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 59
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 59
9999 mem: storing 1810 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1810
9999 mem: storing 32 in location 1810
 103 run: i <- add i, 1
9999 mem: location 1006 is 59
9999 mem: storing 60 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 60
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 60
9999 mem: storing 1811 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1811
9999 mem: storing 32 in location 1811
 103 run: i <- add i, 1
9999 mem: location 1006 is 60
9999 mem: storing 61 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 61
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 32 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 61
9999 mem: storing 1812 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 32
9999 mem: location 1008 is 1812
9999 mem: storing 32 in location 1812
 103 run: i <- add i, 1
9999 mem: location 1006 is 61
9999 mem: storing 62 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 62
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 112 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 62
9999 mem: storing 1813 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 112
9999 mem: location 1008 is 1813
9999 mem: storing 112 in location 1813
 103 run: i <- add i, 1
9999 mem: location 1006 is 62
9999 mem: storing 63 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 63
9999 mem: location 1002 is 64
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: curr-value:character, exists?:boolean <- next-ingredient 
9999 mem: storing 114 in location 1003
9999 mem: storing 1 in location 1004
 103 run: assert exists?, [error in rewinding ingredients to new-array]
9999 mem: location 1004 is 1
 103 run: tmp:address:character <- index-address *result, i
9999 mem: location 1005 is 1750
9999 mem: location 1006 is 63
9999 mem: storing 1814 in location 1008
 103 run: *tmp <- copy curr-value
9999 mem: location 1003 is 114
9999 mem: location 1008 is 1814
9999 mem: storing 114 in location 1814
 103 run: i <- add i, 1
9999 mem: location 1006 is 63
9999 mem: storing 64 in location 1006
 103 run: loop 
9999 run: jumping to instruction 12
 103 run: done?:boolean <- greater-or-equal i, capacity
9999 mem: location 1006 is 64
9999 mem: location 1002 is 64
9999 mem: storing 1 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 20
 103 run: reply result
9999 mem: location 1005 is 1750
9999 run: result 0 is 1750
9999 mem: storing 1750 in location 1748
 102 run: board:address:array:address:array:character <- new-board initial-position
9999 mem: location 1748 is 1750
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: initial-position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1002
 103 run: len:number <- length *initial-position
9999 mem: location 1002 is 1750
9999 mem: storing 64 in location 1003
 103 run: correct-length?:boolean <- equal len, 64
9999 mem: location 1003 is 64
9999 mem: storing 1 in location 1004
 103 run: assert correct-length?, [chessboard had incorrect size]
9999 mem: location 1004 is 1
 103 run: board:address:array:address:array:character <- new location:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1815
9999 mem: storing 1815 in location 1005
 103 run: col:number <- copy 0
9999 mem: storing 0 in location 1006
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 0
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 0
9999 mem: storing 1816 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1824
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 0 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 0
9999 mem: storing 0 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1832
9999 mem: storing 1832 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 0
9999 mem: storing 1833 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 0
9999 run: address to copy is 1751
9999 run: its type is character
9999 mem: location 1751 is 82
9999 mem: location 1831 is 1833
9999 mem: storing 82 in location 1833
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 0
9999 mem: storing 1 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 1
9999 mem: storing 1834 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 1
9999 run: address to copy is 1752
9999 run: its type is character
9999 mem: location 1752 is 80
9999 mem: location 1831 is 1834
9999 mem: storing 80 in location 1834
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 1
9999 mem: storing 2 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 2
9999 mem: storing 1835 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 2
9999 run: address to copy is 1753
9999 run: its type is character
9999 mem: location 1753 is 32
9999 mem: location 1831 is 1835
9999 mem: storing 32 in location 1835
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 2
9999 mem: storing 3 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 3
9999 mem: storing 1836 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 3
9999 run: address to copy is 1754
9999 run: its type is character
9999 mem: location 1754 is 32
9999 mem: location 1831 is 1836
9999 mem: storing 32 in location 1836
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 3
9999 mem: storing 4 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 4
9999 mem: storing 1837 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 4
9999 run: address to copy is 1755
9999 run: its type is character
9999 mem: location 1755 is 32
9999 mem: location 1831 is 1837
9999 mem: storing 32 in location 1837
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 4
9999 mem: storing 5 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 5
9999 mem: storing 1838 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 5
9999 run: address to copy is 1756
9999 run: its type is character
9999 mem: location 1756 is 32
9999 mem: location 1831 is 1838
9999 mem: storing 32 in location 1838
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 5
9999 mem: storing 6 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 6
9999 mem: storing 1839 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 6
9999 run: address to copy is 1757
9999 run: its type is character
9999 mem: location 1757 is 112
9999 mem: location 1831 is 1839
9999 mem: storing 112 in location 1839
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 6
9999 mem: storing 7 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1832
9999 mem: location 1829 is 7
9999 mem: storing 1840 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 7
9999 run: address to copy is 1758
9999 run: its type is character
9999 mem: location 1758 is 114
9999 mem: location 1831 is 1840
9999 mem: storing 114 in location 1840
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 7
9999 mem: storing 8 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1832
9999 run: result 0 is 1832
9999 mem: location 1008 is 1816
9999 mem: storing 1832 in location 1816
 103 run: col <- add col, 1
9999 mem: location 1006 is 0
9999 mem: storing 1 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 1
9999 mem: storing 1817 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 1 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 1
9999 mem: storing 8 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1841
9999 mem: storing 1841 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 0
9999 mem: storing 1842 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 8
9999 run: address to copy is 1759
9999 run: its type is character
9999 mem: location 1759 is 78
9999 mem: location 1831 is 1842
9999 mem: storing 78 in location 1842
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 8
9999 mem: storing 9 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 1
9999 mem: storing 1843 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 9
9999 run: address to copy is 1760
9999 run: its type is character
9999 mem: location 1760 is 80
9999 mem: location 1831 is 1843
9999 mem: storing 80 in location 1843
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 9
9999 mem: storing 10 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 2
9999 mem: storing 1844 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 10
9999 run: address to copy is 1761
9999 run: its type is character
9999 mem: location 1761 is 32
9999 mem: location 1831 is 1844
9999 mem: storing 32 in location 1844
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 10
9999 mem: storing 11 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 3
9999 mem: storing 1845 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 11
9999 run: address to copy is 1762
9999 run: its type is character
9999 mem: location 1762 is 32
9999 mem: location 1831 is 1845
9999 mem: storing 32 in location 1845
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 11
9999 mem: storing 12 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 4
9999 mem: storing 1846 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 12
9999 run: address to copy is 1763
9999 run: its type is character
9999 mem: location 1763 is 32
9999 mem: location 1831 is 1846
9999 mem: storing 32 in location 1846
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 12
9999 mem: storing 13 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 5
9999 mem: storing 1847 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 13
9999 run: address to copy is 1764
9999 run: its type is character
9999 mem: location 1764 is 32
9999 mem: location 1831 is 1847
9999 mem: storing 32 in location 1847
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 13
9999 mem: storing 14 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 6
9999 mem: storing 1848 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 14
9999 run: address to copy is 1765
9999 run: its type is character
9999 mem: location 1765 is 112
9999 mem: location 1831 is 1848
9999 mem: storing 112 in location 1848
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 14
9999 mem: storing 15 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1841
9999 mem: location 1829 is 7
9999 mem: storing 1849 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 15
9999 run: address to copy is 1766
9999 run: its type is character
9999 mem: location 1766 is 110
9999 mem: location 1831 is 1849
9999 mem: storing 110 in location 1849
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 15
9999 mem: storing 16 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1841
9999 run: result 0 is 1841
9999 mem: location 1008 is 1817
9999 mem: storing 1841 in location 1817
 103 run: col <- add col, 1
9999 mem: location 1006 is 1
9999 mem: storing 2 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 2
9999 mem: storing 1818 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 2
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 2 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 2
9999 mem: storing 16 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1850
9999 mem: storing 1850 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 0
9999 mem: storing 1851 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 16
9999 run: address to copy is 1767
9999 run: its type is character
9999 mem: location 1767 is 66
9999 mem: location 1831 is 1851
9999 mem: storing 66 in location 1851
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 16
9999 mem: storing 17 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 1
9999 mem: storing 1852 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 17
9999 run: address to copy is 1768
9999 run: its type is character
9999 mem: location 1768 is 80
9999 mem: location 1831 is 1852
9999 mem: storing 80 in location 1852
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 17
9999 mem: storing 18 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 2
9999 mem: storing 1853 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 18
9999 run: address to copy is 1769
9999 run: its type is character
9999 mem: location 1769 is 32
9999 mem: location 1831 is 1853
9999 mem: storing 32 in location 1853
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 18
9999 mem: storing 19 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 3
9999 mem: storing 1854 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 19
9999 run: address to copy is 1770
9999 run: its type is character
9999 mem: location 1770 is 32
9999 mem: location 1831 is 1854
9999 mem: storing 32 in location 1854
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 19
9999 mem: storing 20 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 4
9999 mem: storing 1855 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 20
9999 run: address to copy is 1771
9999 run: its type is character
9999 mem: location 1771 is 32
9999 mem: location 1831 is 1855
9999 mem: storing 32 in location 1855
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 20
9999 mem: storing 21 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 5
9999 mem: storing 1856 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 21
9999 run: address to copy is 1772
9999 run: its type is character
9999 mem: location 1772 is 32
9999 mem: location 1831 is 1856
9999 mem: storing 32 in location 1856
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 21
9999 mem: storing 22 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 6
9999 mem: storing 1857 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 22
9999 run: address to copy is 1773
9999 run: its type is character
9999 mem: location 1773 is 112
9999 mem: location 1831 is 1857
9999 mem: storing 112 in location 1857
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 22
9999 mem: storing 23 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1850
9999 mem: location 1829 is 7
9999 mem: storing 1858 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 23
9999 run: address to copy is 1774
9999 run: its type is character
9999 mem: location 1774 is 98
9999 mem: location 1831 is 1858
9999 mem: storing 98 in location 1858
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 23
9999 mem: storing 24 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1850
9999 run: result 0 is 1850
9999 mem: location 1008 is 1818
9999 mem: storing 1850 in location 1818
 103 run: col <- add col, 1
9999 mem: location 1006 is 2
9999 mem: storing 3 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 3
9999 mem: storing 1819 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 3 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 3
9999 mem: storing 24 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1859
9999 mem: storing 1859 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 0
9999 mem: storing 1860 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 24
9999 run: address to copy is 1775
9999 run: its type is character
9999 mem: location 1775 is 81
9999 mem: location 1831 is 1860
9999 mem: storing 81 in location 1860
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 24
9999 mem: storing 25 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 1
9999 mem: storing 1861 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 25
9999 run: address to copy is 1776
9999 run: its type is character
9999 mem: location 1776 is 80
9999 mem: location 1831 is 1861
9999 mem: storing 80 in location 1861
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 25
9999 mem: storing 26 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 2
9999 mem: storing 1862 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 26
9999 run: address to copy is 1777
9999 run: its type is character
9999 mem: location 1777 is 32
9999 mem: location 1831 is 1862
9999 mem: storing 32 in location 1862
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 26
9999 mem: storing 27 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 3
9999 mem: storing 1863 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 27
9999 run: address to copy is 1778
9999 run: its type is character
9999 mem: location 1778 is 32
9999 mem: location 1831 is 1863
9999 mem: storing 32 in location 1863
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 27
9999 mem: storing 28 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 4
9999 mem: storing 1864 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 28
9999 run: address to copy is 1779
9999 run: its type is character
9999 mem: location 1779 is 32
9999 mem: location 1831 is 1864
9999 mem: storing 32 in location 1864
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 28
9999 mem: storing 29 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 5
9999 mem: storing 1865 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 29
9999 run: address to copy is 1780
9999 run: its type is character
9999 mem: location 1780 is 32
9999 mem: location 1831 is 1865
9999 mem: storing 32 in location 1865
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 29
9999 mem: storing 30 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 6
9999 mem: storing 1866 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 30
9999 run: address to copy is 1781
9999 run: its type is character
9999 mem: location 1781 is 112
9999 mem: location 1831 is 1866
9999 mem: storing 112 in location 1866
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 30
9999 mem: storing 31 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1859
9999 mem: location 1829 is 7
9999 mem: storing 1867 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 31
9999 run: address to copy is 1782
9999 run: its type is character
9999 mem: location 1782 is 113
9999 mem: location 1831 is 1867
9999 mem: storing 113 in location 1867
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 31
9999 mem: storing 32 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1859
9999 run: result 0 is 1859
9999 mem: location 1008 is 1819
9999 mem: storing 1859 in location 1819
 103 run: col <- add col, 1
9999 mem: location 1006 is 3
9999 mem: storing 4 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 4
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 4
9999 mem: storing 1820 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 4 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 4
9999 mem: storing 32 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1868
9999 mem: storing 1868 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 0
9999 mem: storing 1869 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 32
9999 run: address to copy is 1783
9999 run: its type is character
9999 mem: location 1783 is 75
9999 mem: location 1831 is 1869
9999 mem: storing 75 in location 1869
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 32
9999 mem: storing 33 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 1
9999 mem: storing 1870 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 33
9999 run: address to copy is 1784
9999 run: its type is character
9999 mem: location 1784 is 80
9999 mem: location 1831 is 1870
9999 mem: storing 80 in location 1870
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 33
9999 mem: storing 34 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 2
9999 mem: storing 1871 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 34
9999 run: address to copy is 1785
9999 run: its type is character
9999 mem: location 1785 is 32
9999 mem: location 1831 is 1871
9999 mem: storing 32 in location 1871
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 34
9999 mem: storing 35 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 3
9999 mem: storing 1872 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 35
9999 run: address to copy is 1786
9999 run: its type is character
9999 mem: location 1786 is 32
9999 mem: location 1831 is 1872
9999 mem: storing 32 in location 1872
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 35
9999 mem: storing 36 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 4
9999 mem: storing 1873 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 36
9999 run: address to copy is 1787
9999 run: its type is character
9999 mem: location 1787 is 32
9999 mem: location 1831 is 1873
9999 mem: storing 32 in location 1873
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 36
9999 mem: storing 37 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 5
9999 mem: storing 1874 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 37
9999 run: address to copy is 1788
9999 run: its type is character
9999 mem: location 1788 is 32
9999 mem: location 1831 is 1874
9999 mem: storing 32 in location 1874
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 37
9999 mem: storing 38 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 6
9999 mem: storing 1875 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 38
9999 run: address to copy is 1789
9999 run: its type is character
9999 mem: location 1789 is 112
9999 mem: location 1831 is 1875
9999 mem: storing 112 in location 1875
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 38
9999 mem: storing 39 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1868
9999 mem: location 1829 is 7
9999 mem: storing 1876 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 39
9999 run: address to copy is 1790
9999 run: its type is character
9999 mem: location 1790 is 107
9999 mem: location 1831 is 1876
9999 mem: storing 107 in location 1876
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 39
9999 mem: storing 40 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1868
9999 run: result 0 is 1868
9999 mem: location 1008 is 1820
9999 mem: storing 1868 in location 1820
 103 run: col <- add col, 1
9999 mem: location 1006 is 4
9999 mem: storing 5 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 5
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 5
9999 mem: storing 1821 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 5 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 5
9999 mem: storing 40 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1877
9999 mem: storing 1877 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 0
9999 mem: storing 1878 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 40
9999 run: address to copy is 1791
9999 run: its type is character
9999 mem: location 1791 is 66
9999 mem: location 1831 is 1878
9999 mem: storing 66 in location 1878
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 40
9999 mem: storing 41 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 1
9999 mem: storing 1879 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 41
9999 run: address to copy is 1792
9999 run: its type is character
9999 mem: location 1792 is 80
9999 mem: location 1831 is 1879
9999 mem: storing 80 in location 1879
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 41
9999 mem: storing 42 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 2
9999 mem: storing 1880 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 42
9999 run: address to copy is 1793
9999 run: its type is character
9999 mem: location 1793 is 32
9999 mem: location 1831 is 1880
9999 mem: storing 32 in location 1880
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 42
9999 mem: storing 43 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 3
9999 mem: storing 1881 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 43
9999 run: address to copy is 1794
9999 run: its type is character
9999 mem: location 1794 is 32
9999 mem: location 1831 is 1881
9999 mem: storing 32 in location 1881
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 43
9999 mem: storing 44 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 4
9999 mem: storing 1882 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 44
9999 run: address to copy is 1795
9999 run: its type is character
9999 mem: location 1795 is 32
9999 mem: location 1831 is 1882
9999 mem: storing 32 in location 1882
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 44
9999 mem: storing 45 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 5
9999 mem: storing 1883 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 45
9999 run: address to copy is 1796
9999 run: its type is character
9999 mem: location 1796 is 32
9999 mem: location 1831 is 1883
9999 mem: storing 32 in location 1883
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 45
9999 mem: storing 46 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 6
9999 mem: storing 1884 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 46
9999 run: address to copy is 1797
9999 run: its type is character
9999 mem: location 1797 is 112
9999 mem: location 1831 is 1884
9999 mem: storing 112 in location 1884
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 46
9999 mem: storing 47 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1877
9999 mem: location 1829 is 7
9999 mem: storing 1885 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 47
9999 run: address to copy is 1798
9999 run: its type is character
9999 mem: location 1798 is 98
9999 mem: location 1831 is 1885
9999 mem: storing 98 in location 1885
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 47
9999 mem: storing 48 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
9999 schedule: new-file/new-board/initial-position/run1001/scenario-making-a-move
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1877
9999 run: result 0 is 1877
9999 mem: location 1008 is 1821
9999 mem: storing 1877 in location 1821
 103 run: col <- add col, 1
9999 mem: location 1006 is 5
9999 mem: storing 6 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 6
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 6
9999 mem: storing 1822 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 6
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 6 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 6
9999 mem: storing 48 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1886
9999 mem: storing 1886 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 0
9999 mem: storing 1887 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 48
9999 run: address to copy is 1799
9999 run: its type is character
9999 mem: location 1799 is 78
9999 mem: location 1831 is 1887
9999 mem: storing 78 in location 1887
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 48
9999 mem: storing 49 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 1
9999 mem: storing 1888 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 49
9999 run: address to copy is 1800
9999 run: its type is character
9999 mem: location 1800 is 80
9999 mem: location 1831 is 1888
9999 mem: storing 80 in location 1888
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 49
9999 mem: storing 50 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 2
9999 mem: storing 1889 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 50
9999 run: address to copy is 1801
9999 run: its type is character
9999 mem: location 1801 is 32
9999 mem: location 1831 is 1889
9999 mem: storing 32 in location 1889
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 50
9999 mem: storing 51 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 3
9999 mem: storing 1890 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 51
9999 run: address to copy is 1802
9999 run: its type is character
9999 mem: location 1802 is 32
9999 mem: location 1831 is 1890
9999 mem: storing 32 in location 1890
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 51
9999 mem: storing 52 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 4
9999 mem: storing 1891 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 52
9999 run: address to copy is 1803
9999 run: its type is character
9999 mem: location 1803 is 32
9999 mem: location 1831 is 1891
9999 mem: storing 32 in location 1891
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 52
9999 mem: storing 53 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 5
9999 mem: storing 1892 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 53
9999 run: address to copy is 1804
9999 run: its type is character
9999 mem: location 1804 is 32
9999 mem: location 1831 is 1892
9999 mem: storing 32 in location 1892
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 53
9999 mem: storing 54 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 6
9999 mem: storing 1893 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 54
9999 run: address to copy is 1805
9999 run: its type is character
9999 mem: location 1805 is 112
9999 mem: location 1831 is 1893
9999 mem: storing 112 in location 1893
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 54
9999 mem: storing 55 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1886
9999 mem: location 1829 is 7
9999 mem: storing 1894 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 55
9999 run: address to copy is 1806
9999 run: its type is character
9999 mem: location 1806 is 110
9999 mem: location 1831 is 1894
9999 mem: storing 110 in location 1894
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 55
9999 mem: storing 56 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1886
9999 run: result 0 is 1886
9999 mem: location 1008 is 1822
9999 mem: storing 1886 in location 1822
 103 run: col <- add col, 1
9999 mem: location 1006 is 6
9999 mem: storing 7 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 7
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: file:address:address:array:character <- index-address *board, col
9999 mem: location 1005 is 1815
9999 mem: location 1006 is 7
9999 mem: storing 1823 in location 1008
 103 run: *file <- new-file initial-position, col
9999 mem: location 1002 is 1750
9999 mem: location 1006 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: position:address:array:character <- next-ingredient 
9999 mem: storing 1750 in location 1826
 104 run: index:number <- next-ingredient 
9999 mem: storing 7 in location 1827
 104 run: index <- multiply index, 8
9999 mem: location 1827 is 7
9999 mem: storing 56 in location 1827
 104 run: result:address:array:character <- new character:type, 8
9999 mem: array size is 8
9999 mem: new alloc: 1895
9999 mem: storing 1895 in location 1828
 104 run: row:number <- copy 0
9999 mem: storing 0 in location 1829
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 0
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 0
9999 mem: storing 1896 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 56
9999 run: address to copy is 1807
9999 run: its type is character
9999 mem: location 1807 is 82
9999 mem: location 1831 is 1896
9999 mem: storing 82 in location 1896
 104 run: row <- add row, 1
9999 mem: location 1829 is 0
9999 mem: storing 1 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 56
9999 mem: storing 57 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 1
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 1
9999 mem: storing 1897 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 57
9999 run: address to copy is 1808
9999 run: its type is character
9999 mem: location 1808 is 80
9999 mem: location 1831 is 1897
9999 mem: storing 80 in location 1897
 104 run: row <- add row, 1
9999 mem: location 1829 is 1
9999 mem: storing 2 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 57
9999 mem: storing 58 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 2
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 2
9999 mem: storing 1898 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 58
9999 run: address to copy is 1809
9999 run: its type is character
9999 mem: location 1809 is 32
9999 mem: location 1831 is 1898
9999 mem: storing 32 in location 1898
 104 run: row <- add row, 1
9999 mem: location 1829 is 2
9999 mem: storing 3 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 58
9999 mem: storing 59 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 3
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 3
9999 mem: storing 1899 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 59
9999 run: address to copy is 1810
9999 run: its type is character
9999 mem: location 1810 is 32
9999 mem: location 1831 is 1899
9999 mem: storing 32 in location 1899
 104 run: row <- add row, 1
9999 mem: location 1829 is 3
9999 mem: storing 4 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 59
9999 mem: storing 60 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 4
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 4
9999 mem: storing 1900 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 60
9999 run: address to copy is 1811
9999 run: its type is character
9999 mem: location 1811 is 32
9999 mem: location 1831 is 1900
9999 mem: storing 32 in location 1900
 104 run: row <- add row, 1
9999 mem: location 1829 is 4
9999 mem: storing 5 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 60
9999 mem: storing 61 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 5
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 5
9999 mem: storing 1901 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 61
9999 run: address to copy is 1812
9999 run: its type is character
9999 mem: location 1812 is 32
9999 mem: location 1831 is 1901
9999 mem: storing 32 in location 1901
 104 run: row <- add row, 1
9999 mem: location 1829 is 5
9999 mem: storing 6 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 61
9999 mem: storing 62 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 6
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 6
9999 mem: storing 1902 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 62
9999 run: address to copy is 1813
9999 run: its type is character
9999 mem: location 1813 is 112
9999 mem: location 1831 is 1902
9999 mem: storing 112 in location 1902
 104 run: row <- add row, 1
9999 mem: location 1829 is 6
9999 mem: storing 7 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 62
9999 mem: storing 63 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 7
9999 mem: storing 0 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 0
9999 run: jump-if fell through
 104 run: dest:address:character <- index-address *result, row
9999 mem: location 1828 is 1895
9999 mem: location 1829 is 7
9999 mem: storing 1903 in location 1831
 104 run: *dest <- index *position, index
9999 mem: location 1826 is 1750
9999 mem: location 1827 is 63
9999 run: address to copy is 1814
9999 run: its type is character
9999 mem: location 1814 is 114
9999 mem: location 1831 is 1903
9999 mem: storing 114 in location 1903
 104 run: row <- add row, 1
9999 mem: location 1829 is 7
9999 mem: storing 8 in location 1829
 104 run: index <- add index, 1
9999 mem: location 1827 is 63
9999 mem: storing 64 in location 1827
 104 run: loop 
9999 run: jumping to instruction 7
 104 run: done?:boolean <- equal row, 8
9999 mem: location 1829 is 8
9999 mem: storing 1 in location 1830
 104 run: break-if done?, 
9999 mem: location 1830 is 1
9999 run: jumping to instruction 14
 104 run: reply result
9999 mem: location 1828 is 1895
9999 run: result 0 is 1895
9999 mem: location 1008 is 1823
9999 mem: storing 1895 in location 1823
 103 run: col <- add col, 1
9999 mem: location 1006 is 7
9999 mem: storing 8 in location 1006
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- equal col, 8
9999 mem: location 1006 is 8
9999 mem: storing 1 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 14
 103 run: reply board
9999 mem: location 1005 is 1815
9999 run: result 0 is 1815
9999 mem: storing 1815 in location 1749
 102 run: reply board
9999 mem: location 1749 is 1815
9999 run: result 0 is 1815
9999 mem: storing 1815 in location 2
 101 run: 3:address:move <- new move:type
9999 mem: storing 1746 in location 3
 101 run: 4:address:number <- get-address *3:address:move, from-file:offset
9999 mem: location 3 is 1746
9999 mem: location 1746 is 0
9999 mem: location 1747 is 0
9999 mem: location 1748 is 0
9999 mem: location 1749 is 0
9999 mem: location 3 is 1746
9999 run: address to copy is 1746
9999 mem: storing 1746 in location 4
 101 run: *4:address:number <- copy 6/g
9999 mem: location 4 is 1746
9999 mem: storing 6 in location 1746
 101 run: 5:address:number <- get-address *3:address:move, from-rank:offset
9999 mem: location 3 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 0
9999 mem: location 1748 is 0
9999 mem: location 1749 is 0
9999 mem: location 3 is 1746
9999 run: address to copy is 1747
9999 mem: storing 1747 in location 5
 101 run: *5:address:number <- copy 1/'2'
9999 mem: location 5 is 1747
9999 mem: storing 1 in location 1747
 101 run: 6:address:number <- get-address *3:address:move, to-file:offset
9999 mem: location 3 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 0
9999 mem: location 1749 is 0
9999 mem: location 3 is 1746
9999 run: address to copy is 1748
9999 mem: storing 1748 in location 6
 101 run: *6:address:number <- copy 6/g
9999 mem: location 6 is 1748
9999 mem: storing 6 in location 1748
 101 run: 7:address:number <- get-address *3:address:move, to-rank:offset
9999 mem: location 3 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 6
9999 mem: location 1749 is 0
9999 mem: location 3 is 1746
9999 run: address to copy is 1749
9999 mem: storing 1749 in location 7
 101 run: *7:address:number <- copy 3/'4'
9999 mem: location 7 is 1749
9999 mem: storing 3 in location 1749
 101 run: 2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move
9999 mem: location 2 is 1815
9999 mem: location 3 is 1746
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: b:address:array:address:array:character <- next-ingredient 
9999 mem: storing 1815 in location 1737
 102 run: m:address:move <- next-ingredient 
9999 mem: storing 1746 in location 1738
 102 run: from-file:number <- get *m, from-file:offset
9999 mem: location 1738 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 6
9999 mem: location 1749 is 3
9999 mem: location 1738 is 1746
9999 run: address to copy is 1746
9999 run: its type is number
9999 mem: location 1746 is 6
9999 mem: storing 6 in location 1739
 102 run: from-rank:number <- get *m, from-rank:offset
9999 mem: location 1738 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 6
9999 mem: location 1749 is 3
9999 mem: location 1738 is 1746
9999 run: address to copy is 1747
9999 run: its type is number
9999 mem: location 1747 is 1
9999 mem: storing 1 in location 1740
 102 run: to-file:number <- get *m, to-file:offset
9999 mem: location 1738 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 6
9999 mem: location 1749 is 3
9999 mem: location 1738 is 1746
9999 run: address to copy is 1748
9999 run: its type is number
9999 mem: location 1748 is 6
9999 mem: storing 6 in location 1741
 102 run: to-rank:number <- get *m, to-rank:offset
9999 mem: location 1738 is 1746
9999 mem: location 1746 is 6
9999 mem: location 1747 is 1
9999 mem: location 1748 is 6
9999 mem: location 1749 is 3
9999 mem: location 1738 is 1746
9999 run: address to copy is 1749
9999 run: its type is number
9999 mem: location 1749 is 3
9999 mem: storing 3 in location 1742
 102 run: f:address:array:character <- index *b, from-file
9999 mem: location 1737 is 1815
9999 mem: location 1739 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1743
 102 run: src:address:character/square <- index-address *f, from-rank
9999 mem: location 1743 is 1886
9999 mem: location 1740 is 1
9999 mem: storing 1888 in location 1744
 102 run: f <- index *b, to-file
9999 mem: location 1737 is 1815
9999 mem: location 1741 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1743
 102 run: dest:address:character/square <- index-address *f, to-rank
9999 mem: location 1743 is 1886
9999 mem: location 1742 is 3
9999 mem: storing 1890 in location 1745
 102 run: *dest <- copy *src
9999 mem: location 1744 is 1888
9999 mem: location 1888 is 80
9999 mem: location 1745 is 1890
9999 mem: storing 80 in location 1890
 102 run: *src <- copy 32/space
9999 mem: location 1744 is 1888
9999 mem: storing 32 in location 1888
 102 run: reply b/same-as-ingredient:0
9999 mem: location 1737 is 1815
9999 run: result 0 is 1815
9999 mem: storing 1815 in location 2
 101 run: screen:address <- print-board screen:address, 2:address:array:address:array:character/board
9999 mem: location 900 is 1009
9999 mem: location 2 is 1815
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1737
 102 run: board:address:array:address:array:character <- next-ingredient 
9999 mem: storing 1815 in location 1738
 102 run: row:number <- copy 7
9999 mem: storing 7 in location 1739
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 7
9999 mem: storing 8 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 8
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 8 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 8
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
9999 mem: new alloc: 1904
 104 run: n:number <- next-ingredient 
9999 mem: storing 8 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 8
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 8
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1921
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 1928
9999 mem: storing 1928 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 0
9999 mem: location 1923 is 1928
9999 run: address to copy is 1928
9999 mem: storing 1928 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 1928
9999 mem: storing 0 in location 1928
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 0
9999 mem: location 1923 is 1928
9999 run: address to copy is 1929
9999 mem: storing 1929 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 1930
9999 mem: location 1925 is 1929
9999 mem: storing 1930 in location 1929
 105 run: reply result
9999 mem: location 1923 is 1928
9999 run: result 0 is 1928
9999 mem: storing 1928 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 8
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 8
9999 mem: storing 0 in location 1906
9999 mem: storing 8 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 8
9999 mem: storing 56 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 1928
9999 mem: location 1914 is 56
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1961
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1928 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 56 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 1930
9999 mem: location 1963 is 1928
9999 run: address to copy is 1928
9999 mem: storing 1928 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 56
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 1928
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 1928 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 1930
9999 mem: location 1923 is 1928
9999 run: address to copy is 1928
9999 run: its type is number
9999 mem: location 1928 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 1930
9999 mem: location 1923 is 1928
9999 run: address to copy is 1929
9999 run: its type is address
9999 mem: location 1929 is 1930
9999 mem: storing 1930 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 1930
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1929 is 1930
9999 mem: location 1963 is 1928
9999 run: address to copy is 1929
9999 run: its type is address
9999 mem: location 1929 is 1930
9999 mem: storing 1930 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 1930
9999 mem: location 1965 is 1928
9999 mem: location 1928 is 0
9999 mem: storing 1931 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 56
9999 mem: location 1970 is 1931
9999 mem: storing 56 in location 1931
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 1928
9999 mem: location 1928 is 0
9999 mem: location 1965 is 1928
9999 mem: storing 1 in location 1928
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 1928
9999 run: result 0 is 1928
9999 mem: storing 1928 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 1928
9999 mem: location 1928 is 1
9999 mem: location 1929 is 1930
9999 mem: location 1910 is 1928
9999 run: address to copy is 1928
9999 run: its type is number
9999 mem: location 1928 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 1928
9999 mem: location 1928 is 1
9999 mem: location 1929 is 1930
9999 mem: location 1910 is 1928
9999 run: address to copy is 1929
9999 run: its type is address
9999 mem: location 1929 is 1930
9999 mem: storing 1930 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 1971
9999 mem: storing 1971 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 1930
9999 mem: location 1917 is 0
9999 run: address to copy is 1931
9999 run: its type is character
9999 mem: location 1931 is 56
9999 mem: storing 56 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 1971
9999 mem: location 1918 is 0
9999 mem: storing 1972 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 56
9999 mem: location 1920 is 1972
9999 mem: storing 56 in location 1972
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 1971
9999 run: result 0 is 1971
9999 mem: storing 1971 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 1971
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1973
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1971 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 1971
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 1971
9999 mem: location 1982 is 0
9999 run: address to copy is 1972
9999 run: its type is character
9999 mem: location 1972 is 56
9999 mem: storing 56 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 56
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1985
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 56 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 56
  90 print-character: 56 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 56
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 56
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 0
9999 mem: storing 1015 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 2006 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 56
9999 mem: location 2007 is 1015
9999 mem: storing 56 in location 1015
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1015
9999 mem: location 1015 is 56
9999 mem: location 1016 is 7
9999 mem: location 2006 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1016
9999 mem: storing 7 in location 1016
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2011 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2011
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2011 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2011
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2011
9999 mem: location 1982 is 0
9999 run: address to copy is 2012
9999 run: its type is character
9999 mem: location 2012 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 1
9999 mem: storing 1017 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 2006 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1017
9999 mem: storing 32 in location 1017
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1017
9999 mem: location 1017 is 32
9999 mem: location 1018 is 7
9999 mem: location 2006 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1018
9999 mem: storing 7 in location 1018
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2011
9999 mem: location 1982 is 1
9999 run: address to copy is 2013
9999 run: its type is character
9999 mem: location 2013 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 2
9999 mem: storing 1019 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 2006 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1019
9999 mem: storing 124 in location 1019
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1019
9999 mem: location 1019 is 124
9999 mem: location 1020 is 7
9999 mem: location 2006 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1020
9999 mem: storing 7 in location 1020
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2011
9999 mem: location 1982 is 2
9999 run: address to copy is 2014
9999 run: its type is character
9999 mem: location 2014 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 3
9999 mem: storing 1021 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 2006 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1021
9999 mem: storing 32 in location 1021
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1021
9999 mem: location 1021 is 32
9999 mem: location 1022 is 7
9999 mem: location 2006 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1022
9999 mem: storing 7 in location 1022
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 7
9999 run: address to copy is 1840
9999 run: its type is character
9999 mem: location 1840 is 114
9999 mem: storing 114 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 114
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 114 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 114
  90 print-character: 114 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 114
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 114
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 4
9999 mem: storing 1023 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 2006 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 114
9999 mem: location 2007 is 1023
9999 mem: storing 114 in location 1023
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1023
9999 mem: location 1023 is 114
9999 mem: location 1024 is 7
9999 mem: location 2006 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1024
9999 mem: storing 7 in location 1024
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 5
9999 mem: storing 1025 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 2006 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1025
9999 mem: storing 32 in location 1025
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1025
9999 mem: location 1025 is 32
9999 mem: location 1026 is 7
9999 mem: location 2006 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1026
9999 mem: storing 7 in location 1026
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 7
9999 run: address to copy is 1849
9999 run: its type is character
9999 mem: location 1849 is 110
9999 mem: storing 110 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 110
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 110 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 110
  90 print-character: 110 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 110
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 110
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 6
9999 mem: storing 1027 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 2006 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 110
9999 mem: location 2007 is 1027
9999 mem: storing 110 in location 1027
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1027
9999 mem: location 1027 is 110
9999 mem: location 1028 is 7
9999 mem: location 2006 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1028
9999 mem: storing 7 in location 1028
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 7
9999 mem: storing 1029 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 2006 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1029
9999 mem: storing 32 in location 1029
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 2006 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1030
9999 mem: storing 7 in location 1030
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 7
9999 run: address to copy is 1858
9999 run: its type is character
9999 mem: location 1858 is 98
9999 mem: storing 98 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 98
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 98
  90 print-character: 98 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 8
9999 mem: storing 1031 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 2006 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 98
9999 mem: location 2007 is 1031
9999 mem: storing 98 in location 1031
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 98
9999 mem: location 1032 is 7
9999 mem: location 2006 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1032
9999 mem: storing 7 in location 1032
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 9
9999 mem: storing 1033 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 2006 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1033
9999 mem: storing 32 in location 1033
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 2006 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1034
9999 mem: storing 7 in location 1034
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 7
9999 run: address to copy is 1867
9999 run: its type is character
9999 mem: location 1867 is 113
9999 mem: storing 113 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 113
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 113 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 113
  90 print-character: 113 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 113
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 113
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 10
9999 mem: storing 1035 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 2006 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 113
9999 mem: location 2007 is 1035
9999 mem: storing 113 in location 1035
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1035
9999 mem: location 1035 is 113
9999 mem: location 1036 is 7
9999 mem: location 2006 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1036
9999 mem: storing 7 in location 1036
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 11
9999 mem: storing 1037 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 2006 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1037
9999 mem: storing 32 in location 1037
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 2006 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1038
9999 mem: storing 7 in location 1038
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 7
9999 run: address to copy is 1876
9999 run: its type is character
9999 mem: location 1876 is 107
9999 mem: storing 107 in location 1745
9999 schedule: print-board/run1001/scenario-making-a-move
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 107
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 107
  90 print-character: 107 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 107
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 107
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 12
9999 mem: storing 1039 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 2006 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 107
9999 mem: location 2007 is 1039
9999 mem: storing 107 in location 1039
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1039
9999 mem: location 1039 is 107
9999 mem: location 1040 is 7
9999 mem: location 2006 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1040
9999 mem: storing 7 in location 1040
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 13
9999 mem: storing 1041 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 2006 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1041
9999 mem: storing 32 in location 1041
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2006 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1042
9999 mem: storing 7 in location 1042
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 7
9999 run: address to copy is 1885
9999 run: its type is character
9999 mem: location 1885 is 98
9999 mem: storing 98 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 98
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 98
  90 print-character: 98 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 14
9999 mem: storing 1043 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2006 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 98
9999 mem: location 2007 is 1043
9999 mem: storing 98 in location 1043
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1043
9999 mem: location 1043 is 98
9999 mem: location 1044 is 7
9999 mem: location 2006 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1044
9999 mem: storing 7 in location 1044
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 15
9999 mem: storing 1045 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2006 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1045
9999 mem: storing 32 in location 1045
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 2006 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1046
9999 mem: storing 7 in location 1046
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 7
9999 run: address to copy is 1894
9999 run: its type is character
9999 mem: location 1894 is 110
9999 mem: storing 110 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 110
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 110 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 110
  90 print-character: 110 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 110
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 110
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 16
9999 mem: storing 1047 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2006 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 110
9999 mem: location 2007 is 1047
9999 mem: storing 110 in location 1047
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1047
9999 mem: location 1047 is 110
9999 mem: location 1048 is 7
9999 mem: location 2006 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1048
9999 mem: storing 7 in location 1048
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 17
9999 mem: storing 1049 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2006 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1049
9999 mem: storing 32 in location 1049
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 2006 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1050
9999 mem: storing 7 in location 1050
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 7
9999 run: address to copy is 1903
9999 run: its type is character
9999 mem: location 1903 is 114
9999 mem: storing 114 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 114
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 114 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 114
  90 print-character: 114 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 114
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 114
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 18
9999 mem: storing 1051 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2006 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 114
9999 mem: location 2007 is 1051
9999 mem: storing 114 in location 1051
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1051
9999 mem: location 1051 is 114
9999 mem: location 1052 is 7
9999 mem: location 2006 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1052
9999 mem: storing 7 in location 1052
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1993 is 30
9999 mem: storing 0 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 19
9999 mem: storing 1053 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2006 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1053
9999 mem: storing 32 in location 1053
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 2006 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1054
9999 mem: storing 7 in location 1054
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 7
9999 mem: storing 6 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 2015
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1925 is 1011
9999 mem: storing 1 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 2018
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 2023
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 1
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 1 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 1
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 1
9999 mem: location 1926 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 6
9999 mem: storing 7 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 7
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 7 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
9999 schedule: print-integer/print-board/run1001/scenario-making-a-move
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 7 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 7
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 7
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2028
9999 mem: storing 2028 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 0
9999 mem: location 1923 is 2028
9999 run: address to copy is 2028
9999 mem: storing 2028 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2028
9999 mem: storing 0 in location 2028
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 0
9999 mem: location 1923 is 2028
9999 run: address to copy is 2029
9999 mem: storing 2029 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2030
9999 mem: location 1925 is 2029
9999 mem: storing 2030 in location 2029
 105 run: reply result
9999 mem: location 1923 is 2028
9999 run: result 0 is 2028
9999 mem: storing 2028 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 7
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 7
9999 mem: storing 0 in location 1906
9999 mem: storing 7 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 7
9999 mem: storing 55 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2028
9999 mem: location 1914 is 55
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2028 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 55 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 2030
9999 mem: location 1963 is 2028
9999 run: address to copy is 2028
9999 mem: storing 2028 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 55
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2028
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2028 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 2030
9999 mem: location 1923 is 2028
9999 run: address to copy is 2028
9999 run: its type is number
9999 mem: location 2028 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 2030
9999 mem: location 1923 is 2028
9999 run: address to copy is 2029
9999 run: its type is address
9999 mem: location 2029 is 2030
9999 mem: storing 2030 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2030
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2028
9999 mem: location 2028 is 0
9999 mem: location 2029 is 2030
9999 mem: location 1963 is 2028
9999 run: address to copy is 2029
9999 run: its type is address
9999 mem: location 2029 is 2030
9999 mem: storing 2030 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2030
9999 mem: location 1965 is 2028
9999 mem: location 2028 is 0
9999 mem: storing 2031 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 55
9999 mem: location 1970 is 2031
9999 mem: storing 55 in location 2031
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2028
9999 mem: location 2028 is 0
9999 mem: location 1965 is 2028
9999 mem: storing 1 in location 2028
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2028
9999 run: result 0 is 2028
9999 mem: storing 2028 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2028
9999 mem: location 2028 is 1
9999 mem: location 2029 is 2030
9999 mem: location 1910 is 2028
9999 run: address to copy is 2028
9999 run: its type is number
9999 mem: location 2028 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2028
9999 mem: location 2028 is 1
9999 mem: location 2029 is 2030
9999 mem: location 1910 is 2028
9999 run: address to copy is 2029
9999 run: its type is address
9999 mem: location 2029 is 2030
9999 mem: storing 2030 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2061
9999 mem: storing 2061 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2030
9999 mem: location 1917 is 0
9999 run: address to copy is 2031
9999 run: its type is character
9999 mem: location 2031 is 55
9999 mem: storing 55 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2061
9999 mem: location 1918 is 0
9999 mem: storing 2062 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 55
9999 mem: location 1920 is 2062
9999 mem: storing 55 in location 2062
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2061
9999 run: result 0 is 2061
9999 mem: storing 2061 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2061
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2061 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2061
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2061
9999 mem: location 1982 is 0
9999 run: address to copy is 2062
9999 run: its type is character
9999 mem: location 2062 is 55
9999 mem: storing 55 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 55
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 55 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 55
  90 print-character: 55 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 55
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 55
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 30
9999 mem: storing 1075 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 2006 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 55
9999 mem: location 2007 is 1075
9999 mem: storing 55 in location 1075
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1075
9999 mem: location 1075 is 55
9999 mem: location 1076 is 7
9999 mem: location 2006 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1076
9999 mem: storing 7 in location 1076
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2063 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2063
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2063 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2063
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2063
9999 mem: location 1982 is 0
9999 run: address to copy is 2064
9999 run: its type is character
9999 mem: location 2064 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 31
9999 mem: storing 1077 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 2006 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1077
9999 mem: storing 32 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 2006 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2063
9999 mem: location 1982 is 1
9999 run: address to copy is 2065
9999 run: its type is character
9999 mem: location 2065 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 32
9999 mem: storing 1079 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 2006 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1079
9999 mem: storing 124 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1079
9999 mem: location 1079 is 124
9999 mem: location 1080 is 7
9999 mem: location 2006 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2063
9999 mem: location 1982 is 2
9999 run: address to copy is 2066
9999 run: its type is character
9999 mem: location 2066 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 33
9999 mem: storing 1081 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 2006 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 2006 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 6
9999 run: address to copy is 1839
9999 run: its type is character
9999 mem: location 1839 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 34
9999 mem: storing 1083 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 2006 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1083
9999 mem: storing 112 in location 1083
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1083
9999 mem: location 1083 is 112
9999 mem: location 1084 is 7
9999 mem: location 2006 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1084
9999 mem: storing 7 in location 1084
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 35
9999 mem: storing 1085 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2006 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1085
9999 mem: storing 32 in location 1085
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 2006 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1086
9999 mem: storing 7 in location 1086
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 6
9999 run: address to copy is 1848
9999 run: its type is character
9999 mem: location 1848 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 36
9999 mem: storing 1087 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 2006 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1087
9999 mem: storing 112 in location 1087
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1087
9999 mem: location 1087 is 112
9999 mem: location 1088 is 7
9999 mem: location 2006 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1088
9999 mem: storing 7 in location 1088
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 37
9999 mem: storing 1089 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 2006 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1089
9999 mem: storing 32 in location 1089
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 2006 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1090
9999 mem: storing 7 in location 1090
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 6
9999 run: address to copy is 1857
9999 run: its type is character
9999 mem: location 1857 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 38
9999 mem: storing 1091 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 2006 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1091
9999 mem: storing 112 in location 1091
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1091
9999 mem: location 1091 is 112
9999 mem: location 1092 is 7
9999 mem: location 2006 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1092
9999 mem: storing 7 in location 1092
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 39
9999 mem: storing 1093 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 2006 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1093
9999 mem: storing 32 in location 1093
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 2006 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1094
9999 mem: storing 7 in location 1094
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 6
9999 run: address to copy is 1866
9999 run: its type is character
9999 mem: location 1866 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 40 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 40
9999 mem: storing 1095 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 2006 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1095
9999 mem: storing 112 in location 1095
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1095
9999 mem: location 1095 is 112
9999 mem: location 1096 is 7
9999 mem: location 2006 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1096
9999 mem: storing 7 in location 1096
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 41 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 41
9999 mem: storing 1097 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 2006 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1097
9999 mem: storing 32 in location 1097
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 2006 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1098
9999 mem: storing 7 in location 1098
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 6
9999 run: address to copy is 1875
9999 run: its type is character
9999 mem: location 1875 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 42 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 42
9999 mem: storing 1099 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 2006 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1099
9999 mem: storing 112 in location 1099
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1099
9999 mem: location 1099 is 112
9999 mem: location 1100 is 7
9999 mem: location 2006 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1100
9999 mem: storing 7 in location 1100
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 43 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 43
9999 mem: storing 1101 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 2006 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1101
9999 mem: storing 32 in location 1101
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 2006 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1102
9999 mem: storing 7 in location 1102
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 6
9999 run: address to copy is 1884
9999 run: its type is character
9999 mem: location 1884 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 44 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 44
9999 mem: storing 1103 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 2006 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1103
9999 mem: storing 112 in location 1103
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1103
9999 mem: location 1103 is 112
9999 mem: location 1104 is 7
9999 mem: location 2006 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1104
9999 mem: storing 7 in location 1104
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 45 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 45
9999 mem: storing 1105 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 2006 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1105
9999 mem: storing 32 in location 1105
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 2006 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1106
9999 mem: storing 7 in location 1106
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 6
9999 run: address to copy is 1893
9999 run: its type is character
9999 mem: location 1893 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 46 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 46
9999 mem: storing 1107 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 2006 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1107
9999 mem: storing 112 in location 1107
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1107
9999 mem: location 1107 is 112
9999 mem: location 1108 is 7
9999 mem: location 2006 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1108
9999 mem: storing 7 in location 1108
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 47 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 47
9999 mem: storing 1109 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 2006 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1109
9999 mem: storing 32 in location 1109
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 2006 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1110
9999 mem: storing 7 in location 1110
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 6
9999 run: address to copy is 1902
9999 run: its type is character
9999 mem: location 1902 is 112
9999 mem: storing 112 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 112
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 112 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 112
  90 print-character: 112 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 48 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 112
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 48
9999 mem: storing 1111 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 2006 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 112
9999 mem: location 2007 is 1111
9999 mem: storing 112 in location 1111
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1111
9999 mem: location 1111 is 112
9999 mem: location 1112 is 7
9999 mem: location 2006 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1112
9999 mem: storing 7 in location 1112
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1993 is 30
9999 mem: storing 30 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 30
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 49 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 49
9999 mem: storing 1113 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2006 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1113
9999 mem: storing 32 in location 1113
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1113
9999 mem: location 1113 is 32
9999 mem: location 1114 is 7
9999 mem: location 2006 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1114
9999 mem: storing 7 in location 1114
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 6
9999 mem: storing 5 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1925 is 1011
9999 mem: storing 2 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 2
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 2 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 2
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 2
9999 mem: location 1926 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 5
9999 mem: storing 6 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 6
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 6 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 6
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 6 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 6
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 6
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2067
9999 mem: storing 2067 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 0
9999 mem: location 1923 is 2067
9999 run: address to copy is 2067
9999 mem: storing 2067 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2067
9999 mem: storing 0 in location 2067
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 0
9999 mem: location 1923 is 2067
9999 run: address to copy is 2068
9999 mem: storing 2068 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2069
9999 mem: location 1925 is 2068
9999 mem: storing 2069 in location 2068
 105 run: reply result
9999 mem: location 1923 is 2067
9999 run: result 0 is 2067
9999 mem: storing 2067 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 6
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 6
9999 mem: storing 0 in location 1906
9999 mem: storing 6 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 6
9999 mem: storing 54 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2067
9999 mem: location 1914 is 54
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2067 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 54 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 2069
9999 mem: location 1963 is 2067
9999 run: address to copy is 2067
9999 mem: storing 2067 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 54
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2067
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2067 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 2069
9999 mem: location 1923 is 2067
9999 run: address to copy is 2067
9999 run: its type is number
9999 mem: location 2067 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 2069
9999 mem: location 1923 is 2067
9999 run: address to copy is 2068
9999 run: its type is address
9999 mem: location 2068 is 2069
9999 mem: storing 2069 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2069
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2067
9999 mem: location 2067 is 0
9999 mem: location 2068 is 2069
9999 mem: location 1963 is 2067
9999 run: address to copy is 2068
9999 run: its type is address
9999 mem: location 2068 is 2069
9999 mem: storing 2069 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2069
9999 mem: location 1965 is 2067
9999 mem: location 2067 is 0
9999 mem: storing 2070 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 54
9999 mem: location 1970 is 2070
9999 mem: storing 54 in location 2070
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2067
9999 mem: location 2067 is 0
9999 mem: location 1965 is 2067
9999 mem: storing 1 in location 2067
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2067
9999 run: result 0 is 2067
9999 mem: storing 2067 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2067
9999 mem: location 2067 is 1
9999 mem: location 2068 is 2069
9999 mem: location 1910 is 2067
9999 run: address to copy is 2067
9999 run: its type is number
9999 mem: location 2067 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2067
9999 mem: location 2067 is 1
9999 mem: location 2068 is 2069
9999 mem: location 1910 is 2067
9999 run: address to copy is 2068
9999 run: its type is address
9999 mem: location 2068 is 2069
9999 mem: storing 2069 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2100
9999 mem: storing 2100 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2069
9999 mem: location 1917 is 0
9999 run: address to copy is 2070
9999 run: its type is character
9999 mem: location 2070 is 54
9999 mem: storing 54 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2100
9999 mem: location 1918 is 0
9999 mem: storing 2101 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 54
9999 mem: location 1920 is 2101
9999 mem: storing 54 in location 2101
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2100
9999 run: result 0 is 2100
9999 mem: storing 2100 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2100
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2100 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2100
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2100
9999 mem: location 1982 is 0
9999 run: address to copy is 2101
9999 run: its type is character
9999 mem: location 2101 is 54
9999 mem: storing 54 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 54
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 54 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 54
  90 print-character: 54 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 54
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 60 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 54
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 60
9999 mem: storing 1135 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 7
9999 mem: location 2006 is 1135
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 54
9999 mem: location 2007 is 1135
9999 mem: storing 54 in location 1135
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1135
9999 mem: location 1135 is 54
9999 mem: location 1136 is 7
9999 mem: location 2006 is 1135
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1136
9999 mem: storing 7 in location 1136
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2102 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2102
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2102 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2102
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2102
9999 mem: location 1982 is 0
9999 run: address to copy is 2103
9999 run: its type is character
9999 mem: location 2103 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 61 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 61
9999 mem: storing 1137 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 7
9999 mem: location 2006 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1137
9999 mem: storing 32 in location 1137
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1137
9999 mem: location 1137 is 32
9999 mem: location 1138 is 7
9999 mem: location 2006 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1138
9999 mem: storing 7 in location 1138
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2102
9999 mem: location 1982 is 1
9999 run: address to copy is 2104
9999 run: its type is character
9999 mem: location 2104 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 62 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 62
9999 mem: storing 1139 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1139
9999 mem: location 1139 is 0
9999 mem: location 1140 is 7
9999 mem: location 2006 is 1139
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1139
9999 mem: storing 124 in location 1139
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1139
9999 mem: location 1139 is 124
9999 mem: location 1140 is 7
9999 mem: location 2006 is 1139
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1140
9999 mem: storing 7 in location 1140
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2102
9999 mem: location 1982 is 2
9999 run: address to copy is 2105
9999 run: its type is character
9999 mem: location 2105 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 63 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 63
9999 mem: storing 1141 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1141
9999 mem: location 1141 is 0
9999 mem: location 1142 is 7
9999 mem: location 2006 is 1141
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1141
9999 mem: storing 32 in location 1141
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1141
9999 mem: location 1141 is 32
9999 mem: location 1142 is 7
9999 mem: location 2006 is 1141
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1142
9999 mem: storing 7 in location 1142
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 5
9999 run: address to copy is 1838
9999 run: its type is character
9999 mem: location 1838 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 64 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 64
9999 mem: storing 1143 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1143
9999 mem: location 1143 is 0
9999 mem: location 1144 is 7
9999 mem: location 2006 is 1143
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1143
9999 mem: storing 32 in location 1143
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1143
9999 mem: location 1143 is 32
9999 mem: location 1144 is 7
9999 mem: location 2006 is 1143
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1144
9999 mem: storing 7 in location 1144
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 65 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 65
9999 mem: storing 1145 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1146 is 7
9999 mem: location 2006 is 1145
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1145
9999 mem: storing 32 in location 1145
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1145
9999 mem: location 1145 is 32
9999 mem: location 1146 is 7
9999 mem: location 2006 is 1145
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1146
9999 mem: storing 7 in location 1146
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 5
9999 run: address to copy is 1847
9999 run: its type is character
9999 mem: location 1847 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 66 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 66
9999 mem: storing 1147 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 7
9999 mem: location 2006 is 1147
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1147
9999 mem: storing 32 in location 1147
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1147
9999 mem: location 1147 is 32
9999 mem: location 1148 is 7
9999 mem: location 2006 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1148
9999 mem: storing 7 in location 1148
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 67 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 67
9999 mem: storing 1149 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1150 is 7
9999 mem: location 2006 is 1149
9999 run: address to copy is 1149
9999 mem: storing 1149 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1149
9999 mem: storing 32 in location 1149
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1149
9999 mem: location 1149 is 32
9999 mem: location 1150 is 7
9999 mem: location 2006 is 1149
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1150
9999 mem: storing 7 in location 1150
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 5
9999 run: address to copy is 1856
9999 run: its type is character
9999 mem: location 1856 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 68 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 68
9999 mem: storing 1151 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1151
9999 mem: location 1151 is 0
9999 mem: location 1152 is 7
9999 mem: location 2006 is 1151
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1151
9999 mem: storing 32 in location 1151
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1151
9999 mem: location 1151 is 32
9999 mem: location 1152 is 7
9999 mem: location 2006 is 1151
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1152
9999 mem: storing 7 in location 1152
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 69 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 69
9999 mem: storing 1153 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1154 is 7
9999 mem: location 2006 is 1153
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1153
9999 mem: storing 32 in location 1153
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1153
9999 mem: location 1153 is 32
9999 mem: location 1154 is 7
9999 mem: location 2006 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1154
9999 mem: storing 7 in location 1154
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 5
9999 run: address to copy is 1865
9999 run: its type is character
9999 mem: location 1865 is 32
9999 mem: storing 32 in location 1745
9999 schedule: print-board/run1001/scenario-making-a-move
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 70 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 70
9999 mem: storing 1155 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 7
9999 mem: location 2006 is 1155
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1155
9999 mem: storing 32 in location 1155
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1155
9999 mem: location 1155 is 32
9999 mem: location 1156 is 7
9999 mem: location 2006 is 1155
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1156
9999 mem: storing 7 in location 1156
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 71 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 71
9999 mem: storing 1157 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 2006 is 1157
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1157
9999 mem: storing 32 in location 1157
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1157
9999 mem: location 1157 is 32
9999 mem: location 1158 is 7
9999 mem: location 2006 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1158
9999 mem: storing 7 in location 1158
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 5
9999 run: address to copy is 1874
9999 run: its type is character
9999 mem: location 1874 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 72 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 72
9999 mem: storing 1159 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1159
9999 mem: location 1159 is 0
9999 mem: location 1160 is 7
9999 mem: location 2006 is 1159
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1159
9999 mem: storing 32 in location 1159
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1159
9999 mem: location 1159 is 32
9999 mem: location 1160 is 7
9999 mem: location 2006 is 1159
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1160
9999 mem: storing 7 in location 1160
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 73 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 73
9999 mem: storing 1161 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 7
9999 mem: location 2006 is 1161
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1161
9999 mem: storing 32 in location 1161
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1161
9999 mem: location 1161 is 32
9999 mem: location 1162 is 7
9999 mem: location 2006 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1162
9999 mem: storing 7 in location 1162
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 5
9999 run: address to copy is 1883
9999 run: its type is character
9999 mem: location 1883 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 74 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 74
9999 mem: storing 1163 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1164 is 7
9999 mem: location 2006 is 1163
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1163
9999 mem: storing 32 in location 1163
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1163
9999 mem: location 1163 is 32
9999 mem: location 1164 is 7
9999 mem: location 2006 is 1163
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1164
9999 mem: storing 7 in location 1164
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 75 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 75
9999 mem: storing 1165 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 7
9999 mem: location 2006 is 1165
9999 run: address to copy is 1165
9999 mem: storing 1165 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1165
9999 mem: storing 32 in location 1165
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1165
9999 mem: location 1165 is 32
9999 mem: location 1166 is 7
9999 mem: location 2006 is 1165
9999 run: address to copy is 1166
9999 mem: storing 1166 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1166
9999 mem: storing 7 in location 1166
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 5
9999 run: address to copy is 1892
9999 run: its type is character
9999 mem: location 1892 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 76 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 76
9999 mem: storing 1167 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1168 is 7
9999 mem: location 2006 is 1167
9999 run: address to copy is 1167
9999 mem: storing 1167 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1167
9999 mem: storing 32 in location 1167
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1167
9999 mem: location 1167 is 32
9999 mem: location 1168 is 7
9999 mem: location 2006 is 1167
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1168
9999 mem: storing 7 in location 1168
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 77 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 77
9999 mem: storing 1169 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 7
9999 mem: location 2006 is 1169
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1169
9999 mem: storing 32 in location 1169
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1169
9999 mem: location 1169 is 32
9999 mem: location 1170 is 7
9999 mem: location 2006 is 1169
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1170
9999 mem: storing 7 in location 1170
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 5
9999 run: address to copy is 1901
9999 run: its type is character
9999 mem: location 1901 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 78 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 78
9999 mem: storing 1171 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1171
9999 mem: location 1171 is 0
9999 mem: location 1172 is 7
9999 mem: location 2006 is 1171
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1171
9999 mem: storing 32 in location 1171
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1171
9999 mem: location 1171 is 32
9999 mem: location 1172 is 7
9999 mem: location 2006 is 1171
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1172
9999 mem: storing 7 in location 1172
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1993 is 30
9999 mem: storing 60 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 60
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 79 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 79
9999 mem: storing 1173 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1173
9999 mem: location 1173 is 0
9999 mem: location 1174 is 7
9999 mem: location 2006 is 1173
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1173
9999 mem: storing 32 in location 1173
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1173
9999 mem: location 1173 is 32
9999 mem: location 1174 is 7
9999 mem: location 2006 is 1173
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1174
9999 mem: storing 7 in location 1174
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 5
9999 mem: storing 4 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1925 is 1011
9999 mem: storing 3 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 3
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 3
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 3 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 3
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 3
9999 mem: location 1926 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 4
9999 mem: storing 5 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 5
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 5 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 5 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 5
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 5
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2106
9999 mem: storing 2106 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 0
9999 mem: location 1923 is 2106
9999 run: address to copy is 2106
9999 mem: storing 2106 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2106
9999 mem: storing 0 in location 2106
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 0
9999 mem: location 1923 is 2106
9999 run: address to copy is 2107
9999 mem: storing 2107 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2108
9999 mem: location 1925 is 2107
9999 mem: storing 2108 in location 2107
 105 run: reply result
9999 mem: location 1923 is 2106
9999 run: result 0 is 2106
9999 mem: storing 2106 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 5
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 5
9999 mem: storing 0 in location 1906
9999 mem: storing 5 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 5
9999 mem: storing 53 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2106
9999 mem: location 1914 is 53
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2106 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 53 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 2108
9999 mem: location 1963 is 2106
9999 run: address to copy is 2106
9999 mem: storing 2106 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 53
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2106
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2106 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 2108
9999 mem: location 1923 is 2106
9999 run: address to copy is 2106
9999 run: its type is number
9999 mem: location 2106 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 2108
9999 mem: location 1923 is 2106
9999 run: address to copy is 2107
9999 run: its type is address
9999 mem: location 2107 is 2108
9999 mem: storing 2108 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2108
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2106
9999 mem: location 2106 is 0
9999 mem: location 2107 is 2108
9999 mem: location 1963 is 2106
9999 run: address to copy is 2107
9999 run: its type is address
9999 mem: location 2107 is 2108
9999 mem: storing 2108 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2108
9999 mem: location 1965 is 2106
9999 mem: location 2106 is 0
9999 mem: storing 2109 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 53
9999 mem: location 1970 is 2109
9999 mem: storing 53 in location 2109
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2106
9999 mem: location 2106 is 0
9999 mem: location 1965 is 2106
9999 mem: storing 1 in location 2106
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2106
9999 run: result 0 is 2106
9999 mem: storing 2106 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2106
9999 mem: location 2106 is 1
9999 mem: location 2107 is 2108
9999 mem: location 1910 is 2106
9999 run: address to copy is 2106
9999 run: its type is number
9999 mem: location 2106 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2106
9999 mem: location 2106 is 1
9999 mem: location 2107 is 2108
9999 mem: location 1910 is 2106
9999 run: address to copy is 2107
9999 run: its type is address
9999 mem: location 2107 is 2108
9999 mem: storing 2108 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2139
9999 mem: storing 2139 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2108
9999 mem: location 1917 is 0
9999 run: address to copy is 2109
9999 run: its type is character
9999 mem: location 2109 is 53
9999 mem: storing 53 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2139
9999 mem: location 1918 is 0
9999 mem: storing 2140 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 53
9999 mem: location 1920 is 2140
9999 mem: storing 53 in location 2140
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2139
9999 run: result 0 is 2139
9999 mem: storing 2139 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2139
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2139 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2139
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2139
9999 mem: location 1982 is 0
9999 run: address to copy is 2140
9999 run: its type is character
9999 mem: location 2140 is 53
9999 mem: storing 53 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 53
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 53 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 53
  90 print-character: 53 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 53
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 90 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 53
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 90
9999 mem: storing 1195 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1195
9999 mem: location 1195 is 0
9999 mem: location 1196 is 7
9999 mem: location 2006 is 1195
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 53
9999 mem: location 2007 is 1195
9999 mem: storing 53 in location 1195
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1195
9999 mem: location 1195 is 53
9999 mem: location 1196 is 7
9999 mem: location 2006 is 1195
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1196
9999 mem: storing 7 in location 1196
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2141 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2141
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2141 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2141
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2141
9999 mem: location 1982 is 0
9999 run: address to copy is 2142
9999 run: its type is character
9999 mem: location 2142 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 91 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 91
9999 mem: storing 1197 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1197
9999 mem: location 1197 is 0
9999 mem: location 1198 is 7
9999 mem: location 2006 is 1197
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1197
9999 mem: storing 32 in location 1197
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1197
9999 mem: location 1197 is 32
9999 mem: location 1198 is 7
9999 mem: location 2006 is 1197
9999 run: address to copy is 1198
9999 mem: storing 1198 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1198
9999 mem: storing 7 in location 1198
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2141
9999 mem: location 1982 is 1
9999 run: address to copy is 2143
9999 run: its type is character
9999 mem: location 2143 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 92 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 92
9999 mem: storing 1199 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1199
9999 mem: location 1199 is 0
9999 mem: location 1200 is 7
9999 mem: location 2006 is 1199
9999 run: address to copy is 1199
9999 mem: storing 1199 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1199
9999 mem: storing 124 in location 1199
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1199
9999 mem: location 1199 is 124
9999 mem: location 1200 is 7
9999 mem: location 2006 is 1199
9999 run: address to copy is 1200
9999 mem: storing 1200 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1200
9999 mem: storing 7 in location 1200
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2141
9999 mem: location 1982 is 2
9999 run: address to copy is 2144
9999 run: its type is character
9999 mem: location 2144 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 93 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 93
9999 mem: storing 1201 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1201
9999 mem: location 1201 is 0
9999 mem: location 1202 is 7
9999 mem: location 2006 is 1201
9999 run: address to copy is 1201
9999 mem: storing 1201 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1201
9999 mem: storing 32 in location 1201
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1201
9999 mem: location 1201 is 32
9999 mem: location 1202 is 7
9999 mem: location 2006 is 1201
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1202
9999 mem: storing 7 in location 1202
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 4
9999 run: address to copy is 1837
9999 run: its type is character
9999 mem: location 1837 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 94 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 94
9999 mem: storing 1203 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1203
9999 mem: location 1203 is 0
9999 mem: location 1204 is 7
9999 mem: location 2006 is 1203
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1203
9999 mem: storing 32 in location 1203
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1203
9999 mem: location 1203 is 32
9999 mem: location 1204 is 7
9999 mem: location 2006 is 1203
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1204
9999 mem: storing 7 in location 1204
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 95 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 95
9999 mem: storing 1205 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1205
9999 mem: location 1205 is 0
9999 mem: location 1206 is 7
9999 mem: location 2006 is 1205
9999 run: address to copy is 1205
9999 mem: storing 1205 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1205
9999 mem: storing 32 in location 1205
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1205
9999 mem: location 1205 is 32
9999 mem: location 1206 is 7
9999 mem: location 2006 is 1205
9999 run: address to copy is 1206
9999 mem: storing 1206 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1206
9999 mem: storing 7 in location 1206
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 4
9999 run: address to copy is 1846
9999 run: its type is character
9999 mem: location 1846 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 96 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 96
9999 mem: storing 1207 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1207
9999 mem: location 1207 is 0
9999 mem: location 1208 is 7
9999 mem: location 2006 is 1207
9999 run: address to copy is 1207
9999 mem: storing 1207 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1207
9999 mem: storing 32 in location 1207
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1207
9999 mem: location 1207 is 32
9999 mem: location 1208 is 7
9999 mem: location 2006 is 1207
9999 run: address to copy is 1208
9999 mem: storing 1208 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1208
9999 mem: storing 7 in location 1208
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 97 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 97
9999 mem: storing 1209 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1209
9999 mem: location 1209 is 0
9999 mem: location 1210 is 7
9999 mem: location 2006 is 1209
9999 run: address to copy is 1209
9999 mem: storing 1209 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1209
9999 mem: storing 32 in location 1209
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1209
9999 mem: location 1209 is 32
9999 mem: location 1210 is 7
9999 mem: location 2006 is 1209
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1210
9999 mem: storing 7 in location 1210
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 4
9999 run: address to copy is 1855
9999 run: its type is character
9999 mem: location 1855 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 98 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 98
9999 mem: storing 1211 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 7
9999 mem: location 2006 is 1211
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1211
9999 mem: storing 32 in location 1211
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1211
9999 mem: location 1211 is 32
9999 mem: location 1212 is 7
9999 mem: location 2006 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1212
9999 mem: storing 7 in location 1212
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 99 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 99
9999 mem: storing 1213 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1213
9999 mem: location 1213 is 0
9999 mem: location 1214 is 7
9999 mem: location 2006 is 1213
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1213
9999 mem: storing 32 in location 1213
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1213
9999 mem: location 1213 is 32
9999 mem: location 1214 is 7
9999 mem: location 2006 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1214
9999 mem: storing 7 in location 1214
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 4
9999 run: address to copy is 1864
9999 run: its type is character
9999 mem: location 1864 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 100 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 100
9999 mem: storing 1215 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 7
9999 mem: location 2006 is 1215
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1215
9999 mem: storing 32 in location 1215
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1215
9999 mem: location 1215 is 32
9999 mem: location 1216 is 7
9999 mem: location 2006 is 1215
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1216
9999 mem: storing 7 in location 1216
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 101 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 101
9999 mem: storing 1217 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 7
9999 mem: location 2006 is 1217
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1217
9999 mem: storing 32 in location 1217
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1217
9999 mem: location 1217 is 32
9999 mem: location 1218 is 7
9999 mem: location 2006 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1218
9999 mem: storing 7 in location 1218
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 4
9999 run: address to copy is 1873
9999 run: its type is character
9999 mem: location 1873 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 102 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 102
9999 mem: storing 1219 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1219
9999 mem: location 1219 is 0
9999 mem: location 1220 is 7
9999 mem: location 2006 is 1219
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1219
9999 mem: storing 32 in location 1219
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1219
9999 mem: location 1219 is 32
9999 mem: location 1220 is 7
9999 mem: location 2006 is 1219
9999 run: address to copy is 1220
9999 mem: storing 1220 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1220
9999 mem: storing 7 in location 1220
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 103 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 103
9999 mem: storing 1221 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1221
9999 mem: location 1221 is 0
9999 mem: location 1222 is 7
9999 mem: location 2006 is 1221
9999 run: address to copy is 1221
9999 mem: storing 1221 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1221
9999 mem: storing 32 in location 1221
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1221
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: location 2006 is 1221
9999 run: address to copy is 1222
9999 mem: storing 1222 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1222
9999 mem: storing 7 in location 1222
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 4
9999 run: address to copy is 1882
9999 run: its type is character
9999 mem: location 1882 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 104 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 104
9999 mem: storing 1223 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1223
9999 mem: location 1223 is 0
9999 mem: location 1224 is 7
9999 mem: location 2006 is 1223
9999 run: address to copy is 1223
9999 mem: storing 1223 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1223
9999 mem: storing 32 in location 1223
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1223
9999 mem: location 1223 is 32
9999 mem: location 1224 is 7
9999 mem: location 2006 is 1223
9999 run: address to copy is 1224
9999 mem: storing 1224 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1224
9999 mem: storing 7 in location 1224
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 105 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 105
9999 mem: storing 1225 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1225
9999 mem: location 1225 is 0
9999 mem: location 1226 is 7
9999 mem: location 2006 is 1225
9999 run: address to copy is 1225
9999 mem: storing 1225 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1225
9999 mem: storing 32 in location 1225
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1225
9999 mem: location 1225 is 32
9999 mem: location 1226 is 7
9999 mem: location 2006 is 1225
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1226
9999 mem: storing 7 in location 1226
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 4
9999 run: address to copy is 1891
9999 run: its type is character
9999 mem: location 1891 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 106 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 106
9999 mem: storing 1227 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1227
9999 mem: location 1227 is 0
9999 mem: location 1228 is 7
9999 mem: location 2006 is 1227
9999 run: address to copy is 1227
9999 mem: storing 1227 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1227
9999 mem: storing 32 in location 1227
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1227
9999 mem: location 1227 is 32
9999 mem: location 1228 is 7
9999 mem: location 2006 is 1227
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1228
9999 mem: storing 7 in location 1228
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 107 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 107
9999 mem: storing 1229 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1229
9999 mem: location 1229 is 0
9999 mem: location 1230 is 7
9999 mem: location 2006 is 1229
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1229
9999 mem: storing 32 in location 1229
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1229
9999 mem: location 1229 is 32
9999 mem: location 1230 is 7
9999 mem: location 2006 is 1229
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1230
9999 mem: storing 7 in location 1230
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 4
9999 run: address to copy is 1900
9999 run: its type is character
9999 mem: location 1900 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 108 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 108
9999 mem: storing 1231 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1231
9999 mem: location 1231 is 0
9999 mem: location 1232 is 7
9999 mem: location 2006 is 1231
9999 run: address to copy is 1231
9999 mem: storing 1231 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1231
9999 mem: storing 32 in location 1231
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1231
9999 mem: location 1231 is 32
9999 mem: location 1232 is 7
9999 mem: location 2006 is 1231
9999 run: address to copy is 1232
9999 mem: storing 1232 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1232
9999 mem: storing 7 in location 1232
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1993 is 30
9999 mem: storing 90 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 90
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 109 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 109
9999 mem: storing 1233 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1233
9999 mem: location 1233 is 0
9999 mem: location 1234 is 7
9999 mem: location 2006 is 1233
9999 run: address to copy is 1233
9999 mem: storing 1233 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1233
9999 mem: storing 32 in location 1233
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1233
9999 mem: location 1233 is 32
9999 mem: location 1234 is 7
9999 mem: location 2006 is 1233
9999 run: address to copy is 1234
9999 mem: storing 1234 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1234
9999 mem: storing 7 in location 1234
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 4
9999 mem: storing 3 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1925 is 1011
9999 mem: storing 4 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 4
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 4
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 4 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 4
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 4
9999 mem: location 1926 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 3
9999 mem: storing 4 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 4 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 4 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 4
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 4
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2145
9999 mem: storing 2145 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 0
9999 mem: location 1923 is 2145
9999 run: address to copy is 2145
9999 mem: storing 2145 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2145
9999 mem: storing 0 in location 2145
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 0
9999 mem: location 1923 is 2145
9999 run: address to copy is 2146
9999 mem: storing 2146 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2147
9999 mem: location 1925 is 2146
9999 mem: storing 2147 in location 2146
 105 run: reply result
9999 mem: location 1923 is 2145
9999 run: result 0 is 2145
9999 mem: storing 2145 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 4
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 4
9999 mem: storing 0 in location 1906
9999 mem: storing 4 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 4
9999 mem: storing 52 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2145
9999 mem: location 1914 is 52
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2145 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 52 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 2147
9999 mem: location 1963 is 2145
9999 run: address to copy is 2145
9999 mem: storing 2145 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 52
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2145
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2145 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 2147
9999 mem: location 1923 is 2145
9999 run: address to copy is 2145
9999 run: its type is number
9999 mem: location 2145 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 2147
9999 mem: location 1923 is 2145
9999 run: address to copy is 2146
9999 run: its type is address
9999 mem: location 2146 is 2147
9999 mem: storing 2147 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2147
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2145
9999 mem: location 2145 is 0
9999 mem: location 2146 is 2147
9999 mem: location 1963 is 2145
9999 run: address to copy is 2146
9999 run: its type is address
9999 mem: location 2146 is 2147
9999 mem: storing 2147 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2147
9999 mem: location 1965 is 2145
9999 mem: location 2145 is 0
9999 mem: storing 2148 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 52
9999 mem: location 1970 is 2148
9999 mem: storing 52 in location 2148
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2145
9999 mem: location 2145 is 0
9999 mem: location 1965 is 2145
9999 mem: storing 1 in location 2145
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2145
9999 run: result 0 is 2145
9999 mem: storing 2145 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2145
9999 mem: location 2145 is 1
9999 mem: location 2146 is 2147
9999 mem: location 1910 is 2145
9999 run: address to copy is 2145
9999 run: its type is number
9999 mem: location 2145 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2145
9999 mem: location 2145 is 1
9999 mem: location 2146 is 2147
9999 mem: location 1910 is 2145
9999 run: address to copy is 2146
9999 run: its type is address
9999 mem: location 2146 is 2147
9999 mem: storing 2147 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2178
9999 mem: storing 2178 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2147
9999 mem: location 1917 is 0
9999 run: address to copy is 2148
9999 run: its type is character
9999 mem: location 2148 is 52
9999 mem: storing 52 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2178
9999 mem: location 1918 is 0
9999 mem: storing 2179 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 52
9999 mem: location 1920 is 2179
9999 mem: storing 52 in location 2179
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
9999 schedule: integer-to-decimal-string/print-integer/print-board/run1001/scenario-making-a-move
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2178
9999 run: result 0 is 2178
9999 mem: storing 2178 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2178
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2178 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2178
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2178
9999 mem: location 1982 is 0
9999 run: address to copy is 2179
9999 run: its type is character
9999 mem: location 2179 is 52
9999 mem: storing 52 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 52
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 52 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 52
  90 print-character: 52 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 52
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 120 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 52
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 120
9999 mem: storing 1255 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1255
9999 mem: location 1255 is 0
9999 mem: location 1256 is 7
9999 mem: location 2006 is 1255
9999 run: address to copy is 1255
9999 mem: storing 1255 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 52
9999 mem: location 2007 is 1255
9999 mem: storing 52 in location 1255
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1255
9999 mem: location 1255 is 52
9999 mem: location 1256 is 7
9999 mem: location 2006 is 1255
9999 run: address to copy is 1256
9999 mem: storing 1256 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1256
9999 mem: storing 7 in location 1256
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2180 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2180
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2180 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2180
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2180
9999 mem: location 1982 is 0
9999 run: address to copy is 2181
9999 run: its type is character
9999 mem: location 2181 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 121 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 121
9999 mem: storing 1257 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1257
9999 mem: location 1257 is 0
9999 mem: location 1258 is 7
9999 mem: location 2006 is 1257
9999 run: address to copy is 1257
9999 mem: storing 1257 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1257
9999 mem: storing 32 in location 1257
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1257
9999 mem: location 1257 is 32
9999 mem: location 1258 is 7
9999 mem: location 2006 is 1257
9999 run: address to copy is 1258
9999 mem: storing 1258 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1258
9999 mem: storing 7 in location 1258
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2180
9999 mem: location 1982 is 1
9999 run: address to copy is 2182
9999 run: its type is character
9999 mem: location 2182 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 122 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 122
9999 mem: storing 1259 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1259
9999 mem: location 1259 is 0
9999 mem: location 1260 is 7
9999 mem: location 2006 is 1259
9999 run: address to copy is 1259
9999 mem: storing 1259 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1259
9999 mem: storing 124 in location 1259
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1259
9999 mem: location 1259 is 124
9999 mem: location 1260 is 7
9999 mem: location 2006 is 1259
9999 run: address to copy is 1260
9999 mem: storing 1260 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1260
9999 mem: storing 7 in location 1260
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2180
9999 mem: location 1982 is 2
9999 run: address to copy is 2183
9999 run: its type is character
9999 mem: location 2183 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 123 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 123
9999 mem: storing 1261 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1261
9999 mem: location 1261 is 0
9999 mem: location 1262 is 7
9999 mem: location 2006 is 1261
9999 run: address to copy is 1261
9999 mem: storing 1261 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1261
9999 mem: storing 32 in location 1261
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1261
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 2006 is 1261
9999 run: address to copy is 1262
9999 mem: storing 1262 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1262
9999 mem: storing 7 in location 1262
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 3
9999 run: address to copy is 1836
9999 run: its type is character
9999 mem: location 1836 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 124 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 124
9999 mem: storing 1263 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1263
9999 mem: location 1263 is 0
9999 mem: location 1264 is 7
9999 mem: location 2006 is 1263
9999 run: address to copy is 1263
9999 mem: storing 1263 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1263
9999 mem: storing 32 in location 1263
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1263
9999 mem: location 1263 is 32
9999 mem: location 1264 is 7
9999 mem: location 2006 is 1263
9999 run: address to copy is 1264
9999 mem: storing 1264 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1264
9999 mem: storing 7 in location 1264
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 125 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 125
9999 mem: storing 1265 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1265
9999 mem: location 1265 is 0
9999 mem: location 1266 is 7
9999 mem: location 2006 is 1265
9999 run: address to copy is 1265
9999 mem: storing 1265 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1265
9999 mem: storing 32 in location 1265
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1265
9999 mem: location 1265 is 32
9999 mem: location 1266 is 7
9999 mem: location 2006 is 1265
9999 run: address to copy is 1266
9999 mem: storing 1266 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1266
9999 mem: storing 7 in location 1266
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 3
9999 run: address to copy is 1845
9999 run: its type is character
9999 mem: location 1845 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 126 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 126
9999 mem: storing 1267 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1267
9999 mem: location 1267 is 0
9999 mem: location 1268 is 7
9999 mem: location 2006 is 1267
9999 run: address to copy is 1267
9999 mem: storing 1267 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1267
9999 mem: storing 32 in location 1267
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1267
9999 mem: location 1267 is 32
9999 mem: location 1268 is 7
9999 mem: location 2006 is 1267
9999 run: address to copy is 1268
9999 mem: storing 1268 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1268
9999 mem: storing 7 in location 1268
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 127 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 127
9999 mem: storing 1269 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1269
9999 mem: location 1269 is 0
9999 mem: location 1270 is 7
9999 mem: location 2006 is 1269
9999 run: address to copy is 1269
9999 mem: storing 1269 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1269
9999 mem: storing 32 in location 1269
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1269
9999 mem: location 1269 is 32
9999 mem: location 1270 is 7
9999 mem: location 2006 is 1269
9999 run: address to copy is 1270
9999 mem: storing 1270 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1270
9999 mem: storing 7 in location 1270
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 3
9999 run: address to copy is 1854
9999 run: its type is character
9999 mem: location 1854 is 32
9999 mem: storing 32 in location 1745
9999 schedule: print-board/run1001/scenario-making-a-move
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 128 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 128
9999 mem: storing 1271 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1271
9999 mem: location 1271 is 0
9999 mem: location 1272 is 7
9999 mem: location 2006 is 1271
9999 run: address to copy is 1271
9999 mem: storing 1271 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1271
9999 mem: storing 32 in location 1271
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1271
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: location 2006 is 1271
9999 run: address to copy is 1272
9999 mem: storing 1272 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1272
9999 mem: storing 7 in location 1272
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 129 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 129
9999 mem: storing 1273 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1273
9999 mem: location 1273 is 0
9999 mem: location 1274 is 7
9999 mem: location 2006 is 1273
9999 run: address to copy is 1273
9999 mem: storing 1273 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1273
9999 mem: storing 32 in location 1273
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1273
9999 mem: location 1273 is 32
9999 mem: location 1274 is 7
9999 mem: location 2006 is 1273
9999 run: address to copy is 1274
9999 mem: storing 1274 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1274
9999 mem: storing 7 in location 1274
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 3
9999 run: address to copy is 1863
9999 run: its type is character
9999 mem: location 1863 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 130 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 130
9999 mem: storing 1275 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1275
9999 mem: location 1275 is 0
9999 mem: location 1276 is 7
9999 mem: location 2006 is 1275
9999 run: address to copy is 1275
9999 mem: storing 1275 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1275
9999 mem: storing 32 in location 1275
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1275
9999 mem: location 1275 is 32
9999 mem: location 1276 is 7
9999 mem: location 2006 is 1275
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1276
9999 mem: storing 7 in location 1276
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 131 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 131
9999 mem: storing 1277 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1277
9999 mem: location 1277 is 0
9999 mem: location 1278 is 7
9999 mem: location 2006 is 1277
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1277
9999 mem: storing 32 in location 1277
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1277
9999 mem: location 1277 is 32
9999 mem: location 1278 is 7
9999 mem: location 2006 is 1277
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1278
9999 mem: storing 7 in location 1278
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 3
9999 run: address to copy is 1872
9999 run: its type is character
9999 mem: location 1872 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 132 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 132
9999 mem: storing 1279 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1279
9999 mem: location 1279 is 0
9999 mem: location 1280 is 7
9999 mem: location 2006 is 1279
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1279
9999 mem: storing 32 in location 1279
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1279
9999 mem: location 1279 is 32
9999 mem: location 1280 is 7
9999 mem: location 2006 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1280
9999 mem: storing 7 in location 1280
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 133 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 133
9999 mem: storing 1281 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1281
9999 mem: location 1281 is 0
9999 mem: location 1282 is 7
9999 mem: location 2006 is 1281
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1281
9999 mem: storing 32 in location 1281
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1281
9999 mem: location 1281 is 32
9999 mem: location 1282 is 7
9999 mem: location 2006 is 1281
9999 run: address to copy is 1282
9999 mem: storing 1282 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1282
9999 mem: storing 7 in location 1282
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 3
9999 run: address to copy is 1881
9999 run: its type is character
9999 mem: location 1881 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 134 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 134
9999 mem: storing 1283 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1283
9999 mem: location 1283 is 0
9999 mem: location 1284 is 7
9999 mem: location 2006 is 1283
9999 run: address to copy is 1283
9999 mem: storing 1283 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1283
9999 mem: storing 32 in location 1283
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1283
9999 mem: location 1283 is 32
9999 mem: location 1284 is 7
9999 mem: location 2006 is 1283
9999 run: address to copy is 1284
9999 mem: storing 1284 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1284
9999 mem: storing 7 in location 1284
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 135 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 135
9999 mem: storing 1285 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1285
9999 mem: location 1285 is 0
9999 mem: location 1286 is 7
9999 mem: location 2006 is 1285
9999 run: address to copy is 1285
9999 mem: storing 1285 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1285
9999 mem: storing 32 in location 1285
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1285
9999 mem: location 1285 is 32
9999 mem: location 1286 is 7
9999 mem: location 2006 is 1285
9999 run: address to copy is 1286
9999 mem: storing 1286 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1286
9999 mem: storing 7 in location 1286
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 3
9999 run: address to copy is 1890
9999 run: its type is character
9999 mem: location 1890 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 136 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 136
9999 mem: storing 1287 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1287
9999 mem: location 1287 is 0
9999 mem: location 1288 is 7
9999 mem: location 2006 is 1287
9999 run: address to copy is 1287
9999 mem: storing 1287 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1287
9999 mem: storing 80 in location 1287
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1287
9999 mem: location 1287 is 80
9999 mem: location 1288 is 7
9999 mem: location 2006 is 1287
9999 run: address to copy is 1288
9999 mem: storing 1288 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1288
9999 mem: storing 7 in location 1288
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 137 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 137
9999 mem: storing 1289 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1290 is 7
9999 mem: location 2006 is 1289
9999 run: address to copy is 1289
9999 mem: storing 1289 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1289
9999 mem: storing 32 in location 1289
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1289
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: location 2006 is 1289
9999 run: address to copy is 1290
9999 mem: storing 1290 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1290
9999 mem: storing 7 in location 1290
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 3
9999 run: address to copy is 1899
9999 run: its type is character
9999 mem: location 1899 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 138 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 138
9999 mem: storing 1291 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1291
9999 mem: location 1291 is 0
9999 mem: location 1292 is 7
9999 mem: location 2006 is 1291
9999 run: address to copy is 1291
9999 mem: storing 1291 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1291
9999 mem: storing 32 in location 1291
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1291
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 2006 is 1291
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1292
9999 mem: storing 7 in location 1292
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1993 is 30
9999 mem: storing 120 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 120
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 139 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 139
9999 mem: storing 1293 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 7
9999 mem: location 2006 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1293
9999 mem: storing 32 in location 1293
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1293
9999 mem: location 1293 is 32
9999 mem: location 1294 is 7
9999 mem: location 2006 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1294
9999 mem: storing 7 in location 1294
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 3
9999 mem: storing 2 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1925 is 1011
9999 mem: storing 5 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 5
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 5
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 5 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 5
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 5
9999 mem: location 1926 is 1011
9999 mem: storing 5 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 2
9999 mem: storing 3 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 3
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 3 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 3 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 3
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 3
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2184
9999 mem: storing 2184 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 0
9999 mem: location 1923 is 2184
9999 run: address to copy is 2184
9999 mem: storing 2184 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2184
9999 mem: storing 0 in location 2184
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 0
9999 mem: location 1923 is 2184
9999 run: address to copy is 2185
9999 mem: storing 2185 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2186
9999 mem: location 1925 is 2185
9999 mem: storing 2186 in location 2185
 105 run: reply result
9999 mem: location 1923 is 2184
9999 run: result 0 is 2184
9999 mem: storing 2184 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 3
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 3
9999 mem: storing 0 in location 1906
9999 mem: storing 3 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 3
9999 mem: storing 51 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2184
9999 mem: location 1914 is 51
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2184 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 51 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 2186
9999 mem: location 1963 is 2184
9999 run: address to copy is 2184
9999 mem: storing 2184 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 51
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2184
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2184 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 2186
9999 mem: location 1923 is 2184
9999 run: address to copy is 2184
9999 run: its type is number
9999 mem: location 2184 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 2186
9999 mem: location 1923 is 2184
9999 run: address to copy is 2185
9999 run: its type is address
9999 mem: location 2185 is 2186
9999 mem: storing 2186 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2186
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2184
9999 mem: location 2184 is 0
9999 mem: location 2185 is 2186
9999 mem: location 1963 is 2184
9999 run: address to copy is 2185
9999 run: its type is address
9999 mem: location 2185 is 2186
9999 mem: storing 2186 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2186
9999 mem: location 1965 is 2184
9999 mem: location 2184 is 0
9999 mem: storing 2187 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 51
9999 mem: location 1970 is 2187
9999 mem: storing 51 in location 2187
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2184
9999 mem: location 2184 is 0
9999 mem: location 1965 is 2184
9999 mem: storing 1 in location 2184
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2184
9999 run: result 0 is 2184
9999 mem: storing 2184 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2184
9999 mem: location 2184 is 1
9999 mem: location 2185 is 2186
9999 mem: location 1910 is 2184
9999 run: address to copy is 2184
9999 run: its type is number
9999 mem: location 2184 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2184
9999 mem: location 2184 is 1
9999 mem: location 2185 is 2186
9999 mem: location 1910 is 2184
9999 run: address to copy is 2185
9999 run: its type is address
9999 mem: location 2185 is 2186
9999 mem: storing 2186 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2217
9999 mem: storing 2217 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2186
9999 mem: location 1917 is 0
9999 run: address to copy is 2187
9999 run: its type is character
9999 mem: location 2187 is 51
9999 mem: storing 51 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2217
9999 mem: location 1918 is 0
9999 mem: storing 2218 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 51
9999 mem: location 1920 is 2218
9999 mem: storing 51 in location 2218
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2217
9999 run: result 0 is 2217
9999 mem: storing 2217 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2217
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2217 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2217
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2217
9999 mem: location 1982 is 0
9999 run: address to copy is 2218
9999 run: its type is character
9999 mem: location 2218 is 51
9999 mem: storing 51 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 51
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 51 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 51
  90 print-character: 51 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 51
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 150 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 51
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 150
9999 mem: storing 1315 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1315
9999 mem: location 1315 is 0
9999 mem: location 1316 is 7
9999 mem: location 2006 is 1315
9999 run: address to copy is 1315
9999 mem: storing 1315 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 51
9999 mem: location 2007 is 1315
9999 mem: storing 51 in location 1315
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1315
9999 mem: location 1315 is 51
9999 mem: location 1316 is 7
9999 mem: location 2006 is 1315
9999 run: address to copy is 1316
9999 mem: storing 1316 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1316
9999 mem: storing 7 in location 1316
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2219 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2219
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2219 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2219
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2219
9999 mem: location 1982 is 0
9999 run: address to copy is 2220
9999 run: its type is character
9999 mem: location 2220 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 151 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 151
9999 mem: storing 1317 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1317
9999 mem: location 1317 is 0
9999 mem: location 1318 is 7
9999 mem: location 2006 is 1317
9999 run: address to copy is 1317
9999 mem: storing 1317 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1317
9999 mem: storing 32 in location 1317
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1317
9999 mem: location 1317 is 32
9999 mem: location 1318 is 7
9999 mem: location 2006 is 1317
9999 run: address to copy is 1318
9999 mem: storing 1318 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1318
9999 mem: storing 7 in location 1318
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2219
9999 mem: location 1982 is 1
9999 run: address to copy is 2221
9999 run: its type is character
9999 mem: location 2221 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 152 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 152
9999 mem: storing 1319 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1319
9999 mem: location 1319 is 0
9999 mem: location 1320 is 7
9999 mem: location 2006 is 1319
9999 run: address to copy is 1319
9999 mem: storing 1319 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1319
9999 mem: storing 124 in location 1319
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1319
9999 mem: location 1319 is 124
9999 mem: location 1320 is 7
9999 mem: location 2006 is 1319
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1320
9999 mem: storing 7 in location 1320
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2219
9999 mem: location 1982 is 2
9999 run: address to copy is 2222
9999 run: its type is character
9999 mem: location 2222 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 153 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 153
9999 mem: storing 1321 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1321
9999 mem: location 1321 is 0
9999 mem: location 1322 is 7
9999 mem: location 2006 is 1321
9999 run: address to copy is 1321
9999 mem: storing 1321 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1321
9999 mem: storing 32 in location 1321
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1321
9999 mem: location 1321 is 32
9999 mem: location 1322 is 7
9999 mem: location 2006 is 1321
9999 run: address to copy is 1322
9999 mem: storing 1322 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1322
9999 mem: storing 7 in location 1322
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 2
9999 run: address to copy is 1835
9999 run: its type is character
9999 mem: location 1835 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 154 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 154
9999 mem: storing 1323 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1323
9999 mem: location 1323 is 0
9999 mem: location 1324 is 7
9999 mem: location 2006 is 1323
9999 run: address to copy is 1323
9999 mem: storing 1323 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1323
9999 mem: storing 32 in location 1323
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1323
9999 mem: location 1323 is 32
9999 mem: location 1324 is 7
9999 mem: location 2006 is 1323
9999 run: address to copy is 1324
9999 mem: storing 1324 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1324
9999 mem: storing 7 in location 1324
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 155 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 155
9999 mem: storing 1325 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1326 is 7
9999 mem: location 2006 is 1325
9999 run: address to copy is 1325
9999 mem: storing 1325 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1325
9999 mem: storing 32 in location 1325
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1325
9999 mem: location 1325 is 32
9999 mem: location 1326 is 7
9999 mem: location 2006 is 1325
9999 run: address to copy is 1326
9999 mem: storing 1326 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1326
9999 mem: storing 7 in location 1326
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 2
9999 run: address to copy is 1844
9999 run: its type is character
9999 mem: location 1844 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 156 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 156
9999 mem: storing 1327 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1327
9999 mem: location 1327 is 0
9999 mem: location 1328 is 7
9999 mem: location 2006 is 1327
9999 run: address to copy is 1327
9999 mem: storing 1327 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1327
9999 mem: storing 32 in location 1327
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1327
9999 mem: location 1327 is 32
9999 mem: location 1328 is 7
9999 mem: location 2006 is 1327
9999 run: address to copy is 1328
9999 mem: storing 1328 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1328
9999 mem: storing 7 in location 1328
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 157 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 157
9999 mem: storing 1329 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1329
9999 mem: location 1329 is 0
9999 mem: location 1330 is 7
9999 mem: location 2006 is 1329
9999 run: address to copy is 1329
9999 mem: storing 1329 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1329
9999 mem: storing 32 in location 1329
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1329
9999 mem: location 1329 is 32
9999 mem: location 1330 is 7
9999 mem: location 2006 is 1329
9999 run: address to copy is 1330
9999 mem: storing 1330 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1330
9999 mem: storing 7 in location 1330
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 2
9999 run: address to copy is 1853
9999 run: its type is character
9999 mem: location 1853 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 158 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 158
9999 mem: storing 1331 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1331
9999 mem: location 1331 is 0
9999 mem: location 1332 is 7
9999 mem: location 2006 is 1331
9999 run: address to copy is 1331
9999 mem: storing 1331 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1331
9999 mem: storing 32 in location 1331
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1331
9999 mem: location 1331 is 32
9999 mem: location 1332 is 7
9999 mem: location 2006 is 1331
9999 run: address to copy is 1332
9999 mem: storing 1332 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1332
9999 mem: storing 7 in location 1332
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 159 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 159
9999 mem: storing 1333 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1333
9999 mem: location 1333 is 0
9999 mem: location 1334 is 7
9999 mem: location 2006 is 1333
9999 run: address to copy is 1333
9999 mem: storing 1333 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1333
9999 mem: storing 32 in location 1333
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1333
9999 mem: location 1333 is 32
9999 mem: location 1334 is 7
9999 mem: location 2006 is 1333
9999 run: address to copy is 1334
9999 mem: storing 1334 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1334
9999 mem: storing 7 in location 1334
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 2
9999 run: address to copy is 1862
9999 run: its type is character
9999 mem: location 1862 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 160 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 160
9999 mem: storing 1335 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1335
9999 mem: location 1335 is 0
9999 mem: location 1336 is 7
9999 mem: location 2006 is 1335
9999 run: address to copy is 1335
9999 mem: storing 1335 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1335
9999 mem: storing 32 in location 1335
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1335
9999 mem: location 1335 is 32
9999 mem: location 1336 is 7
9999 mem: location 2006 is 1335
9999 run: address to copy is 1336
9999 mem: storing 1336 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1336
9999 mem: storing 7 in location 1336
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 161 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 161
9999 mem: storing 1337 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1338 is 7
9999 mem: location 2006 is 1337
9999 run: address to copy is 1337
9999 mem: storing 1337 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1337
9999 mem: storing 32 in location 1337
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1337
9999 mem: location 1337 is 32
9999 mem: location 1338 is 7
9999 mem: location 2006 is 1337
9999 run: address to copy is 1338
9999 mem: storing 1338 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1338
9999 mem: storing 7 in location 1338
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 2
9999 run: address to copy is 1871
9999 run: its type is character
9999 mem: location 1871 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 162 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 162
9999 mem: storing 1339 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1340 is 7
9999 mem: location 2006 is 1339
9999 run: address to copy is 1339
9999 mem: storing 1339 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1339
9999 mem: storing 32 in location 1339
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1339
9999 mem: location 1339 is 32
9999 mem: location 1340 is 7
9999 mem: location 2006 is 1339
9999 run: address to copy is 1340
9999 mem: storing 1340 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1340
9999 mem: storing 7 in location 1340
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 163 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 163
9999 mem: storing 1341 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 7
9999 mem: location 2006 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1341
9999 mem: storing 32 in location 1341
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 7
9999 mem: location 2006 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1342
9999 mem: storing 7 in location 1342
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 2
9999 run: address to copy is 1880
9999 run: its type is character
9999 mem: location 1880 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 164 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 164
9999 mem: storing 1343 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1344 is 7
9999 mem: location 2006 is 1343
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1343
9999 mem: storing 32 in location 1343
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1343
9999 mem: location 1343 is 32
9999 mem: location 1344 is 7
9999 mem: location 2006 is 1343
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1344
9999 mem: storing 7 in location 1344
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 165 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 165
9999 mem: storing 1345 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1345
9999 mem: location 1345 is 0
9999 mem: location 1346 is 7
9999 mem: location 2006 is 1345
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1345
9999 mem: storing 32 in location 1345
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1345
9999 mem: location 1345 is 32
9999 mem: location 1346 is 7
9999 mem: location 2006 is 1345
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1346
9999 mem: storing 7 in location 1346
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 2
9999 run: address to copy is 1889
9999 run: its type is character
9999 mem: location 1889 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 166 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 166
9999 mem: storing 1347 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1347
9999 mem: location 1347 is 0
9999 mem: location 1348 is 7
9999 mem: location 2006 is 1347
9999 run: address to copy is 1347
9999 mem: storing 1347 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1347
9999 mem: storing 32 in location 1347
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1347
9999 mem: location 1347 is 32
9999 mem: location 1348 is 7
9999 mem: location 2006 is 1347
9999 run: address to copy is 1348
9999 mem: storing 1348 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1348
9999 mem: storing 7 in location 1348
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 167 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 167
9999 mem: storing 1349 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1349
9999 mem: location 1349 is 0
9999 mem: location 1350 is 7
9999 mem: location 2006 is 1349
9999 run: address to copy is 1349
9999 mem: storing 1349 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1349
9999 mem: storing 32 in location 1349
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1349
9999 mem: location 1349 is 32
9999 mem: location 1350 is 7
9999 mem: location 2006 is 1349
9999 run: address to copy is 1350
9999 mem: storing 1350 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1350
9999 mem: storing 7 in location 1350
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 2
9999 run: address to copy is 1898
9999 run: its type is character
9999 mem: location 1898 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 168 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 168
9999 mem: storing 1351 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1352 is 7
9999 mem: location 2006 is 1351
9999 run: address to copy is 1351
9999 mem: storing 1351 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1351
9999 mem: storing 32 in location 1351
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1351
9999 mem: location 1351 is 32
9999 mem: location 1352 is 7
9999 mem: location 2006 is 1351
9999 run: address to copy is 1352
9999 mem: storing 1352 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1352
9999 mem: storing 7 in location 1352
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1993 is 30
9999 mem: storing 150 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 150
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 169 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 169
9999 mem: storing 1353 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1353
9999 mem: location 1353 is 0
9999 mem: location 1354 is 7
9999 mem: location 2006 is 1353
9999 run: address to copy is 1353
9999 mem: storing 1353 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1353
9999 mem: storing 32 in location 1353
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1353
9999 mem: location 1353 is 32
9999 mem: location 1354 is 7
9999 mem: location 2006 is 1353
9999 run: address to copy is 1354
9999 mem: storing 1354 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1354
9999 mem: storing 7 in location 1354
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 2
9999 mem: storing 1 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1925 is 1011
9999 mem: storing 6 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 schedule: cursor-position/cursor-to-start-of-line/cursor-to-next-line/print-board/run1001/scenario-making-a-move
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 6
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 6
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 6 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 6
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 6
9999 mem: location 1926 is 1011
9999 mem: storing 6 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 1
9999 mem: storing 2 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 2 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 2
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 2 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 2
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 2
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2223
9999 mem: storing 2223 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 0
9999 mem: location 1923 is 2223
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2223
9999 mem: storing 0 in location 2223
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 0
9999 mem: location 1923 is 2223
9999 run: address to copy is 2224
9999 mem: storing 2224 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2225
9999 mem: location 1925 is 2224
9999 mem: storing 2225 in location 2224
 105 run: reply result
9999 mem: location 1923 is 2223
9999 run: result 0 is 2223
9999 mem: storing 2223 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 2
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 2
9999 mem: storing 0 in location 1906
9999 mem: storing 2 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 2
9999 mem: storing 50 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2223
9999 mem: location 1914 is 50
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2223 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 50 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2225
9999 mem: location 1963 is 2223
9999 run: address to copy is 2223
9999 mem: storing 2223 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 50
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2223
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2223 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2225
9999 mem: location 1923 is 2223
9999 run: address to copy is 2223
9999 run: its type is number
9999 mem: location 2223 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2225
9999 mem: location 1923 is 2223
9999 run: address to copy is 2224
9999 run: its type is address
9999 mem: location 2224 is 2225
9999 mem: storing 2225 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2225
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2223
9999 mem: location 2223 is 0
9999 mem: location 2224 is 2225
9999 mem: location 1963 is 2223
9999 run: address to copy is 2224
9999 run: its type is address
9999 mem: location 2224 is 2225
9999 mem: storing 2225 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2225
9999 mem: location 1965 is 2223
9999 mem: location 2223 is 0
9999 mem: storing 2226 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 50
9999 mem: location 1970 is 2226
9999 mem: storing 50 in location 2226
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2223
9999 mem: location 2223 is 0
9999 mem: location 1965 is 2223
9999 mem: storing 1 in location 2223
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2223
9999 run: result 0 is 2223
9999 mem: storing 2223 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2223
9999 mem: location 2223 is 1
9999 mem: location 2224 is 2225
9999 mem: location 1910 is 2223
9999 run: address to copy is 2223
9999 run: its type is number
9999 mem: location 2223 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2223
9999 mem: location 2223 is 1
9999 mem: location 2224 is 2225
9999 mem: location 1910 is 2223
9999 run: address to copy is 2224
9999 run: its type is address
9999 mem: location 2224 is 2225
9999 mem: storing 2225 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2256
9999 mem: storing 2256 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2225
9999 mem: location 1917 is 0
9999 run: address to copy is 2226
9999 run: its type is character
9999 mem: location 2226 is 50
9999 mem: storing 50 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2256
9999 mem: location 1918 is 0
9999 mem: storing 2257 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 50
9999 mem: location 1920 is 2257
9999 mem: storing 50 in location 2257
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2256
9999 run: result 0 is 2256
9999 mem: storing 2256 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2256
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2256 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2256
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2256
9999 mem: location 1982 is 0
9999 run: address to copy is 2257
9999 run: its type is character
9999 mem: location 2257 is 50
9999 mem: storing 50 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 50
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 50 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 50
  90 print-character: 50 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 50
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 180 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 50
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 180
9999 mem: storing 1375 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1375
9999 mem: location 1375 is 0
9999 mem: location 1376 is 7
9999 mem: location 2006 is 1375
9999 run: address to copy is 1375
9999 mem: storing 1375 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 50
9999 mem: location 2007 is 1375
9999 mem: storing 50 in location 1375
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1375
9999 mem: location 1375 is 50
9999 mem: location 1376 is 7
9999 mem: location 2006 is 1375
9999 run: address to copy is 1376
9999 mem: storing 1376 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1376
9999 mem: storing 7 in location 1376
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2258 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2258
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2258 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2258
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2258
9999 mem: location 1982 is 0
9999 run: address to copy is 2259
9999 run: its type is character
9999 mem: location 2259 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 181 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 181
9999 mem: storing 1377 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 7
9999 mem: location 2006 is 1377
9999 run: address to copy is 1377
9999 mem: storing 1377 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1377
9999 mem: storing 32 in location 1377
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1377
9999 mem: location 1377 is 32
9999 mem: location 1378 is 7
9999 mem: location 2006 is 1377
9999 run: address to copy is 1378
9999 mem: storing 1378 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1378
9999 mem: storing 7 in location 1378
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2258
9999 mem: location 1982 is 1
9999 run: address to copy is 2260
9999 run: its type is character
9999 mem: location 2260 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 182 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 182
9999 mem: storing 1379 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1379
9999 mem: location 1379 is 0
9999 mem: location 1380 is 7
9999 mem: location 2006 is 1379
9999 run: address to copy is 1379
9999 mem: storing 1379 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1379
9999 mem: storing 124 in location 1379
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1379
9999 mem: location 1379 is 124
9999 mem: location 1380 is 7
9999 mem: location 2006 is 1379
9999 run: address to copy is 1380
9999 mem: storing 1380 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1380
9999 mem: storing 7 in location 1380
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2258
9999 mem: location 1982 is 2
9999 run: address to copy is 2261
9999 run: its type is character
9999 mem: location 2261 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 183 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 183
9999 mem: storing 1381 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1381
9999 mem: location 1381 is 0
9999 mem: location 1382 is 7
9999 mem: location 2006 is 1381
9999 run: address to copy is 1381
9999 mem: storing 1381 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1381
9999 mem: storing 32 in location 1381
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1381
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 2006 is 1381
9999 run: address to copy is 1382
9999 mem: storing 1382 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1382
9999 mem: storing 7 in location 1382
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 1
9999 run: address to copy is 1834
9999 run: its type is character
9999 mem: location 1834 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 184 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 184
9999 mem: storing 1383 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1383
9999 mem: location 1383 is 0
9999 mem: location 1384 is 7
9999 mem: location 2006 is 1383
9999 run: address to copy is 1383
9999 mem: storing 1383 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1383
9999 mem: storing 80 in location 1383
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1383
9999 mem: location 1383 is 80
9999 mem: location 1384 is 7
9999 mem: location 2006 is 1383
9999 run: address to copy is 1384
9999 mem: storing 1384 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1384
9999 mem: storing 7 in location 1384
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 185 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 185
9999 mem: storing 1385 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1385
9999 mem: location 1385 is 0
9999 mem: location 1386 is 7
9999 mem: location 2006 is 1385
9999 run: address to copy is 1385
9999 mem: storing 1385 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1385
9999 mem: storing 32 in location 1385
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1385
9999 mem: location 1385 is 32
9999 mem: location 1386 is 7
9999 mem: location 2006 is 1385
9999 run: address to copy is 1386
9999 mem: storing 1386 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1386
9999 mem: storing 7 in location 1386
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 1
9999 run: address to copy is 1843
9999 run: its type is character
9999 mem: location 1843 is 80
9999 mem: storing 80 in location 1745
9999 schedule: print-board/run1001/scenario-making-a-move
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 186 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 186
9999 mem: storing 1387 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1387
9999 mem: location 1387 is 0
9999 mem: location 1388 is 7
9999 mem: location 2006 is 1387
9999 run: address to copy is 1387
9999 mem: storing 1387 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1387
9999 mem: storing 80 in location 1387
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1387
9999 mem: location 1387 is 80
9999 mem: location 1388 is 7
9999 mem: location 2006 is 1387
9999 run: address to copy is 1388
9999 mem: storing 1388 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1388
9999 mem: storing 7 in location 1388
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 187 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 187
9999 mem: storing 1389 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1389
9999 mem: location 1389 is 0
9999 mem: location 1390 is 7
9999 mem: location 2006 is 1389
9999 run: address to copy is 1389
9999 mem: storing 1389 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1389
9999 mem: storing 32 in location 1389
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1389
9999 mem: location 1389 is 32
9999 mem: location 1390 is 7
9999 mem: location 2006 is 1389
9999 run: address to copy is 1390
9999 mem: storing 1390 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1390
9999 mem: storing 7 in location 1390
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 1
9999 run: address to copy is 1852
9999 run: its type is character
9999 mem: location 1852 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 188 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 188
9999 mem: storing 1391 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1391
9999 mem: location 1391 is 0
9999 mem: location 1392 is 7
9999 mem: location 2006 is 1391
9999 run: address to copy is 1391
9999 mem: storing 1391 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1391
9999 mem: storing 80 in location 1391
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1391
9999 mem: location 1391 is 80
9999 mem: location 1392 is 7
9999 mem: location 2006 is 1391
9999 run: address to copy is 1392
9999 mem: storing 1392 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1392
9999 mem: storing 7 in location 1392
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 189 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 189
9999 mem: storing 1393 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1393
9999 mem: location 1393 is 0
9999 mem: location 1394 is 7
9999 mem: location 2006 is 1393
9999 run: address to copy is 1393
9999 mem: storing 1393 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1393
9999 mem: storing 32 in location 1393
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1393
9999 mem: location 1393 is 32
9999 mem: location 1394 is 7
9999 mem: location 2006 is 1393
9999 run: address to copy is 1394
9999 mem: storing 1394 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1394
9999 mem: storing 7 in location 1394
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 1
9999 run: address to copy is 1861
9999 run: its type is character
9999 mem: location 1861 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 190 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 190
9999 mem: storing 1395 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1395
9999 mem: location 1395 is 0
9999 mem: location 1396 is 7
9999 mem: location 2006 is 1395
9999 run: address to copy is 1395
9999 mem: storing 1395 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1395
9999 mem: storing 80 in location 1395
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1395
9999 mem: location 1395 is 80
9999 mem: location 1396 is 7
9999 mem: location 2006 is 1395
9999 run: address to copy is 1396
9999 mem: storing 1396 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1396
9999 mem: storing 7 in location 1396
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 191 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 191
9999 mem: storing 1397 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1397
9999 mem: location 1397 is 0
9999 mem: location 1398 is 7
9999 mem: location 2006 is 1397
9999 run: address to copy is 1397
9999 mem: storing 1397 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1397
9999 mem: storing 32 in location 1397
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1397
9999 mem: location 1397 is 32
9999 mem: location 1398 is 7
9999 mem: location 2006 is 1397
9999 run: address to copy is 1398
9999 mem: storing 1398 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1398
9999 mem: storing 7 in location 1398
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 1
9999 run: address to copy is 1870
9999 run: its type is character
9999 mem: location 1870 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 192 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 192
9999 mem: storing 1399 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1399
9999 mem: location 1399 is 0
9999 mem: location 1400 is 7
9999 mem: location 2006 is 1399
9999 run: address to copy is 1399
9999 mem: storing 1399 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1399
9999 mem: storing 80 in location 1399
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1399
9999 mem: location 1399 is 80
9999 mem: location 1400 is 7
9999 mem: location 2006 is 1399
9999 run: address to copy is 1400
9999 mem: storing 1400 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1400
9999 mem: storing 7 in location 1400
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 193 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 193
9999 mem: storing 1401 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1402 is 7
9999 mem: location 2006 is 1401
9999 run: address to copy is 1401
9999 mem: storing 1401 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1401
9999 mem: storing 32 in location 1401
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1401
9999 mem: location 1401 is 32
9999 mem: location 1402 is 7
9999 mem: location 2006 is 1401
9999 run: address to copy is 1402
9999 mem: storing 1402 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1402
9999 mem: storing 7 in location 1402
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 1
9999 run: address to copy is 1879
9999 run: its type is character
9999 mem: location 1879 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 194 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 194
9999 mem: storing 1403 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1403
9999 mem: location 1403 is 0
9999 mem: location 1404 is 7
9999 mem: location 2006 is 1403
9999 run: address to copy is 1403
9999 mem: storing 1403 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1403
9999 mem: storing 80 in location 1403
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1403
9999 mem: location 1403 is 80
9999 mem: location 1404 is 7
9999 mem: location 2006 is 1403
9999 run: address to copy is 1404
9999 mem: storing 1404 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1404
9999 mem: storing 7 in location 1404
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 195 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 195
9999 mem: storing 1405 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1405
9999 mem: location 1405 is 0
9999 mem: location 1406 is 7
9999 mem: location 2006 is 1405
9999 run: address to copy is 1405
9999 mem: storing 1405 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1405
9999 mem: storing 32 in location 1405
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1405
9999 mem: location 1405 is 32
9999 mem: location 1406 is 7
9999 mem: location 2006 is 1405
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1406
9999 mem: storing 7 in location 1406
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 1
9999 run: address to copy is 1888
9999 run: its type is character
9999 mem: location 1888 is 32
9999 mem: storing 32 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 32
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 196 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 196
9999 mem: storing 1407 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1407
9999 mem: location 1407 is 0
9999 mem: location 1408 is 7
9999 mem: location 2006 is 1407
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1407
9999 mem: storing 32 in location 1407
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1407
9999 mem: location 1407 is 32
9999 mem: location 1408 is 7
9999 mem: location 2006 is 1407
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1408
9999 mem: storing 7 in location 1408
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 197 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 197
9999 mem: storing 1409 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1410 is 7
9999 mem: location 2006 is 1409
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1409
9999 mem: storing 32 in location 1409
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1409
9999 mem: location 1409 is 32
9999 mem: location 1410 is 7
9999 mem: location 2006 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1410
9999 mem: storing 7 in location 1410
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 1
9999 run: address to copy is 1897
9999 run: its type is character
9999 mem: location 1897 is 80
9999 mem: storing 80 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 80
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 80 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 80
  90 print-character: 80 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 198 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 80
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 198
9999 mem: storing 1411 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1411
9999 mem: location 1411 is 0
9999 mem: location 1412 is 7
9999 mem: location 2006 is 1411
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 80
9999 mem: location 2007 is 1411
9999 mem: storing 80 in location 1411
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1411
9999 mem: location 1411 is 80
9999 mem: location 1412 is 7
9999 mem: location 2006 is 1411
9999 run: address to copy is 1412
9999 mem: storing 1412 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1412
9999 mem: storing 7 in location 1412
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1993 is 30
9999 mem: storing 180 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 180
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 199 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 199
9999 mem: storing 1413 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1413
9999 mem: location 1413 is 0
9999 mem: location 1414 is 7
9999 mem: location 2006 is 1413
9999 run: address to copy is 1413
9999 mem: storing 1413 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1413
9999 mem: storing 32 in location 1413
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1413
9999 mem: location 1413 is 32
9999 mem: location 1414 is 7
9999 mem: location 2006 is 1413
9999 run: address to copy is 1414
9999 mem: storing 1414 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1414
9999 mem: storing 7 in location 1414
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 1
9999 mem: storing 0 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1925 is 1011
9999 mem: storing 7 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 7
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 7
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 7 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 7
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 7
9999 mem: location 1926 is 1011
9999 mem: storing 7 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: rank:number <- add row, 1
9999 mem: location 1739 is 0
9999 mem: storing 1 in location 1741
 102 run: print-integer screen, rank
9999 mem: location 1737 is 1009
9999 mem: location 1741 is 1
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1002
 103 run: n:number <- next-ingredient 
9999 mem: storing 1 in location 1003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
 103 run: break-if color-found?, 
9999 mem: location 1005 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
 103 run: break-if bg-color-found?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1006
 103 run: s:address:array:character <- integer-to-decimal-string n
9999 mem: location 1003 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
 104 run: n:number <- next-ingredient 
9999 mem: storing 1 in location 1906
 104 run: break-if n, 
9999 mem: location 1906 is 1
9999 run: jumping to instruction 6
 104 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1908
 104 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1906 is 1
9999 mem: storing 0 in location 1909
 104 run: break-unless negative?, 
9999 mem: location 1909 is 0
9999 run: jumping to instruction 13
 104 run: tmp:address:buffer <- new-buffer 30
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: result:address:buffer <- new buffer:type
9999 mem: new alloc: 2262
9999 mem: storing 2262 in location 1923
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1923 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 0
9999 mem: location 1923 is 2262
9999 run: address to copy is 2262
9999 mem: storing 2262 in location 1924
 105 run: *len:address:number <- copy 0
9999 mem: location 1924 is 2262
9999 mem: storing 0 in location 2262
 105 run: s:address:address:array:character <- get-address *result, data:offset
9999 mem: location 1923 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 0
9999 mem: location 1923 is 2262
9999 run: address to copy is 2263
9999 mem: storing 2263 in location 1925
 105 run: capacity:number, found?:boolean <- next-ingredient 
9999 mem: storing 30 in location 1926
9999 mem: storing 1 in location 1927
 105 run: assert found?, [new-buffer must get a capacity argument]
9999 mem: location 1927 is 1
 105 run: *s <- new character:type, capacity
9999 mem: location 1926 is 30
9999 mem: array size is 30
9999 mem: new alloc: 2264
9999 mem: location 1925 is 2263
9999 mem: storing 2264 in location 2263
 105 run: reply result
9999 mem: location 1923 is 2262
9999 run: result 0 is 2262
9999 mem: storing 2262 in location 1910
 104 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1911
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 1
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1906 is 1
9999 mem: storing 0 in location 1906
9999 mem: storing 1 in location 1913
 104 run: c:character <- add digit-base, digit
9999 mem: location 1911 is 48
9999 mem: location 1913 is 1
9999 mem: storing 49 in location 1914
 104 run: tmp:address:buffer <- buffer-append tmp, c
9999 mem: location 1910 is 2262
9999 mem: location 1914 is 49
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 105 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2262 in location 1963
 105 run: c:character <- next-ingredient 
9999 mem: storing 49 in location 1964
 105 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1963 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 2264
9999 mem: location 1963 is 2262
9999 run: address to copy is 2262
9999 mem: storing 2262 in location 1965
 105 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1964 is 49
9999 mem: storing 0 in location 1966
 105 run: break-unless backspace?, 
9999 mem: location 1966 is 0
9999 run: jumping to instruction 12
 105 run: full?:boolean <- buffer-full? in
9999 mem: location 1963 is 2262
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: in:address:buffer <- next-ingredient 
9999 mem: storing 2262 in location 1923
 106 run: len:number <- get *in, length:offset
9999 mem: location 1923 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 2264
9999 mem: location 1923 is 2262
9999 run: address to copy is 2262
9999 run: its type is number
9999 mem: location 2262 is 0
9999 mem: storing 0 in location 1924
 106 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1923 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 2264
9999 mem: location 1923 is 2262
9999 run: address to copy is 2263
9999 run: its type is address
9999 mem: location 2263 is 2264
9999 mem: storing 2264 in location 1925
 106 run: capacity:number <- length *s
9999 mem: location 1925 is 2264
9999 mem: storing 30 in location 1926
 106 run: result:boolean <- greater-or-equal len, capacity
9999 mem: location 1924 is 0
9999 mem: location 1926 is 30
9999 mem: storing 0 in location 1927
 106 run: reply result
9999 mem: location 1927 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1968
 105 run: break-unless full?, 
9999 mem: location 1968 is 0
9999 run: jumping to instruction 17
 105 run: s:address:array:character <- get *in, data:offset
9999 mem: location 1963 is 2262
9999 mem: location 2262 is 0
9999 mem: location 2263 is 2264
9999 mem: location 1963 is 2262
9999 run: address to copy is 2263
9999 run: its type is address
9999 mem: location 2263 is 2264
9999 mem: storing 2264 in location 1969
 105 run: dest:address:character <- index-address *s, *len
9999 mem: location 1969 is 2264
9999 mem: location 1965 is 2262
9999 mem: location 2262 is 0
9999 mem: storing 2265 in location 1970
 105 run: *dest <- copy c
9999 mem: location 1964 is 49
9999 mem: location 1970 is 2265
9999 mem: storing 49 in location 2265
 105 run: *len <- add *len, 1
9999 mem: location 1965 is 2262
9999 mem: location 2262 is 0
9999 mem: location 1965 is 2262
9999 mem: storing 1 in location 2262
 105 run: reply in/same-as-ingredient:0
9999 mem: location 1963 is 2262
9999 run: result 0 is 2262
9999 mem: storing 2262 in location 1910
 104 run: loop 
9999 run: jumping to instruction 17
 104 run: done?:boolean <- equal n, 0
9999 mem: location 1906 is 0
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 23
 104 run: break-unless negate-result:boolean, 
9999 mem: location 1908 is 0
9999 run: jumping to instruction 27
 104 run: len:number <- get *tmp, length:offset
9999 mem: location 1910 is 2262
9999 mem: location 2262 is 1
9999 mem: location 2263 is 2264
9999 mem: location 1910 is 2262
9999 run: address to copy is 2262
9999 run: its type is number
9999 mem: location 2262 is 1
9999 mem: storing 1 in location 1915
 104 run: buf:address:array:character <- get *tmp, data:offset
9999 mem: location 1910 is 2262
9999 mem: location 2262 is 1
9999 mem: location 2263 is 2264
9999 mem: location 1910 is 2262
9999 run: address to copy is 2263
9999 run: its type is address
9999 mem: location 2263 is 2264
9999 mem: storing 2264 in location 1916
 104 run: result:address:array:character <- new character:type, len
9999 mem: location 1915 is 1
9999 mem: array size is 1
9999 mem: new alloc: 2295
9999 mem: storing 2295 in location 1907
 104 run: i:number <- subtract len, 1
9999 mem: location 1915 is 1
9999 mem: storing 0 in location 1917
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1918
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is 0
9999 mem: storing 0 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 0
9999 run: jump-if fell through
 104 run: src:character <- index *buf, i
9999 mem: location 1916 is 2264
9999 mem: location 1917 is 0
9999 run: address to copy is 2265
9999 run: its type is character
9999 mem: location 2265 is 49
9999 mem: storing 49 in location 1919
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1907 is 2295
9999 mem: location 1918 is 0
9999 mem: storing 2296 in location 1920
 104 run: *dest <- copy src
9999 mem: location 1919 is 49
9999 mem: location 1920 is 2296
9999 mem: storing 49 in location 2296
 104 run: i <- subtract i, 1
9999 mem: location 1917 is 0
9999 mem: storing -1 in location 1917
 104 run: j <- add j, 1
9999 mem: location 1918 is 0
9999 mem: storing 1 in location 1918
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1917 is -1
9999 mem: storing 1 in location 1912
 104 run: break-if done?, 
9999 mem: location 1912 is 1
9999 run: jumping to instruction 42
 104 run: reply result
9999 mem: location 1907 is 2295
9999 run: result 0 is 2295
9999 mem: storing 2295 in location 1008
 103 run: print-string screen, s, color, bg-color
9999 mem: location 1002 is 1009
9999 mem: location 1008 is 2295
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2295 in location 1976
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1977
9999 mem: storing 1 in location 1978
 104 run: break-if color-found?, 
9999 mem: location 1978 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 1 in location 1980
 104 run: break-if bg-color-found?, 
9999 mem: location 1980 is 1
9999 run: jumping to instruction 12
 104 run: len:number <- length *s
9999 mem: location 1976 is 2295
9999 mem: storing 1 in location 1981
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 1
9999 mem: storing 0 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 104 run: c:character <- index *s, i
9999 mem: location 1976 is 2295
9999 mem: location 1982 is 0
9999 run: address to copy is 2296
9999 run: its type is character
9999 mem: location 2296 is 49
9999 mem: storing 49 in location 1984
 104 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 49
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 105 run: c:character <- next-ingredient 
9999 mem: storing 49 in location 1988
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 105 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 105 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1988 is 49
  90 print-character: 49 
 105 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 105 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 49
9999 mem: storing 0 in location 1998
 105 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 105 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 210 in location 2001
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 105 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 49
9999 mem: storing 0 in location 2004
 105 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 210
9999 mem: storing 1435 in location 2006
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1435
9999 mem: location 1435 is 0
9999 mem: location 1436 is 7
9999 mem: location 2006 is 1435
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 2007
 105 run: *cursor-contents <- copy c
9999 mem: location 1988 is 49
9999 mem: location 2007 is 1435
9999 mem: storing 49 in location 1435
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1435
9999 mem: location 1435 is 49
9999 mem: location 1436 is 7
9999 mem: location 2006 is 1435
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 2008
 105 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1436
9999 mem: storing 7 in location 1436
 105 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 105 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 104 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 104 run: loop 
9999 run: jumping to instruction 16
 104 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 1
9999 mem: storing 1 in location 1983
 104 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1002 is 1009
 102 run: s:address:array:character <- new [ | ]
9999 mem: storing 2297 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2297
9999 schedule: print-string/print-board/run1001/scenario-making-a-move
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2297 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2297
9999 mem: storing 3 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2297
9999 mem: location 1982 is 0
9999 run: address to copy is 2298
9999 run: its type is character
9999 mem: location 2298 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 211 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 211
9999 mem: storing 1437 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1437
9999 mem: location 1437 is 0
9999 mem: location 1438 is 7
9999 mem: location 2006 is 1437
9999 run: address to copy is 1437
9999 mem: storing 1437 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1437
9999 mem: storing 32 in location 1437
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1437
9999 mem: location 1437 is 32
9999 mem: location 1438 is 7
9999 mem: location 2006 is 1437
9999 run: address to copy is 1438
9999 mem: storing 1438 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1438
9999 mem: storing 7 in location 1438
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2297
9999 mem: location 1982 is 1
9999 run: address to copy is 2299
9999 run: its type is character
9999 mem: location 2299 is 124
9999 mem: storing 124 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 124
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 124 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 124
  90 print-character: 124 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 212 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 124
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 212
9999 mem: storing 1439 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1439
9999 mem: location 1439 is 0
9999 mem: location 1440 is 7
9999 mem: location 2006 is 1439
9999 run: address to copy is 1439
9999 mem: storing 1439 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 124
9999 mem: location 2007 is 1439
9999 mem: storing 124 in location 1439
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1439
9999 mem: location 1439 is 124
9999 mem: location 1440 is 7
9999 mem: location 2006 is 1439
9999 run: address to copy is 1440
9999 mem: storing 1440 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1440
9999 mem: storing 7 in location 1440
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 3
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2297
9999 mem: location 1982 is 2
9999 run: address to copy is 2300
9999 run: its type is character
9999 mem: location 2300 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 213 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 213
9999 mem: storing 1441 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1441
9999 mem: location 1441 is 0
9999 mem: location 1442 is 7
9999 mem: location 2006 is 1441
9999 run: address to copy is 1441
9999 mem: storing 1441 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1441
9999 mem: storing 32 in location 1441
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1441
9999 mem: location 1441 is 32
9999 mem: location 1442 is 7
9999 mem: location 2006 is 1441
9999 run: address to copy is 1442
9999 mem: storing 1442 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1442
9999 mem: storing 7 in location 1442
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 3
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: col:number <- copy 0
9999 mem: storing 0 in location 1743
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 0
9999 run: address to copy is 1816
9999 run: its type is address
9999 mem: location 1816 is 1832
9999 mem: storing 1832 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1832
9999 mem: location 1739 is 0
9999 run: address to copy is 1833
9999 run: its type is character
9999 mem: location 1833 is 82
9999 mem: storing 82 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 82
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 82 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 82
  90 print-character: 82 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 82
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 214 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 82
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 214
9999 mem: storing 1443 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1443
9999 mem: location 1443 is 0
9999 mem: location 1444 is 7
9999 mem: location 2006 is 1443
9999 run: address to copy is 1443
9999 mem: storing 1443 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 82
9999 mem: location 2007 is 1443
9999 mem: storing 82 in location 1443
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1443
9999 mem: location 1443 is 82
9999 mem: location 1444 is 7
9999 mem: location 2006 is 1443
9999 run: address to copy is 1444
9999 mem: storing 1444 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1444
9999 mem: storing 7 in location 1444
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 215 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 215
9999 mem: storing 1445 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1445
9999 mem: location 1445 is 0
9999 mem: location 1446 is 7
9999 mem: location 2006 is 1445
9999 run: address to copy is 1445
9999 mem: storing 1445 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1445
9999 mem: storing 32 in location 1445
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1445
9999 mem: location 1445 is 32
9999 mem: location 1446 is 7
9999 mem: location 2006 is 1445
9999 run: address to copy is 1446
9999 mem: storing 1446 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1446
9999 mem: storing 7 in location 1446
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 1
9999 run: address to copy is 1817
9999 run: its type is address
9999 mem: location 1817 is 1841
9999 mem: storing 1841 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1841
9999 mem: location 1739 is 0
9999 run: address to copy is 1842
9999 run: its type is character
9999 mem: location 1842 is 78
9999 mem: storing 78 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 78
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 78 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 78
  90 print-character: 78 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 78
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 216 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 78
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 216
9999 mem: storing 1447 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1448 is 7
9999 mem: location 2006 is 1447
9999 run: address to copy is 1447
9999 mem: storing 1447 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 78
9999 mem: location 2007 is 1447
9999 mem: storing 78 in location 1447
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1447
9999 mem: location 1447 is 78
9999 mem: location 1448 is 7
9999 mem: location 2006 is 1447
9999 run: address to copy is 1448
9999 mem: storing 1448 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1448
9999 mem: storing 7 in location 1448
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 217 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 217
9999 mem: storing 1449 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 7
9999 mem: location 2006 is 1449
9999 run: address to copy is 1449
9999 mem: storing 1449 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1449
9999 mem: storing 32 in location 1449
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1449
9999 mem: location 1449 is 32
9999 mem: location 1450 is 7
9999 mem: location 2006 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1450
9999 mem: storing 7 in location 1450
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 2
9999 run: address to copy is 1818
9999 run: its type is address
9999 mem: location 1818 is 1850
9999 mem: storing 1850 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1850
9999 mem: location 1739 is 0
9999 run: address to copy is 1851
9999 run: its type is character
9999 mem: location 1851 is 66
9999 mem: storing 66 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 66
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 66 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 66
  90 print-character: 66 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 66
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 218 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 66
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 218
9999 mem: storing 1451 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1451
9999 mem: location 1451 is 0
9999 mem: location 1452 is 7
9999 mem: location 2006 is 1451
9999 run: address to copy is 1451
9999 mem: storing 1451 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 66
9999 mem: location 2007 is 1451
9999 mem: storing 66 in location 1451
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1451
9999 mem: location 1451 is 66
9999 mem: location 1452 is 7
9999 mem: location 2006 is 1451
9999 run: address to copy is 1452
9999 mem: storing 1452 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1452
9999 mem: storing 7 in location 1452
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 219 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 219
9999 mem: storing 1453 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1453
9999 mem: location 1453 is 0
9999 mem: location 1454 is 7
9999 mem: location 2006 is 1453
9999 run: address to copy is 1453
9999 mem: storing 1453 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1453
9999 mem: storing 32 in location 1453
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1453
9999 mem: location 1453 is 32
9999 mem: location 1454 is 7
9999 mem: location 2006 is 1453
9999 run: address to copy is 1454
9999 mem: storing 1454 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1454
9999 mem: storing 7 in location 1454
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 3
9999 run: address to copy is 1819
9999 run: its type is address
9999 mem: location 1819 is 1859
9999 mem: storing 1859 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1859
9999 mem: location 1739 is 0
9999 run: address to copy is 1860
9999 run: its type is character
9999 mem: location 1860 is 81
9999 mem: storing 81 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 81
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 81 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 81
  90 print-character: 81 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 81
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 220 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 81
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 220
9999 mem: storing 1455 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1455
9999 mem: location 1455 is 0
9999 mem: location 1456 is 7
9999 mem: location 2006 is 1455
9999 run: address to copy is 1455
9999 mem: storing 1455 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 81
9999 mem: location 2007 is 1455
9999 mem: storing 81 in location 1455
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1455
9999 mem: location 1455 is 81
9999 mem: location 1456 is 7
9999 mem: location 2006 is 1455
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1456
9999 mem: storing 7 in location 1456
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 221 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 221
9999 mem: storing 1457 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1457
9999 mem: location 1457 is 0
9999 mem: location 1458 is 7
9999 mem: location 2006 is 1457
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1457
9999 mem: storing 32 in location 1457
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1457
9999 mem: location 1457 is 32
9999 mem: location 1458 is 7
9999 mem: location 2006 is 1457
9999 run: address to copy is 1458
9999 mem: storing 1458 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1458
9999 mem: storing 7 in location 1458
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 4
9999 run: address to copy is 1820
9999 run: its type is address
9999 mem: location 1820 is 1868
9999 mem: storing 1868 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1868
9999 mem: location 1739 is 0
9999 run: address to copy is 1869
9999 run: its type is character
9999 mem: location 1869 is 75
9999 mem: storing 75 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 75
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 75 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 75
  90 print-character: 75 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 75
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 222 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 75
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 222
9999 mem: storing 1459 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1459
9999 mem: location 1459 is 0
9999 mem: location 1460 is 7
9999 mem: location 2006 is 1459
9999 run: address to copy is 1459
9999 mem: storing 1459 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 75
9999 mem: location 2007 is 1459
9999 mem: storing 75 in location 1459
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1459
9999 mem: location 1459 is 75
9999 mem: location 1460 is 7
9999 mem: location 2006 is 1459
9999 run: address to copy is 1460
9999 mem: storing 1460 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1460
9999 mem: storing 7 in location 1460
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 223 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 223
9999 mem: storing 1461 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1461
9999 mem: location 1461 is 0
9999 mem: location 1462 is 7
9999 mem: location 2006 is 1461
9999 run: address to copy is 1461
9999 mem: storing 1461 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1461
9999 mem: storing 32 in location 1461
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1461
9999 mem: location 1461 is 32
9999 mem: location 1462 is 7
9999 mem: location 2006 is 1461
9999 run: address to copy is 1462
9999 mem: storing 1462 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1462
9999 mem: storing 7 in location 1462
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 5
9999 run: address to copy is 1821
9999 run: its type is address
9999 mem: location 1821 is 1877
9999 mem: storing 1877 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1877
9999 mem: location 1739 is 0
9999 run: address to copy is 1878
9999 run: its type is character
9999 mem: location 1878 is 66
9999 mem: storing 66 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 66
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 66 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 66
  90 print-character: 66 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 66
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 224 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 66
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 224
9999 mem: storing 1463 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1463
9999 mem: location 1463 is 0
9999 mem: location 1464 is 7
9999 mem: location 2006 is 1463
9999 run: address to copy is 1463
9999 mem: storing 1463 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 66
9999 mem: location 2007 is 1463
9999 mem: storing 66 in location 1463
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1463
9999 mem: location 1463 is 66
9999 mem: location 1464 is 7
9999 mem: location 2006 is 1463
9999 run: address to copy is 1464
9999 mem: storing 1464 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1464
9999 mem: storing 7 in location 1464
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 225 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 225
9999 mem: storing 1465 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1465
9999 mem: location 1465 is 0
9999 mem: location 1466 is 7
9999 mem: location 2006 is 1465
9999 run: address to copy is 1465
9999 mem: storing 1465 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1465
9999 mem: storing 32 in location 1465
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1465
9999 mem: location 1465 is 32
9999 mem: location 1466 is 7
9999 mem: location 2006 is 1465
9999 run: address to copy is 1466
9999 mem: storing 1466 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1466
9999 mem: storing 7 in location 1466
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 6
9999 run: address to copy is 1822
9999 run: its type is address
9999 mem: location 1822 is 1886
9999 mem: storing 1886 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1886
9999 mem: location 1739 is 0
9999 run: address to copy is 1887
9999 run: its type is character
9999 mem: location 1887 is 78
9999 mem: storing 78 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 78
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 78 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 78
  90 print-character: 78 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 78
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 226 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 78
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 226
9999 mem: storing 1467 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1468 is 7
9999 mem: location 2006 is 1467
9999 run: address to copy is 1467
9999 mem: storing 1467 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 78
9999 mem: location 2007 is 1467
9999 mem: storing 78 in location 1467
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1467
9999 mem: location 1467 is 78
9999 mem: location 1468 is 7
9999 mem: location 2006 is 1467
9999 run: address to copy is 1468
9999 mem: storing 1468 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1468
9999 mem: storing 7 in location 1468
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 227 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 227
9999 mem: storing 1469 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1469
9999 mem: location 1469 is 0
9999 mem: location 1470 is 7
9999 mem: location 2006 is 1469
9999 run: address to copy is 1469
9999 mem: storing 1469 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1469
9999 mem: storing 32 in location 1469
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1469
9999 mem: location 1469 is 32
9999 mem: location 1470 is 7
9999 mem: location 2006 is 1469
9999 run: address to copy is 1470
9999 mem: storing 1470 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1470
9999 mem: storing 7 in location 1470
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 0
9999 run: jump-if fell through
 102 run: f:address:array:character <- index *board, col
9999 mem: location 1738 is 1815
9999 mem: location 1743 is 7
9999 run: address to copy is 1823
9999 run: its type is address
9999 mem: location 1823 is 1895
9999 mem: storing 1895 in location 1744
 102 run: c:character <- index *f, row
9999 mem: location 1744 is 1895
9999 mem: location 1739 is 0
9999 run: address to copy is 1896
9999 run: its type is character
9999 mem: location 1896 is 82
9999 mem: storing 82 in location 1745
 102 run: print-character screen, c
9999 mem: location 1737 is 1009
9999 mem: location 1745 is 82
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 82 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 82
  90 print-character: 82 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
9999 schedule: print-character/print-board/run1001/scenario-making-a-move
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 82
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 228 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 82
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 228
9999 mem: storing 1471 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1471
9999 mem: location 1471 is 0
9999 mem: location 1472 is 7
9999 mem: location 2006 is 1471
9999 run: address to copy is 1471
9999 mem: storing 1471 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 82
9999 mem: location 2007 is 1471
9999 mem: storing 82 in location 1471
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1471
9999 mem: location 1471 is 82
9999 mem: location 1472 is 7
9999 mem: location 2006 is 1471
9999 run: address to copy is 1472
9999 mem: storing 1472 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1472
9999 mem: storing 7 in location 1472
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: print-character screen, 32/space
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 103 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 103 run: break-if color-found?, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1989
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
 103 run: break-if bg-color-found?, 
9999 mem: location 1992 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1991
 103 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 103 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 103 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 103 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 103 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 103 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 103 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 103 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 103 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 103 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 103 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1993 is 30
9999 mem: storing 210 in location 2001
 103 run: index <- add index, *column
9999 mem: location 2001 is 210
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: storing 229 in location 2001
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 103 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 103 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 103 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 103 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 229
9999 mem: storing 1473 in location 2006
 103 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1473
9999 mem: location 1473 is 0
9999 mem: location 1474 is 7
9999 mem: location 2006 is 1473
9999 run: address to copy is 1473
9999 mem: storing 1473 in location 2007
 103 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1473
9999 mem: storing 32 in location 1473
 103 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1473
9999 mem: location 1473 is 32
9999 mem: location 1474 is 7
9999 mem: location 2006 is 1473
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 2008
 103 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1474
9999 mem: storing 7 in location 1474
 103 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 103 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 103 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 103 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 19
9999 mem: location 1997 is 1012
9999 mem: storing 20 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 102 run: col <- add col, 1
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 102 run: loop 
9999 run: jumping to instruction 13
 102 run: done?:boolean <- equal col:number, 8
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1740
 102 run: break-if done?:boolean, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 21
 102 run: row <- subtract row, 1
9999 mem: location 1739 is 0
9999 mem: storing -1 in location 1739
 102 run: cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 7
9999 mem: location 1925 is 1011
9999 mem: storing 8 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 8
9999 mem: location 2027 is 20
9999 mem: location 2025 is 1009
9999 run: result 0 is 8
9999 run: result 1 is 20
9999 run: result 2 is 1009
9999 mem: storing 8 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 8
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 8 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 8
9999 mem: location 1926 is 1011
9999 mem: storing 8 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: done?:boolean <- lesser-than row, 0
9999 mem: location 1739 is -1
9999 mem: storing 1 in location 1740
 102 run: break-if done?, 
9999 mem: location 1740 is 1
9999 run: jumping to instruction 25
 102 run: s <- new [  +----------------]
9999 mem: storing 2301 in location 1742
 102 run: print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2301
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2301 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2301
9999 mem: storing 19 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 0
9999 run: address to copy is 2302
9999 run: its type is character
9999 mem: location 2302 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 240 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 240
9999 mem: storing 1495 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1495
9999 mem: location 1495 is 0
9999 mem: location 1496 is 7
9999 mem: location 2006 is 1495
9999 run: address to copy is 1495
9999 mem: storing 1495 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1495
9999 mem: storing 32 in location 1495
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1495
9999 mem: location 1495 is 32
9999 mem: location 1496 is 7
9999 mem: location 2006 is 1495
9999 run: address to copy is 1496
9999 mem: storing 1496 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1496
9999 mem: storing 7 in location 1496
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 1
9999 run: address to copy is 2303
9999 run: its type is character
9999 mem: location 2303 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 241 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 241
9999 mem: storing 1497 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1497
9999 mem: location 1497 is 0
9999 mem: location 1498 is 7
9999 mem: location 2006 is 1497
9999 run: address to copy is 1497
9999 mem: storing 1497 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1497
9999 mem: storing 32 in location 1497
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1497
9999 mem: location 1497 is 32
9999 mem: location 1498 is 7
9999 mem: location 2006 is 1497
9999 run: address to copy is 1498
9999 mem: storing 1498 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1498
9999 mem: storing 7 in location 1498
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 2
9999 run: address to copy is 2304
9999 run: its type is character
9999 mem: location 2304 is 43
9999 mem: storing 43 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 43
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 43 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 43
  90 print-character: 43 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 43
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 242 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 43
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 242
9999 mem: storing 1499 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1499
9999 mem: location 1499 is 0
9999 mem: location 1500 is 7
9999 mem: location 2006 is 1499
9999 run: address to copy is 1499
9999 mem: storing 1499 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 43
9999 mem: location 2007 is 1499
9999 mem: storing 43 in location 1499
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1499
9999 mem: location 1499 is 43
9999 mem: location 1500 is 7
9999 mem: location 2006 is 1499
9999 run: address to copy is 1500
9999 mem: storing 1500 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1500
9999 mem: storing 7 in location 1500
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 3
9999 run: address to copy is 2305
9999 run: its type is character
9999 mem: location 2305 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 243 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 243
9999 mem: storing 1501 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1501
9999 mem: location 1501 is 0
9999 mem: location 1502 is 7
9999 mem: location 2006 is 1501
9999 run: address to copy is 1501
9999 mem: storing 1501 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1501
9999 mem: storing 45 in location 1501
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1501
9999 mem: location 1501 is 45
9999 mem: location 1502 is 7
9999 mem: location 2006 is 1501
9999 run: address to copy is 1502
9999 mem: storing 1502 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1502
9999 mem: storing 7 in location 1502
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 3
9999 mem: storing 4 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 4
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 4
9999 run: address to copy is 2306
9999 run: its type is character
9999 mem: location 2306 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 244 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 244
9999 mem: storing 1503 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1503
9999 mem: location 1503 is 0
9999 mem: location 1504 is 7
9999 mem: location 2006 is 1503
9999 run: address to copy is 1503
9999 mem: storing 1503 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1503
9999 mem: storing 45 in location 1503
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1503
9999 mem: location 1503 is 45
9999 mem: location 1504 is 7
9999 mem: location 2006 is 1503
9999 run: address to copy is 1504
9999 mem: storing 1504 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1504
9999 mem: storing 7 in location 1504
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 4
9999 mem: storing 5 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 5
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 5
9999 run: address to copy is 2307
9999 run: its type is character
9999 mem: location 2307 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 245 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 245
9999 mem: storing 1505 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1505
9999 mem: location 1505 is 0
9999 mem: location 1506 is 7
9999 mem: location 2006 is 1505
9999 run: address to copy is 1505
9999 mem: storing 1505 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1505
9999 mem: storing 45 in location 1505
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1505
9999 mem: location 1505 is 45
9999 mem: location 1506 is 7
9999 mem: location 2006 is 1505
9999 run: address to copy is 1506
9999 mem: storing 1506 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1506
9999 mem: storing 7 in location 1506
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 5
9999 mem: storing 6 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 6
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 6
9999 run: address to copy is 2308
9999 run: its type is character
9999 mem: location 2308 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 246 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 246
9999 mem: storing 1507 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1507
9999 mem: location 1507 is 0
9999 mem: location 1508 is 7
9999 mem: location 2006 is 1507
9999 run: address to copy is 1507
9999 mem: storing 1507 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1507
9999 mem: storing 45 in location 1507
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1507
9999 mem: location 1507 is 45
9999 mem: location 1508 is 7
9999 mem: location 2006 is 1507
9999 run: address to copy is 1508
9999 mem: storing 1508 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1508
9999 mem: storing 7 in location 1508
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 6
9999 mem: storing 7 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 7
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 7
9999 run: address to copy is 2309
9999 run: its type is character
9999 mem: location 2309 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 247 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 247
9999 mem: storing 1509 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1509
9999 mem: location 1509 is 0
9999 mem: location 1510 is 7
9999 mem: location 2006 is 1509
9999 run: address to copy is 1509
9999 mem: storing 1509 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1509
9999 mem: storing 45 in location 1509
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1509
9999 mem: location 1509 is 45
9999 mem: location 1510 is 7
9999 mem: location 2006 is 1509
9999 run: address to copy is 1510
9999 mem: storing 1510 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1510
9999 mem: storing 7 in location 1510
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 7
9999 mem: storing 8 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 8
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 8
9999 run: address to copy is 2310
9999 run: its type is character
9999 mem: location 2310 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 248 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 248
9999 mem: storing 1511 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1511
9999 mem: location 1511 is 0
9999 mem: location 1512 is 7
9999 mem: location 2006 is 1511
9999 run: address to copy is 1511
9999 mem: storing 1511 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1511
9999 mem: storing 45 in location 1511
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1511
9999 mem: location 1511 is 45
9999 mem: location 1512 is 7
9999 mem: location 2006 is 1511
9999 run: address to copy is 1512
9999 mem: storing 1512 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1512
9999 mem: storing 7 in location 1512
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 8
9999 mem: storing 9 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 9
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 9
9999 run: address to copy is 2311
9999 run: its type is character
9999 mem: location 2311 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 249 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 249
9999 mem: storing 1513 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1513
9999 mem: location 1513 is 0
9999 mem: location 1514 is 7
9999 mem: location 2006 is 1513
9999 run: address to copy is 1513
9999 mem: storing 1513 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1513
9999 mem: storing 45 in location 1513
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1513
9999 mem: location 1513 is 45
9999 mem: location 1514 is 7
9999 mem: location 2006 is 1513
9999 run: address to copy is 1514
9999 mem: storing 1514 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1514
9999 mem: storing 7 in location 1514
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 9
9999 mem: storing 10 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 10
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 10
9999 run: address to copy is 2312
9999 run: its type is character
9999 mem: location 2312 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 250 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 250
9999 mem: storing 1515 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1515
9999 mem: location 1515 is 0
9999 mem: location 1516 is 7
9999 mem: location 2006 is 1515
9999 run: address to copy is 1515
9999 mem: storing 1515 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1515
9999 mem: storing 45 in location 1515
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1515
9999 mem: location 1515 is 45
9999 mem: location 1516 is 7
9999 mem: location 2006 is 1515
9999 run: address to copy is 1516
9999 mem: storing 1516 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1516
9999 mem: storing 7 in location 1516
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 10
9999 mem: storing 11 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 11
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 11
9999 run: address to copy is 2313
9999 run: its type is character
9999 mem: location 2313 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 251 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 251
9999 mem: storing 1517 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1517
9999 mem: location 1517 is 0
9999 mem: location 1518 is 7
9999 mem: location 2006 is 1517
9999 run: address to copy is 1517
9999 mem: storing 1517 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1517
9999 mem: storing 45 in location 1517
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1517
9999 mem: location 1517 is 45
9999 mem: location 1518 is 7
9999 mem: location 2006 is 1517
9999 run: address to copy is 1518
9999 mem: storing 1518 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1518
9999 mem: storing 7 in location 1518
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 11
9999 mem: storing 12 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 12
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 12
9999 run: address to copy is 2314
9999 run: its type is character
9999 mem: location 2314 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 252 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 252
9999 mem: storing 1519 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1519
9999 mem: location 1519 is 0
9999 mem: location 1520 is 7
9999 mem: location 2006 is 1519
9999 run: address to copy is 1519
9999 mem: storing 1519 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1519
9999 mem: storing 45 in location 1519
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1519
9999 mem: location 1519 is 45
9999 mem: location 1520 is 7
9999 mem: location 2006 is 1519
9999 run: address to copy is 1520
9999 mem: storing 1520 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1520
9999 mem: storing 7 in location 1520
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 12
9999 mem: storing 13 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 13
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 13
9999 run: address to copy is 2315
9999 run: its type is character
9999 mem: location 2315 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 253 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 253
9999 mem: storing 1521 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1521
9999 mem: location 1521 is 0
9999 mem: location 1522 is 7
9999 mem: location 2006 is 1521
9999 run: address to copy is 1521
9999 mem: storing 1521 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1521
9999 mem: storing 45 in location 1521
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1521
9999 mem: location 1521 is 45
9999 mem: location 1522 is 7
9999 mem: location 2006 is 1521
9999 run: address to copy is 1522
9999 mem: storing 1522 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1522
9999 mem: storing 7 in location 1522
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 13
9999 mem: storing 14 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 14
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 14
9999 run: address to copy is 2316
9999 run: its type is character
9999 mem: location 2316 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 254 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 254
9999 mem: storing 1523 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1523
9999 mem: location 1523 is 0
9999 mem: location 1524 is 7
9999 mem: location 2006 is 1523
9999 run: address to copy is 1523
9999 mem: storing 1523 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1523
9999 mem: storing 45 in location 1523
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1523
9999 mem: location 1523 is 45
9999 mem: location 1524 is 7
9999 mem: location 2006 is 1523
9999 run: address to copy is 1524
9999 mem: storing 1524 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1524
9999 mem: storing 7 in location 1524
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 14
9999 mem: storing 15 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 15
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 15
9999 run: address to copy is 2317
9999 run: its type is character
9999 mem: location 2317 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 255 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 255
9999 mem: storing 1525 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1525
9999 mem: location 1525 is 0
9999 mem: location 1526 is 7
9999 mem: location 2006 is 1525
9999 run: address to copy is 1525
9999 mem: storing 1525 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1525
9999 mem: storing 45 in location 1525
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1525
9999 mem: location 1525 is 45
9999 mem: location 1526 is 7
9999 mem: location 2006 is 1525
9999 run: address to copy is 1526
9999 mem: storing 1526 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1526
9999 mem: storing 7 in location 1526
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 15
9999 mem: storing 16 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 16
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 16
9999 run: address to copy is 2318
9999 run: its type is character
9999 mem: location 2318 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 256 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 256
9999 mem: storing 1527 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1527
9999 mem: location 1527 is 0
9999 mem: location 1528 is 7
9999 mem: location 2006 is 1527
9999 run: address to copy is 1527
9999 mem: storing 1527 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1527
9999 mem: storing 45 in location 1527
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1527
9999 mem: location 1527 is 45
9999 mem: location 1528 is 7
9999 mem: location 2006 is 1527
9999 run: address to copy is 1528
9999 mem: storing 1528 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1528
9999 mem: storing 7 in location 1528
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 16
9999 mem: storing 17 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 17
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 17
9999 run: address to copy is 2319
9999 run: its type is character
9999 mem: location 2319 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 257 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 257
9999 mem: storing 1529 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1529
9999 mem: location 1529 is 0
9999 mem: location 1530 is 7
9999 mem: location 2006 is 1529
9999 run: address to copy is 1529
9999 mem: storing 1529 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1529
9999 mem: storing 45 in location 1529
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1529
9999 mem: location 1529 is 45
9999 mem: location 1530 is 7
9999 mem: location 2006 is 1529
9999 run: address to copy is 1530
9999 mem: storing 1530 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1530
9999 mem: storing 7 in location 1530
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 17
9999 mem: storing 18 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 18
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2301
9999 mem: location 1982 is 18
9999 run: address to copy is 2320
9999 run: its type is character
9999 mem: location 2320 is 45
9999 mem: storing 45 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 45
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 45 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 45
  90 print-character: 45 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1993 is 30
9999 mem: storing 240 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 240
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 258 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 45
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 258
9999 mem: storing 1531 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1531
9999 mem: location 1531 is 0
9999 mem: location 1532 is 7
9999 mem: location 2006 is 1531
9999 run: address to copy is 1531
9999 mem: storing 1531 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 45
9999 mem: location 2007 is 1531
9999 mem: storing 45 in location 1531
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1531
9999 mem: location 1531 is 45
9999 mem: location 1532 is 7
9999 mem: location 2006 is 1531
9999 run: address to copy is 1532
9999 mem: storing 1532 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1532
9999 mem: storing 7 in location 1532
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 18
9999 mem: storing 19 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 19
9999 mem: location 1981 is 19
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
 102 run: screen <- cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 8
9999 mem: location 1925 is 1011
9999 mem: storing 9 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 9
9999 mem: location 2027 is 19
9999 mem: location 2025 is 1009
9999 run: result 0 is 9
9999 run: result 1 is 19
9999 run: result 2 is 1009
9999 mem: storing 9 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 9
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 9 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 9
9999 mem: location 1926 is 1011
9999 mem: storing 9 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1737
 102 run: s <- new [    a b c d e f g h]
9999 mem: storing 2321 in location 1742
 102 run: screen <- print-string screen, s
9999 mem: location 1737 is 1009
9999 mem: location 1742 is 2321
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1975
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 2321 in location 1976
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
 103 run: break-if color-found?, 
9999 mem: location 1978 is 0
9999 run: jump-if fell through
 103 run: color <- copy 7/white
9999 mem: storing 7 in location 1977
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
 103 run: break-if bg-color-found?, 
9999 mem: location 1980 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1979
 103 run: len:number <- length *s
9999 mem: location 1976 is 2321
9999 mem: storing 19 in location 1981
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1982
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 0
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 0
9999 run: address to copy is 2322
9999 run: its type is character
9999 mem: location 2322 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 270 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 270
9999 mem: storing 1555 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1556 is 7
9999 mem: location 2006 is 1555
9999 run: address to copy is 1555
9999 mem: storing 1555 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1555
9999 mem: storing 32 in location 1555
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1555
9999 mem: location 1555 is 32
9999 mem: location 1556 is 7
9999 mem: location 2006 is 1555
9999 run: address to copy is 1556
9999 mem: storing 1556 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1556
9999 mem: storing 7 in location 1556
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1997 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 0
9999 mem: storing 1 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 1
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 1
9999 run: address to copy is 2323
9999 run: its type is character
9999 mem: location 2323 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 271 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 271
9999 mem: storing 1557 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1557
9999 mem: location 1557 is 0
9999 mem: location 1558 is 7
9999 mem: location 2006 is 1557
9999 run: address to copy is 1557
9999 mem: storing 1557 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1557
9999 mem: storing 32 in location 1557
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1557
9999 mem: location 1557 is 32
9999 mem: location 1558 is 7
9999 mem: location 2006 is 1557
9999 run: address to copy is 1558
9999 mem: storing 1558 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1558
9999 mem: storing 7 in location 1558
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1997 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 1
9999 mem: storing 2 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 2
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 2
9999 run: address to copy is 2324
9999 run: its type is character
9999 mem: location 2324 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 272 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 272
9999 mem: storing 1559 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1559
9999 mem: location 1559 is 0
9999 mem: location 1560 is 7
9999 mem: location 2006 is 1559
9999 run: address to copy is 1559
9999 mem: storing 1559 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1559
9999 mem: storing 32 in location 1559
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1559
9999 mem: location 1559 is 32
9999 mem: location 1560 is 7
9999 mem: location 2006 is 1559
9999 run: address to copy is 1560
9999 mem: storing 1560 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1560
9999 mem: storing 7 in location 1560
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1997 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 2
9999 mem: storing 3 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 3
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 3
9999 run: address to copy is 2325
9999 run: its type is character
9999 mem: location 2325 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 273 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 273
9999 mem: storing 1561 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1561
9999 mem: location 1561 is 0
9999 mem: location 1562 is 7
9999 mem: location 2006 is 1561
9999 run: address to copy is 1561
9999 mem: storing 1561 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1561
9999 mem: storing 32 in location 1561
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1561
9999 mem: location 1561 is 32
9999 mem: location 1562 is 7
9999 mem: location 2006 is 1561
9999 run: address to copy is 1562
9999 mem: storing 1562 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1562
9999 mem: storing 7 in location 1562
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1997 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 3
9999 mem: storing 4 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 4
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 4
9999 run: address to copy is 2326
9999 run: its type is character
9999 mem: location 2326 is 97
9999 mem: storing 97 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 97
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 97
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 274 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 97
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 274
9999 mem: storing 1563 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1563
9999 mem: location 1563 is 0
9999 mem: location 1564 is 7
9999 mem: location 2006 is 1563
9999 run: address to copy is 1563
9999 mem: storing 1563 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 97
9999 mem: location 2007 is 1563
9999 mem: storing 97 in location 1563
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1563
9999 mem: location 1563 is 97
9999 mem: location 1564 is 7
9999 mem: location 2006 is 1563
9999 run: address to copy is 1564
9999 mem: storing 1564 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1564
9999 mem: storing 7 in location 1564
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1997 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 4
9999 mem: storing 5 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 5
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 5
9999 run: address to copy is 2327
9999 run: its type is character
9999 mem: location 2327 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 275 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 275
9999 mem: storing 1565 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1565
9999 mem: location 1565 is 0
9999 mem: location 1566 is 7
9999 mem: location 2006 is 1565
9999 run: address to copy is 1565
9999 mem: storing 1565 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1565
9999 mem: storing 32 in location 1565
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1565
9999 mem: location 1565 is 32
9999 mem: location 1566 is 7
9999 mem: location 2006 is 1565
9999 run: address to copy is 1566
9999 mem: storing 1566 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1566
9999 mem: storing 7 in location 1566
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1997 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 5
9999 mem: storing 6 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 6
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 6
9999 run: address to copy is 2328
9999 run: its type is character
9999 mem: location 2328 is 98
9999 mem: storing 98 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 98
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 276 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 98
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 276
9999 mem: storing 1567 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1567
9999 mem: location 1567 is 0
9999 mem: location 1568 is 7
9999 mem: location 2006 is 1567
9999 run: address to copy is 1567
9999 mem: storing 1567 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 98
9999 mem: location 2007 is 1567
9999 mem: storing 98 in location 1567
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1567
9999 mem: location 1567 is 98
9999 mem: location 1568 is 7
9999 mem: location 2006 is 1567
9999 run: address to copy is 1568
9999 mem: storing 1568 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1568
9999 mem: storing 7 in location 1568
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1997 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 6
9999 mem: storing 7 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 7
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 7
9999 run: address to copy is 2329
9999 run: its type is character
9999 mem: location 2329 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 277 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 277
9999 mem: storing 1569 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1570 is 7
9999 mem: location 2006 is 1569
9999 run: address to copy is 1569
9999 mem: storing 1569 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1569
9999 mem: storing 32 in location 1569
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1569
9999 mem: location 1569 is 32
9999 mem: location 1570 is 7
9999 mem: location 2006 is 1569
9999 run: address to copy is 1570
9999 mem: storing 1570 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1570
9999 mem: storing 7 in location 1570
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1997 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 7
9999 mem: storing 8 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 8
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 8
9999 run: address to copy is 2330
9999 run: its type is character
9999 mem: location 2330 is 99
9999 mem: storing 99 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 99
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 99
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 278 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 99
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 278
9999 mem: storing 1571 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1571
9999 mem: location 1571 is 0
9999 mem: location 1572 is 7
9999 mem: location 2006 is 1571
9999 run: address to copy is 1571
9999 mem: storing 1571 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 99
9999 mem: location 2007 is 1571
9999 mem: storing 99 in location 1571
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1571
9999 mem: location 1571 is 99
9999 mem: location 1572 is 7
9999 mem: location 2006 is 1571
9999 run: address to copy is 1572
9999 mem: storing 1572 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1572
9999 mem: storing 7 in location 1572
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1997 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 8
9999 mem: storing 9 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 9
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 9
9999 run: address to copy is 2331
9999 run: its type is character
9999 mem: location 2331 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 279 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 279
9999 mem: storing 1573 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1573
9999 mem: location 1573 is 0
9999 mem: location 1574 is 7
9999 mem: location 2006 is 1573
9999 run: address to copy is 1573
9999 mem: storing 1573 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1573
9999 mem: storing 32 in location 1573
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1573
9999 mem: location 1573 is 32
9999 mem: location 1574 is 7
9999 mem: location 2006 is 1573
9999 run: address to copy is 1574
9999 mem: storing 1574 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1574
9999 mem: storing 7 in location 1574
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1997 is 1012
9999 mem: storing 10 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 9
9999 mem: storing 10 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 10
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 10
9999 run: address to copy is 2332
9999 run: its type is character
9999 mem: location 2332 is 100
9999 mem: storing 100 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 100
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 100
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 280 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 100
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 280
9999 mem: storing 1575 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1575
9999 mem: location 1575 is 0
9999 mem: location 1576 is 7
9999 mem: location 2006 is 1575
9999 run: address to copy is 1575
9999 mem: storing 1575 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 100
9999 mem: location 2007 is 1575
9999 mem: storing 100 in location 1575
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1575
9999 mem: location 1575 is 100
9999 mem: location 1576 is 7
9999 mem: location 2006 is 1575
9999 run: address to copy is 1576
9999 mem: storing 1576 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1576
9999 mem: storing 7 in location 1576
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 10
9999 mem: location 1997 is 1012
9999 mem: storing 11 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 10
9999 mem: storing 11 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 11
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 11
9999 run: address to copy is 2333
9999 run: its type is character
9999 mem: location 2333 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 281 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 281
9999 mem: storing 1577 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1577
9999 mem: location 1577 is 0
9999 mem: location 1578 is 7
9999 mem: location 2006 is 1577
9999 run: address to copy is 1577
9999 mem: storing 1577 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1577
9999 mem: storing 32 in location 1577
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1577
9999 mem: location 1577 is 32
9999 mem: location 1578 is 7
9999 mem: location 2006 is 1577
9999 run: address to copy is 1578
9999 mem: storing 1578 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1578
9999 mem: storing 7 in location 1578
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 11
9999 mem: location 1997 is 1012
9999 mem: storing 12 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 11
9999 mem: storing 12 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 12
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 12
9999 run: address to copy is 2334
9999 run: its type is character
9999 mem: location 2334 is 101
9999 mem: storing 101 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 101
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 101
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 282 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 101
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 282
9999 mem: storing 1579 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1579
9999 mem: location 1579 is 0
9999 mem: location 1580 is 7
9999 mem: location 2006 is 1579
9999 run: address to copy is 1579
9999 mem: storing 1579 in location 2007
9999 schedule: print-character/print-string/print-board/run1001/scenario-making-a-move
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 101
9999 mem: location 2007 is 1579
9999 mem: storing 101 in location 1579
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1579
9999 mem: location 1579 is 101
9999 mem: location 1580 is 7
9999 mem: location 2006 is 1579
9999 run: address to copy is 1580
9999 mem: storing 1580 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1580
9999 mem: storing 7 in location 1580
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 12
9999 mem: location 1997 is 1012
9999 mem: storing 13 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 12
9999 mem: storing 13 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 13
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 13
9999 run: address to copy is 2335
9999 run: its type is character
9999 mem: location 2335 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 283 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 283
9999 mem: storing 1581 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1581
9999 mem: location 1581 is 0
9999 mem: location 1582 is 7
9999 mem: location 2006 is 1581
9999 run: address to copy is 1581
9999 mem: storing 1581 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1581
9999 mem: storing 32 in location 1581
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1581
9999 mem: location 1581 is 32
9999 mem: location 1582 is 7
9999 mem: location 2006 is 1581
9999 run: address to copy is 1582
9999 mem: storing 1582 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1582
9999 mem: storing 7 in location 1582
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 13
9999 mem: location 1997 is 1012
9999 mem: storing 14 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 13
9999 mem: storing 14 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 14
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 14
9999 run: address to copy is 2336
9999 run: its type is character
9999 mem: location 2336 is 102
9999 mem: storing 102 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 102
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 102
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 284 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 102
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 284
9999 mem: storing 1583 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1583
9999 mem: location 1583 is 0
9999 mem: location 1584 is 7
9999 mem: location 2006 is 1583
9999 run: address to copy is 1583
9999 mem: storing 1583 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 102
9999 mem: location 2007 is 1583
9999 mem: storing 102 in location 1583
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1583
9999 mem: location 1583 is 102
9999 mem: location 1584 is 7
9999 mem: location 2006 is 1583
9999 run: address to copy is 1584
9999 mem: storing 1584 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1584
9999 mem: storing 7 in location 1584
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 14
9999 mem: location 1997 is 1012
9999 mem: storing 15 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 14
9999 mem: storing 15 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 15
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 15
9999 run: address to copy is 2337
9999 run: its type is character
9999 mem: location 2337 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 285 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 285
9999 mem: storing 1585 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1585
9999 mem: location 1585 is 0
9999 mem: location 1586 is 7
9999 mem: location 2006 is 1585
9999 run: address to copy is 1585
9999 mem: storing 1585 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1585
9999 mem: storing 32 in location 1585
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1585
9999 mem: location 1585 is 32
9999 mem: location 1586 is 7
9999 mem: location 2006 is 1585
9999 run: address to copy is 1586
9999 mem: storing 1586 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1586
9999 mem: storing 7 in location 1586
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 15
9999 mem: location 1997 is 1012
9999 mem: storing 16 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 15
9999 mem: storing 16 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 16
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 16
9999 run: address to copy is 2338
9999 run: its type is character
9999 mem: location 2338 is 103
9999 mem: storing 103 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 103
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 103
  90 print-character: 103 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 103
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: storing 286 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 103
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 286
9999 mem: storing 1587 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1587
9999 mem: location 1587 is 0
9999 mem: location 1588 is 7
9999 mem: location 2006 is 1587
9999 run: address to copy is 1587
9999 mem: storing 1587 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 103
9999 mem: location 2007 is 1587
9999 mem: storing 103 in location 1587
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1587
9999 mem: location 1587 is 103
9999 mem: location 1588 is 7
9999 mem: location 2006 is 1587
9999 run: address to copy is 1588
9999 mem: storing 1588 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1588
9999 mem: storing 7 in location 1588
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 16
9999 mem: location 1997 is 1012
9999 mem: storing 17 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 16
9999 mem: storing 17 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 17
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 17
9999 run: address to copy is 2339
9999 run: its type is character
9999 mem: location 2339 is 32
9999 mem: storing 32 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 32
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: storing 287 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 32
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 287
9999 mem: storing 1589 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1589
9999 mem: location 1589 is 0
9999 mem: location 1590 is 7
9999 mem: location 2006 is 1589
9999 run: address to copy is 1589
9999 mem: storing 1589 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 32
9999 mem: location 2007 is 1589
9999 mem: storing 32 in location 1589
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1589
9999 mem: location 1589 is 32
9999 mem: location 1590 is 7
9999 mem: location 2006 is 1589
9999 run: address to copy is 1590
9999 mem: storing 1590 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1590
9999 mem: storing 7 in location 1590
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 17
9999 mem: location 1997 is 1012
9999 mem: storing 18 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 17
9999 mem: storing 18 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 18
9999 mem: location 1981 is 19
9999 mem: storing 0 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *s, i
9999 mem: location 1976 is 2321
9999 mem: location 1982 is 18
9999 run: address to copy is 2340
9999 run: its type is character
9999 mem: location 2340 is 104
9999 mem: storing 104 in location 1984
 103 run: print-character screen, c, color, bg-color
9999 mem: location 1975 is 1009
9999 mem: location 1984 is 104
9999 mem: location 1977 is 7
9999 mem: location 1979 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1987
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1988
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1989
9999 mem: storing 1 in location 1990
 104 run: break-if color-found?, 
9999 mem: location 1990 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1991
9999 mem: storing 1 in location 1992
 104 run: break-if bg-color-found?, 
9999 mem: location 1992 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1988 is 104
  90 print-character: 104 
 104 run: break-unless sc, 
9999 mem: location 1987 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 1993
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1994
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1995
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1994 is 12
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1997
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1993 is 30
9999 mem: storing 1 in location 1996
 104 run: jump-if legal?, 1:offset
9999 mem: location 1996 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1988 is 104
9999 mem: storing 0 in location 1998
 104 run: break-unless newline?, 
9999 mem: location 1998 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1995 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1993 is 30
9999 mem: storing 270 in location 2001
 104 run: index <- add index, *column
9999 mem: location 2001 is 270
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: storing 288 in location 2001
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1987 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 1987 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2002
 104 run: len:number <- length *buf
9999 mem: location 2002 is 1014
9999 mem: storing 360 in location 2003
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1988 is 104
9999 mem: storing 0 in location 2004
 104 run: break-unless backspace?, 
9999 mem: location 2004 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 2002 is 1014
9999 mem: location 2001 is 288
9999 mem: storing 1591 in location 2006
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 2006 is 1591
9999 mem: location 1591 is 0
9999 mem: location 1592 is 7
9999 mem: location 2006 is 1591
9999 run: address to copy is 1591
9999 mem: storing 1591 in location 2007
 104 run: *cursor-contents <- copy c
9999 mem: location 1988 is 104
9999 mem: location 2007 is 1591
9999 mem: storing 104 in location 1591
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 2006 is 1591
9999 mem: location 1591 is 104
9999 mem: location 1592 is 7
9999 mem: location 2006 is 1591
9999 run: address to copy is 1592
9999 mem: storing 1592 in location 2008
 104 run: *cursor-color <- copy color
9999 mem: location 1989 is 7
9999 mem: location 2008 is 1592
9999 mem: storing 7 in location 1592
 104 run: right:number <- subtract width, 1
9999 mem: location 1993 is 30
9999 mem: storing 29 in location 2009
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 2009 is 29
9999 mem: storing 0 in location 2010
 104 run: break-if at-right?, 
9999 mem: location 2010 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1997 is 1012
9999 mem: location 1012 is 18
9999 mem: location 1997 is 1012
9999 mem: storing 19 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1987 is 1009
 103 run: i <- add i, 1
9999 mem: location 1982 is 18
9999 mem: storing 19 in location 1982
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1982 is 19
9999 mem: location 1981 is 19
9999 mem: storing 1 in location 1983
 103 run: break-if done?, 
9999 mem: location 1983 is 1
9999 run: jumping to instruction 22
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1975 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1737
 102 run: screen <- cursor-to-next-line screen
9999 mem: location 1737 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-down screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 104 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1924
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1925
 104 run: max:number <- subtract height, 1
9999 mem: location 1924 is 12
9999 mem: storing 11 in location 1926
 104 run: at-bottom?:boolean <- greater-or-equal *row, max
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1926 is 11
9999 mem: storing 0 in location 1927
 104 run: break-if at-bottom?, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 104 run: *row <- add *row, 1
9999 mem: location 1925 is 1011
9999 mem: location 1011 is 9
9999 mem: location 1925 is 1011
9999 mem: storing 10 in location 1011
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: screen <- cursor-to-start-of-line screen
9999 mem: location 2017 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2020
 104 run: row:number, _, sc <- cursor-position sc
9999 mem: location 2020 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 105 run: break-unless sc, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 105 run: row:number <- get *sc, cursor-row:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1011
9999 run: its type is number
9999 mem: location 1011 is 10
9999 mem: storing 10 in location 2026
 105 run: column:number <- get *sc, cursor-column:offset
9999 mem: location 2025 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2025 is 1009
9999 run: address to copy is 1012
9999 run: its type is number
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2027
 105 run: reply row, column, sc/same-as-ingredient:0
9999 mem: location 2026 is 10
9999 mem: location 2027 is 19
9999 mem: location 2025 is 1009
9999 run: result 0 is 10
9999 run: result 1 is 19
9999 run: result 2 is 1009
9999 mem: storing 10 in location 2021
9999 mem: storing 1009 in location 2020
 104 run: column:number <- copy 0
9999 mem: storing 0 in location 2022
 104 run: sc <- move-cursor sc, row, column
9999 mem: location 2020 is 1009
9999 mem: location 2021 is 10
9999 mem: location 2022 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1923
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 10 in location 1924
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1925
 105 run: break-unless sc, 
9999 mem: location 1923 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1926
 105 run: *row <- copy new-row
9999 mem: location 1924 is 10
9999 mem: location 1926 is 1011
9999 mem: storing 10 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1923 is 1009
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1923 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1927
 105 run: *column <- copy new-column
9999 mem: location 1925 is 0
9999 mem: location 1927 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1923 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2020
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 2020 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 2017
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 2017 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1737
 100 run: screen-should-contain [
  #  012345678901234567890123456789
    .8 | r n b q k b n r           .
    .7 | p p p p p p p p           .
    .6 |                           .
    .5 |                           .
    .4 |             P             .
    .3 |                           .
    .2 | P P P P P P   P           .
    .1 | R N B Q K B N R           .
    .  +----------------           .
    .    a b c d e f g h           .
    .                              .
  ]
