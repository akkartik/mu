parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "4", properties: ["4": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "a\nb\ncdef", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    left-click 3, 4\n    type [g]\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .b    .\n    .cdefâ†©.\n    .g    .\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 3\n    4 <- 1\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-editor-scrolls-down-when-line-wraps
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-scrolls-down-when-line-wraps
 101 run: screen:address <- new-fake-screen 5/width, 4/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 4 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 4
9999 mem: storing 20 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 20
9999 mem: array size is 20
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1055
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1057
 103 run: break-unless sc, 
9999 mem: location 1057 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1058
 103 run: max:number <- length *buf
9999 mem: location 1058 is 1014
9999 mem: storing 20 in location 1059
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1060
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 0
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 0
9999 mem: storing 1015 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1015
9999 mem: location 1063 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1016
9999 mem: location 1064 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1060 is 0
9999 mem: storing 1 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 1
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 1
9999 mem: storing 1017 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1017
9999 mem: location 1063 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1018
9999 mem: location 1064 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1060 is 1
9999 mem: storing 2 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 2
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 2
9999 mem: storing 1019 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1019
9999 mem: location 1063 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1020
9999 mem: location 1064 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1060 is 2
9999 mem: storing 3 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 3
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 3
9999 mem: storing 1021 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1021
9999 mem: location 1063 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1022
9999 mem: location 1064 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1060 is 3
9999 mem: storing 4 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 4
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 4
9999 mem: storing 1023 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1023
9999 mem: location 1063 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1024
9999 mem: location 1064 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1060 is 4
9999 mem: storing 5 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 5
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 5
9999 mem: storing 1025 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1025
9999 mem: location 1063 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1026
9999 mem: location 1064 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1060 is 5
9999 mem: storing 6 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 6
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 6
9999 mem: storing 1027 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1027
9999 mem: location 1063 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1028
9999 mem: location 1064 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1060 is 6
9999 mem: storing 7 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 7
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 7
9999 mem: storing 1029 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1029
9999 mem: location 1063 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1030
9999 mem: location 1064 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1060 is 7
9999 mem: storing 8 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 8
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 8
9999 mem: storing 1031 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1031
9999 mem: location 1063 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1032
9999 mem: location 1064 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1060 is 8
9999 mem: storing 9 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 9
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 9
9999 mem: storing 1033 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1033
9999 mem: location 1063 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1034
9999 mem: location 1064 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1060 is 9
9999 mem: storing 10 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 10
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 10
9999 mem: storing 1035 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1035
9999 mem: location 1063 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1036
9999 mem: location 1064 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1060 is 10
9999 mem: storing 11 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 11
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 11
9999 mem: storing 1037 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1037
9999 mem: location 1063 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1038
9999 mem: location 1064 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1060 is 11
9999 mem: storing 12 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 12
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 12
9999 mem: storing 1039 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1039
9999 mem: location 1063 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1040
9999 mem: location 1064 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1060 is 12
9999 mem: storing 13 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 13
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 13
9999 mem: storing 1041 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1041
9999 mem: location 1063 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1042
9999 mem: location 1064 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1060 is 13
9999 mem: storing 14 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 14
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 14
9999 mem: storing 1043 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1043
9999 mem: location 1063 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1044
9999 mem: location 1064 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1060 is 14
9999 mem: storing 15 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 15
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 15
9999 mem: storing 1045 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1045
9999 mem: location 1063 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1046
9999 mem: location 1064 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1060 is 15
9999 mem: storing 16 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 16
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 16
9999 mem: storing 1047 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1047
9999 mem: location 1063 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1048
9999 mem: location 1064 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1060 is 16
9999 mem: storing 17 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 17
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 17
9999 mem: storing 1049 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1049
9999 mem: location 1063 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1050
9999 mem: location 1064 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1060 is 17
9999 mem: storing 18 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 18
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 18
9999 mem: storing 1051 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1051
9999 mem: location 1063 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1052
9999 mem: location 1064 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1060 is 18
9999 mem: storing 19 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 19
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 19
9999 mem: storing 1053 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1053
9999 mem: location 1063 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1054
9999 mem: location 1064 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1060 is 19
9999 mem: storing 20 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 20
9999 mem: location 1059 is 20
9999 mem: storing 1 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1065
 103 run: *x <- copy 0
9999 mem: location 1065 is 1011
9999 mem: location 1065 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1065
 103 run: *x <- copy 0
9999 mem: location 1065 is 1012
9999 mem: location 1065 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1057 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [a
b
cdef]
9999 mem: storing 1066 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 5/right
9999 mem: location 1 is 1066
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1075
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1077
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1078
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1079
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1080
 102 run: right <- subtract right, 1
9999 mem: location 1080 is 5
9999 mem: storing 4 in location 1080
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1055 in location 1081
 102 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1082
 102 run: *x <- copy left
9999 mem: location 1079 is 0
9999 mem: location 1082 is 1059
9999 mem: location 1082 is 1059
9999 mem: storing 0 in location 1059
 102 run: x <- get-address *result, right:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1082
 102 run: *x <- copy right
9999 mem: location 1080 is 4
9999 mem: location 1082 is 1060
9999 mem: location 1082 is 1060
9999 mem: storing 4 in location 1060
 102 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1082
 102 run: *x <- copy 1/top
9999 mem: location 1082 is 1061
9999 mem: location 1082 is 1061
9999 mem: storing 1 in location 1061
 102 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1082
 102 run: *x <- copy left
9999 mem: location 1079 is 0
9999 mem: location 1082 is 1062
9999 mem: location 1082 is 1062
9999 mem: storing 0 in location 1062
 102 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1083
 102 run: *init <- push-duplex 167/Â§, 0/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1087
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1089
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1090
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1095
9999 mem: storing 1095 in location 1091
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1091 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1091 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1092
 103 run: *val <- copy x
9999 mem: location 1089 is 167
9999 mem: location 1092 is 1095
9999 mem: location 1092 is 1095
9999 mem: storing 167 in location 1095
 103 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1091 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1091 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1093
 103 run: *next <- copy in
9999 mem: location 1090 is 0
9999 mem: location 1093 is 1096
9999 mem: location 1093 is 1096
9999 mem: storing 0 in location 1096
 103 run: jump-if in, 1:offset
9999 mem: location 1090 is 0
9999 run: jump-if fell through
 103 run: reply result
9999 mem: location 1091 is 1095
9999 run: result 0 is 1095
9999 mem: location 1083 is 1055
9999 mem: storing 1095 in location 1055
 102 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1084
 102 run: *top-of-screen <- copy *init
9999 mem: location 1083 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1083 is 1055
9999 mem: location 1084 is 1056
9999 mem: location 1083 is 1055
9999 mem: location 1084 is 1056
9999 mem: storing 1095 in location 1056
 102 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1085
 102 run: *y <- copy *init
9999 mem: location 1083 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1083 is 1055
9999 mem: location 1085 is 1058
9999 mem: location 1083 is 1055
9999 mem: location 1085 is 1058
9999 mem: storing 1095 in location 1058
 102 run: result <- insert-text result, s
9999 mem: location 1081 is 1055
9999 mem: location 1077 is 1066
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1002
 103 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1003
 103 run: jump-if text, 1:offset
9999 mem: location 1003 is 1066
9999 run: jumping to instruction 5
 103 run: len:number <- length *text
9999 mem: location 1003 is 1066
9999 mem: storing 8 in location 1004
 103 run: jump-if len, 1:offset
9999 mem: location 1004 is 8
9999 run: jumping to instruction 8
 103 run: idx:number <- copy 0
9999 mem: storing 0 in location 1005
 103 run: curr:address:duplex-list <- get *editor, data:offset
9999 mem: location 1002 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1002 is 1055
9999 run: address to copy is 1055
9999 run: its type is address
9999 mem: location 1055 is 1095
9999 mem: storing 1095 in location 1006
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 0
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 0
9999 run: address to copy is 1067
9999 run: its type is character
9999 mem: location 1067 is 97
9999 mem: storing 97 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 97
9999 mem: location 1006 is 1095
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1098
9999 mem: storing 1098 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1091 is 1098
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 97
9999 mem: location 1092 is 1098
9999 mem: location 1092 is 1098
9999 mem: storing 97 in location 1098
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1090 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1090 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1098
9999 mem: location 1094 is 1096
9999 mem: location 1094 is 1096
9999 mem: storing 1098 in location 1096
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1091 is 1098
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1095
9999 mem: location 1094 is 1100
9999 mem: location 1094 is 1100
9999 mem: storing 1095 in location 1100
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1095
9999 mem: location 1091 is 1098
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1099
9999 mem: location 1094 is 1099
9999 mem: storing 0 in location 1099
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1098
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1095
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1101
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 1
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 1
9999 run: address to copy is 1068
9999 run: its type is character
9999 mem: location 1068 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1098
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1105
9999 mem: storing 1105 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1091 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 10
9999 mem: location 1092 is 1105
9999 mem: location 1092 is 1105
9999 mem: storing 10 in location 1105
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1095
9999 mem: location 1090 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1095
9999 mem: location 1090 is 1098
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1105
9999 mem: location 1094 is 1099
9999 mem: location 1094 is 1099
9999 mem: storing 1105 in location 1099
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1091 is 1105
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1098
9999 mem: location 1094 is 1107
9999 mem: location 1094 is 1107
9999 mem: storing 1098 in location 1107
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1098
9999 mem: location 1091 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1106
9999 mem: location 1094 is 1106
9999 mem: storing 0 in location 1106
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1105
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1098
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 2
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 2
9999 run: address to copy is 1069
9999 run: its type is character
9999 mem: location 1069 is 98
9999 mem: storing 98 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 98
9999 mem: location 1006 is 1105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1108
9999 mem: storing 1108 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1091 is 1108
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 98
9999 mem: location 1092 is 1108
9999 mem: location 1092 is 1108
9999 mem: storing 98 in location 1108
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1098
9999 mem: location 1090 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1098
9999 mem: location 1090 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1108
9999 mem: location 1094 is 1106
9999 mem: location 1094 is 1106
9999 mem: storing 1108 in location 1106
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1091 is 1108
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1105
9999 mem: location 1094 is 1110
9999 mem: location 1094 is 1110
9999 mem: storing 1105 in location 1110
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1091 is 1108
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1094 is 1109
9999 mem: storing 0 in location 1109
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1108
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 3
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 3
9999 run: address to copy is 1070
9999 run: its type is character
9999 mem: location 1070 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1111
9999 mem: storing 1111 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1091 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 10
9999 mem: location 1092 is 1111
9999 mem: location 1092 is 1111
9999 mem: storing 10 in location 1111
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1090 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1090 is 1108
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1111
9999 mem: location 1094 is 1109
9999 mem: location 1094 is 1109
9999 mem: storing 1111 in location 1109
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1091 is 1111
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1108
9999 mem: location 1094 is 1113
9999 mem: location 1094 is 1113
9999 mem: storing 1108 in location 1113
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1091 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1112
9999 mem: location 1094 is 1112
9999 mem: storing 0 in location 1112
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1111
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 4
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 4
9999 run: address to copy is 1071
9999 run: its type is character
9999 mem: location 1071 is 99
9999 mem: storing 99 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 99
9999 mem: location 1006 is 1111
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1114
9999 mem: storing 1114 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1091 is 1114
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 99
9999 mem: location 1092 is 1114
9999 mem: location 1092 is 1114
9999 mem: storing 99 in location 1114
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1090 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1090 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1114
9999 mem: location 1094 is 1112
9999 mem: location 1094 is 1112
9999 mem: storing 1114 in location 1112
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1091 is 1114
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1111
9999 mem: location 1094 is 1116
9999 mem: location 1094 is 1116
9999 mem: storing 1111 in location 1116
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 0
9999 mem: location 1116 is 1111
9999 mem: location 1091 is 1114
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1115
9999 mem: location 1094 is 1115
9999 mem: storing 0 in location 1115
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1114
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1111
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 5
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 5
9999 run: address to copy is 1072
9999 run: its type is character
9999 mem: location 1072 is 100
9999 mem: storing 100 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 100
9999 mem: location 1006 is 1114
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1117
9999 mem: storing 1117 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1117
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1091 is 1117
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 100
9999 mem: location 1092 is 1117
9999 mem: location 1092 is 1117
9999 mem: storing 100 in location 1117
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 0
9999 mem: location 1116 is 1111
9999 mem: location 1090 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 0
9999 mem: location 1116 is 1111
9999 mem: location 1090 is 1114
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1117
9999 mem: location 1094 is 1115
9999 mem: location 1094 is 1115
9999 mem: storing 1117 in location 1115
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1091 is 1117
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1114
9999 mem: location 1094 is 1119
9999 mem: location 1094 is 1119
9999 mem: storing 1114 in location 1119
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 0
9999 mem: location 1119 is 1114
9999 mem: location 1091 is 1117
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1118
9999 mem: location 1094 is 1118
9999 mem: storing 0 in location 1118
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1117
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1114
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 5
9999 mem: storing 6 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 6
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 6
9999 run: address to copy is 1073
9999 run: its type is character
9999 mem: location 1073 is 101
9999 mem: storing 101 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 101
9999 mem: location 1006 is 1117
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1120
9999 mem: storing 1120 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1120
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1091 is 1120
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 101
9999 mem: location 1092 is 1120
9999 mem: location 1092 is 1120
9999 mem: storing 101 in location 1120
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 0
9999 mem: location 1119 is 1114
9999 mem: location 1090 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 0
9999 mem: location 1119 is 1114
9999 mem: location 1090 is 1117
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1120
9999 mem: location 1094 is 1118
9999 mem: location 1094 is 1118
9999 mem: storing 1120 in location 1118
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1091 is 1120
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1117
9999 mem: location 1094 is 1122
9999 mem: location 1094 is 1122
9999 mem: storing 1117 in location 1122
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1117
9999 mem: location 1091 is 1120
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1121
9999 mem: location 1094 is 1121
9999 mem: storing 0 in location 1121
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1120
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1117
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 6
9999 mem: storing 7 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 7
9999 mem: location 1004 is 8
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 7
9999 run: address to copy is 1074
9999 run: its type is character
9999 mem: location 1074 is 102
9999 mem: storing 102 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 102
9999 mem: location 1006 is 1120
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1089
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1090
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1123
9999 mem: storing 1123 in location 1091
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1123
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1091 is 1123
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1092
 104 run: *val <- copy x
9999 mem: location 1089 is 102
9999 mem: location 1092 is 1123
9999 mem: location 1092 is 1123
9999 mem: storing 102 in location 1123
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1117
9999 mem: location 1090 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 0
9999 mem: storing 0 in location 1093
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 0
9999 mem: location 1122 is 1117
9999 mem: location 1090 is 1120
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1094
 104 run: *y <- copy new-node
9999 mem: location 1091 is 1123
9999 mem: location 1094 is 1121
9999 mem: location 1094 is 1121
9999 mem: storing 1123 in location 1121
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1091 is 1123
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1094
 104 run: *y <- copy in
9999 mem: location 1090 is 1120
9999 mem: location 1094 is 1125
9999 mem: location 1094 is 1125
9999 mem: storing 1120 in location 1125
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1091 is 1123
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1094
 104 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1124
9999 mem: location 1094 is 1124
9999 mem: storing 0 in location 1124
 104 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1091 is 1123
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1120
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 7
9999 mem: storing 8 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 8
9999 mem: location 1004 is 8
9999 mem: storing 1 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 18
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1055
9999 run: result 0 is 1055
9999 mem: storing 1055 in location 1081
 102 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1085
 102 run: *y <- copy *init
9999 mem: location 1083 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1083 is 1055
9999 mem: location 1085 is 1058
9999 mem: location 1083 is 1055
9999 mem: location 1085 is 1058
9999 mem: storing 1095 in location 1058
 102 run: _, _, screen, result <- render screen, result
9999 mem: location 1078 is 1009
9999 mem: location 1081 is 1055
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1126
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1128
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1129
 103 run: jump-if editor, 1:offset
9999 mem: location 1129 is 1055
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1130
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1128 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 104 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 104 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1131
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1132
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1095
9999 mem: storing 1095 in location 1133
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1133 is 1095
9999 mem: storing 1095 in location 1134
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1095
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1133
schedule: render/new-editor/scenario-editor-scrolls-down-when-line-wraps
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1135
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1136
 103 run: column:number <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1138
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1139
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1140
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 1
9999 mem: location 1137 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1153
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1156
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 104 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 104 run: *row <- copy new-row
9999 mem: location 1156 is 1
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 104 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 103 run: break-unless curr, 
9999 mem: location 1133 is 1098
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1137 is 0
9999 mem: location 1139 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 1 in location 1143
 103 run: break-unless at-cursor?, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1134 is 1095
9999 mem: location 1140 is 1058
9999 mem: location 1140 is 1058
9999 mem: storing 1095 in location 1058
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1133 is 1098
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 97
9999 mem: storing 97 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1160
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 97
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 97
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 97
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 97
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1171
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 97
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 97
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 5
9999 mem: storing 1025 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1192 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 97
9999 mem: location 1193 is 1025
9999 mem: location 1193 is 1025
9999 mem: storing 97 in location 1025
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1192 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1026
9999 mem: location 1194 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1098
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1095
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 1105
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1143
 103 run: break-unless at-cursor?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1133 is 1105
9999 run: address to copy is 1105
9999 run: its type is number
9999 mem: location 1105 is 10
9999 mem: storing 10 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 10
9999 mem: storing 1 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1146
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1128 is 1009
9999 mem: location 1137 is 1
9999 mem: location 1132 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1197
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1199
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1201
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 1
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 6
9999 mem: storing 1027 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1192 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1027
9999 mem: location 1193 is 1027
9999 mem: storing 32 in location 1027
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1192 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1028
9999 mem: location 1194 is 1028
9999 mem: storing 7 in location 1028
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 2
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 7
9999 mem: storing 1029 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1192 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1029
9999 mem: location 1193 is 1029
9999 mem: storing 32 in location 1029
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1192 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1030
9999 mem: location 1194 is 1030
9999 mem: storing 7 in location 1030
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 3
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 8
9999 mem: storing 1031 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1192 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1031
9999 mem: location 1193 is 1031
9999 mem: storing 32 in location 1031
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1192 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1032
9999 mem: location 1194 is 1032
9999 mem: storing 7 in location 1032
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 9
9999 mem: storing 1033 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1192 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1033
9999 mem: location 1193 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1192 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1034
9999 mem: location 1194 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 5
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 103 run: column <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 2
9999 mem: location 1137 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1156
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 104 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 104 run: *row <- copy new-row
9999 mem: location 1156 is 2
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 104 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1098
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1134
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1133 is 1108
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1133 is 1108
9999 run: address to copy is 1108
9999 run: its type is number
9999 mem: location 1108 is 98
9999 mem: storing 98 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 98
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 98
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
schedule: print-character/render/new-editor/scenario-editor-scrolls-down-when-line-wraps
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 10
9999 mem: storing 1035 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1192 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 98
9999 mem: location 1193 is 1035
9999 mem: location 1193 is 1035
9999 mem: storing 98 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1192 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1036
9999 mem: location 1194 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 1111
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1133 is 1111
9999 run: address to copy is 1111
9999 run: its type is number
9999 mem: location 1111 is 10
9999 mem: storing 10 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 10
9999 mem: storing 1 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1128 is 1009
9999 mem: location 1137 is 1
9999 mem: location 1132 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1199
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1201
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 1
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 11
9999 mem: storing 1037 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1192 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1037
9999 mem: location 1193 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1192 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1038
9999 mem: location 1194 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 2
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 12
9999 mem: storing 1039 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1192 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1039
9999 mem: location 1193 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1192 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1040
9999 mem: location 1194 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 3
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 13
9999 mem: storing 1041 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1192 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1041
9999 mem: location 1193 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1192 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1042
9999 mem: location 1194 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 14
9999 mem: storing 1043 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1192 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1043
9999 mem: location 1193 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1192 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1044
9999 mem: location 1194 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 5
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 103 run: column <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 3
9999 mem: location 1137 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1156
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 104 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 104 run: *row <- copy new-row
9999 mem: location 1156 is 3
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 104 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1111
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1134
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1133 is 1114
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1133 is 1114
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 99
9999 mem: storing 99 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 99
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 15
9999 mem: storing 1045 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1192 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 99
9999 mem: location 1193 is 1045
9999 mem: location 1193 is 1045
9999 mem: storing 99 in location 1045
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1192 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1046
9999 mem: location 1194 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1114
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1111
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 1117
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1133 is 1117
9999 run: address to copy is 1117
9999 run: its type is number
9999 mem: location 1117 is 100
9999 mem: storing 100 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 100
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
schedule: render/new-editor/scenario-editor-scrolls-down-when-line-wraps
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 1
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 100
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 100
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 100
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 16
9999 mem: storing 1047 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1192 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 100
9999 mem: location 1193 is 1047
9999 mem: location 1193 is 1047
9999 mem: storing 100 in location 1047
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1047
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1192 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1048
9999 mem: location 1194 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1117
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1114
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 1120
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1133 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 101
9999 mem: storing 101 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 101
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 2
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 101
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 101
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 101
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 17
9999 mem: storing 1049 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1192 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 101
9999 mem: location 1193 is 1049
9999 mem: location 1193 is 1049
9999 mem: storing 101 in location 1049
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1049
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1192 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1050
9999 mem: location 1194 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1120
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1117
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 1123
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 103 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1133 is 1123
9999 run: address to copy is 1123
9999 run: its type is number
9999 mem: location 1123 is 102
9999 mem: storing 102 in location 1144
 103 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1163
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1165
 104 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 104 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1168
 104 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 104 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 102
9999 mem: storing 0 in location 1145
 103 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 3
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 103 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 102
9999 mem: location 1135 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1174
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 104 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 104 run: trace 90, [print-character], c
9999 mem: location 1174 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 104 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 102
9999 mem: storing 0 in location 1184
 104 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 104 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1187
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 104 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 102
9999 mem: storing 0 in location 1190
 104 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 18
9999 mem: storing 1051 in location 1192
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1192 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1193
 104 run: *cursor-contents <- copy c
9999 mem: location 1174 is 102
9999 mem: location 1193 is 1051
9999 mem: location 1193 is 1051
9999 mem: storing 102 in location 1051
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1051
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1192 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1194
 104 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1052
9999 mem: location 1194 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 104 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1133 is 1123
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 0
9999 mem: storing 0 in location 1104
 104 run: reply result
9999 mem: location 1104 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1133
 103 run: prev <- next-duplex prev
9999 mem: location 1134 is 1120
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1134
 103 run: column <- add column, 1
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1133 is 0
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1148
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1133 is 0
9999 mem: location 1148 is 1057
9999 mem: location 1148 is 1057
9999 mem: storing 0 in location 1057
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1142
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1137 is 4
9999 mem: location 1139 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1149
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1142 is 0
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1150
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1151
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1152
 103 run: break-unless before-cursor?, 
9999 mem: location 1152 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 4
9999 mem: location 1128 is 1009
9999 mem: location 1129 is 1055
9999 run: result 0 is 3
9999 run: result 1 is 4
9999 run: result 2 is 1009
9999 run: result 3 is 1055
9999 mem: storing 1009 in location 1078
9999 mem: storing 1055 in location 1081
 102 run: indent:address:boolean <- get-address *result, indent:offset
9999 mem: location 1081 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1081 is 1055
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1086
 102 run: *indent <- copy 1/true
9999 mem: location 1086 is 1063
9999 mem: location 1086 is 1063
9999 mem: storing 1 in location 1063
 102 run: reply result
9999 mem: location 1081 is 1055
9999 run: result 0 is 1055
9999 mem: storing 1055 in location 2
 101 run: assume-console [
    left-click 3, 4
    type [g]
  ]
parse: instruction: left-click
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   ingredient: {name: "4", properties: ["4": "literal"]}
parse: instruction: type
parse:   ingredient: {name: "g", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1212
9999 mem: location 2 is 1055
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1214
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1216
 102 run: console:address <- next-ingredient 
9999 mem: storing 1212 in location 1217
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1218
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1217 is 1212
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1227
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1212 in location 1229
 103 run: break-unless x, 
9999 mem: location 1229 is 1212
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1230
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1203
9999 mem: storing 1203 in location 1231
 103 run: max:number <- length *buf
9999 mem: location 1231 is 1203
9999 mem: storing 2 in location 1232
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1232 is 2
9999 mem: storing 0 in location 1233
 103 run: break-unless done?, 
9999 mem: location 1233 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1231 is 1203
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 0
9999 run: address to copy is 1204
9999 run: its type is event
9999 mem: location 1204 is 2
9999 mem: location 1205 is 65513
9999 mem: location 1206 is 3
9999 mem: location 1207 is 4
9999 mem: storing 2 in location 1235
9999 mem: storing 65513 in location 1236
9999 mem: storing 3 in location 1237
9999 mem: storing 4 in location 1238
 103 run: *idx <- add *idx, 1
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1230 is 1212
9999 mem: storing 1 in location 1212
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1235 is 2
9999 mem: location 1236 is 65513
9999 mem: location 1237 is 3
9999 mem: location 1238 is 4
9999 mem: location 1229 is 1212
9999 run: result 0 is [2, 65513, 3, 4]
9999 run: result 1 is 1212
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1219
9999 mem: storing 65513 in location 1220
9999 mem: storing 3 in location 1221
9999 mem: storing 4 in location 1222
9999 mem: storing 1212 in location 1217
9999 mem: storing 1 in location 1223
9999 mem: storing 0 in location 1224
 102 run: loop-unless found?, 
9999 mem: location 1223 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1224 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1219 is 2
9999 mem: location 1220 is 65513
9999 mem: location 1221 is 3
9999 mem: location 1222 is 4
9999 mem: storing 1220 in location 1225
 102 run: break-unless t, 
9999 mem: location 1225 is 1220
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1216 is 1009
9999 mem: location 1218 is 1055
9999 mem: location 1225 is 1220
9999 mem: location 1220 is 65513
9999 mem: location 1221 is 3
9999 mem: location 1222 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1240
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1242
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1243
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1244
9999 mem: storing 3 in location 1245
9999 mem: storing 4 in location 1246
 103 run: jump-if editor, 1:offset
9999 mem: location 1243 is 1055
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1244 is 65513
9999 mem: location 1245 is 3
9999 mem: location 1246 is 4
9999 run: address to copy is 1246
9999 run: its type is number
9999 mem: location 1246 is 4
9999 mem: storing 4 in location 1247
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1248
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1247 is 4
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1249
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1249 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1250
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1247 is 4
9999 mem: location 1250 is 4
9999 mem: storing 0 in location 1251
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1251 is 0
9999 run: jumping to instruction 15
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1061
9999 run: its type is number
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1252
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1062
9999 run: its type is number
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1253
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1095
9999 mem: storing 1095 in location 1254
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1244 is 65513
9999 mem: location 1245 is 3
9999 mem: location 1246 is 4
9999 run: address to copy is 1245
9999 run: its type is number
9999 mem: location 1245 is 3
9999 mem: storing 3 in location 1255
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1244 is 65513
9999 mem: location 1245 is 3
9999 mem: location 1246 is 4
9999 run: address to copy is 1246
9999 run: its type is number
9999 mem: location 1246 is 4
9999 mem: storing 4 in location 1247
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1242 is 1009
9999 mem: location 1243 is 1055
9999 mem: location 1255 is 3
9999 mem: location 1247 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1128
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1129
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 3 in location 1130
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 4 in location 1131
 104 run: jump-if editor, 1:offset
9999 mem: location 1129 is 1055
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1132
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1133
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1128 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 105 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 105 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1134
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1095
9999 mem: storing 1095 in location 1135
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1135 is 1095
9999 mem: storing 1095 in location 1136
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1095
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1135
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1137
 104 run: column:number <- copy left
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1138
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1139
 104 run: *cursor-row <- copy target-row
9999 mem: location 1130 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1139 is 1061
9999 mem: storing 3 in location 1061
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1140
 104 run: *cursor-column <- copy target-column
9999 mem: location 1131 is 4
9999 mem: location 1140 is 1062
9999 mem: location 1140 is 1062
9999 mem: storing 4 in location 1062
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1095
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1141
 104 run: break-unless curr, 
9999 mem: location 1135 is 1098
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 1
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1135 is 1098
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 97
9999 mem: storing 97 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 97
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 0
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1098
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1095
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 0
9999 mem: storing 1 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 1105
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 1
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1135 is 1105
9999 run: address to copy is 1105
9999 run: its type is number
9999 mem: location 1105 is 10
9999 mem: storing 10 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 10
9999 mem: storing 1 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 104 run: column <- copy left
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1138
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1105
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1098
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1136
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1135 is 1108
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 2
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1135 is 1108
9999 run: address to copy is 1108
9999 run: its type is number
9999 mem: location 1108 is 98
9999 mem: storing 98 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 98
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 0
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1108
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1105
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 0
9999 mem: storing 1 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 1111
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 2
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1135 is 1111
9999 run: address to copy is 1111
9999 run: its type is number
9999 mem: location 1111 is 10
9999 mem: storing 10 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 10
9999 mem: storing 1 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 2
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 104 run: column <- copy left
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1138
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1111
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
schedule: next-duplex/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-scrolls-down-when-line-wraps
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1108
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1136
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1135 is 1114
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 3
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1138 is 0
9999 mem: location 1140 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 0 in location 1144
 104 run: break-unless at-cursor?, 
9999 mem: location 1144 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1135 is 1114
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 99
9999 mem: storing 99 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 99
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 0
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1114
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1111
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 0
9999 mem: storing 1 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 1117
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 3
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1138 is 1
9999 mem: location 1140 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 0 in location 1144
 104 run: break-unless at-cursor?, 
9999 mem: location 1144 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1135 is 1117
9999 run: address to copy is 1117
9999 run: its type is number
9999 mem: location 1117 is 100
9999 mem: storing 100 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 100
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 1
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1117
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1114
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 1
9999 mem: storing 2 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 1120
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 3
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1138 is 2
9999 mem: location 1140 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 0 in location 1144
 104 run: break-unless at-cursor?, 
9999 mem: location 1144 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1135 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 101
9999 mem: storing 101 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 101
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 2
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1120
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1117
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 2
9999 mem: storing 3 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 1123
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1137 is 3
9999 mem: location 1134 is 4
9999 mem: storing 0 in location 1142
 104 run: break-if off-screen?, 
9999 mem: location 1142 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1143
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1143 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1138 is 3
9999 mem: location 1140 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 0 in location 1144
 104 run: break-unless at-cursor?, 
9999 mem: location 1144 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1135 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1135 is 1123
9999 run: address to copy is 1123
9999 run: its type is number
9999 mem: location 1123 is 102
9999 mem: storing 102 in location 1145
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1145 is 102
9999 mem: storing 0 in location 1146
 104 run: break-unless newline?, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1138 is 3
9999 mem: location 1133 is 4
9999 mem: storing 0 in location 1148
 104 run: break-unless at-right?, 
9999 mem: location 1148 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1135 is 1123
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 0
9999 mem: storing 0 in location 1104
 105 run: reply result
9999 mem: location 1104 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1135
 104 run: prev <- next-duplex prev
9999 mem: location 1136 is 1120
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1136
 104 run: column <- add column, 1
9999 mem: location 1138 is 3
9999 mem: storing 4 in location 1138
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1135 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1143
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1138 is 4
9999 mem: location 1140 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 1 in location 1149
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1143 is 1
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1150
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1151
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: storing 1 in location 1152
 104 run: break-unless before-cursor?, 
9999 mem: location 1152 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1137 is 3
9999 mem: location 1139 is 1061
9999 mem: location 1139 is 1061
9999 mem: storing 3 in location 1061
 104 run: *cursor-column <- copy column
9999 mem: location 1138 is 4
9999 mem: location 1140 is 1062
9999 mem: location 1140 is 1062
9999 mem: storing 4 in location 1062
 104 run: *before-cursor <- copy prev
9999 mem: location 1136 is 1123
9999 mem: location 1141 is 1058
9999 mem: location 1141 is 1058
9999 mem: storing 1123 in location 1058
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1129 is 1055
9999 run: result 0 is 1055
9999 mem: storing 1055 in location 1243
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1061
9999 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1256
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1062
9999 run: its type is number
9999 mem: location 1062 is 4
9999 mem: storing 4 in location 1257
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1243 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1243 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1095
9999 mem: storing 1095 in location 1258
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1260
9999 mem: storing 1260 in location 1259
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1252 is 1
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1095
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: location 1258 is 1095
9999 mem: location 1259 is 1260
9999 mem: storing 1 in location 1260
9999 mem: storing 1 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 1095 in location 1263
9999 mem: storing 3 in location 1264
9999 mem: storing 4 in location 1265
9999 mem: storing 1095 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 103 run: editor <- add-operation editor, op
9999 mem: location 1243 is 1055
9999 mem: location 1259 is 1260
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1199
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1260 in location 1200
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1199 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1199 is 1055
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1201
 104 run: *undo <- push op, *undo
9999 mem: location 1200 is 1260
9999 mem: location 1201 is 1064
9999 mem: location 1064 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1260 in location 1155
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1156
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1270
9999 mem: storing 1270 in location 1157
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1157 is 1270
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1157 is 1270
9999 run: address to copy is 1270
9999 mem: storing 1270 in location 1158
 105 run: *val <- copy x
9999 mem: location 1155 is 1260
9999 mem: location 1158 is 1270
9999 mem: location 1158 is 1270
9999 mem: storing 1260 in location 1270
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1157 is 1270
9999 mem: location 1270 is 1260
9999 mem: location 1271 is 0
9999 mem: location 1157 is 1270
9999 run: address to copy is 1271
9999 mem: storing 1271 in location 1159
 105 run: *next <- copy in
9999 mem: location 1156 is 0
9999 mem: location 1159 is 1271
9999 mem: location 1159 is 1271
9999 mem: storing 0 in location 1271
 105 run: reply result
9999 mem: location 1157 is 1270
9999 run: result 0 is 1270
9999 mem: location 1201 is 1064
9999 mem: storing 1270 in location 1064
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1199 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1199 is 1055
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1202
 104 run: *redo <- copy 0
9999 mem: location 1202 is 1065
9999 mem: location 1202 is 1065
9999 mem: storing 0 in location 1065
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1199 is 1055
9999 run: result 0 is 1055
9999 mem: storing 1055 in location 1243
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1217 is 1212
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1212 in location 1229
 103 run: break-unless x, 
9999 mem: location 1229 is 1212
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 1
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1230
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 1
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1203
9999 mem: storing 1203 in location 1231
 103 run: max:number <- length *buf
9999 mem: location 1231 is 1203
9999 mem: storing 2 in location 1232
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 1
9999 mem: location 1232 is 2
9999 mem: storing 0 in location 1233
 103 run: break-unless done?, 
9999 mem: location 1233 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1231 is 1203
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 1
9999 run: address to copy is 1208
9999 run: its type is event
9999 mem: location 1208 is 0
9999 mem: location 1209 is 103
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1235
9999 mem: storing 103 in location 1236
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 103 run: *idx <- add *idx, 1
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 1
9999 mem: location 1230 is 1212
9999 mem: storing 2 in location 1212
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1235 is 0
9999 mem: location 1236 is 103
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1229 is 1212
9999 run: result 0 is [0, 103, 0, 0]
9999 run: result 1 is 1212
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1219
9999 mem: storing 103 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 0 in location 1222
9999 mem: storing 1212 in location 1217
9999 mem: storing 1 in location 1223
9999 mem: storing 0 in location 1224
 102 run: loop-unless found?, 
9999 mem: location 1223 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1224 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1219 is 0
9999 mem: location 1220 is 103
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1225
 102 run: break-unless t, 
9999 mem: location 1225 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1225 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1216 is 1009
9999 mem: location 1218 is 1055
9999 mem: location 1219 is 0
9999 mem: location 1220 is 103
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 76
9999 mem: new alloc: 1272
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1274
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1275
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1276
9999 mem: storing 103 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 0 in location 1279
 103 run: jump-if editor, 1:offset
9999 mem: location 1275 is 1055
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1274 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 104 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1104
 104 run: reply width
9999 mem: location 1104 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1280
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1274 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 104 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 104 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1281
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1282
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1283
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1284
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1286
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1285 is 1061
9999 mem: location 1061 is 3
9999 mem: location 1285 is 1061
9999 mem: location 1285 is 1061
9999 mem: storing 3 in location 1287
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1286 is 1062
9999 mem: location 1062 is 4
9999 mem: location 1286 is 1062
9999 mem: location 1286 is 1062
9999 mem: storing 4 in location 1288
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1276 is 0
9999 mem: location 1277 is 103
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: storing 1277 in location 1289
 103 run: break-unless c, 
9999 mem: location 1289 is 1277
9999 run: jump-unless fell through
 103 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1290
 103 run: break-unless redo?, 
9999 mem: location 1290 is 0
9999 run: jumping to instruction 49
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1298
 103 run: break-unless undo?, 
9999 mem: location 1298 is 0
9999 run: jumping to instruction 81
 103 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1301
 103 run: break-unless page-up?, 
9999 mem: location 1301 is 0
9999 run: jumping to instruction 103
 103 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1311
 103 run: break-unless page-down?, 
9999 mem: location 1311 is 0
9999 run: jumping to instruction 125
 103 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1312
 103 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1312 is 0
9999 run: jumping to instruction 131
 103 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1313
 103 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 137
 103 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1314
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 154
 103 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1315
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1315 is 0
9999 run: jumping to instruction 171
 103 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1316
 103 run: break-unless delete-previous-character?, 
9999 mem: location 1316 is 0
9999 run: jumping to instruction 177
 103 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1318
 103 run: break-unless tab?, 
9999 mem: location 1318 is 0
9999 run: jumping to instruction 213
 103 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 0 in location 1328
 103 run: break-unless newline?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 231
 103 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: storing 1 in location 1331
 103 run: jump-if regular-character?, 1:offset
9999 mem: location 1331 is 1
9999 run: jumping to instruction 235
 103 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1095
9999 mem: storing 1095 in location 1319
 103 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1284 is 1058
9999 mem: location 1058 is 1123
9999 mem: location 1284 is 1058
9999 mem: location 1284 is 1058
9999 mem: storing 1123 in location 1320
 103 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1275 is 1055
9999 mem: location 1289 is 1277
9999 mem: location 1277 is 103
9999 mem: location 1274 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1349
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1351
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1352
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1353
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1123
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1354
 104 run: insert-duplex c, *before-cursor
9999 mem: location 1352 is 103
9999 mem: location 1354 is 1058
9999 mem: location 1058 is 1123
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 103 in location 1089
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1090
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1380
9999 mem: storing 1380 in location 1091
 105 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1091 is 1380
9999 mem: location 1380 is 0
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: location 1091 is 1380
9999 run: address to copy is 1380
9999 mem: storing 1380 in location 1092
 105 run: *val <- copy x
9999 mem: location 1089 is 103
9999 mem: location 1092 is 1380
9999 mem: location 1092 is 1380
9999 mem: storing 103 in location 1380
 105 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1090 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1090 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 0
9999 mem: storing 0 in location 1093
 105 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1090 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 1120
9999 mem: location 1090 is 1123
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1094
 105 run: *y <- copy new-node
9999 mem: location 1091 is 1380
9999 mem: location 1094 is 1124
9999 mem: location 1094 is 1124
9999 mem: storing 1380 in location 1124
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1091 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: location 1091 is 1380
9999 run: address to copy is 1382
9999 mem: storing 1382 in location 1094
 105 run: *y <- copy in
9999 mem: location 1090 is 1123
9999 mem: location 1094 is 1382
9999 mem: location 1094 is 1382
9999 mem: storing 1123 in location 1382
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1091 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1123
9999 mem: location 1091 is 1380
9999 run: address to copy is 1381
9999 mem: storing 1381 in location 1094
 105 run: *y <- copy next-node
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1381
9999 mem: location 1094 is 1381
9999 mem: storing 0 in location 1381
 105 run: jump-if next-node, 1:offset
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1091 is 1380
 104 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1354 is 1058
9999 mem: location 1058 is 1123
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 1380
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 1380
9999 mem: storing 1380 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1380
9999 run: result 0 is 1380
9999 mem: location 1354 is 1058
9999 mem: storing 1380 in location 1058
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1355
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1356
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1357
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1358
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1355 is 1061
9999 mem: location 1061 is 3
9999 mem: location 1355 is 1061
9999 mem: location 1355 is 1061
9999 mem: storing 3 in location 1359
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1356 is 1062
9999 mem: location 1062 is 4
9999 mem: location 1356 is 1062
9999 mem: location 1356 is 1062
9999 mem: storing 4 in location 1360
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1353 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 105 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1104
 105 run: reply width
9999 mem: location 1104 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1361
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1353 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 105 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 105 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1362
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1358 is 4
9999 mem: storing 3 in location 1363
 104 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1356 is 1062
9999 mem: location 1062 is 4
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 104 run: break-unless at-wrap?, 
9999 mem: location 1364 is 1
9999 run: jump-unless fell through
 104 run: *cursor-column <- subtract *cursor-column, wrap-column
9999 mem: location 1356 is 1062
9999 mem: location 1062 is 4
9999 mem: location 1363 is 3
9999 mem: location 1356 is 1062
9999 mem: storing 1 in location 1062
 104 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1355 is 1061
9999 mem: location 1061 is 3
9999 mem: location 1355 is 1061
9999 mem: storing 4 in location 1061
 104 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1355 is 1061
9999 mem: location 1061 is 4
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1365
 104 run: break-unless below-screen?, 
9999 mem: location 1365 is 1
9999 run: jump-unless fell through
 104 run: trace 10, [app], [scroll down]
  10 app: scroll down 
 104 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1366
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1357
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1351 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1095
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1351 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1358
 104 run: max:number <- subtract right, left
9999 mem: location 1358 is 4
9999 mem: location 1357 is 0
9999 mem: storing 4 in location 1367
 104 run: old-top:address:duplex-list <- copy *top-of-screen
9999 mem: location 1366 is 1056
9999 mem: location 1056 is 1095
9999 mem: location 1366 is 1056
9999 mem: location 1366 is 1056
9999 mem: storing 1095 in location 1368
 104 run: *top-of-screen <- before-start-of-next-line *top-of-screen, max
9999 mem: location 1366 is 1056
9999 mem: location 1056 is 1095
9999 mem: location 1367 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: original:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1002
 105 run: max:number <- next-ingredient 
9999 mem: storing 4 in location 1003
 105 run: count:number <- copy 0
9999 mem: storing 0 in location 1004
 105 run: curr:address:duplex-list <- copy original
9999 mem: location 1002 is 1095
9999 mem: storing 1095 in location 1005
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1005 is 1095
9999 run: address to copy is 1095
9999 run: its type is number
9999 mem: location 1095 is 167
9999 mem: storing 167 in location 1006
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 105 run: break-unless at-newline?, 
9999 mem: location 1007 is 0
9999 run: jumping to instruction 11
 105 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1095
9999 run: jumping to instruction 15
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 0
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 105 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1005 is 1095
9999 run: address to copy is 1095
9999 run: its type is number
9999 mem: location 1095 is 167
9999 mem: storing 167 in location 1006
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 105 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 105 run: curr <- next-duplex curr
9999 mem: location 1005 is 1095
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1095 in location 1103
 106 run: jump-if in, 1:offset
9999 mem: location 1103 is 1095
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1095
9999 mem: location 1095 is 167
9999 mem: location 1096 is 1098
9999 mem: location 1097 is 0
9999 mem: location 1103 is 1095
9999 run: address to copy is 1096
9999 run: its type is address
9999 mem: location 1096 is 1098
9999 mem: storing 1098 in location 1104
 106 run: reply result
9999 mem: location 1104 is 1098
9999 run: result 0 is 1098
9999 mem: storing 1098 in location 1005
 105 run: count <- add count, 1
9999 mem: location 1004 is 0
9999 mem: storing 1 in location 1004
 105 run: loop 
9999 run: jumping to instruction 13
 105 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1098
9999 run: jumping to instruction 15
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 1
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 105 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1005 is 1098
9999 run: address to copy is 1098
9999 run: its type is number
9999 mem: location 1098 is 97
9999 mem: storing 97 in location 1006
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 97
9999 mem: storing 0 in location 1007
 105 run: break-if at-newline?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 105 run: curr <- next-duplex curr
9999 mem: location 1005 is 1098
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1098 in location 1103
 106 run: jump-if in, 1:offset
9999 mem: location 1103 is 1098
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1098
9999 mem: location 1098 is 97
9999 mem: location 1099 is 1105
9999 mem: location 1100 is 1095
9999 mem: location 1103 is 1098
9999 run: address to copy is 1099
9999 run: its type is address
9999 mem: location 1099 is 1105
9999 mem: storing 1105 in location 1104
 106 run: reply result
9999 mem: location 1104 is 1105
9999 run: result 0 is 1105
9999 mem: storing 1105 in location 1005
 105 run: count <- add count, 1
9999 mem: location 1004 is 1
9999 mem: storing 2 in location 1004
 105 run: loop 
9999 run: jumping to instruction 13
 105 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1105
9999 run: jumping to instruction 15
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 2
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 105 run: break-if done?, 
9999 mem: location 1008 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1005 is 1105
9999 run: address to copy is 1105
9999 run: its type is number
9999 mem: location 1105 is 10
9999 mem: storing 10 in location 1006
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 105 run: break-if at-newline?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 23
 105 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1105
9999 run: jumping to instruction 26
 105 run: reply curr
9999 mem: location 1005 is 1105
9999 run: result 0 is 1105
9999 mem: location 1366 is 1056
9999 mem: storing 1105 in location 1056
 104 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1368 is 1095
9999 mem: location 1366 is 1056
9999 mem: location 1056 is 1105
9999 mem: storing 0 in location 1369
 104 run: jump-unless no-movement?, 1:offset
9999 mem: location 1369 is 0
9999 run: jumping to instruction 36
 104 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 1/go-render
9999 mem: location 1351 is 1055
9999 mem: location 1353 is 1009
9999 run: result 0 is 1055
9999 run: result 1 is 1009
9999 run: result 2 is 1
9999 mem: storing 1055 in location 1275
9999 mem: storing 1009 in location 1274
9999 mem: storing 1 in location 1317
 103 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1105
9999 mem: storing 1105 in location 1321
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1275 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1275 is 1055
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1293
 103 run: break-unless *undo, 
9999 mem: location 1293 is 1064
9999 mem: location 1064 is 1270
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1293 is 1064
9999 mem: location 1064 is 1270
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1270 in location 1103
 104 run: result:location <- get *in, value:offset
9999 mem: location 1103 is 1270
9999 mem: location 1270 is 1260
9999 mem: location 1271 is 0
9999 mem: location 1103 is 1270
9999 run: address to copy is 1270
9999 run: its type is number
9999 mem: location 1270 is 1260
9999 mem: storing 1260 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1260
9999 run: result 0 is 1260
9999 mem: storing 1260 in location 1292
 103 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1292 is 1260
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1095
9999 mem: location 1264 is 3
9999 mem: location 1265 is 4
9999 mem: location 1266 is 1095
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1292 is 1260
9999 mem: storing 0 in location 1296
 103 run: break-unless typing, 
9999 mem: location 1296 is 0
9999 run: jumping to instruction 257
 103 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1320 is 1123
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 1380
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 1380
9999 mem: storing 1380 in location 1104
 104 run: reply result
9999 mem: location 1104 is 1380
9999 run: result 0 is 1380
9999 mem: storing 1380 in location 1297
 103 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1297 is 1380
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1380 in location 1103
 104 run: jump-if in, 1:offset
9999 mem: location 1103 is 1380
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1123
9999 mem: location 1103 is 1380
9999 run: address to copy is 1381
9999 run: its type is address
9999 mem: location 1381 is 0
9999 mem: storing 0 in location 1104
 104 run: reply result
9999 mem: location 1104 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1327
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1383
9999 mem: storing 1383 in location 1292
 103 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1287 is 3
9999 mem: location 1288 is 4
9999 mem: location 1319 is 1095
9999 mem: location 1285 is 1061
9999 mem: location 1061 is 4
9999 mem: location 1286 is 1062
9999 mem: location 1062 is 1
9999 mem: location 1321 is 1105
9999 mem: location 1297 is 1380
9999 mem: location 1327 is 0
9999 mem: location 1292 is 1383
9999 mem: storing 0 in location 1383
9999 mem: storing 3 in location 1384
9999 mem: storing 4 in location 1385
9999 mem: storing 1095 in location 1386
9999 mem: storing 4 in location 1387
9999 mem: storing 1 in location 1388
9999 mem: storing 1105 in location 1389
9999 mem: storing 1380 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 1 in location 1392
 103 run: editor <- add-operation editor, op
9999 mem: location 1275 is 1055
9999 mem: location 1292 is 1383
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1199
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1383 in location 1200
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1199 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1270
9999 mem: location 1065 is 0
9999 mem: location 1199 is 1055
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1201
 104 run: *undo <- push op, *undo
9999 mem: location 1200 is 1383
9999 mem: location 1201 is 1064
9999 mem: location 1064 is 1270
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1383 in location 1155
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1270 in location 1156
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1393
9999 mem: storing 1393 in location 1157
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1157 is 1393
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: location 1157 is 1393
9999 run: address to copy is 1393
9999 mem: storing 1393 in location 1158
 105 run: *val <- copy x
9999 mem: location 1155 is 1383
9999 mem: location 1158 is 1393
9999 mem: location 1158 is 1393
9999 mem: storing 1383 in location 1393
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1157 is 1393
9999 mem: location 1393 is 1383
9999 mem: location 1394 is 0
9999 mem: location 1157 is 1393
9999 run: address to copy is 1394
9999 mem: storing 1394 in location 1159
 105 run: *next <- copy in
9999 mem: location 1156 is 1270
9999 mem: location 1159 is 1394
9999 mem: location 1159 is 1394
9999 mem: storing 1270 in location 1394
 105 run: reply result
9999 mem: location 1157 is 1393
9999 run: result 0 is 1393
9999 mem: location 1201 is 1064
9999 mem: storing 1393 in location 1064
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1199 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1199 is 1055
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1202
 104 run: *redo <- copy 0
9999 mem: location 1202 is 1065
9999 mem: location 1202 is 1065
9999 mem: storing 0 in location 1065
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1199 is 1055
9999 run: result 0 is 1055
9999 mem: storing 1055 in location 1275
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1274 is 1009
9999 mem: location 1275 is 1055
9999 mem: location 1317 is 1
9999 run: result 0 is 1009
9999 run: result 1 is 1055
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1216
9999 mem: storing 1055 in location 1218
9999 mem: storing 1 in location 1226
 102 run: break-unless go-render?, 
9999 mem: location 1226 is 1
9999 run: jump-unless fell through
 102 run: editor-render screen, editor
9999 mem: location 1216 is 1009
9999 mem: location 1218 is 1055
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1089
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1090
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1090 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1090 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1091
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1090 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1090 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1092
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1089 is 1009
9999 mem: location 1090 is 1055
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1128
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1129
 104 run: jump-if editor, 1:offset
9999 mem: location 1129 is 1055
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1059
9999 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1130
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1128 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 105 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 105 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1131
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1060
9999 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1132
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1056
9999 run: its type is address
9999 mem: location 1056 is 1105
9999 mem: storing 1105 in location 1133
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1133 is 1105
9999 mem: storing 1105 in location 1134
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1105
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1133
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1135
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1136
 104 run: column:number <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1138
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1139
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1140
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 1
9999 mem: location 1137 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1156
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 105 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 105 run: *row <- copy new-row
9999 mem: location 1156 is 1
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 105 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
schedule: move-cursor/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-when-line-wraps
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 104 run: break-unless curr, 
9999 mem: location 1133 is 1108
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1133 is 1108
9999 run: address to copy is 1108
9999 run: its type is number
9999 mem: location 1108 is 98
9999 mem: storing 98 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 98
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 98
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 98
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 98
  90 print-character: 98 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 98
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 5
9999 mem: storing 1025 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1192 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 98
9999 mem: location 1193 is 1025
9999 mem: location 1193 is 1025
9999 mem: storing 98 in location 1025
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1025
9999 mem: location 1025 is 98
9999 mem: location 1026 is 7
9999 mem: location 1192 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1026
9999 mem: location 1194 is 1026
9999 mem: storing 7 in location 1026
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1108
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1105
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1105 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1105
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1105
9999 mem: location 1105 is 10
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1098
9999 mem: location 1103 is 1105
9999 run: address to copy is 1106
9999 run: its type is address
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 1111
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 1
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1133 is 1111
9999 run: address to copy is 1111
9999 run: its type is number
9999 mem: location 1111 is 10
9999 mem: storing 10 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 10
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 10
9999 mem: storing 1 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 1
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1128 is 1009
9999 mem: location 1137 is 1
9999 mem: location 1132 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1201
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 1
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 106 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 106 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1187
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 106 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 106 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 6
9999 mem: storing 1027 in location 1192
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1192 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1193
 106 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1027
9999 mem: location 1193 is 1027
9999 mem: storing 32 in location 1027
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1192 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1194
 106 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1028
9999 mem: location 1194 is 1028
9999 mem: storing 7 in location 1028
 106 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 106 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 2
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 106 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 106 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1187
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 106 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 106 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 7
9999 mem: storing 1029 in location 1192
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1192 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1193
 106 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1029
9999 mem: location 1193 is 1029
9999 mem: storing 32 in location 1029
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1192 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1194
 106 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1030
9999 mem: location 1194 is 1030
9999 mem: storing 7 in location 1030
 106 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 106 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 3
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 106 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 106 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1187
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 106 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 106 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 8
9999 mem: storing 1031 in location 1192
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1192 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1193
 106 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1031
9999 mem: location 1193 is 1031
9999 mem: storing 32 in location 1031
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1192 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1194
 106 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1032
9999 mem: location 1194 is 1032
9999 mem: storing 7 in location 1032
 106 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 106 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 106 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1187
 106 run: index <- add index, *column
9999 mem: location 1187 is 5
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1187
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 106 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 106 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 9
9999 mem: storing 1033 in location 1192
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1192 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1193
 106 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1033
9999 mem: location 1193 is 1033
9999 mem: storing 32 in location 1033
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1192 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1194
 106 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1034
9999 mem: location 1194 is 1034
9999 mem: storing 7 in location 1034
 106 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1196
 106 run: break-if at-right?, 
9999 mem: location 1196 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 5
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 104 run: column <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 2
9999 mem: location 1137 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1156
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 105 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 105 run: *row <- copy new-row
9999 mem: location 1156 is 2
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 105 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1111
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1108
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1108
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1108
9999 mem: location 1108 is 98
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1103 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1111
9999 run: result 0 is 1111
9999 mem: storing 1111 in location 1134
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1133 is 1114
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1133 is 1114
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 99
9999 mem: storing 99 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 99
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 99
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 99
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 10
9999 mem: storing 1035 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1192 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1193
schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-when-line-wraps
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 99
9999 mem: location 1193 is 1035
9999 mem: location 1193 is 1035
9999 mem: storing 99 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1035
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1192 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1036
9999 mem: location 1194 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1114
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1111
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1111
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1111
9999 mem: location 1111 is 10
9999 mem: location 1112 is 1114
9999 mem: location 1113 is 1108
9999 mem: location 1103 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1114
9999 mem: storing 1114 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1114
9999 run: result 0 is 1114
9999 mem: storing 1114 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 1117
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1133 is 1117
9999 run: address to copy is 1117
9999 run: its type is number
9999 mem: location 1117 is 100
9999 mem: storing 100 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 100
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 100
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 1
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 100
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 100
  90 print-character: 100 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 100
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 100
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 11
9999 mem: storing 1037 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1192 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 100
9999 mem: location 1193 is 1037
9999 mem: location 1193 is 1037
9999 mem: storing 100 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1037
9999 mem: location 1037 is 100
9999 mem: location 1038 is 7
9999 mem: location 1192 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1038
9999 mem: location 1194 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1117
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1114
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1114 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1114
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1114
9999 mem: location 1114 is 99
9999 mem: location 1115 is 1117
9999 mem: location 1116 is 1111
9999 mem: location 1103 is 1114
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1117
9999 mem: storing 1117 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1117
9999 run: result 0 is 1117
9999 mem: storing 1117 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 1120
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1133 is 1120
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 101
9999 mem: storing 101 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 101
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 101
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 2
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 101
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 101
  90 print-character: 101 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 101
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 101
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 12
9999 mem: storing 1039 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1192 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 101
9999 mem: location 1193 is 1039
9999 mem: location 1193 is 1039
9999 mem: storing 101 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1039
9999 mem: location 1039 is 101
9999 mem: location 1040 is 7
9999 mem: location 1192 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1040
9999 mem: location 1194 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1120
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1117
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1117 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1117
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1117
9999 mem: location 1117 is 100
9999 mem: location 1118 is 1120
9999 mem: location 1119 is 1114
9999 mem: location 1103 is 1117
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1120
9999 mem: storing 1120 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1120
9999 run: result 0 is 1120
9999 mem: storing 1120 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 1123
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 1380
9999 mem: location 1125 is 1120
9999 mem: location 1133 is 1123
9999 run: address to copy is 1123
9999 run: its type is number
9999 mem: location 1123 is 102
9999 mem: storing 102 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 102
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 102
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 3
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 102
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 102
  90 print-character: 102 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 102
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 102
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 13
9999 mem: storing 1041 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1192 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 102
9999 mem: location 1193 is 1041
9999 mem: location 1193 is 1041
9999 mem: storing 102 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1041
9999 mem: location 1041 is 102
9999 mem: location 1042 is 7
9999 mem: location 1192 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1042
9999 mem: location 1194 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1123
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 1380
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 1380
9999 mem: storing 1380 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1380
9999 run: result 0 is 1380
9999 mem: storing 1380 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1120
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1120 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1120
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1120
9999 mem: location 1120 is 101
9999 mem: location 1121 is 1123
9999 mem: location 1122 is 1117
9999 mem: location 1103 is 1120
9999 run: address to copy is 1121
9999 run: its type is address
9999 mem: location 1121 is 1123
9999 mem: storing 1123 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1123
9999 run: result 0 is 1123
9999 mem: storing 1123 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 1380
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 2
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 2
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1123
9999 mem: location 1133 is 1380
9999 run: address to copy is 1380
9999 run: its type is number
9999 mem: location 1380 is 103
9999 mem: storing 103 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 103
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 103
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 4
9999 mem: location 1132 is 4
9999 mem: storing 1 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1128 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 8617
  90 print-character: 8617 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 8617
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1179 is 5
9999 mem: storing 10 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 10
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 8617
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 14
9999 mem: storing 1043 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1192 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 8617
9999 mem: location 1193 is 1043
9999 mem: location 1193 is 1043
9999 mem: storing 8617 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1192 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 245
9999 mem: location 1194 is 1044
9999 mem: location 1194 is 1044
9999 mem: storing 245 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- copy left
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1137
 104 run: row <- add row, 1
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1128 is 1009
9999 mem: location 1136 is 3
9999 mem: location 1137 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1156
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 105 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 105 run: *row <- copy new-row
9999 mem: location 1156 is 3
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 105 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1128
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1133 is 1380
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1136 is 3
9999 mem: location 1131 is 4
9999 mem: storing 0 in location 1141
 104 run: break-if off-screen?, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1142 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1123
9999 mem: location 1133 is 1380
9999 run: address to copy is 1380
9999 run: its type is number
9999 mem: location 1380 is 103
9999 mem: storing 103 in location 1144
 104 run: color <- get-color color, c
9999 mem: location 1135 is 7
9999 mem: location 1144 is 103
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1162
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1163
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1162 is 7
9999 mem: storing 1 in location 1164
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1165
 105 run: break-unless starting-comment?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1166
 105 run: break-unless color-is-blue?, 
9999 mem: location 1166 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1164 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1168
 105 run: break-unless starting-assignment?, 
9999 mem: location 1168 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1162 is 7
9999 mem: storing 0 in location 1169
 105 run: break-unless color-is-red?, 
9999 mem: location 1169 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1162 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1135
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1144 is 103
9999 mem: storing 0 in location 1145
 104 run: break-unless newline?, 
9999 mem: location 1145 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1137 is 0
9999 mem: location 1132 is 4
9999 mem: storing 0 in location 1147
 104 run: break-unless at-right?, 
9999 mem: location 1147 is 0
9999 run: jumping to instruction 61
schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-when-line-wraps
 104 run: print-character screen, c, color
9999 mem: location 1128 is 1009
9999 mem: location 1144 is 103
9999 mem: location 1135 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 103
  90 print-character: 103 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 103
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 103
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 15
9999 mem: storing 1045 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1192 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 103
9999 mem: location 1193 is 1045
9999 mem: location 1193 is 1045
9999 mem: storing 103 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1045
9999 mem: location 1045 is 103
9999 mem: location 1046 is 7
9999 mem: location 1192 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1046
9999 mem: location 1194 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1133 is 1380
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1380 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1380
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1380
9999 mem: location 1380 is 103
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1123
9999 mem: location 1103 is 1380
9999 run: address to copy is 1381
9999 run: its type is address
9999 mem: location 1381 is 0
9999 mem: storing 0 in location 1104
 105 run: reply result
9999 mem: location 1104 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1133
 104 run: prev <- next-duplex prev
9999 mem: location 1134 is 1123
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1123 in location 1103
 105 run: jump-if in, 1:offset
9999 mem: location 1103 is 1123
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1103 is 1123
9999 mem: location 1123 is 102
9999 mem: location 1124 is 1380
9999 mem: location 1125 is 1120
9999 mem: location 1103 is 1123
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 1380
9999 mem: storing 1380 in location 1104
 105 run: reply result
9999 mem: location 1104 is 1380
9999 run: result 0 is 1380
9999 mem: storing 1380 in location 1134
 104 run: column <- add column, 1
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1133 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1129 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 1129 is 1055
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1148
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1133 is 0
9999 mem: location 1148 is 1057
9999 mem: location 1148 is 1057
9999 mem: storing 0 in location 1057
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 0 in location 1142
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1062
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1149
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1142 is 0
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1150
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1061 is 4
9999 mem: storing 1 in location 1151
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1152
 104 run: break-unless before-cursor?, 
9999 mem: location 1152 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1136 is 3
9999 mem: location 1138 is 1061
9999 mem: location 1138 is 1061
9999 mem: storing 3 in location 1061
 104 run: *cursor-column <- copy column
9999 mem: location 1137 is 1
9999 mem: location 1139 is 1062
9999 mem: location 1139 is 1062
9999 mem: storing 1 in location 1062
 104 run: *before-cursor <- copy prev
9999 mem: location 1134 is 1380
9999 mem: location 1140 is 1058
9999 mem: location 1140 is 1058
9999 mem: storing 1380 in location 1058
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1128 is 1009
9999 mem: location 1129 is 1055
9999 run: result 0 is 3
9999 run: result 1 is 1
9999 mem: storing 3 in location 1093
9999 mem: storing 1 in location 1094
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1089 is 1009
9999 mem: location 1094 is 1
9999 mem: location 1092 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1199
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1201
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 1
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 16
9999 mem: storing 1047 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1047
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1192 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1047
9999 mem: location 1193 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1192 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1048
9999 mem: location 1194 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 2
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 17
9999 mem: storing 1049 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1049
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1192 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1049
9999 mem: location 1193 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1192 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1050
9999 mem: location 1194 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 3
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 18
9999 mem: storing 1051 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1051
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1192 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1051
9999 mem: location 1193 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1192 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1052
9999 mem: location 1194 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1183
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1179 is 5
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1184
 105 run: break-unless newline?, 
9999 mem: location 1184 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1179 is 5
9999 mem: storing 15 in location 1187
 105 run: index <- add index, *column
9999 mem: location 1187 is 15
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1187
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1188
 105 run: len:number <- length *buf
9999 mem: location 1188 is 1014
9999 mem: storing 20 in location 1189
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1174 is 32
9999 mem: storing 0 in location 1190
 105 run: break-unless backspace?, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1188 is 1014
9999 mem: location 1187 is 19
9999 mem: storing 1053 in location 1192
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1192 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1192 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1193
 105 run: *cursor-contents <- copy c
9999 mem: location 1174 is 32
9999 mem: location 1193 is 1053
9999 mem: location 1193 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1192 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1192 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1194
 105 run: *cursor-color <- copy color
9999 mem: location 1175 is 7
9999 mem: location 1194 is 1054
9999 mem: location 1194 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1179 is 5
9999 mem: storing 4 in location 1195
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1183 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1196
 105 run: break-if at-right?, 
9999 mem: location 1196 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1173 is 1009
 104 run: column <- add column, 1
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 5
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1202
 104 run: break-if done?, 
9999 mem: location 1202 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1093 is 3
9999 mem: storing 4 in location 1093
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1089 is 1009
9999 mem: location 1093 is 4
9999 mem: location 1091 is 0
9999 mem: location 1092 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1229
 104 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1230
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1231
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1232
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1233
9999 mem: storing 1 in location 1234
 104 run: break-if style-found?, 
9999 mem: location 1234 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
 104 run: break-if color-found?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1235
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 104 run: break-if bg-color-found?, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1237
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1229 is 1009
9999 mem: location 1230 is 4
9999 mem: location 1231 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1155
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1156
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 105 run: break-unless sc, 
9999 mem: location 1155 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1158
 105 run: *row <- copy new-row
9999 mem: location 1156 is 4
9999 mem: location 1158 is 1011
9999 mem: location 1158 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1155 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1159
 105 run: *column <- copy new-column
9999 mem: location 1157 is 0
9999 mem: location 1159 is 1012
9999 mem: location 1159 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1155 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1229
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 0
9999 mem: location 1232 is 4
9999 mem: storing 1 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1229 is 1009
9999 mem: location 1233 is 9480
9999 mem: location 1235 is 245
9999 mem: location 1237 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1173 is 1009
 104 run: x <- add x, 1
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1231
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 1
9999 mem: location 1232 is 4
9999 mem: storing 1 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1229 is 1009
9999 mem: location 1233 is 9480
9999 mem: location 1235 is 245
9999 mem: location 1237 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1173 is 1009
 104 run: x <- add x, 1
9999 mem: location 1231 is 1
9999 mem: storing 2 in location 1231
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 2
9999 mem: location 1232 is 4
9999 mem: storing 1 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1229 is 1009
9999 mem: location 1233 is 9480
9999 mem: location 1235 is 245
9999 mem: location 1237 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1173 is 1009
 104 run: x <- add x, 1
9999 mem: location 1231 is 2
9999 mem: storing 3 in location 1231
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 3
9999 mem: location 1232 is 4
9999 mem: storing 1 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1229 is 1009
9999 mem: location 1233 is 9480
9999 mem: location 1235 is 245
9999 mem: location 1237 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1173 is 1009
 104 run: x <- add x, 1
9999 mem: location 1231 is 3
9999 mem: storing 4 in location 1231
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 4
9999 mem: location 1232 is 4
9999 mem: storing 1 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1229 is 1009
9999 mem: location 1233 is 9480
9999 mem: location 1235 is 245
9999 mem: location 1237 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1174
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1175
9999 mem: storing 1 in location 1176
 105 run: break-if color-found?, 
9999 mem: location 1176 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if bg-color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1174 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 105 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1173 is 1009
 104 run: x <- add x, 1
9999 mem: location 1231 is 4
9999 mem: storing 5 in location 1231
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1231 is 5
9999 mem: location 1232 is 4
9999 mem: storing 0 in location 1239
 104 run: break-unless continue?, 
9999 mem: location 1239 is 0
9999 run: jumping to instruction 27
 103 run: row <- add row, 1
9999 mem: location 1093 is 4
9999 mem: storing 5 in location 1093
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1089 is 1009
9999 mem: location 1093 is 5
9999 mem: location 1091 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1155
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1156
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1157
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1158
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1159
schedule: clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-when-line-wraps
 104 run: break-if screen, 
9999 mem: location 1155 is 1009
9999 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1155 is 1009
9999 mem: location 1156 is 5
9999 mem: location 1157 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1395
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1397
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1398
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1399
 105 run: break-unless sc, 
9999 mem: location 1397 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1400
 105 run: *row <- copy new-row
9999 mem: location 1398 is 5
9999 mem: location 1400 is 1011
9999 mem: location 1400 is 1011
9999 mem: storing 5 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1401
 105 run: *column <- copy new-column
9999 mem: location 1399 is 0
9999 mem: location 1401 is 1012
9999 mem: location 1401 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1397 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1155
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1155 is 1009
9999 mem: location 1157 is 0
9999 mem: location 1159 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1200
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1201
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 0
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 1
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 2
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 3
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1199 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1174
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 106 run: break-if color-found?, 
9999 mem: location 1176 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1175
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if bg-color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1177
 106 run: trace 90, [print-character], c
9999 mem: location 1174 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1179
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1180
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1181
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1181 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1182
 106 run: jump-if legal?, 1:offset
9999 mem: location 1182 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1173 is 1009
 105 run: column <- add column, 1
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1200 is 5
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1202
 105 run: break-if done?, 
9999 mem: location 1202 is 1
9999 run: jumping to instruction 10
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1155 is 1009
9999 mem: location 1156 is 5
9999 mem: location 1158 is 0
9999 mem: location 1159 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1402
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1404
 105 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1405
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1406
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1407
 105 run: row <- add row, 1
9999 mem: location 1405 is 5
9999 mem: storing 6 in location 1405
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1404 is 1009
9999 mem: location 1405 is 6
9999 mem: location 1406 is 0
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1397
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1398
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1399
 106 run: break-unless sc, 
9999 mem: location 1397 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1400
 106 run: *row <- copy new-row
9999 mem: location 1398 is 6
9999 mem: location 1400 is 1011
9999 mem: location 1400 is 1011
9999 mem: storing 6 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1401
 106 run: *column <- copy new-column
9999 mem: location 1399 is 0
9999 mem: location 1401 is 1012
9999 mem: location 1401 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1397 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1404
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1404 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1103
 106 run: break-unless sc, 
9999 mem: location 1103 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1103 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1103 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1104
 106 run: reply height
9999 mem: location 1104 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1408
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1405 is 6
9999 mem: location 1408 is 4
9999 mem: storing 1 in location 1409
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1409 is 1
9999 run: jumping to instruction 15
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1155 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1217 is 1212
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1212 in location 1229
 103 run: break-unless x, 
9999 mem: location 1229 is 1212
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 2
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1230
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1229 is 1212
9999 mem: location 1212 is 2
9999 mem: location 1213 is 1203
9999 mem: location 1229 is 1212
9999 run: address to copy is 1213
9999 run: its type is address
9999 mem: location 1213 is 1203
9999 mem: storing 1203 in location 1231
 103 run: max:number <- length *buf
9999 mem: location 1231 is 1203
9999 mem: storing 2 in location 1232
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1230 is 1212
9999 mem: location 1212 is 2
9999 mem: location 1232 is 2
9999 mem: storing 1 in location 1233
 103 run: break-unless done?, 
9999 mem: location 1233 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1101 in location 1234
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1234 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1229 is 1212
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1212
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 0 in location 1222
9999 mem: storing 1212 in location 1217
9999 mem: storing 1 in location 1223
9999 mem: storing 1 in location 1224
 102 run: loop-unless found?, 
9999 mem: location 1223 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1224 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 2 is 1055
9999 run: address to copy is 1061
9999 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1055
9999 mem: location 1055 is 1095
9999 mem: location 1056 is 1105
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1380
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1393
9999 mem: location 1065 is 0
9999 mem: location 2 is 1055
9999 run: address to copy is 1062
9999 run: its type is number
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 4
 100 run: screen-should-contain [
    .     .
    .b    .
    .cdefâ†©.
    .g    .
  ]
 100 run: memory-should-contain [
    3 <- 3
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
