9991 parse: --- defining scenario_editor-skips-indent-around-paste
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"10": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 10/width, 10/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ab\n  cd\nef": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [ab
  cd
ef]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"10": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 2, 8\n    press 65507  # start paste\n    press enter\n    press 65506  # end paste\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 2, 8
    press 65507  # start paste
    press enter
    press 65506  # end paste
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3  # cursor row\n    4 <- 0  # cursor column (not indented)\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 3  # cursor row
    4 <- 0  # cursor column (not indented)
  ]
9999 parse: recipe scenario_editor-skips-indent-around-paste has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- deduce types for recipe scenario_editor-skips-indent-around-paste
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- transform names for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-skips-indent-around-paste
9992 transform: instruction screen:address:shared:screen <- new-fake-screen 10/width, 10/height
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 100
9992 transform: checking variant 0: recipe new-fake-screen {"w": "number"} {"h": "number"} -> {"result": <"address" : <"shared" : <"screen" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 100
9992 transform: instruction 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 99
9992 transform: checking variant 0: recipe new-editor {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"left": "number"} {"right": "number"} -> {"result": <"address" : <"shared" : <"editor-data" : <>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 99
9991 transform: --- compute instruction operations for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- transform braces for recipe scenario_editor-skips-indent-around-paste
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-skips-indent-around-paste
9991 transform: --- type-check calls inside recipe scenario_editor-skips-indent-around-paste
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-skips-indent-around-paste
 102 run: screen:address:shared:screen <- new-fake-screen 10/width, 10/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 10
9999 mem: location 1007 is 1013
9999 mem: storing 10 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 10
9999 mem: storing 100 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 100
9999 mem: array size is 100
9999 mem: allocating size 202
9999 mem: new alloc: 1018
9999 mem: storing 100 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1220
9999 mem: storing 10 in location 1221
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1223
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1223 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1224
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1225
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1226
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 0
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 0
9999 mem: storing 1020 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1228 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1228 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1226 is 0
9999 mem: storing 1 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 1
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 1
9999 mem: storing 1022 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1228 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1228 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1226 is 1
9999 mem: storing 2 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 2
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 2
9999 mem: storing 1024 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1228 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1228 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1226 is 2
9999 mem: storing 3 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 3
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 3
9999 mem: storing 1026 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1228 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1228 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1226 is 3
9999 mem: storing 4 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 4
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 4
9999 mem: storing 1028 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1228 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1228 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1226 is 4
9999 mem: storing 5 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 5
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 5
9999 mem: storing 1030 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1228 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1228 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1226 is 5
9999 mem: storing 6 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 6
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 6
9999 mem: storing 1032 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1228 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1228 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1226 is 6
9999 mem: storing 7 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 7
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 7
9999 mem: storing 1034 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1228 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1228 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1226 is 7
9999 mem: storing 8 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 8
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 8
9999 mem: storing 1036 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1228 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1228 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1226 is 8
9999 mem: storing 9 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 9
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 9
9999 mem: storing 1038 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1228 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1228 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1226 is 9
9999 mem: storing 10 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 10
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 10
9999 mem: storing 1040 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1228 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1228 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1226 is 10
9999 mem: storing 11 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 11
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 11
9999 mem: storing 1042 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1228 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1228 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1226 is 11
9999 mem: storing 12 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 12
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 12
9999 mem: storing 1044 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1228 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1228 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1226 is 12
9999 mem: storing 13 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 13
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 13
9999 mem: storing 1046 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1228 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1228 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1226 is 13
9999 mem: storing 14 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 14
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 14
9999 mem: storing 1048 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1228 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1228 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1226 is 14
9999 mem: storing 15 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 15
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 15
9999 mem: storing 1050 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1228 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1228 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1226 is 15
9999 mem: storing 16 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 16
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 16
9999 mem: storing 1052 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1228 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1228 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1226 is 16
9999 mem: storing 17 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 17
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 17
9999 mem: storing 1054 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1228 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1228 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1226 is 17
9999 mem: storing 18 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 18
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 18
9999 mem: storing 1056 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1228 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1228 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1226 is 18
9999 mem: storing 19 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 19
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 19
9999 mem: storing 1058 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1228 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1228 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1226 is 19
9999 mem: storing 20 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 20
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 20
9999 mem: storing 1060 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1228 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1060
9999 mem: storing 0 in location 1060
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1228 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1061
9999 mem: storing 7 in location 1061
 104 run: i <- add i, 1
9999 mem: location 1226 is 20
9999 mem: storing 21 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 21
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 21
9999 mem: storing 1062 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1228 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1062
9999 mem: storing 0 in location 1062
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1228 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1063
9999 mem: storing 7 in location 1063
 104 run: i <- add i, 1
9999 mem: location 1226 is 21
9999 mem: storing 22 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 22
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 22
9999 mem: storing 1064 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1228 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1064
9999 mem: storing 0 in location 1064
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1228 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1065
9999 mem: storing 7 in location 1065
 104 run: i <- add i, 1
9999 mem: location 1226 is 22
9999 mem: storing 23 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 23
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 23
9999 mem: storing 1066 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1228 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1066
9999 mem: storing 0 in location 1066
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1228 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1067
9999 mem: storing 7 in location 1067
 104 run: i <- add i, 1
9999 mem: location 1226 is 23
9999 mem: storing 24 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 24
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 24
9999 mem: storing 1068 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1228 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1068
9999 mem: storing 0 in location 1068
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1228 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1069
9999 mem: storing 7 in location 1069
 104 run: i <- add i, 1
9999 mem: location 1226 is 24
9999 mem: storing 25 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 25
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 25
9999 mem: storing 1070 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1228 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1070
9999 mem: storing 0 in location 1070
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1228 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1071
9999 mem: storing 7 in location 1071
 104 run: i <- add i, 1
9999 mem: location 1226 is 25
9999 mem: storing 26 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 26
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 26
9999 mem: storing 1072 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1228 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1072
9999 mem: storing 0 in location 1072
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1228 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1073
9999 mem: storing 7 in location 1073
 104 run: i <- add i, 1
9999 mem: location 1226 is 26
9999 mem: storing 27 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 27
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 27
9999 mem: storing 1074 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1228 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1074
9999 mem: storing 0 in location 1074
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1228 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1075
9999 mem: storing 7 in location 1075
 104 run: i <- add i, 1
9999 mem: location 1226 is 27
9999 mem: storing 28 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 28
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 28
9999 mem: storing 1076 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1228 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1076
9999 mem: storing 0 in location 1076
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1228 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1077
9999 mem: storing 7 in location 1077
 104 run: i <- add i, 1
9999 mem: location 1226 is 28
9999 mem: storing 29 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 29
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 29
9999 mem: storing 1078 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1228 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1078
9999 mem: storing 0 in location 1078
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1228 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1079
9999 mem: storing 7 in location 1079
 104 run: i <- add i, 1
9999 mem: location 1226 is 29
9999 mem: storing 30 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 30
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 30
9999 mem: storing 1080 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1228 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1080
9999 mem: storing 0 in location 1080
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1228 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1081
9999 mem: storing 7 in location 1081
 104 run: i <- add i, 1
9999 mem: location 1226 is 30
9999 mem: storing 31 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 31
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 31
9999 mem: storing 1082 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1228 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1082
9999 mem: storing 0 in location 1082
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1228 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1083
9999 mem: storing 7 in location 1083
 104 run: i <- add i, 1
9999 mem: location 1226 is 31
9999 mem: storing 32 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 32
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 32
9999 mem: storing 1084 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1228 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1084
9999 mem: storing 0 in location 1084
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1228 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1085
9999 mem: storing 7 in location 1085
 104 run: i <- add i, 1
9999 mem: location 1226 is 32
9999 mem: storing 33 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 33
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 33
9999 mem: storing 1086 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1228 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1086
9999 mem: storing 0 in location 1086
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1228 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1087
9999 mem: storing 7 in location 1087
 104 run: i <- add i, 1
9999 mem: location 1226 is 33
9999 mem: storing 34 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 34
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 34
9999 mem: storing 1088 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1228 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1088
9999 mem: storing 0 in location 1088
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1228 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1089
9999 mem: storing 7 in location 1089
 104 run: i <- add i, 1
9999 mem: location 1226 is 34
9999 mem: storing 35 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 35
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 35
9999 mem: storing 1090 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1228 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1090
9999 mem: storing 0 in location 1090
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1228 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1091
9999 mem: storing 7 in location 1091
 104 run: i <- add i, 1
9999 mem: location 1226 is 35
9999 mem: storing 36 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 36
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 36
9999 mem: storing 1092 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1228 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1092
9999 mem: storing 0 in location 1092
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1228 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1093
9999 mem: storing 7 in location 1093
 104 run: i <- add i, 1
9999 mem: location 1226 is 36
9999 mem: storing 37 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 37
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 37
9999 mem: storing 1094 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1228 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1094
9999 mem: storing 0 in location 1094
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1228 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1095
9999 mem: storing 7 in location 1095
 104 run: i <- add i, 1
9999 mem: location 1226 is 37
9999 mem: storing 38 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 38
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 38
9999 mem: storing 1096 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1228 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1096
9999 mem: storing 0 in location 1096
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1228 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1097
9999 mem: storing 7 in location 1097
 104 run: i <- add i, 1
9999 mem: location 1226 is 38
9999 mem: storing 39 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 39
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 39
9999 mem: storing 1098 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1228 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1098
9999 mem: storing 0 in location 1098
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1228 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1099
9999 mem: storing 7 in location 1099
 104 run: i <- add i, 1
9999 mem: location 1226 is 39
9999 mem: storing 40 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 40
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 40
9999 mem: storing 1100 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1228 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1100
9999 mem: storing 0 in location 1100
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1228 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1101
9999 mem: storing 7 in location 1101
 104 run: i <- add i, 1
9999 mem: location 1226 is 40
9999 mem: storing 41 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 41
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 41
9999 mem: storing 1102 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1228 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1102
9999 mem: storing 0 in location 1102
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1228 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1103
9999 mem: storing 7 in location 1103
 104 run: i <- add i, 1
9999 mem: location 1226 is 41
9999 mem: storing 42 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 42
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 42
9999 mem: storing 1104 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1228 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1104
9999 mem: storing 0 in location 1104
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1228 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1105
9999 mem: storing 7 in location 1105
 104 run: i <- add i, 1
9999 mem: location 1226 is 42
9999 mem: storing 43 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 43
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 43
9999 mem: storing 1106 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1228 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1106
9999 mem: storing 0 in location 1106
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1228 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1107
9999 mem: storing 7 in location 1107
 104 run: i <- add i, 1
9999 mem: location 1226 is 43
9999 mem: storing 44 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 44
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 44
9999 mem: storing 1108 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1228 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1108
9999 mem: storing 0 in location 1108
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1228 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1109
9999 mem: storing 7 in location 1109
 104 run: i <- add i, 1
9999 mem: location 1226 is 44
9999 mem: storing 45 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 45
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 45
9999 mem: storing 1110 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1228 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1110
9999 mem: storing 0 in location 1110
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1228 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1111
9999 mem: storing 7 in location 1111
 104 run: i <- add i, 1
9999 mem: location 1226 is 45
9999 mem: storing 46 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 46
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 46
9999 mem: storing 1112 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1228 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1112
9999 mem: storing 0 in location 1112
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1228 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1113
9999 mem: storing 7 in location 1113
 104 run: i <- add i, 1
9999 mem: location 1226 is 46
9999 mem: storing 47 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 47
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 47
9999 mem: storing 1114 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1228 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1114
9999 mem: storing 0 in location 1114
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1228 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1115
9999 mem: storing 7 in location 1115
 104 run: i <- add i, 1
9999 mem: location 1226 is 47
9999 mem: storing 48 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 48
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 48
9999 mem: storing 1116 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1228 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1116
9999 mem: storing 0 in location 1116
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1228 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1117
9999 mem: storing 7 in location 1117
 104 run: i <- add i, 1
9999 mem: location 1226 is 48
9999 mem: storing 49 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 49
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 49
9999 mem: storing 1118 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1228 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1118
9999 mem: storing 0 in location 1118
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1228 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1119
9999 mem: storing 7 in location 1119
 104 run: i <- add i, 1
9999 mem: location 1226 is 49
9999 mem: storing 50 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 50
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 50
9999 mem: storing 1120 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1120
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1228 is 1120
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1120
9999 mem: storing 0 in location 1120
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1120
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1228 is 1120
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1121
9999 mem: storing 7 in location 1121
 104 run: i <- add i, 1
9999 mem: location 1226 is 50
9999 mem: storing 51 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 51
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 51
9999 mem: storing 1122 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1228 is 1122
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1122
9999 mem: storing 0 in location 1122
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1228 is 1122
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1123
9999 mem: storing 7 in location 1123
 104 run: i <- add i, 1
9999 mem: location 1226 is 51
9999 mem: storing 52 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 52
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 52
9999 mem: storing 1124 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1124
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1228 is 1124
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1124
9999 mem: storing 0 in location 1124
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1124
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1228 is 1124
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1125
9999 mem: storing 7 in location 1125
9990 schedule: clear-screen/new-fake-screen/scenario_editor-skips-indent-around-paste
 104 run: i <- add i, 1
9999 mem: location 1226 is 52
9999 mem: storing 53 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 53
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 53
9999 mem: storing 1126 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1126
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1228 is 1126
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1126
9999 mem: storing 0 in location 1126
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1126
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1228 is 1126
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1127
9999 mem: storing 7 in location 1127
 104 run: i <- add i, 1
9999 mem: location 1226 is 53
9999 mem: storing 54 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 54
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 54
9999 mem: storing 1128 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1128
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1228 is 1128
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1128
9999 mem: storing 0 in location 1128
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1128
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1228 is 1128
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1129
9999 mem: storing 7 in location 1129
 104 run: i <- add i, 1
9999 mem: location 1226 is 54
9999 mem: storing 55 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 55
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 55
9999 mem: storing 1130 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1228 is 1130
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1130
9999 mem: storing 0 in location 1130
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1228 is 1130
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1131
9999 mem: storing 7 in location 1131
 104 run: i <- add i, 1
9999 mem: location 1226 is 55
9999 mem: storing 56 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 56
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 56
9999 mem: storing 1132 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1132
9999 mem: location 1132 is 0
9999 mem: location 1133 is 0
9999 mem: location 1228 is 1132
9998 run: address to copy is 1132
9999 mem: storing 1132 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1132
9999 mem: storing 0 in location 1132
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1132
9999 mem: location 1132 is 0
9999 mem: location 1133 is 0
9999 mem: location 1228 is 1132
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1133
9999 mem: storing 7 in location 1133
 104 run: i <- add i, 1
9999 mem: location 1226 is 56
9999 mem: storing 57 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 57
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 57
9999 mem: storing 1134 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1228 is 1134
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1134
9999 mem: storing 0 in location 1134
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1228 is 1134
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1135
9999 mem: storing 7 in location 1135
 104 run: i <- add i, 1
9999 mem: location 1226 is 57
9999 mem: storing 58 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 58
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 58
9999 mem: storing 1136 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1136
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1228 is 1136
9998 run: address to copy is 1136
9999 mem: storing 1136 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1136
9999 mem: storing 0 in location 1136
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1136
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1228 is 1136
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1137
9999 mem: storing 7 in location 1137
 104 run: i <- add i, 1
9999 mem: location 1226 is 58
9999 mem: storing 59 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 59
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 59
9999 mem: storing 1138 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1138
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1228 is 1138
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1138
9999 mem: storing 0 in location 1138
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1138
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1228 is 1138
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1139
9999 mem: storing 7 in location 1139
 104 run: i <- add i, 1
9999 mem: location 1226 is 59
9999 mem: storing 60 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 60
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 60
9999 mem: storing 1140 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1140
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1228 is 1140
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1140
9999 mem: storing 0 in location 1140
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1140
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1228 is 1140
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1141
9999 mem: storing 7 in location 1141
 104 run: i <- add i, 1
9999 mem: location 1226 is 60
9999 mem: storing 61 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 61
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 61
9999 mem: storing 1142 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1228 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1142
9999 mem: storing 0 in location 1142
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1228 is 1142
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1143
9999 mem: storing 7 in location 1143
 104 run: i <- add i, 1
9999 mem: location 1226 is 61
9999 mem: storing 62 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 62
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 62
9999 mem: storing 1144 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1144
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1228 is 1144
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1144
9999 mem: storing 0 in location 1144
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1144
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1228 is 1144
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1145
9999 mem: storing 7 in location 1145
 104 run: i <- add i, 1
9999 mem: location 1226 is 62
9999 mem: storing 63 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 63
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 63
9999 mem: storing 1146 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1146
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1228 is 1146
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1146
9999 mem: storing 0 in location 1146
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1146
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1228 is 1146
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1147
9999 mem: storing 7 in location 1147
 104 run: i <- add i, 1
9999 mem: location 1226 is 63
9999 mem: storing 64 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 64
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 64
9999 mem: storing 1148 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1148
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1228 is 1148
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1148
9999 mem: storing 0 in location 1148
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1148
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1228 is 1148
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1149
9999 mem: storing 7 in location 1149
 104 run: i <- add i, 1
9999 mem: location 1226 is 64
9999 mem: storing 65 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 65
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 65
9999 mem: storing 1150 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1228 is 1150
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1150
9999 mem: storing 0 in location 1150
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1228 is 1150
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1151
9999 mem: storing 7 in location 1151
 104 run: i <- add i, 1
9999 mem: location 1226 is 65
9999 mem: storing 66 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 66
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 66
9999 mem: storing 1152 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1152
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1228 is 1152
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1152
9999 mem: storing 0 in location 1152
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1152
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1228 is 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1153
9999 mem: storing 7 in location 1153
 104 run: i <- add i, 1
9999 mem: location 1226 is 66
9999 mem: storing 67 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 67
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 67
9999 mem: storing 1154 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1228 is 1154
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1154
9999 mem: storing 0 in location 1154
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1228 is 1154
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1155
9999 mem: storing 7 in location 1155
 104 run: i <- add i, 1
9999 mem: location 1226 is 67
9999 mem: storing 68 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 68
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 68
9999 mem: storing 1156 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1228 is 1156
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1156
9999 mem: storing 0 in location 1156
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1228 is 1156
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1157
9999 mem: storing 7 in location 1157
 104 run: i <- add i, 1
9999 mem: location 1226 is 68
9999 mem: storing 69 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 69
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 69
9999 mem: storing 1158 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1228 is 1158
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1158
9999 mem: storing 0 in location 1158
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1228 is 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1159
9999 mem: storing 7 in location 1159
 104 run: i <- add i, 1
9999 mem: location 1226 is 69
9999 mem: storing 70 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 70
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 70
9999 mem: storing 1160 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1228 is 1160
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1160
9999 mem: storing 0 in location 1160
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1228 is 1160
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1161
9999 mem: storing 7 in location 1161
 104 run: i <- add i, 1
9999 mem: location 1226 is 70
9999 mem: storing 71 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 71
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 71
9999 mem: storing 1162 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1228 is 1162
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1162
9999 mem: storing 0 in location 1162
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1228 is 1162
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1163
9999 mem: storing 7 in location 1163
 104 run: i <- add i, 1
9999 mem: location 1226 is 71
9999 mem: storing 72 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 72
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 72
9999 mem: storing 1164 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1228 is 1164
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1164
9999 mem: storing 0 in location 1164
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1228 is 1164
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1165
9999 mem: storing 7 in location 1165
 104 run: i <- add i, 1
9999 mem: location 1226 is 72
9999 mem: storing 73 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 73
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 73
9999 mem: storing 1166 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1166
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1228 is 1166
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1166
9999 mem: storing 0 in location 1166
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1166
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1228 is 1166
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1167
9999 mem: storing 7 in location 1167
 104 run: i <- add i, 1
9999 mem: location 1226 is 73
9999 mem: storing 74 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 74
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 74
9999 mem: storing 1168 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1168
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1228 is 1168
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1168
9999 mem: storing 0 in location 1168
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1168
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1228 is 1168
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1169
9999 mem: storing 7 in location 1169
 104 run: i <- add i, 1
9999 mem: location 1226 is 74
9999 mem: storing 75 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 75
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 75
9999 mem: storing 1170 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1170
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1228 is 1170
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1170
9999 mem: storing 0 in location 1170
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1170
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1228 is 1170
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1171
9999 mem: storing 7 in location 1171
 104 run: i <- add i, 1
9999 mem: location 1226 is 75
9999 mem: storing 76 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 76
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 76
9999 mem: storing 1172 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1172
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1228 is 1172
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1172
9999 mem: storing 0 in location 1172
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1172
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1228 is 1172
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1173
9999 mem: storing 7 in location 1173
 104 run: i <- add i, 1
9999 mem: location 1226 is 76
9999 mem: storing 77 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 77
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 77
9999 mem: storing 1174 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1174
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1228 is 1174
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1174
9999 mem: storing 0 in location 1174
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1174
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1228 is 1174
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1175
9999 mem: storing 7 in location 1175
 104 run: i <- add i, 1
9999 mem: location 1226 is 77
9999 mem: storing 78 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 78
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 78
9999 mem: storing 1176 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1228 is 1176
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1176
9999 mem: storing 0 in location 1176
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1228 is 1176
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1177
9999 mem: storing 7 in location 1177
 104 run: i <- add i, 1
9999 mem: location 1226 is 78
9999 mem: storing 79 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 79
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 79
9999 mem: storing 1178 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1178
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1228 is 1178
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1178
9999 mem: storing 0 in location 1178
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1178
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1228 is 1178
9998 run: address to copy is 1179
9999 mem: storing 1179 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1179
9999 mem: storing 7 in location 1179
 104 run: i <- add i, 1
9999 mem: location 1226 is 79
9999 mem: storing 80 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 80
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 80
9999 mem: storing 1180 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1228 is 1180
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1180
9999 mem: storing 0 in location 1180
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1228 is 1180
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1181
9999 mem: storing 7 in location 1181
 104 run: i <- add i, 1
9999 mem: location 1226 is 80
9999 mem: storing 81 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 81
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 81
9999 mem: storing 1182 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1228 is 1182
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1182
9999 mem: storing 0 in location 1182
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1228 is 1182
9998 run: address to copy is 1183
9999 mem: storing 1183 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1183
9999 mem: storing 7 in location 1183
 104 run: i <- add i, 1
9999 mem: location 1226 is 81
9999 mem: storing 82 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 82
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 82
9999 mem: storing 1184 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1184
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1228 is 1184
9998 run: address to copy is 1184
9999 mem: storing 1184 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1184
9999 mem: storing 0 in location 1184
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1184
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1228 is 1184
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1185
9999 mem: storing 7 in location 1185
 104 run: i <- add i, 1
9999 mem: location 1226 is 82
9999 mem: storing 83 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 83
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 83
9999 mem: storing 1186 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1186
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1228 is 1186
9998 run: address to copy is 1186
9999 mem: storing 1186 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1186
9999 mem: storing 0 in location 1186
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1186
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1228 is 1186
9998 run: address to copy is 1187
9999 mem: storing 1187 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1187
9999 mem: storing 7 in location 1187
 104 run: i <- add i, 1
9999 mem: location 1226 is 83
9999 mem: storing 84 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 84
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 84
9999 mem: storing 1188 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1188
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1228 is 1188
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1188
9999 mem: storing 0 in location 1188
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1188
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1228 is 1188
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1189
9999 mem: storing 7 in location 1189
 104 run: i <- add i, 1
9999 mem: location 1226 is 84
9999 mem: storing 85 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 85
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 85
9999 mem: storing 1190 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1190
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1228 is 1190
9998 run: address to copy is 1190
9999 mem: storing 1190 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1190
9999 mem: storing 0 in location 1190
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1190
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1228 is 1190
9998 run: address to copy is 1191
9999 mem: storing 1191 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1191
9999 mem: storing 7 in location 1191
 104 run: i <- add i, 1
9999 mem: location 1226 is 85
9999 mem: storing 86 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 86
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 86
9999 mem: storing 1192 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1192
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1228 is 1192
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1192
9999 mem: storing 0 in location 1192
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1192
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1228 is 1192
9998 run: address to copy is 1193
9999 mem: storing 1193 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1193
9999 mem: storing 7 in location 1193
 104 run: i <- add i, 1
9999 mem: location 1226 is 86
9999 mem: storing 87 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 87
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 87
9999 mem: storing 1194 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1228 is 1194
9998 run: address to copy is 1194
9999 mem: storing 1194 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1194
9999 mem: storing 0 in location 1194
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1228 is 1194
9998 run: address to copy is 1195
9999 mem: storing 1195 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1195
9999 mem: storing 7 in location 1195
 104 run: i <- add i, 1
9999 mem: location 1226 is 87
9999 mem: storing 88 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 88
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 88
9999 mem: storing 1196 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1196
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1228 is 1196
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1196
9999 mem: storing 0 in location 1196
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1196
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1228 is 1196
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1197
9999 mem: storing 7 in location 1197
 104 run: i <- add i, 1
9999 mem: location 1226 is 88
9999 mem: storing 89 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 89
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 89
9999 mem: storing 1198 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1198
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1228 is 1198
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1198
9999 mem: storing 0 in location 1198
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1198
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1228 is 1198
9998 run: address to copy is 1199
9999 mem: storing 1199 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1199
9999 mem: storing 7 in location 1199
 104 run: i <- add i, 1
9999 mem: location 1226 is 89
9999 mem: storing 90 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 90
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 90
9999 mem: storing 1200 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1228 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1200
9999 mem: storing 0 in location 1200
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1228 is 1200
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1201
9999 mem: storing 7 in location 1201
 104 run: i <- add i, 1
9999 mem: location 1226 is 90
9999 mem: storing 91 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 91
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 91
9999 mem: storing 1202 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1202
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1228 is 1202
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1202
9999 mem: storing 0 in location 1202
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1202
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1228 is 1202
9998 run: address to copy is 1203
9999 mem: storing 1203 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1203
9999 mem: storing 7 in location 1203
 104 run: i <- add i, 1
9999 mem: location 1226 is 91
9999 mem: storing 92 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 92
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 92
9999 mem: storing 1204 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1204
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1228 is 1204
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1204
9999 mem: storing 0 in location 1204
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1204
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1228 is 1204
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1205
9999 mem: storing 7 in location 1205
 104 run: i <- add i, 1
9999 mem: location 1226 is 92
9999 mem: storing 93 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 93
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 93
9999 mem: storing 1206 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1206
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1228 is 1206
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1206
9999 mem: storing 0 in location 1206
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1206
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1228 is 1206
9998 run: address to copy is 1207
9999 mem: storing 1207 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1207
9999 mem: storing 7 in location 1207
 104 run: i <- add i, 1
9999 mem: location 1226 is 93
9999 mem: storing 94 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 94
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 94
9999 mem: storing 1208 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1208
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1228 is 1208
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1208
9999 mem: storing 0 in location 1208
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1208
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1228 is 1208
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1209
9999 mem: storing 7 in location 1209
 104 run: i <- add i, 1
9999 mem: location 1226 is 94
9999 mem: storing 95 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 95
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 95
9999 mem: storing 1210 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1228 is 1210
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1210
9999 mem: storing 0 in location 1210
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1228 is 1210
9998 run: address to copy is 1211
9999 mem: storing 1211 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1211
9999 mem: storing 7 in location 1211
 104 run: i <- add i, 1
9999 mem: location 1226 is 95
9999 mem: storing 96 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 96
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 96
9999 mem: storing 1212 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1228 is 1212
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1212
9999 mem: storing 0 in location 1212
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1228 is 1212
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1213
9999 mem: storing 7 in location 1213
 104 run: i <- add i, 1
9999 mem: location 1226 is 96
9999 mem: storing 97 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 97
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 97
9999 mem: storing 1214 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1214
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1228 is 1214
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1214
9999 mem: storing 0 in location 1214
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1214
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1228 is 1214
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1215
9999 mem: storing 7 in location 1215
 104 run: i <- add i, 1
9999 mem: location 1226 is 97
9999 mem: storing 98 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 98
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 98
9999 mem: storing 1216 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1216
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1228 is 1216
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1216
9999 mem: storing 0 in location 1216
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1216
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1228 is 1216
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1217
9999 mem: storing 7 in location 1217
 104 run: i <- add i, 1
9999 mem: location 1226 is 98
9999 mem: storing 99 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 99
9999 mem: location 1225 is 100
9999 mem: storing 0 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1224 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1226 is 99
9999 mem: storing 1218 in location 1228
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1228 is 1218
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1228 is 1218
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1229
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1229 is 1218
9999 mem: storing 0 in location 1218
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1228 is 1218
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1228 is 1218
9998 run: address to copy is 1219
9999 mem: storing 1219 in location 1230
 104 run: *curr-color <- copy 7/white
9999 mem: location 1230 is 1219
9999 mem: storing 7 in location 1219
 104 run: i <- add i, 1
9999 mem: location 1226 is 99
9999 mem: storing 100 in location 1226
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1226 is 100
9999 mem: location 1225 is 100
9999 mem: storing 1 in location 1227
 104 run: jump-if done?, 
9999 mem: location 1227 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1231
 104 run: *x <- copy 0
9999 mem: location 1231 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1223 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1231
 104 run: *x <- copy 0
9999 mem: location 1231 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1223 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new [ab
  cd
ef]
9999 mem: storing 1232 in location 1
9999 mem: incrementing refcount of 1232: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 mem: location 1 is 1232
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1244
9999 mem: storing 11 in location 1245
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1247
9999 mem: incrementing refcount of 1232: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1248
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1249
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1250
 103 run: right <- subtract right, 1
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1250
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1257
9999 mem: storing 1257 in location 1251
9999 mem: incrementing refcount of 1257: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9999 mem: storing 1262 in location 1252
 103 run: *x <- copy left
9999 mem: location 1249 is 0
9999 mem: location 1252 is 1262
9999 mem: storing 0 in location 1262
 103 run: x <- get-address *result, right:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9999 mem: storing 1263 in location 1252
 103 run: *x <- copy right
9999 mem: location 1250 is 9
9999 mem: location 1252 is 1263
9999 mem: storing 9 in location 1263
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1252
 103 run: *x <- copy 1/top
9999 mem: location 1252 is 1265
9999 mem: storing 1 in location 1265
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1252
 103 run: *x <- copy left
9999 mem: location 1249 is 0
9999 mem: location 1252 is 1266
9999 mem: storing 0 in location 1266
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1253
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1270
9999 mem: storing 7 in location 1271
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1273
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1274
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1279
9999 mem: storing 1279 in location 1275
9999 mem: incrementing refcount of 1279: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1275 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1275 is 1279
9999 mem: skipping refcount at 1279
9998 run: address to copy is 1280
9999 mem: storing 1280 in location 1276
 104 run: *val <- copy x
9999 mem: location 1273 is 167
9999 mem: location 1276 is 1280
9999 mem: storing 167 in location 1280
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1275 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1275 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9999 mem: storing 1281 in location 1277
 104 run: *next <- copy in
9999 mem: location 1274 is 0
9999 mem: location 1277 is 1281
9999 mem: storing 0 in location 1281
 104 run: jump-unless in, 
9999 mem: location 1274 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1275 is 1279
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1279
9999 mem: location 1253 is 1258
9999 mem: storing 1279 in location 1258
9999 mem: incrementing refcount of 1279: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1254
 103 run: *top-of-screen <- copy *init
9999 mem: location 1253 is 1258
9999 mem: location 1258 is 1279
9999 mem: location 1254 is 1259
9999 mem: storing 1279 in location 1259
9999 mem: incrementing refcount of 1279: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1255
 103 run: *y <- copy *init
9999 mem: location 1253 is 1258
9999 mem: location 1258 is 1279
9999 mem: location 1255 is 1261
9999 mem: storing 1279 in location 1261
9999 mem: incrementing refcount of 1279: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1251 is 1257
9999 mem: location 1247 is 1232
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1283
9999 mem: storing 8 in location 1284
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1286
9999 mem: incrementing refcount of 1257: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1287
9999 mem: incrementing refcount of 1232: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1287 is 1232
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9999 mem: storing 10 in location 1288
 104 run: jump-if len, 1:offset
9999 mem: location 1288 is 10
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1289
 104 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1286 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1286 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1258 is 1279
9999 mem: storing 1279 in location 1290
9999 mem: incrementing refcount of 1279: 4 -> 5
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 0
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 0
9998 run: address to copy is 1234
9998 run: its type is character
9999 mem: location 1234 is 97
9999 mem: storing 97 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 97
9999 mem: location 1290 is 1279
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1274
9999 mem: incrementing refcount of 1279: 5 -> 6
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1293
9999 mem: storing 1293 in location 1275
9999 mem: incrementing refcount of 1293: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9999 mem: storing 1294 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 97
9999 mem: location 1276 is 1294
9999 mem: storing 97 in location 1294
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1274 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1274 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9999 mem: storing 1281 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1293
9999 mem: location 1278 is 1281
9999 mem: storing 1293 in location 1281
9999 mem: incrementing refcount of 1293: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1296
9999 mem: storing 1296 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1279
9999 mem: location 1278 is 1296
9999 mem: storing 1279 in location 1296
9999 mem: incrementing refcount of 1279: 6 -> 7
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1279
9999 mem: location 1275 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9999 mem: storing 1295 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1295
9999 mem: storing 0 in location 1295
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1279
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1279
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1297
9999 mem: storing 3 in location 1298
9990 schedule: next_2/insert-text/new-editor/scenario_editor-skips-indent-around-paste
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 8 -> 7
9999 mem: storing 1293 in location 1290
9999 mem: incrementing refcount of 1293: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 0
9999 mem: storing 1 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 1
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 1
9998 run: address to copy is 1235
9998 run: its type is character
9999 mem: location 1235 is 98
9999 mem: storing 98 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 98
9999 mem: location 1290 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1274
9999 mem: incrementing refcount of 1293: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1302
9999 mem: storing 1302 in location 1275
9999 mem: incrementing refcount of 1302: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9999 mem: storing 1303 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 98
9999 mem: location 1276 is 1303
9999 mem: storing 98 in location 1303
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1279
9999 mem: location 1274 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1279
9999 mem: location 1274 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9999 mem: storing 1295 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1302
9999 mem: location 1278 is 1295
9999 mem: storing 1302 in location 1295
9999 mem: incrementing refcount of 1302: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1305
9999 mem: storing 1305 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1293
9999 mem: location 1278 is 1305
9999 mem: storing 1293 in location 1305
9999 mem: incrementing refcount of 1293: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1293
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9999 mem: storing 1304 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1304
9999 mem: storing 0 in location 1304
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1293
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 7 -> 6
9999 mem: storing 1302 in location 1290
9999 mem: incrementing refcount of 1302: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 1
9999 mem: storing 2 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 2
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 2
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 10
9999 mem: location 1290 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1274
9999 mem: incrementing refcount of 1302: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1306
9999 mem: storing 1306 in location 1275
9999 mem: incrementing refcount of 1306: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9999 mem: storing 1307 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 10
9999 mem: location 1276 is 1307
9999 mem: storing 10 in location 1307
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1293
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1293
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9999 mem: storing 1304 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1306
9999 mem: location 1278 is 1304
9999 mem: storing 1306 in location 1304
9999 mem: incrementing refcount of 1306: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1309
9999 mem: storing 1309 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1302
9999 mem: location 1278 is 1309
9999 mem: storing 1302 in location 1309
9999 mem: incrementing refcount of 1302: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9999 mem: storing 1308 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1308
9999 mem: storing 0 in location 1308
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1302
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 7 -> 6
9999 mem: storing 1306 in location 1290
9999 mem: incrementing refcount of 1306: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 2
9999 mem: storing 3 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 3
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 3
9998 run: address to copy is 1237
9998 run: its type is character
9999 mem: location 1237 is 32
9999 mem: storing 32 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 32
9999 mem: location 1290 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1274
9999 mem: incrementing refcount of 1306: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1310
9999 mem: storing 1310 in location 1275
9999 mem: incrementing refcount of 1310: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9999 mem: storing 1311 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 32
9999 mem: location 1276 is 1311
9999 mem: storing 32 in location 1311
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9999 mem: storing 1308 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1310
9999 mem: location 1278 is 1308
9999 mem: storing 1310 in location 1308
9999 mem: incrementing refcount of 1310: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1306
9999 mem: location 1278 is 1313
9999 mem: storing 1306 in location 1313
9999 mem: incrementing refcount of 1306: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9999 mem: storing 1312 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1312
9999 mem: storing 0 in location 1312
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1306
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 7 -> 6
9999 mem: storing 1310 in location 1290
9999 mem: incrementing refcount of 1310: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 3
9999 mem: storing 4 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 4
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 4
9998 run: address to copy is 1238
9998 run: its type is character
9999 mem: location 1238 is 32
9999 mem: storing 32 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 32
9999 mem: location 1290 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1274
9999 mem: incrementing refcount of 1310: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1314
9999 mem: storing 1314 in location 1275
9999 mem: incrementing refcount of 1314: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9999 mem: storing 1315 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 32
9999 mem: location 1276 is 1315
9999 mem: storing 32 in location 1315
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9999 mem: storing 1312 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1314
9999 mem: location 1278 is 1312
9999 mem: storing 1314 in location 1312
9999 mem: incrementing refcount of 1314: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1317
9999 mem: storing 1317 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1310
9999 mem: location 1278 is 1317
9999 mem: storing 1310 in location 1317
9999 mem: incrementing refcount of 1310: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1316
9999 mem: storing 0 in location 1316
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1310
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 7 -> 6
9999 mem: storing 1314 in location 1290
9999 mem: incrementing refcount of 1314: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 4
9999 mem: storing 5 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 5
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 5
9998 run: address to copy is 1239
9998 run: its type is character
9999 mem: location 1239 is 99
9999 mem: storing 99 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 99
9999 mem: location 1290 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1274
9999 mem: incrementing refcount of 1314: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1318
9999 mem: storing 1318 in location 1275
9999 mem: incrementing refcount of 1318: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9999 mem: storing 1319 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 99
9999 mem: location 1276 is 1319
9999 mem: storing 99 in location 1319
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1318
9999 mem: location 1278 is 1316
9999 mem: storing 1318 in location 1316
9999 mem: incrementing refcount of 1318: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1321
9999 mem: storing 1321 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1314
9999 mem: location 1278 is 1321
9999 mem: storing 1314 in location 1321
9999 mem: incrementing refcount of 1314: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9999 mem: storing 1320 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1320
9999 mem: storing 0 in location 1320
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1314
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 7 -> 6
9999 mem: storing 1318 in location 1290
9999 mem: incrementing refcount of 1318: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 5
9999 mem: storing 6 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 6
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 6
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 100
9999 mem: storing 100 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 100
9999 mem: location 1290 is 1318
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1274
9999 mem: incrementing refcount of 1318: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1322
9999 mem: storing 1322 in location 1275
9999 mem: incrementing refcount of 1322: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9999 mem: storing 1323 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 100
9999 mem: location 1276 is 1323
9999 mem: storing 100 in location 1323
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1274 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1274 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9999 mem: storing 1320 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1322
9999 mem: location 1278 is 1320
9999 mem: storing 1322 in location 1320
9999 mem: incrementing refcount of 1322: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1318
9999 mem: location 1278 is 1325
9999 mem: storing 1318 in location 1325
9999 mem: incrementing refcount of 1318: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 0
9999 mem: location 1325 is 1318
9999 mem: location 1275 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9999 mem: storing 1324 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1324
9999 mem: storing 0 in location 1324
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1318
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1318
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 7 -> 6
9999 mem: storing 1322 in location 1290
9999 mem: incrementing refcount of 1322: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 6
9999 mem: storing 7 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 7
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 7
9998 run: address to copy is 1241
9998 run: its type is character
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 10
9999 mem: location 1290 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1274
9999 mem: incrementing refcount of 1322: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1326
9999 mem: storing 1326 in location 1275
9999 mem: incrementing refcount of 1326: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9999 mem: storing 1327 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 10
9999 mem: location 1276 is 1327
9999 mem: storing 10 in location 1327
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 0
9999 mem: location 1325 is 1318
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 0
9999 mem: location 1325 is 1318
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9999 mem: storing 1324 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1326
9999 mem: location 1278 is 1324
9999 mem: storing 1326 in location 1324
9999 mem: incrementing refcount of 1326: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1322
9999 mem: location 1278 is 1329
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 0
9999 mem: location 1329 is 1322
9999 mem: location 1275 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9999 mem: storing 1328 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1328
9999 mem: storing 0 in location 1328
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1322
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 7 -> 6
9999 mem: storing 1326 in location 1290
9999 mem: incrementing refcount of 1326: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 7
9999 mem: storing 8 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 8
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 8
9998 run: address to copy is 1242
9998 run: its type is character
9999 mem: location 1242 is 101
9999 mem: storing 101 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 101
9999 mem: location 1290 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1274
9999 mem: incrementing refcount of 1326: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1330
9999 mem: storing 1330 in location 1275
9999 mem: incrementing refcount of 1330: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9999 mem: storing 1331 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 101
9999 mem: location 1276 is 1331
9999 mem: storing 101 in location 1331
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 0
9999 mem: location 1329 is 1322
9999 mem: location 1274 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 0
9999 mem: location 1329 is 1322
9999 mem: location 1274 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9999 mem: storing 1328 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1330
9999 mem: location 1278 is 1328
9999 mem: storing 1330 in location 1328
9999 mem: incrementing refcount of 1330: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1333
9999 mem: storing 1333 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1326
9999 mem: location 1278 is 1333
9999 mem: storing 1326 in location 1333
9999 mem: incrementing refcount of 1326: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1326
9999 mem: location 1275 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9999 mem: storing 1332 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1332
9999 mem: storing 0 in location 1332
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1326
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 7 -> 6
9999 mem: storing 1330 in location 1290
9999 mem: incrementing refcount of 1330: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 8
9999 mem: storing 9 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 9
9999 mem: location 1288 is 10
9999 mem: storing 0 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1287 is 1232
9999 mem: skipping refcount at 1232
9998 run: base address is 1233
9999 mem: location 1289 is 9
9998 run: address to copy is 1243
9998 run: its type is character
9999 mem: location 1243 is 102
9999 mem: storing 102 in location 1292
 104 run: insert_2 c, curr
9999 mem: location 1292 is 102
9999 mem: location 1290 is 1330
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1273
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1274
9999 mem: incrementing refcount of 1330: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1334
9999 mem: storing 1334 in location 1275
9999 mem: incrementing refcount of 1334: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9999 mem: storing 1335 in location 1276
 105 run: *val <- copy x
9999 mem: location 1273 is 102
9999 mem: location 1276 is 1335
9999 mem: storing 102 in location 1335
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1326
9999 mem: location 1274 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 0
9999 mem: storing 0 in location 1277
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1326
9999 mem: location 1274 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9999 mem: storing 1332 in location 1278
 105 run: *y <- copy new-node
9999 mem: location 1275 is 1334
9999 mem: location 1278 is 1332
9999 mem: storing 1334 in location 1332
9999 mem: incrementing refcount of 1334: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1337
9999 mem: storing 1337 in location 1278
 105 run: *y <- copy in
9999 mem: location 1274 is 1330
9999 mem: location 1278 is 1337
9999 mem: storing 1330 in location 1337
9999 mem: incrementing refcount of 1330: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1275 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9999 mem: storing 1336 in location 1278
 105 run: *y <- copy next-node
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1336
9999 mem: storing 0 in location 1336
 105 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1330
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1290 is 1330
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 7 -> 6
9999 mem: storing 1334 in location 1290
9999 mem: incrementing refcount of 1334: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1289 is 9
9999 mem: storing 10 in location 1289
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1289 is 10
9999 mem: location 1288 is 10
9999 mem: storing 1 in location 1291
 104 run: jump-if done?, 
9999 mem: location 1291 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1286 is 1257
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1257: 2 -> 1
9999 mem: storing 1257 in location 1251
9999 mem: incrementing refcount of 1257: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1255
 103 run: *y <- copy *init
9999 mem: location 1253 is 1258
9999 mem: location 1258 is 1279
9999 mem: location 1255 is 1261
9999 mem: decrementing refcount of 1279: 7 -> 6
9999 mem: storing 1279 in location 1261
9999 mem: incrementing refcount of 1279: 6 -> 7
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1248 is 1012
9999 mem: location 1251 is 1257
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1338
9999 mem: storing 28 in location 1339
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1342
9999 mem: incrementing refcount of 1257: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1257
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1343
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 105 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1344
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1345
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1346
9999 mem: incrementing refcount of 1279: 7 -> 8
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1346 is 1279
9999 mem: storing 1279 in location 1347
9999 mem: incrementing refcount of 1279: 8 -> 9
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1279
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 10 -> 9
9999 mem: storing 1293 in location 1346
9999 mem: incrementing refcount of 1293: 7 -> 8
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1348
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1349
 104 run: column:number <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1351
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1352
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1353
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 1
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1368
9999 mem: storing 6 in location 1369
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1293
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 1 in location 1356
 104 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1347 is 1279
9999 mem: location 1353 is 1261
9999 mem: decrementing refcount of 1279: 9 -> 8
9999 mem: storing 1279 in location 1261
9999 mem: incrementing refcount of 1279: 8 -> 9
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is character
9999 mem: location 1294 is 97
9999 mem: storing 97 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 97
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 97
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1376
9999 mem: storing 25 in location 1377
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 10
9999 mem: storing 1040 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 97
9999 mem: location 1399 is 1040
9999 mem: storing 97 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 9 -> 8
9999 mem: storing 1302 in location 1346
9999 mem: incrementing refcount of 1302: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1279
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 10 -> 9
9999 mem: storing 1293 in location 1347
9999 mem: incrementing refcount of 1293: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1302
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 1
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1356
 104 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is character
9999 mem: location 1303 is 98
9999 mem: storing 98 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 98
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 98
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 3 -> 4
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 11
9999 mem: storing 1042 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 98
9999 mem: location 1399 is 1042
9999 mem: storing 98 in location 1042
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1043
9999 mem: storing 7 in location 1043
9990 schedule: print/render/new-editor/scenario_editor-skips-indent-around-paste
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 9 -> 8
9999 mem: storing 1306 in location 1346
9999 mem: incrementing refcount of 1306: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 11 -> 10
9999 mem: storing 1302 in location 1347
9999 mem: incrementing refcount of 1302: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1306
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1356
 104 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is character
9999 mem: location 1307 is 10
9999 mem: storing 10 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1359
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 10 -> 11
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 4 -> 5
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 12
9999 mem: storing 1044 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 13
9999 mem: storing 1046 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 14
9999 mem: storing 1048 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 13 -> 14
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 7 -> 8
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 15
9999 mem: storing 1050 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 14 -> 15
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 16
9999 mem: storing 1052 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1053
9999 mem: storing 7 in location 1053
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 15 -> 16
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 17
9999 mem: storing 1054 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1055
9999 mem: storing 7 in location 1055
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 18
9999 mem: storing 1056 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1057
9999 mem: storing 7 in location 1057
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-skips-indent-around-paste
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 19
9999 mem: storing 1058 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1059
9999 mem: storing 7 in location 1059
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1349 is 1
9999 mem: storing 2 in location 1349
 104 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 2
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 9 -> 8
9999 mem: storing 1310 in location 1346
9999 mem: incrementing refcount of 1310: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 11 -> 10
9999 mem: storing 1306 in location 1347
9999 mem: incrementing refcount of 1306: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1310
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is character
9999 mem: location 1311 is 32
9999 mem: storing 32 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 32
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 32
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 20
9999 mem: storing 1060 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1060
9999 mem: storing 32 in location 1060
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1061
9999 mem: storing 7 in location 1061
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 9 -> 8
9999 mem: storing 1314 in location 1346
9999 mem: incrementing refcount of 1314: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 11 -> 10
9999 mem: storing 1310 in location 1347
9999 mem: incrementing refcount of 1310: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1314
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is character
9999 mem: location 1315 is 32
9999 mem: storing 32 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 32
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 32
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 13 -> 14
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 21
9999 mem: storing 1062 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1062
9999 mem: storing 32 in location 1062
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1063
9999 mem: storing 7 in location 1063
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 9 -> 8
9999 mem: storing 1318 in location 1346
9999 mem: incrementing refcount of 1318: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 11 -> 10
9999 mem: storing 1314 in location 1347
9999 mem: incrementing refcount of 1314: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1318
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is character
9999 mem: location 1319 is 99
9999 mem: storing 99 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 99
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 99
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 14 -> 15
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 22
9999 mem: storing 1064 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 99
9999 mem: location 1399 is 1064
9999 mem: storing 99 in location 1064
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1065
9999 mem: storing 7 in location 1065
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1318
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 9 -> 8
9999 mem: storing 1322 in location 1346
9999 mem: incrementing refcount of 1322: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 11 -> 10
9999 mem: storing 1318 in location 1347
9999 mem: incrementing refcount of 1318: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 2
9999 mem: storing 3 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1322
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 100
9999 mem: storing 100 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 100
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 100
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 3
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 100
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 22 -> 23
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 100
  90 print-character: 100 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 15 -> 16
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 23
9999 mem: storing 1066 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 100
9999 mem: location 1399 is 1066
9999 mem: storing 100 in location 1066
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1067
9999 mem: storing 7 in location 1067
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 9 -> 8
9999 mem: storing 1326 in location 1346
9999 mem: incrementing refcount of 1326: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1318
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 11 -> 10
9999 mem: storing 1322 in location 1347
9999 mem: incrementing refcount of 1322: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 3
9999 mem: storing 4 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1326
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is character
9999 mem: location 1327 is 10
9999 mem: storing 10 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
9990 schedule: get-color/render/new-editor/scenario_editor-skips-indent-around-paste
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 4
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1287
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 24 -> 25
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 16 -> 17
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 24
9999 mem: storing 1068 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1069
9999 mem: storing 7 in location 1069
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 25 -> 24
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 17 -> 18
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 25
9999 mem: storing 1070 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1071
9999 mem: storing 7 in location 1071
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 26 -> 25
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 26 -> 27
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 18 -> 19
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 26
9999 mem: storing 1072 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1073
9999 mem: storing 7 in location 1073
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 27 -> 26
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 27 -> 28
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 19 -> 20
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 27
9999 mem: storing 1074 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1075
9999 mem: storing 7 in location 1075
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 28 -> 29
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 20 -> 21
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 28
9999 mem: storing 1076 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1077
9999 mem: storing 7 in location 1077
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 29 -> 28
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 106 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 106 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 106 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 106 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 106 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1393
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 21 -> 22
 106 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 106 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 29
9999 mem: storing 1078 in location 1398
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1399
 106 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1400
 106 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1079
9999 mem: storing 7 in location 1079
 106 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 106 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 30 -> 29
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 105 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1349 is 2
9999 mem: storing 3 in location 1349
 104 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 3
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 31 -> 30
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 30 -> 31
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 9 -> 8
9999 mem: storing 1330 in location 1346
9999 mem: incrementing refcount of 1330: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 11 -> 10
9999 mem: storing 1326 in location 1347
9999 mem: incrementing refcount of 1326: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1330
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is character
9999 mem: location 1331 is 101
9999 mem: storing 101 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 101
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 101
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 101
  90 print-character: 101 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 22 -> 23
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 30
9999 mem: storing 1080 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 101
9999 mem: location 1399 is 1080
9999 mem: storing 101 in location 1080
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 101
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1081
9999 mem: storing 7 in location 1081
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1330
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 4 -> 5
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 9 -> 8
9999 mem: storing 1334 in location 1346
9999 mem: incrementing refcount of 1334: 5 -> 6
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 10 -> 11
9990 schedule: next_2/render/new-editor/scenario_editor-skips-indent-around-paste
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 11 -> 10
9999 mem: storing 1330 in location 1347
9999 mem: incrementing refcount of 1330: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 1334
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 104 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is character
9999 mem: location 1335 is 102
9999 mem: storing 102 in location 1357
 104 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 102
9999 mem: storing 0 in location 1358
 104 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 104 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 102
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 32 -> 33
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 105 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 105 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 105 run: trace 90, [print-character], c
9999 mem: location 1380 is 102
  90 print-character: 102 
 105 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 105 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1390
 105 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 105 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1393
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 23 -> 24
 105 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1396
 105 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 31
9999 mem: storing 1082 in location 1398
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1399
 105 run: *cursor-contents <- copy c
9999 mem: location 1380 is 102
9999 mem: location 1399 is 1082
9999 mem: storing 102 in location 1082
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 102
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1400
 105 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1083
9999 mem: storing 7 in location 1083
 105 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 105 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1346 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1334
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1301
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1334: 7 -> 6
9999 mem: storing 0 in location 1346
 104 run: prev <- next_2 prev
9999 mem: location 1347 is 1330
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 11 -> 10
9999 mem: storing 1334 in location 1347
9999 mem: incrementing refcount of 1334: 7 -> 8
 104 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1362
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1346 is 0
9999 mem: location 1362 is 1260
9999 mem: storing 0 in location 1260
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1355
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1363
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1355 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 1
9999 mem: storing 0 in location 1365
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 104 run: jump-unless before-cursor?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1367
 104 run: *bottom <- copy row
9999 mem: location 1349 is 3
9999 mem: location 1367 is 1264
9999 mem: storing 3 in location 1264
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1349 is 3
9999 mem: location 1350 is 2
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1257
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 2
9998 run: result 2 is 1012
9998 run: result 3 is 1257
9999 mem: decrementing refcount of 1012: 33 -> 32
9999 mem: storing 1012 in location 1248
9999 mem: incrementing refcount of 1012: 32 -> 33
9999 mem: decrementing refcount of 1257: 3 -> 2
9999 mem: storing 1257 in location 1251
9999 mem: incrementing refcount of 1257: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1251 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1267
9999 mem: storing 1267 in location 1256
 103 run: *indent? <- copy 1/true
9999 mem: location 1256 is 1267
9999 mem: storing 1 in location 1267
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1251 is 1257
9999 mem: location 1248 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1257
9999 mem: storing 1257 in location 2
9999 mem: incrementing refcount of 1257: 3 -> 4
 102 run: assume-console [
    left-click 2, 8
    press 65507  # start paste
    press enter
    press 65506  # end paste
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"8": "literal"}
9992 load: after rewriting: left-click 2, 8
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"65507": "literal"}
9992 load: after rewriting: press 65507
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"enter": <>}
9992 load: after rewriting: press enter
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"65506": "literal"}
9992 load: after rewriting: press 65506
9999 mem: storing 'left-click' event starting at 1405
9999 mem: storing 'press' event starting at 1409
9999 mem: storing 'press' event starting at 1413
9999 mem: storing 'press' event starting at 1417
9999 mem: storing console in 1421
9999 mem: storing console data in 1423
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9992 transform: checking variant 0: recipe editor-event-loop {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>} -> {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1421
9999 mem: location 2 is 1257
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1424
9999 mem: storing 14 in location 1425
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 33 -> 34
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1429
9999 mem: incrementing refcount of 1257: 4 -> 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1430
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1431
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1427 is 1012
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 34 -> 35
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 35 -> 34
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 34 -> 35
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1428 is 1421
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1440
9999 mem: storing 12 in location 1441
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1443
9999 mem: incrementing refcount of 1421: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1443 is 1421
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9999 mem: storing 1422 in location 1444
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1423
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1423 is 1403
9999 mem: storing 1403 in location 1445
9999 mem: incrementing refcount of 1403: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 4 in location 1446
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 0
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1447
 105 run: jump-unless done?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9998 run: base address is 1404
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 0
9998 run: address to copy is 1405
9998 run: its type is event
9999 mem: location 1405 is 2
9999 mem: location 1406 is 65513
9999 mem: location 1407 is 2
9999 mem: location 1408 is 8
9999 mem: storing 2 in location 1449
9999 mem: storing 65513 in location 1450
9999 mem: storing 2 in location 1451
9999 mem: storing 8 in location 1452
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 0
9999 mem: location 1444 is 1422
9999 mem: storing 1 in location 1422
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1449 is 2
9999 mem: location 1450 is 65513
9999 mem: location 1451 is 2
9999 mem: location 1452 is 8
9999 mem: location 1443 is 1421
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 8]
9998 run: result 1 is 1421
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1432
9999 mem: storing 65513 in location 1433
9999 mem: storing 2 in location 1434
9999 mem: storing 8 in location 1435
9999 mem: decrementing refcount of 1421: 2 -> 1
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 1 -> 2
9999 mem: storing 1 in location 1436
9999 mem: storing 0 in location 1437
 104 run: jump-unless found?, 
9999 mem: location 1436 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1432 is 2
9999 mem: location 1433 is 65513
9999 mem: location 1434 is 2
9999 mem: location 1435 is 8
9999 mem: storing 1433 in location 1438
 104 run: jump-unless t, 
9999 mem: location 1438 is 1433
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 mem: location 1438 is 1433
9999 mem: location 1433 is 65513
9999 mem: location 1434 is 2
9999 mem: location 1435 is 8
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1454
9999 mem: storing 27 in location 1455
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1457
9999 mem: incrementing refcount of 1012: 35 -> 36
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1458
9999 mem: incrementing refcount of 1257: 5 -> 6
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1459
9999 mem: storing 2 in location 1460
9999 mem: storing 8 in location 1461
 105 run: jump-if editor, 1:offset
9999 mem: location 1458 is 1257
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1459 is 65513
9999 mem: location 1460 is 2
9999 mem: location 1461 is 8
9998 run: address to copy is 1460
9998 run: its type is number
9999 mem: location 1460 is 2
9999 mem: storing 2 in location 1462
 105 run: jump-if click-row, 1:offset
9999 mem: location 1462 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1459 is 65513
9999 mem: location 1460 is 2
9999 mem: location 1461 is 8
9998 run: address to copy is 1461
9998 run: its type is number
9999 mem: location 1461 is 8
9999 mem: storing 8 in location 1463
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1464
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1463 is 8
9999 mem: location 1464 is 0
9999 mem: storing 0 in location 1465
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1465 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1466
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1463 is 8
9999 mem: location 1466 is 9
9999 mem: storing 0 in location 1467
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1467 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1468
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1469
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1470
9999 mem: incrementing refcount of 1279: 9 -> 10
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1457 is 1012
9999 mem: location 1458 is 1257
9999 mem: location 1462 is 2
9999 mem: location 1463 is 8
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1483
9999 mem: storing 26 in location 1484
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1486
9999 mem: incrementing refcount of 1012: 36 -> 37
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1487
9999 mem: incrementing refcount of 1257: 6 -> 7
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1488
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1489
 106 run: jump-if editor, 1:offset
9999 mem: location 1487 is 1257
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1490
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1491
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1486 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 37 -> 38
 107 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 107 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1492
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1493
9999 mem: incrementing refcount of 1279: 10 -> 11
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1493 is 1279
9999 mem: storing 1279 in location 1494
9999 mem: incrementing refcount of 1279: 11 -> 12
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 13 -> 12
9999 mem: storing 1293 in location 1493
9999 mem: incrementing refcount of 1293: 11 -> 12
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1495
 106 run: column:number <- copy left
9999 mem: location 1490 is 0
9999 mem: storing 0 in location 1496
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 1
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1497
 106 run: *cursor-row <- copy target-row
9999 mem: location 1488 is 2
9999 mem: location 1497 is 1265
9999 mem: storing 2 in location 1265
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1498
 106 run: *cursor-column <- copy target-column
9999 mem: location 1489 is 8
9999 mem: location 1498 is 1266
9999 mem: storing 8 in location 1266
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1279
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 8
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1487 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1499
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1293
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 1
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 1
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1493 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is character
9999 mem: location 1294 is 97
9999 mem: storing 97 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 97
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 0
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 13 -> 12
9999 mem: storing 1302 in location 1493
9999 mem: incrementing refcount of 1302: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 13 -> 12
9999 mem: storing 1293 in location 1494
9999 mem: incrementing refcount of 1293: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1302
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 1
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 1
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1493 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is character
9999 mem: location 1303 is 98
9999 mem: storing 98 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 98
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 1
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 13 -> 12
9999 mem: storing 1306 in location 1493
9999 mem: incrementing refcount of 1306: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 15 -> 14
9999 mem: storing 1302 in location 1494
9999 mem: incrementing refcount of 1302: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1306
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 1
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 1
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1493 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is character
9999 mem: location 1307 is 10
9999 mem: storing 10 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 10
9999 mem: storing 1 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 1
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: column <- copy left
9999 mem: location 1490 is 0
9999 mem: storing 0 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 13 -> 12
9999 mem: storing 1310 in location 1493
9999 mem: incrementing refcount of 1310: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 15 -> 14
9999 mem: storing 1306 in location 1494
9999 mem: incrementing refcount of 1306: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1310
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 2
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1496 is 0
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-cursor?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1493 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is character
9999 mem: location 1311 is 32
9999 mem: storing 32 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 32
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 0
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 13 -> 12
9999 mem: storing 1314 in location 1493
9999 mem: incrementing refcount of 1314: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 15 -> 14
9999 mem: storing 1310 in location 1494
9999 mem: incrementing refcount of 1310: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1314
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 2
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1496 is 1
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-cursor?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1493 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is character
9999 mem: location 1315 is 32
9999 mem: storing 32 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 32
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 1
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 13 -> 12
9999 mem: storing 1318 in location 1493
9999 mem: incrementing refcount of 1318: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 15 -> 14
9999 mem: storing 1314 in location 1494
9999 mem: incrementing refcount of 1314: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1318
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 2
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1496 is 2
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-cursor?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1493 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is character
9999 mem: location 1319 is 99
9999 mem: storing 99 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 99
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 2
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 13 -> 12
9999 mem: storing 1322 in location 1493
9999 mem: incrementing refcount of 1322: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 15 -> 14
9999 mem: storing 1318 in location 1494
9999 mem: incrementing refcount of 1318: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 2
9999 mem: storing 3 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1322
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 2
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1496 is 3
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-cursor?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1493 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 100
9999 mem: storing 100 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 100
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 3
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 13 -> 12
9999 mem: storing 1326 in location 1493
9999 mem: incrementing refcount of 1326: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 15 -> 14
9999 mem: storing 1322 in location 1494
9999 mem: incrementing refcount of 1322: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 3
9999 mem: storing 4 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1326
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 2
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1496 is 4
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-cursor?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1493 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is character
9999 mem: location 1327 is 10
9999 mem: storing 10 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 10
9999 mem: storing 1 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1496 is 4
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 8
9999 mem: storing 1 in location 1505
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 106 run: *cursor-column <- copy column
9999 mem: location 1496 is 4
9999 mem: location 1498 is 1266
9999 mem: storing 4 in location 1266
 106 run: *before-cursor <- copy prev
9999 mem: location 1494 is 1322
9999 mem: location 1499 is 1261
9999 mem: decrementing refcount of 1279: 12 -> 11
9999 mem: storing 1322 in location 1261
9999 mem: incrementing refcount of 1322: 14 -> 15
 106 run: row <- add row, 1
9999 mem: location 1495 is 2
9999 mem: storing 3 in location 1495
 106 run: column <- copy left
9999 mem: location 1490 is 0
9999 mem: storing 0 in location 1496
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 13 -> 12
9999 mem: storing 1330 in location 1493
9999 mem: incrementing refcount of 1330: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 15 -> 16
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 16 -> 15
9999 mem: storing 1326 in location 1494
9999 mem: incrementing refcount of 1326: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1330
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 3
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 3
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1493 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is character
9999 mem: location 1331 is 101
9999 mem: storing 101 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 101
9999 mem: storing 0 in location 1504
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 0
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 13 -> 12
9999 mem: storing 1334 in location 1493
9999 mem: incrementing refcount of 1334: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 15 -> 14
9999 mem: storing 1330 in location 1494
9999 mem: incrementing refcount of 1330: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 1334
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1495 is 3
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if off-screen?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 3
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1493 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1493 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is character
9999 mem: location 1335 is 102
9999 mem: storing 102 in location 1503
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1503 is 102
9999 mem: storing 0 in location 1504
 106 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1496 is 1
9999 mem: location 1491 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless at-right?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1493 is 1334
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1334
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1301
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1334: 11 -> 10
9999 mem: storing 0 in location 1493
 106 run: prev <- next_2 prev
9999 mem: location 1494 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 15 -> 14
9999 mem: storing 1334 in location 1494
9999 mem: incrementing refcount of 1334: 11 -> 12
 106 run: column <- add column, 1
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1493 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1495 is 3
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1501
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1496 is 2
9999 mem: location 1498 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 1 in location 1507
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1501 is 0
9999 mem: location 1507 is 1
9999 mem: storing 0 in location 1508
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1495 is 3
9999 mem: location 1497 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1509
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: storing 0 in location 1510
 106 run: jump-unless before-cursor?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1487 is 1257
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1257: 7 -> 6
9999 mem: storing 1257 in location 1458
9999 mem: incrementing refcount of 1257: 6 -> 7
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1471
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1472
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1473
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1458 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1474
9999 mem: incrementing refcount of 1279: 11 -> 12
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1476
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1468 is 1
9999 mem: location 1469 is 0
9999 mem: location 1470 is 1279
9999 mem: location 1472 is 2
9999 mem: location 1473 is 4
9999 mem: location 1474 is 1279
9999 mem: location 1471 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1279 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 4 in location 1006
9999 mem: storing 1279 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1458 is 1257
9999 mem: location 1476 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1511
9999 mem: storing 5 in location 1512
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1514
9999 mem: incrementing refcount of 1257: 7 -> 8
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1515
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1268
9999 mem: storing 1268 in location 1516
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1515 is 1000
9999 mem: location 1516 is 1268
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1371
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1372
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1518
9999 mem: storing 1518 in location 1373
9999 mem: incrementing refcount of 1518: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1373 is 1518
9999 mem: skipping refcount at 1518
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1519 is 0
9999 mem: location 1520 is 0
9999 mem: location 1373 is 1518
9999 mem: skipping refcount at 1518
9998 run: address to copy is 1519
9999 mem: storing 1519 in location 1374
 107 run: *val <- copy x
9999 mem: location 1371 is 1000
9999 mem: location 1374 is 1519
9999 mem: storing 1000 in location 1519
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1373 is 1518
9999 mem: skipping refcount at 1518
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1519 is 1000
9999 mem: location 1520 is 0
9999 mem: location 1373 is 1518
9999 mem: skipping refcount at 1518
9999 type: type deduced to be address$
9998 run: address to copy is 1520
9999 mem: storing 1520 in location 1375
 107 run: *next <- copy in
9999 mem: location 1372 is 0
9999 mem: location 1375 is 1520
9999 mem: storing 0 in location 1520
 107 run: reply result
9999 mem: location 1373 is 1518
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1518
9999 mem: location 1516 is 1268
9999 mem: storing 1518 in location 1268
9999 mem: incrementing refcount of 1518: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1269
9999 mem: storing 1269 in location 1517
 106 run: *redo <- copy 0
9999 mem: location 1517 is 1269
9999 mem: storing 0 in location 1269
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1514 is 1257
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1257: 8 -> 7
9999 mem: storing 1257 in location 1458
9999 mem: incrementing refcount of 1257: 7 -> 8
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1430
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1431
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1427 is 1012
9999 mem: location 1430 is 2
9999 mem: location 1431 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 38 -> 39
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 4
9999 mem: location 1375 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 39 -> 38
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 38 -> 39
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1428 is 1421
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1443
9999 mem: incrementing refcount of 1421: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1443 is 1421
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9999 mem: storing 1422 in location 1444
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1423
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1423 is 1403
9999 mem: storing 1403 in location 1445
9999 mem: incrementing refcount of 1403: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 4 in location 1446
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1447
 105 run: jump-unless done?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9998 run: base address is 1404
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 1
9998 run: address to copy is 1409
9998 run: its type is event
9999 mem: location 1409 is 1
9999 mem: location 1410 is 65507
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 1 in location 1449
9999 mem: storing 65507 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1444 is 1422
9999 mem: storing 2 in location 1422
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1449 is 1
9999 mem: location 1450 is 65507
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1443 is 1421
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65507, 0, 0]
9998 run: result 1 is 1421
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1432
9999 mem: storing 65507 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: decrementing refcount of 1421: 3 -> 2
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 2 -> 3
9999 mem: storing 1 in location 1436
9999 mem: storing 0 in location 1437
 104 run: jump-unless found?, 
9999 mem: location 1436 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1432 is 1
9999 mem: location 1433 is 65507
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: storing 0 in location 1438
 104 run: jump-unless t, 
9999 mem: location 1438 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 mem: location 1432 is 1
9999 mem: location 1433 is 65507
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1521
9999 mem: storing 85 in location 1522
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1524
9999 mem: incrementing refcount of 1012: 39 -> 40
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1525
9999 mem: incrementing refcount of 1257: 8 -> 9
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1526
9999 mem: storing 65507 in location 1527
9999 mem: storing 0 in location 1528
9999 mem: storing 0 in location 1529
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1530
 105 run: jump-if editor, 1:offset
9999 mem: location 1525 is 1257
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 40 -> 41
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1301
 106 run: reply width:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1531
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 41 -> 42
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 106 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1533
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1534
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1535
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1536
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1537
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1536 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1538
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1537 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1539
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1526 is 1
9999 mem: location 1527 is 65507
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 0 in location 1540
 105 run: jump-unless c, 
9999 mem: location 1540 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1526 is 1
9999 mem: location 1527 is 65507
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 1527 in location 1594
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1594 is 1527
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1557
 105 run: jump-unless page-up?, 
9999 mem: location 1557 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1573
 105 run: jump-unless page-down?, 
9999 mem: location 1573 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1580
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1580 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1581
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1581 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1595
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1595 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1596
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1596 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1597
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1597 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1599
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1599 is 0
9998 run: jumping to instruction 757
 105 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1601
 105 run: jump-unless delete-next-character?, 
9999 mem: location 1601 is 0
9998 run: jumping to instruction 796
 105 run: paste-end?:boolean <- equal *k, 65506/paste-end
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 0 in location 1605
 105 run: jump-unless paste-end?, 
9999 mem: location 1605 is 0
9998 run: jumping to instruction 804
 105 run: paste-start?:boolean <- equal *k, 65507/paste-start
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65507
9999 mem: storing 1 in location 1607
 105 run: jump-unless paste-start?, 
9999 mem: location 1607 is 1
9998 run: jump-unless fell through
 105 run: indent?:address:boolean <- get-address *editor, indent?:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1267
9999 mem: storing 1267 in location 1606
 105 run: *indent? <- copy 0/false
9999 mem: location 1606 is 1267
9999 mem: storing 0 in location 1267
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1530
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1524 is 1012
9999 mem: location 1525 is 1257
9999 mem: location 1530 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1257
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 41 -> 42
9999 mem: decrementing refcount of 1257: 9 -> 8
9999 mem: storing 1257 in location 1429
9999 mem: incrementing refcount of 1257: 8 -> 9
9999 mem: storing 1 in location 1439
 104 run: jump-unless go-render?, 
9999 mem: location 1439 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1273
9999 mem: incrementing refcount of 1012: 42 -> 43
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1274
9999 mem: incrementing refcount of 1257: 9 -> 10
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1275
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1276
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1342
9999 mem: incrementing refcount of 1257: 10 -> 11
 106 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1257
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1343
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 44 -> 45
 107 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 107 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1344
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1345
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1346
9999 mem: incrementing refcount of 1279: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1346 is 1279
9999 mem: storing 1279 in location 1347
9999 mem: incrementing refcount of 1279: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 15 -> 14
9999 mem: storing 1293 in location 1346
9999 mem: incrementing refcount of 1293: 15 -> 16
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1348
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1349
 106 run: column:number <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1351
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1352
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1353
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 1
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 45 -> 46
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1293
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is character
9999 mem: location 1294 is 97
9999 mem: storing 97 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 97
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 97
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 46 -> 47
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 24 -> 25
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 10
9999 mem: storing 1040 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 97
9999 mem: location 1399 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 17 -> 16
9999 mem: storing 1302 in location 1346
9999 mem: incrementing refcount of 1302: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 15 -> 14
9999 mem: storing 1293 in location 1347
9999 mem: incrementing refcount of 1293: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1302
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is character
9999 mem: location 1303 is 98
9999 mem: storing 98 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 98
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 98
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 98
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 98
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 47 -> 48
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 25 -> 26
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 11
9999 mem: storing 1042 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 98
9999 mem: location 1399 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 17 -> 16
9999 mem: storing 1306 in location 1346
9999 mem: incrementing refcount of 1306: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 19 -> 18
9999 mem: storing 1302 in location 1347
9999 mem: incrementing refcount of 1302: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1306
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is character
9999 mem: location 1307 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 10
9999 mem: storing 0 in location 1226
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 10
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 48 -> 49
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 49 -> 50
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 26 -> 27
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 12
9999 mem: storing 1044 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 50 -> 49
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 49 -> 50
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 50 -> 51
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 27 -> 28
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 13
9999 mem: storing 1046 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 50 -> 51
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 51 -> 52
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 28 -> 29
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 14
9999 mem: storing 1048 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 52 -> 51
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 51 -> 52
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 52 -> 53
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 29 -> 30
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 15
9999 mem: storing 1050 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 52 -> 53
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 53 -> 54
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 30 -> 31
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 16
9999 mem: storing 1052 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 54 -> 55
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 31 -> 32
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 17
9999 mem: storing 1054 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 55 -> 56
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 32 -> 33
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 18
9999 mem: storing 1056 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 56 -> 57
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 33 -> 34
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 19
9999 mem: storing 1058 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 1
9999 mem: storing 2 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 2
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 57 -> 58
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 58 -> 57
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 17 -> 16
9999 mem: storing 1310 in location 1346
9999 mem: incrementing refcount of 1310: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1302
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 19 -> 18
9999 mem: storing 1306 in location 1347
9999 mem: incrementing refcount of 1306: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1310
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 0 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is character
9999 mem: location 1311 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 32
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 32
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 34 -> 35
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 20
9999 mem: storing 1060 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1060
9999 mem: storing 32 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 17 -> 16
9999 mem: storing 1314 in location 1346
9999 mem: incrementing refcount of 1314: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 19 -> 18
9999 mem: storing 1310 in location 1347
9999 mem: incrementing refcount of 1310: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1314
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 1
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 0 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is character
9999 mem: location 1315 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 32
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 32
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 35 -> 36
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 21
9999 mem: storing 1062 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1062
9999 mem: storing 32 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 17 -> 16
9999 mem: storing 1318 in location 1346
9999 mem: incrementing refcount of 1318: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 19 -> 18
9999 mem: storing 1314 in location 1347
9999 mem: incrementing refcount of 1314: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1318
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 0 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is character
9999 mem: location 1319 is 99
9999 mem: storing 99 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 99
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 99
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 99
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 99
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 36 -> 37
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 22
9999 mem: storing 1064 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 99
9999 mem: location 1399 is 1064
9999 mem: storing 99 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 15 -> 16
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 17 -> 16
9999 mem: storing 1322 in location 1346
9999 mem: incrementing refcount of 1322: 16 -> 17
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 19 -> 18
9999 mem: storing 1318 in location 1347
9999 mem: incrementing refcount of 1318: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 2
9999 mem: storing 3 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1322
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 3
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 0 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 100
9999 mem: storing 100 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 100
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 100
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 100
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 3
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 100
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 37 -> 38
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 23
9999 mem: storing 1066 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 100
9999 mem: location 1399 is 1066
9999 mem: storing 100 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 17 -> 18
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 18 -> 17
9999 mem: storing 1326 in location 1346
9999 mem: incrementing refcount of 1326: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 17 -> 18
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 19 -> 18
9999 mem: storing 1322 in location 1347
9999 mem: incrementing refcount of 1322: 18 -> 19
 106 run: column <- add column, 1
9999 mem: location 1350 is 3
9999 mem: storing 4 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1326
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 4
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 1 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1347 is 1322
9999 mem: location 1353 is 1261
9999 mem: decrementing refcount of 1322: 19 -> 18
9999 mem: storing 1322 in location 1261
9999 mem: incrementing refcount of 1322: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is character
9999 mem: location 1327 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 10
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 10
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1350 is 4
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 0 in location 1359
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 4
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 62 -> 63
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1287
9990 schedule: clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 63 -> 64
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 38 -> 39
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 24
9999 mem: storing 1068 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1069
9999 mem: storing 7 in location 1069
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 64 -> 63
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 63 -> 64
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 64 -> 65
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 39 -> 40
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 25
9999 mem: storing 1070 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1071
9999 mem: storing 7 in location 1071
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 65 -> 64
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 64 -> 65
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 65 -> 66
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 40 -> 41
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 26
9999 mem: storing 1072 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1073
9999 mem: storing 7 in location 1073
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 66 -> 65
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 65 -> 66
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 66 -> 67
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 41 -> 42
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 27
9999 mem: storing 1074 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1075
9999 mem: storing 7 in location 1075
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 67 -> 66
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 67 -> 68
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 42 -> 43
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 28
9999 mem: storing 1076 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1077
9999 mem: storing 7 in location 1077
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 67 -> 68
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 68 -> 69
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 43 -> 44
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 29
9999 mem: storing 1078 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1079
9999 mem: storing 7 in location 1079
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 69 -> 68
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 68 -> 69
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 2
9999 mem: storing 3 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 3
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 69 -> 70
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 17 -> 16
9999 mem: storing 1330 in location 1346
9999 mem: incrementing refcount of 1330: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1322: 20 -> 19
9999 mem: storing 1326 in location 1347
9999 mem: incrementing refcount of 1326: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1330
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is character
9999 mem: location 1331 is 101
9999 mem: storing 101 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 101
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 101
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 101
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 101
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 70 -> 71
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 44 -> 45
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 30
9999 mem: storing 1080 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 101
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 101
9999 mem: location 1399 is 1080
9999 mem: storing 101 in location 1080
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 101
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1081
9999 mem: storing 7 in location 1081
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 17 -> 16
9999 mem: storing 1334 in location 1346
9999 mem: incrementing refcount of 1334: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 19 -> 18
9999 mem: storing 1330 in location 1347
9999 mem: incrementing refcount of 1330: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1334
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is character
9999 mem: location 1335 is 102
9999 mem: storing 102 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1224
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1224 is 102
9999 mem: storing 0 in location 1226
 107 run: jump-unless starting-comment?, 
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless color-is-white?, 
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1224 is 102
9999 mem: storing 0 in location 1229
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 107 run: jump-unless color-is-red?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 102
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 102
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 71 -> 72
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 45 -> 46
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 31
9999 mem: storing 1082 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 102
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 102
9999 mem: location 1399 is 1082
9999 mem: storing 102 in location 1082
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 102
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1083
9999 mem: storing 7 in location 1083
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1334
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1334
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1301
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1334: 15 -> 14
9999 mem: storing 0 in location 1346
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 19 -> 18
9999 mem: storing 1334 in location 1347
9999 mem: incrementing refcount of 1334: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1362
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1346 is 0
9999 mem: location 1362 is 1260
9999 mem: storing 0 in location 1260
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1355
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 1 in location 1363
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1355 is 0
9999 mem: location 1363 is 1
9999 mem: storing 0 in location 1364
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 0 in location 1365
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 106 run: jump-unless before-cursor?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1367
 106 run: *bottom <- copy row
9999 mem: location 1349 is 3
9999 mem: location 1367 is 1264
9999 mem: storing 3 in location 1264
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1349 is 3
9999 mem: location 1350 is 2
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1257
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 2
9999 mem: storing 3 in location 1277
9999 mem: storing 2 in location 1278
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1273 is 1012
9999 mem: location 1278 is 2
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 72 -> 73
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 106 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 73 -> 74
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 46 -> 47
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 32
9999 mem: storing 1084 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1085
9999 mem: storing 7 in location 1085
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 74 -> 73
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 73 -> 74
 106 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 74 -> 75
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 47 -> 48
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 33
9999 mem: storing 1086 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1087
9999 mem: storing 7 in location 1087
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 75 -> 76
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 48 -> 49
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 34
9999 mem: storing 1088 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1089
9999 mem: storing 7 in location 1089
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 75 -> 76
 106 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 76 -> 77
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 49 -> 50
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 35
9999 mem: storing 1090 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1091
9999 mem: storing 7 in location 1091
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 76 -> 77
 106 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 77 -> 78
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 50 -> 51
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 36
9999 mem: storing 1092 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1093
9999 mem: storing 7 in location 1093
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 77 -> 78
 106 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 78 -> 79
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 51 -> 52
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 37
9999 mem: storing 1094 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1095
9999 mem: storing 7 in location 1095
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 79 -> 80
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 52 -> 53
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 38
9999 mem: storing 1096 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1096
9999 mem: storing 32 in location 1096
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1097
9999 mem: storing 7 in location 1097
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 80 -> 79
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 80 -> 81
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 53 -> 54
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 39
9999 mem: storing 1098 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1098
9999 mem: storing 32 in location 1098
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1099
9999 mem: storing 7 in location 1099
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 4
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 81 -> 82
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1444
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1445
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1446
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1447
9999 mem: storing 1 in location 1448
 106 run: jump-if style-found?, 
9999 mem: location 1448 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
 106 run: jump-if color-found?, 
9999 mem: location 1450 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1449
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 106 run: jump-if bg-color-found?, 
9999 mem: location 1452 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1451
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1443 is 1012
9999 mem: location 1444 is 4
9999 mem: location 1445 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 82 -> 83
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 4
9999 mem: location 1374 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 0
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 83 -> 84
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 54 -> 55
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 40
9999 mem: storing 1100 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1398 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1100
9999 mem: storing 9480 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 7
9999 mem: location 1398 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1101
9999 mem: storing 245 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 0
9999 mem: storing 1 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 1
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 84 -> 85
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 55 -> 56
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 41
9999 mem: storing 1102 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1398 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1102
9999 mem: storing 9480 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 7
9999 mem: location 1398 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1103
9999 mem: storing 245 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 1
9999 mem: storing 2 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 2
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 85 -> 86
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 56 -> 57
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 42
9999 mem: storing 1104 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1398 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1104
9999 mem: storing 9480 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 7
9999 mem: location 1398 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1105
9999 mem: storing 245 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 2
9999 mem: storing 3 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 3
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 86 -> 87
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 57 -> 58
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 43
9999 mem: storing 1106 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1398 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1106
9999 mem: storing 9480 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 7
9999 mem: location 1398 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1107
9999 mem: storing 245 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 3
9999 mem: storing 4 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 4
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 87 -> 88
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 58 -> 59
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 44
9999 mem: storing 1108 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1398 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1108
9999 mem: storing 9480 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 7
9999 mem: location 1398 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1109
9999 mem: storing 245 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 4
9999 mem: storing 5 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 5
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 88 -> 89
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 59 -> 60
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 45
9999 mem: storing 1110 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1398 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1110
9999 mem: storing 9480 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 7
9999 mem: location 1398 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1111
9999 mem: storing 245 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 5
9999 mem: storing 6 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 6
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 89 -> 90
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 60 -> 61
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 46
9999 mem: storing 1112 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1398 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1112
9999 mem: storing 9480 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 7
9999 mem: location 1398 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1113
9999 mem: storing 245 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 6
9999 mem: storing 7 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 7
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 90 -> 91
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 61 -> 62
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 47
9999 mem: storing 1114 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1398 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1114
9999 mem: storing 9480 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 7
9999 mem: location 1398 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1115
9999 mem: storing 245 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 7
9999 mem: storing 8 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 8
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 91 -> 92
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 62 -> 63
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 48
9999 mem: storing 1116 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1398 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1116
9999 mem: storing 9480 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 7
9999 mem: location 1398 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1117
9999 mem: storing 245 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 8
9999 mem: storing 9 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 9
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 92 -> 93
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 63 -> 64
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 49
9999 mem: storing 1118 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1398 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1118
9999 mem: storing 9480 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 7
9999 mem: location 1398 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1119
9999 mem: storing 245 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 9
9999 mem: storing 10 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 10
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1443 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1275 is 0
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 93 -> 94
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1372
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1374
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1375
 106 run: jump-if screen, 
9999 mem: location 1371 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 5
9999 mem: location 1373 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1608
9999 mem: storing 6 in location 1609
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1612
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 107 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 107 run: *row <- copy new-row
9999 mem: location 1612 is 5
9999 mem: location 1614 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 107 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 95 -> 94
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 94 -> 95
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1371 is 1012
9999 mem: location 1373 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 96 -> 97
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 50 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 64 -> 65
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 50
9999 mem: storing 1120 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 0
9999 mem: location 1121 is 7
9999 mem: location 1398 is 1120
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1120
9999 mem: storing 32 in location 1120
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 32
9999 mem: location 1121 is 7
9999 mem: location 1398 is 1120
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1121
9999 mem: storing 7 in location 1121
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 97 -> 98
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 51 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 65 -> 66
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 51
9999 mem: storing 1122 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1123 is 7
9999 mem: location 1398 is 1122
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1122
9999 mem: storing 32 in location 1122
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 32
9999 mem: location 1123 is 7
9999 mem: location 1398 is 1122
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1123
9999 mem: storing 7 in location 1123
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 97 -> 98
 107 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 98 -> 99
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 52 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 66 -> 67
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 52
9999 mem: storing 1124 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: location 1398 is 1124
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1124
9999 mem: storing 32 in location 1124
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 32
9999 mem: location 1125 is 7
9999 mem: location 1398 is 1124
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1125
9999 mem: storing 7 in location 1125
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 98 -> 99
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 99 -> 100
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 53 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 67 -> 68
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 53
9999 mem: storing 1126 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 0
9999 mem: location 1127 is 7
9999 mem: location 1398 is 1126
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1126
9999 mem: storing 32 in location 1126
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 32
9999 mem: location 1127 is 7
9999 mem: location 1398 is 1126
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1127
9999 mem: storing 7 in location 1127
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 99 -> 100
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 100 -> 101
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 54 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 68 -> 69
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 54
9999 mem: storing 1128 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 0
9999 mem: location 1129 is 7
9999 mem: location 1398 is 1128
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1128
9999 mem: storing 32 in location 1128
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 32
9999 mem: location 1129 is 7
9999 mem: location 1398 is 1128
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1129
9999 mem: storing 7 in location 1129
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 101 -> 100
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 100 -> 101
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 101 -> 102
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 55 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 69 -> 70
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 55
9999 mem: storing 1130 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 7
9999 mem: location 1398 is 1130
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1130
9999 mem: storing 32 in location 1130
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 32
9999 mem: location 1131 is 7
9999 mem: location 1398 is 1130
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1131
9999 mem: storing 7 in location 1131
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 102 -> 101
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 101 -> 102
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 102 -> 103
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 56 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 70 -> 71
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 56
9999 mem: storing 1132 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 0
9999 mem: location 1133 is 7
9999 mem: location 1398 is 1132
9998 run: address to copy is 1132
9999 mem: storing 1132 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1132
9999 mem: storing 32 in location 1132
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 32
9999 mem: location 1133 is 7
9999 mem: location 1398 is 1132
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1133
9999 mem: storing 7 in location 1133
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 102 -> 103
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 103 -> 104
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 57 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 71 -> 72
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 57
9999 mem: storing 1134 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 0
9999 mem: location 1135 is 7
9999 mem: location 1398 is 1134
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1134
9999 mem: storing 32 in location 1134
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 32
9999 mem: location 1135 is 7
9999 mem: location 1398 is 1134
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1135
9999 mem: storing 7 in location 1135
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 104 -> 103
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 103 -> 104
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 104 -> 105
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 58 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 72 -> 73
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 58
9999 mem: storing 1136 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 0
9999 mem: location 1137 is 7
9999 mem: location 1398 is 1136
9998 run: address to copy is 1136
9999 mem: storing 1136 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1136
9999 mem: storing 32 in location 1136
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 32
9999 mem: location 1137 is 7
9999 mem: location 1398 is 1136
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1137
9999 mem: storing 7 in location 1137
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 105 -> 104
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 104 -> 105
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 105 -> 106
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 59 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 73 -> 74
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 59
9999 mem: storing 1138 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 0
9999 mem: location 1139 is 7
9999 mem: location 1398 is 1138
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1138
9999 mem: storing 32 in location 1138
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 32
9999 mem: location 1139 is 7
9999 mem: location 1398 is 1138
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1139
9999 mem: storing 7 in location 1139
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 106 -> 105
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 105 -> 106
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 5
9999 mem: location 1374 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1616
9999 mem: storing 7 in location 1617
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 106 -> 107
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1620
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1621
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1622
 107 run: row <- add row, 1
9999 mem: location 1620 is 5
9999 mem: storing 6 in location 1620
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 6
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 107 -> 108
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 6
9999 mem: location 1614 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 107 -> 108
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1619 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 108 -> 109
 108 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 108 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1623
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 6
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 6
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 109 -> 110
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 6
9999 mem: location 1614 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 110 -> 109
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 109 -> 110
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 110 -> 111
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 111 -> 112
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 60 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 74 -> 75
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 60
9999 mem: storing 1140 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 0
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 32
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1141
9999 mem: storing 7 in location 1141
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 112 -> 111
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 111 -> 112
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 112 -> 113
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 61 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 75 -> 76
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 61
9999 mem: storing 1142 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 0
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 32
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1143
9999 mem: storing 7 in location 1143
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 113 -> 112
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 112 -> 113
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 113 -> 114
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 62 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 76 -> 77
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 62
9999 mem: storing 1144 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 0
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 32
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1145
9999 mem: storing 7 in location 1145
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 114 -> 113
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 113 -> 114
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 114 -> 115
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 63 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 77 -> 78
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 63
9999 mem: storing 1146 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 0
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 32
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1147
9999 mem: storing 7 in location 1147
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 115 -> 114
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 114 -> 115
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 115 -> 116
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 64 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 78 -> 79
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 64
9999 mem: storing 1148 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 0
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 32
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1149
9999 mem: storing 7 in location 1149
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 116 -> 115
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 115 -> 116
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 116 -> 117
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 65 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 79 -> 80
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 65
9999 mem: storing 1150 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 32
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1151
9999 mem: storing 7 in location 1151
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 117 -> 116
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 116 -> 117
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 117 -> 118
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 66 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 80 -> 81
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 66
9999 mem: storing 1152 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 0
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 32
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1153
9999 mem: storing 7 in location 1153
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 118 -> 117
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 117 -> 118
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 118 -> 119
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 67 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 81 -> 82
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 67
9999 mem: storing 1154 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 32
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1155
9999 mem: storing 7 in location 1155
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 119 -> 118
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 118 -> 119
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 119 -> 120
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 68 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 82 -> 83
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 68
9999 mem: storing 1156 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 32
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1157
9999 mem: storing 7 in location 1157
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 120 -> 119
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 119 -> 120
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 120 -> 121
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 69 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 83 -> 84
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 69
9999 mem: storing 1158 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 32
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1159
9999 mem: storing 7 in location 1159
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 121 -> 120
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 120 -> 121
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 6
9999 mem: storing 7 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 7
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 7
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 121 -> 122
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 7
9999 mem: location 1614 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 122 -> 121
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 121 -> 122
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 122 -> 123
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 123 -> 124
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 70 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 84 -> 85
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 70
9999 mem: storing 1160 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 32
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1161
9999 mem: storing 7 in location 1161
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 124 -> 123
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 123 -> 124
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 124 -> 125
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 71 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 85 -> 86
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 71
9999 mem: storing 1162 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 32
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1163
9999 mem: storing 7 in location 1163
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 125 -> 124
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 124 -> 125
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 125 -> 126
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 72 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 86 -> 87
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 72
9999 mem: storing 1164 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 32
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1165
9999 mem: storing 7 in location 1165
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 126 -> 125
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 125 -> 126
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 126 -> 127
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 73 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 87 -> 88
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 73
9999 mem: storing 1166 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 0
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 32
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1167
9999 mem: storing 7 in location 1167
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 127 -> 126
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 126 -> 127
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 127 -> 128
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 74 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 88 -> 89
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 74
9999 mem: storing 1168 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 0
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 32
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1169
9999 mem: storing 7 in location 1169
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 128 -> 127
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 127 -> 128
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 128 -> 129
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 75 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 89 -> 90
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 75
9999 mem: storing 1170 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 0
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 32
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1171
9999 mem: storing 7 in location 1171
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 129 -> 128
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 128 -> 129
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 129 -> 130
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 76 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 90 -> 91
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 76
9999 mem: storing 1172 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 0
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 32
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1173
9999 mem: storing 7 in location 1173
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 130 -> 129
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 129 -> 130
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 130 -> 131
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 77 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 91 -> 92
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 77
9999 mem: storing 1174 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 0
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 32
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1175
9999 mem: storing 7 in location 1175
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 131 -> 130
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 130 -> 131
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 131 -> 132
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 78 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 92 -> 93
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 78
9999 mem: storing 1176 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 0
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 32
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1177
9999 mem: storing 7 in location 1177
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 131 -> 132
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 132 -> 133
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 79 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 93 -> 94
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 79
9999 mem: storing 1178 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 0
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 32
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1179
9999 mem: storing 1179 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1179
9999 mem: storing 7 in location 1179
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 133 -> 132
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 132 -> 133
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 7
9999 mem: storing 8 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 8
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 8
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 133 -> 134
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 8
9999 mem: location 1614 is 1015
9999 mem: storing 8 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 134 -> 133
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 133 -> 134
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 134 -> 135
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 135 -> 136
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 80 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 94 -> 95
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 80
9999 mem: storing 1180 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 32
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1181
9999 mem: storing 7 in location 1181
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 136 -> 135
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 135 -> 136
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
9990 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 136 -> 137
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 81 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 95 -> 96
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 81
9999 mem: storing 1182 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 32
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1183
9999 mem: storing 1183 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1183
9999 mem: storing 7 in location 1183
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 137 -> 136
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 136 -> 137
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 137 -> 138
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 82 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 96 -> 97
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 82
9999 mem: storing 1184 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 0
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1184
9999 mem: storing 1184 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 32
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1185
9999 mem: storing 7 in location 1185
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 138 -> 137
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 137 -> 138
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 138 -> 139
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 83 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 97 -> 98
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 83
9999 mem: storing 1186 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 0
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1186
9999 mem: storing 1186 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 32
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1187
9999 mem: storing 1187 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1187
9999 mem: storing 7 in location 1187
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 139 -> 138
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 138 -> 139
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 139 -> 140
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 84 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 98 -> 99
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 84
9999 mem: storing 1188 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 0
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 32
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1189
9999 mem: storing 7 in location 1189
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 140 -> 139
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 139 -> 140
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 140 -> 141
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 85 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 99 -> 100
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 85
9999 mem: storing 1190 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 0
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1190
9999 mem: storing 1190 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 32
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1191
9999 mem: storing 1191 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1191
9999 mem: storing 7 in location 1191
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 141 -> 140
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 140 -> 141
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 141 -> 142
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 86 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 100 -> 101
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 86
9999 mem: storing 1192 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 0
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 32
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1193
9999 mem: storing 1193 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1193
9999 mem: storing 7 in location 1193
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 142 -> 141
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 141 -> 142
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 142 -> 143
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 87 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 101 -> 102
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 87
9999 mem: storing 1194 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1194
9999 mem: storing 1194 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 32
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1195
9999 mem: storing 1195 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1195
9999 mem: storing 7 in location 1195
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 142 -> 143
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 143 -> 144
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 88 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 102 -> 103
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 88
9999 mem: storing 1196 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 0
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 32
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1197
9999 mem: storing 7 in location 1197
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 144 -> 143
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 143 -> 144
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 144 -> 145
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 89 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 103 -> 104
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 89
9999 mem: storing 1198 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 0
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 32
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1199
9999 mem: storing 1199 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1199
9999 mem: storing 7 in location 1199
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 145 -> 144
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 144 -> 145
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 8
9999 mem: storing 9 in location 1620
9990 schedule: clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 9
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 9
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 145 -> 146
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 9
9999 mem: location 1614 is 1015
9999 mem: storing 9 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 146 -> 145
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 145 -> 146
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 146 -> 147
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 147 -> 148
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 90 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 104 -> 105
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 90
9999 mem: storing 1200 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 32
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1201
9999 mem: storing 7 in location 1201
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 148 -> 147
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 147 -> 148
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 148 -> 149
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 91 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 105 -> 106
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 91
9999 mem: storing 1202 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 0
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 32
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1203
9999 mem: storing 1203 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1203
9999 mem: storing 7 in location 1203
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 149 -> 148
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 148 -> 149
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 149 -> 150
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 92 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 106 -> 107
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 92
9999 mem: storing 1204 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 0
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 32
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1205
9999 mem: storing 7 in location 1205
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 150 -> 149
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 149 -> 150
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 150 -> 151
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 93 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 107 -> 108
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 93
9999 mem: storing 1206 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 0
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 32
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1207
9999 mem: storing 1207 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1207
9999 mem: storing 7 in location 1207
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 151 -> 150
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 150 -> 151
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 151 -> 152
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 94 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 108 -> 109
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 94
9999 mem: storing 1208 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 0
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 32
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1209
9999 mem: storing 7 in location 1209
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 152 -> 151
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 151 -> 152
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 152 -> 153
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 95 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 109 -> 110
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 95
9999 mem: storing 1210 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 32
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1211
9999 mem: storing 1211 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1211
9999 mem: storing 7 in location 1211
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 152 -> 153
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 153 -> 154
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 96 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 110 -> 111
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 96
9999 mem: storing 1212 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 0
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 32
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1213
9999 mem: storing 7 in location 1213
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 154 -> 153
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 153 -> 154
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 154 -> 155
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 97 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 111 -> 112
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 97
9999 mem: storing 1214 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 0
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 32
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1215
9999 mem: storing 7 in location 1215
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 155 -> 154
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 154 -> 155
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 155 -> 156
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 98 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 112 -> 113
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 98
9999 mem: storing 1216 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 0
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1216
9999 mem: storing 32 in location 1216
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 32
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1217
9999 mem: storing 7 in location 1217
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 156 -> 155
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 155 -> 156
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 156 -> 157
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 99 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 113 -> 114
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 99
9999 mem: storing 1218 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 0
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1218
9999 mem: storing 32 in location 1218
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 32
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1219
9999 mem: storing 1219 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1219
9999 mem: storing 7 in location 1219
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 157 -> 156
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 156 -> 157
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 9
9999 mem: storing 10 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 10
9999 mem: location 1623 is 10
9999 mem: storing 1 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1619 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 157 -> 156
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 156 -> 157
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1430
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1431
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1427 is 1012
9999 mem: location 1430 is 2
9999 mem: location 1431 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 157 -> 158
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 4
9999 mem: location 1375 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 158 -> 157
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 157 -> 158
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1428 is 1421
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1443
9999 mem: incrementing refcount of 1421: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1443 is 1421
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 2
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9999 mem: storing 1422 in location 1444
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 2
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1423
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1423 is 1403
9999 mem: storing 1403 in location 1445
9999 mem: incrementing refcount of 1403: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 4 in location 1446
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 2
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1447
 105 run: jump-unless done?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9998 run: base address is 1404
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 2
9998 run: address to copy is 1413
9998 run: its type is event
9999 mem: location 1413 is 0
9999 mem: location 1414 is 10
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: storing 0 in location 1449
9999 mem: storing 10 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 2
9999 mem: location 1444 is 1422
9999 mem: storing 3 in location 1422
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1449 is 0
9999 mem: location 1450 is 10
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1443 is 1421
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 10, 0, 0]
9998 run: result 1 is 1421
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1432
9999 mem: storing 10 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: decrementing refcount of 1421: 4 -> 3
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 3 -> 4
9999 mem: storing 1 in location 1436
9999 mem: storing 0 in location 1437
 104 run: jump-unless found?, 
9999 mem: location 1436 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1432 is 0
9999 mem: location 1433 is 10
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: storing 0 in location 1438
 104 run: jump-unless t, 
9999 mem: location 1438 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 mem: location 1432 is 0
9999 mem: location 1433 is 10
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1524
9999 mem: incrementing refcount of 1012: 158 -> 159
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1525
9999 mem: incrementing refcount of 1257: 11 -> 12
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1526
9999 mem: storing 10 in location 1527
9999 mem: storing 0 in location 1528
9999 mem: storing 0 in location 1529
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1530
 105 run: jump-if editor, 1:offset
9999 mem: location 1525 is 1257
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 159 -> 160
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1301
 106 run: reply width:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1531
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 160 -> 161
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 106 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1533
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1534
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1535
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1536
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1537
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1536 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1538
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1537 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1539
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1526 is 0
9999 mem: location 1527 is 10
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 1527 in location 1540
 105 run: jump-unless c, 
9999 mem: location 1540 is 1527
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1541
 105 run: jump-unless redo?, 
9999 mem: location 1541 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1552
 105 run: jump-unless undo?, 
9999 mem: location 1552 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1557
 105 run: jump-unless page-up?, 
9999 mem: location 1557 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1573
 105 run: jump-unless page-down?, 
9999 mem: location 1573 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1574
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1574 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1579
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1579 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1580
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1580 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1581
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1581 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1582
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1582 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 0 in location 1586
 105 run: jump-unless tab?, 
9999 mem: location 1586 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1540 is 1527
9999 mem: location 1527 is 10
9999 mem: storing 1 in location 1590
 105 run: jump-unless newline?, 
9999 mem: location 1590 is 1
9998 run: jump-unless fell through
 105 run: cursor-row-before:number <- copy *cursor-row
9999 mem: location 1536 is 1265
9999 mem: location 1265 is 2
9999 mem: storing 2 in location 1591
 105 run: cursor-column-before:number <- copy *cursor-column
9999 mem: location 1537 is 1266
9999 mem: location 1266 is 4
9999 mem: storing 4 in location 1592
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1575
9999 mem: incrementing refcount of 1279: 14 -> 15
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1535 is 1261
9999 mem: location 1261 is 1322
9999 mem: storing 1322 in location 1587
9999 mem: incrementing refcount of 1322: 19 -> 20
 105 run: editor <- insert-new-line-and-indent editor, screen
9999 mem: location 1525 is 1257
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1625
9999 mem: storing 21 in location 1626
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1628
9999 mem: incrementing refcount of 1257: 12 -> 13
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1629
9999 mem: incrementing refcount of 1012: 161 -> 162
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1630
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1631
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1632
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1633
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1322
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 2
9999 mem: location 1266 is 4
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1634
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1629 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 162 -> 163
 107 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 107 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1635
 106 run: insert_2 10/newline, *before-cursor
9999 mem: location 1632 is 1261
9999 mem: location 1261 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1274
9999 mem: incrementing refcount of 1322: 20 -> 21
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1648
9999 mem: storing 1648 in location 1275
9999 mem: incrementing refcount of 1648: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: location 1651 is 0
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9999 mem: storing 1649 in location 1276
 107 run: *val <- copy x
9999 mem: location 1273 is 10
9999 mem: location 1276 is 1649
9999 mem: storing 10 in location 1649
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1326
9999 mem: storing 1326 in location 1277
9999 mem: incrementing refcount of 1326: 18 -> 19
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1326
9999 mem: location 1325 is 1318
9999 mem: location 1274 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9999 mem: storing 1324 in location 1278
 107 run: *y <- copy new-node
9999 mem: location 1275 is 1648
9999 mem: location 1278 is 1324
9999 mem: decrementing refcount of 1326: 19 -> 18
9999 mem: storing 1648 in location 1324
9999 mem: incrementing refcount of 1648: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 0
9999 mem: location 1651 is 0
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1651
9999 mem: storing 1651 in location 1278
 107 run: *y <- copy in
9999 mem: location 1274 is 1322
9999 mem: location 1278 is 1651
9999 mem: storing 1322 in location 1651
9999 mem: incrementing refcount of 1322: 21 -> 22
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 0
9999 mem: location 1651 is 1322
9999 mem: location 1275 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9999 mem: storing 1650 in location 1278
 107 run: *y <- copy next-node
9999 mem: location 1277 is 1326
9999 mem: location 1278 is 1650
9999 mem: storing 1326 in location 1650
9999 mem: incrementing refcount of 1326: 18 -> 19
 107 run: jump-if next-node, 1:offset
9999 mem: location 1277 is 1326
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1277 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1322
9999 mem: location 1277 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1278
 107 run: *y <- copy new-node
9999 mem: location 1275 is 1648
9999 mem: location 1278 is 1329
9999 mem: decrementing refcount of 1322: 22 -> 21
9999 mem: storing 1648 in location 1329
9999 mem: incrementing refcount of 1648: 2 -> 3
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1274 is 1322
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1632 is 1261
9999 mem: location 1261 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 3 -> 4
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: location 1632 is 1261
9999 mem: decrementing refcount of 1322: 22 -> 21
9999 mem: storing 1648 in location 1261
9999 mem: incrementing refcount of 1648: 4 -> 5
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1630 is 1265
9999 mem: location 1265 is 2
9999 mem: location 1630 is 1265
9999 mem: storing 3 in location 1265
 106 run: *cursor-column <- copy left
9999 mem: location 1633 is 0
9999 mem: location 1631 is 1266
9999 mem: storing 0 in location 1266
 106 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1630 is 1265
9999 mem: location 1265 is 3
9999 mem: location 1635 is 10
9999 mem: storing 0 in location 1636
 106 run: jump-unless below-screen?, 
9999 mem: location 1636 is 0
9998 run: jumping to instruction 30
 106 run: indent?:boolean <- get *editor, indent?:offset
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1628 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1267
9998 run: its type is boolean
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1642
 106 run: jump-if indent?, 1:offset
9999 mem: location 1642 is 0
9998 run: jump-if fell through
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1628 is 1257
9999 mem: location 1629 is 1012
9999 mem: location 1641 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1257: 13 -> 12
9999 mem: storing 1257 in location 1525
9999 mem: incrementing refcount of 1257: 12 -> 13
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1577
9999 mem: incrementing refcount of 1279: 15 -> 16
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1587 is 1322
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 21 -> 22
 106 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1648
9999 mem: storing 1648 in location 1551
9999 mem: incrementing refcount of 1648: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1535 is 1261
9999 mem: location 1261 is 1648
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1300
9999 mem: incrementing refcount of 1648: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1300 is 1648
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1650 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 19 -> 20
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1326
9999 mem: storing 1326 in location 1589
9999 mem: incrementing refcount of 1326: 20 -> 21
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1220 in location 1543
9999 mem: incrementing refcount of 1220: 0 -> 1
 105 run: *op <- merge 0/insert-operation, cursor-row-before, cursor-column-before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 0/never-coalesce
9999 mem: location 1591 is 2
9999 mem: location 1592 is 4
9999 mem: location 1575 is 1279
9999 mem: location 1536 is 1265
9999 mem: location 1265 is 3
9999 mem: location 1537 is 1266
9999 mem: location 1266 is 0
9999 mem: location 1577 is 1279
9999 mem: location 1551 is 1648
9999 mem: location 1589 is 1326
9999 mem: location 1543 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1543 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 2 in location 1222
9999 mem: storing 4 in location 1223
9999 mem: storing 1279 in location 1224
9999 mem: storing 3 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: storing 1279 in location 1227
9999 mem: storing 1648 in location 1228
9999 mem: storing 1326 in location 1229
9999 mem: storing 0 in location 1230
 105 run: editor <- add-operation editor, op
9999 mem: location 1525 is 1257
9999 mem: location 1543 is 1220
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1514
9999 mem: incrementing refcount of 1257: 13 -> 14
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1515
9999 mem: incrementing refcount of 1220: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1518
9999 mem: location 1269 is 0
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1268
9999 mem: storing 1268 in location 1516
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1515 is 1220
9999 mem: location 1516 is 1268
9999 mem: location 1268 is 1518
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1371
9999 mem: incrementing refcount of 1220: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1518 in location 1372
9999 mem: incrementing refcount of 1518: 2 -> 3
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1652
9999 mem: storing 1652 in location 1373
9999 mem: incrementing refcount of 1652: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1373 is 1652
9999 mem: skipping refcount at 1652
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1653 is 0
9999 mem: location 1654 is 0
9999 mem: location 1373 is 1652
9999 mem: skipping refcount at 1652
9998 run: address to copy is 1653
9999 mem: storing 1653 in location 1374
 107 run: *val <- copy x
9999 mem: location 1371 is 1220
9999 mem: location 1374 is 1653
9999 mem: storing 1220 in location 1653
9999 mem: incrementing refcount of 1220: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1373 is 1652
9999 mem: skipping refcount at 1652
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1653 is 1220
9999 mem: location 1654 is 0
9999 mem: location 1373 is 1652
9999 mem: skipping refcount at 1652
9999 type: type deduced to be address$
9998 run: address to copy is 1654
9999 mem: storing 1654 in location 1375
 107 run: *next <- copy in
9999 mem: location 1372 is 1518
9999 mem: location 1375 is 1654
9999 mem: storing 1518 in location 1654
9999 mem: incrementing refcount of 1518: 3 -> 4
 107 run: reply result
9999 mem: location 1373 is 1652
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1652
9999 mem: location 1516 is 1268
9999 mem: decrementing refcount of 1518: 4 -> 3
9999 mem: storing 1652 in location 1268
9999 mem: incrementing refcount of 1652: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1514 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1269
9999 mem: storing 1269 in location 1517
 106 run: *redo <- copy 0
9999 mem: location 1517 is 1269
9999 mem: storing 0 in location 1269
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1514 is 1257
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1257: 14 -> 13
9999 mem: storing 1257 in location 1525
9999 mem: incrementing refcount of 1257: 13 -> 14
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1530
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1524 is 1012
9999 mem: location 1525 is 1257
9999 mem: location 1530 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1257
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 163 -> 162
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 162 -> 163
9999 mem: decrementing refcount of 1257: 14 -> 13
9999 mem: storing 1257 in location 1429
9999 mem: incrementing refcount of 1257: 13 -> 14
9999 mem: storing 1 in location 1439
 104 run: jump-unless go-render?, 
9999 mem: location 1439 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1273
9999 mem: incrementing refcount of 1012: 163 -> 164
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1274
9999 mem: incrementing refcount of 1257: 14 -> 15
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1275
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1276
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 164 -> 165
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1342
9999 mem: incrementing refcount of 1257: 15 -> 16
 106 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1257
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1343
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 165 -> 166
 107 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 107 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1344
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1345
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1346
9999 mem: incrementing refcount of 1279: 16 -> 17
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1346 is 1279
9999 mem: storing 1279 in location 1347
9999 mem: incrementing refcount of 1279: 17 -> 18
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 19 -> 18
9999 mem: storing 1293 in location 1346
9999 mem: incrementing refcount of 1293: 19 -> 20
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1348
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1349
 106 run: column:number <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1351
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1352
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1353
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 1
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 166 -> 167
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 167 -> 166
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 166 -> 167
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1293
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is character
9999 mem: location 1294 is 97
9999 mem: storing 97 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1655
9999 mem: storing 10 in location 1656
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 97
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 97
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 167 -> 168
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 114 -> 115
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 10
9999 mem: storing 1040 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 97
9999 mem: location 1399 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 21 -> 20
9999 mem: storing 1302 in location 1346
9999 mem: incrementing refcount of 1302: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 19 -> 18
9999 mem: storing 1293 in location 1347
9999 mem: incrementing refcount of 1293: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1302
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is character
9999 mem: location 1303 is 98
9999 mem: storing 98 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 98
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 98
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 168 -> 169
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 115 -> 116
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 11
9999 mem: storing 1042 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 98
9999 mem: location 1399 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 21 -> 20
9999 mem: storing 1306 in location 1346
9999 mem: incrementing refcount of 1306: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 23 -> 22
9999 mem: storing 1302 in location 1347
9999 mem: incrementing refcount of 1302: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1306
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is character
9999 mem: location 1307 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 169 -> 170
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 170 -> 171
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 116 -> 117
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 12
9999 mem: storing 1044 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 171 -> 170
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 170 -> 171
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 171 -> 172
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 117 -> 118
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 13
9999 mem: storing 1046 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 172 -> 171
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 171 -> 172
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 172 -> 173
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 118 -> 119
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 14
9999 mem: storing 1048 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 173 -> 172
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 172 -> 173
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 173 -> 174
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 119 -> 120
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 15
9999 mem: storing 1050 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 174 -> 173
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 173 -> 174
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 174 -> 175
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 120 -> 121
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 16
9999 mem: storing 1052 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 175 -> 174
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 174 -> 175
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 175 -> 176
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 121 -> 122
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 17
9999 mem: storing 1054 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 176 -> 175
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 175 -> 176
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 176 -> 177
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 122 -> 123
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 18
9999 mem: storing 1056 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 177 -> 176
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 176 -> 177
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 177 -> 178
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 123 -> 124
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 19
9999 mem: storing 1058 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 178 -> 177
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 177 -> 178
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 1
9999 mem: storing 2 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 2
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 178 -> 179
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 179 -> 178
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 178 -> 179
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 21 -> 20
9999 mem: storing 1310 in location 1346
9999 mem: incrementing refcount of 1310: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 23 -> 22
9999 mem: storing 1306 in location 1347
9999 mem: incrementing refcount of 1306: 21 -> 22
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1310
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is character
9999 mem: location 1311 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 179 -> 180
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 124 -> 125
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 20
9999 mem: storing 1060 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1060
9999 mem: storing 32 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 21 -> 20
9999 mem: storing 1314 in location 1346
9999 mem: incrementing refcount of 1314: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 23 -> 22
9999 mem: storing 1310 in location 1347
9999 mem: incrementing refcount of 1310: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1314
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is character
9999 mem: location 1315 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 180 -> 181
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 125 -> 126
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 21
9999 mem: storing 1062 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1062
9999 mem: storing 32 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 21 -> 20
9999 mem: storing 1318 in location 1346
9999 mem: incrementing refcount of 1318: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 23 -> 22
9999 mem: storing 1314 in location 1347
9999 mem: incrementing refcount of 1314: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1318
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is character
9999 mem: location 1319 is 99
9999 mem: storing 99 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 99
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 99
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 181 -> 182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 126 -> 127
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 22
9999 mem: storing 1064 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 99
9999 mem: location 1399 is 1064
9999 mem: storing 99 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 21 -> 20
9999 mem: storing 1322 in location 1346
9999 mem: incrementing refcount of 1322: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 23 -> 22
9999 mem: storing 1318 in location 1347
9999 mem: incrementing refcount of 1318: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 2
9999 mem: storing 3 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1322
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 100
9999 mem: storing 100 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 100
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 3
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 100
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 182 -> 183
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 127 -> 128
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 23
9999 mem: storing 1066 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 100
9999 mem: location 1399 is 1066
9999 mem: storing 100 in location 1066
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: decrementing refcount of 1322: 25 -> 24
9999 mem: storing 1648 in location 1346
9999 mem: incrementing refcount of 1648: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 23 -> 22
9999 mem: storing 1322 in location 1347
9999 mem: incrementing refcount of 1322: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 3
9999 mem: storing 4 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1648
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1346 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9998 run: its type is character
9999 mem: location 1649 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 4
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 183 -> 184
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 184 -> 185
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 128 -> 129
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 24
9999 mem: storing 1068 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1069
9999 mem: storing 7 in location 1069
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 185 -> 184
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 184 -> 185
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 185 -> 186
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 129 -> 130
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 25
9999 mem: storing 1070 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1071
9999 mem: storing 7 in location 1071
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 186 -> 185
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 185 -> 186
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 186 -> 187
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 130 -> 131
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 26
9999 mem: storing 1072 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1073
9999 mem: storing 7 in location 1073
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 187 -> 186
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 186 -> 187
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 187 -> 188
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 131 -> 132
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 27
9999 mem: storing 1074 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1075
9999 mem: storing 7 in location 1075
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 188 -> 187
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 187 -> 188
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 188 -> 189
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 132 -> 133
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 28
9999 mem: storing 1076 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1077
9999 mem: storing 7 in location 1077
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 189 -> 188
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 188 -> 189
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 189 -> 190
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 133 -> 134
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 29
9999 mem: storing 1078 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1079
9999 mem: storing 7 in location 1079
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 190 -> 189
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 189 -> 190
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 2
9999 mem: storing 3 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 3
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 190 -> 191
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 191 -> 190
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 190 -> 191
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1648
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1300
9999 mem: incrementing refcount of 1648: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1648
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1650 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 21 -> 22
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1648: 11 -> 10
9999 mem: storing 1326 in location 1346
9999 mem: incrementing refcount of 1326: 22 -> 23
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: decrementing refcount of 1322: 27 -> 26
9999 mem: storing 1648 in location 1347
9999 mem: incrementing refcount of 1648: 11 -> 12
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1326
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 1 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1347 is 1648
9999 mem: location 1353 is 1261
9999 mem: decrementing refcount of 1648: 12 -> 11
9999 mem: storing 1648 in location 1261
9999 mem: incrementing refcount of 1648: 11 -> 12
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is character
9999 mem: location 1327 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1359
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 191 -> 192
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 192 -> 193
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 134 -> 135
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 30
9999 mem: storing 1080 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 101
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 193 -> 192
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 192 -> 193
 107 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 193 -> 194
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 135 -> 136
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 31
9999 mem: storing 1082 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 102
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 194 -> 193
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 193 -> 194
 107 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 194 -> 195
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 136 -> 137
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 32
9999 mem: storing 1084 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 195 -> 194
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 194 -> 195
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 195 -> 196
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 137 -> 138
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 33
9999 mem: storing 1086 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 196 -> 195
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 195 -> 196
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 196 -> 197
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 138 -> 139
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 34
9999 mem: storing 1088 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 197 -> 196
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 196 -> 197
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 197 -> 198
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 139 -> 140
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 35
9999 mem: storing 1090 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 198 -> 197
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 197 -> 198
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 198 -> 199
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 140 -> 141
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 36
9999 mem: storing 1092 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 199 -> 198
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 198 -> 199
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 199 -> 200
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 141 -> 142
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 37
9999 mem: storing 1094 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 200 -> 199
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 199 -> 200
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 200 -> 201
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 142 -> 143
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 38
9999 mem: storing 1096 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 201 -> 200
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 200 -> 201
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 201 -> 202
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 143 -> 144
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 39
9999 mem: storing 1098 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 202 -> 201
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 201 -> 202
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 3
9999 mem: storing 4 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 4
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 202 -> 203
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 4
9999 mem: location 1374 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 203 -> 202
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 202 -> 203
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 24 -> 23
9999 mem: storing 1330 in location 1346
9999 mem: incrementing refcount of 1330: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1648
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1300
9999 mem: incrementing refcount of 1648: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1648
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1650 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1648: 13 -> 12
9999 mem: storing 1326 in location 1347
9999 mem: incrementing refcount of 1326: 24 -> 25
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1330
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 4
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is character
9999 mem: location 1331 is 101
9999 mem: storing 101 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 101
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 101
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 101
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 101
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 203 -> 204
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 144 -> 145
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 40
9999 mem: storing 1100 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1398 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 101
9999 mem: location 1399 is 1100
9999 mem: storing 101 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 101
9999 mem: location 1101 is 245
9999 mem: location 1398 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1101
9999 mem: storing 7 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 21 -> 20
9999 mem: storing 1334 in location 1346
9999 mem: incrementing refcount of 1334: 17 -> 18
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 25 -> 26
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 26 -> 25
9999 mem: storing 1330 in location 1347
9999 mem: incrementing refcount of 1330: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1334
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 4
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is character
9999 mem: location 1335 is 102
9999 mem: storing 102 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 102
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 102
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 102
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 102
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 204 -> 205
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 145 -> 146
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 41
9999 mem: storing 1102 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1398 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 102
9999 mem: location 1399 is 1102
9999 mem: storing 102 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 102
9999 mem: location 1103 is 245
9999 mem: location 1398 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1103
9999 mem: storing 7 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1334
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1334
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1301
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1334: 19 -> 18
9999 mem: storing 0 in location 1346
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 23 -> 22
9999 mem: storing 1334 in location 1347
9999 mem: incrementing refcount of 1334: 19 -> 20
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1362
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1346 is 0
9999 mem: location 1362 is 1260
9999 mem: storing 0 in location 1260
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1363
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1355 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1365
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 106 run: jump-unless before-cursor?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 3
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1367
 106 run: *bottom <- copy row
9999 mem: location 1349 is 4
9999 mem: location 1367 is 1264
9999 mem: storing 4 in location 1264
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1349 is 4
9999 mem: location 1350 is 2
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1257
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1277
9999 mem: storing 2 in location 1278
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1273 is 1012
9999 mem: location 1278 is 2
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 205 -> 206
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 106 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 206 -> 207
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 146 -> 147
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 42
9999 mem: storing 1104 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1398 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1104
9999 mem: storing 32 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 245
9999 mem: location 1398 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1105
9999 mem: storing 7 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 207 -> 206
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 206 -> 207
 106 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 207 -> 208
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 147 -> 148
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 43
9999 mem: storing 1106 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1398 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1106
9999 mem: storing 32 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 245
9999 mem: location 1398 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1107
9999 mem: storing 7 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 207 -> 208
 106 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 208 -> 209
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 148 -> 149
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 44
9999 mem: storing 1108 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1398 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1108
9999 mem: storing 32 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 245
9999 mem: location 1398 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1109
9999 mem: storing 7 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 209 -> 208
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 208 -> 209
 106 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 209 -> 210
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 149 -> 150
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 45
9999 mem: storing 1110 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1398 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1110
9999 mem: storing 32 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 245
9999 mem: location 1398 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1111
9999 mem: storing 7 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 210 -> 209
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 209 -> 210
 106 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 210 -> 211
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 150 -> 151
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 46
9999 mem: storing 1112 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1398 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1112
9999 mem: storing 32 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 245
9999 mem: location 1398 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1113
9999 mem: storing 7 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 211 -> 210
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 210 -> 211
 106 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 211 -> 212
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 151 -> 152
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 47
9999 mem: storing 1114 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1398 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1114
9999 mem: storing 32 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 245
9999 mem: location 1398 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1115
9999 mem: storing 7 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 212 -> 211
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 211 -> 212
 106 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 212 -> 213
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 152 -> 153
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 48
9999 mem: storing 1116 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1398 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1116
9999 mem: storing 32 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 245
9999 mem: location 1398 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1117
9999 mem: storing 7 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 213 -> 212
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 212 -> 213
 106 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 213 -> 214
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 153 -> 154
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 49
9999 mem: storing 1118 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1398 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1118
9999 mem: storing 32 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 245
9999 mem: location 1398 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1119
9999 mem: storing 7 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 214 -> 213
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 213 -> 214
 106 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 214 -> 215
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1444
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1445
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1446
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1447
9999 mem: storing 1 in location 1448
 106 run: jump-if style-found?, 
9999 mem: location 1448 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
 106 run: jump-if color-found?, 
9999 mem: location 1450 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1449
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 106 run: jump-if bg-color-found?, 
9999 mem: location 1452 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1451
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1443 is 1012
9999 mem: location 1444 is 5
9999 mem: location 1445 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 215 -> 216
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 5
9999 mem: location 1374 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 216 -> 215
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 215 -> 216
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 0
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 216 -> 217
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 50 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 154 -> 155
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 50
9999 mem: storing 1120 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 32
9999 mem: location 1121 is 7
9999 mem: location 1398 is 1120
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1120
9999 mem: storing 9480 in location 1120
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 9480
9999 mem: location 1121 is 7
9999 mem: location 1398 is 1120
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1121
9999 mem: storing 245 in location 1121
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 0
9999 mem: storing 1 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 1
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 217 -> 218
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 51 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 155 -> 156
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 51
9999 mem: storing 1122 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 32
9999 mem: location 1123 is 7
9999 mem: location 1398 is 1122
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1122
9999 mem: storing 9480 in location 1122
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 9480
9999 mem: location 1123 is 7
9999 mem: location 1398 is 1122
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1123
9999 mem: storing 245 in location 1123
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 1
9999 mem: storing 2 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 2
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 218 -> 219
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 52 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 156 -> 157
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 52
9999 mem: storing 1124 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 32
9999 mem: location 1125 is 7
9999 mem: location 1398 is 1124
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1124
9999 mem: storing 9480 in location 1124
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 9480
9999 mem: location 1125 is 7
9999 mem: location 1398 is 1124
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1125
9999 mem: storing 245 in location 1125
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 2
9999 mem: storing 3 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 3
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 219 -> 220
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 53 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 157 -> 158
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 53
9999 mem: storing 1126 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 32
9999 mem: location 1127 is 7
9999 mem: location 1398 is 1126
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1126
9999 mem: storing 9480 in location 1126
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 9480
9999 mem: location 1127 is 7
9999 mem: location 1398 is 1126
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1127
9999 mem: storing 245 in location 1127
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 3
9999 mem: storing 4 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 4
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 220 -> 221
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 54 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 158 -> 159
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 54
9999 mem: storing 1128 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 32
9999 mem: location 1129 is 7
9999 mem: location 1398 is 1128
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1128
9999 mem: storing 9480 in location 1128
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 9480
9999 mem: location 1129 is 7
9999 mem: location 1398 is 1128
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1129
9999 mem: storing 245 in location 1129
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 4
9999 mem: storing 5 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 5
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 221 -> 222
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 55 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 159 -> 160
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 55
9999 mem: storing 1130 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 32
9999 mem: location 1131 is 7
9999 mem: location 1398 is 1130
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1130
9999 mem: storing 9480 in location 1130
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 9480
9999 mem: location 1131 is 7
9999 mem: location 1398 is 1130
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1131
9999 mem: storing 245 in location 1131
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 5
9999 mem: storing 6 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 6
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 222 -> 223
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 56 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 160 -> 161
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 56
9999 mem: storing 1132 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 32
9999 mem: location 1133 is 7
9999 mem: location 1398 is 1132
9998 run: address to copy is 1132
9999 mem: storing 1132 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1132
9999 mem: storing 9480 in location 1132
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 9480
9999 mem: location 1133 is 7
9999 mem: location 1398 is 1132
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1133
9999 mem: storing 245 in location 1133
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 6
9999 mem: storing 7 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 7
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 223 -> 224
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 57 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 161 -> 162
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 57
9999 mem: storing 1134 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 32
9999 mem: location 1135 is 7
9999 mem: location 1398 is 1134
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1134
9999 mem: storing 9480 in location 1134
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 9480
9999 mem: location 1135 is 7
9999 mem: location 1398 is 1134
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1135
9999 mem: storing 245 in location 1135
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 7
9999 mem: storing 8 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 8
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 224 -> 225
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 58 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 162 -> 163
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 58
9999 mem: storing 1136 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 32
9999 mem: location 1137 is 7
9999 mem: location 1398 is 1136
9998 run: address to copy is 1136
9999 mem: storing 1136 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1136
9999 mem: storing 9480 in location 1136
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 9480
9999 mem: location 1137 is 7
9999 mem: location 1398 is 1136
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1137
9999 mem: storing 245 in location 1137
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 8
9999 mem: storing 9 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 9
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 225 -> 226
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 59 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 163 -> 164
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 59
9999 mem: storing 1138 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 32
9999 mem: location 1139 is 7
9999 mem: location 1398 is 1138
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1138
9999 mem: storing 9480 in location 1138
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 9480
9999 mem: location 1139 is 7
9999 mem: location 1398 is 1138
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1139
9999 mem: storing 245 in location 1139
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 9
9999 mem: storing 10 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 10
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1443 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 6
9999 mem: location 1275 is 0
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 226 -> 227
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1372
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1374
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1375
 106 run: jump-if screen, 
9999 mem: location 1371 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 6
9999 mem: location 1373 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 227 -> 228
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1612
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 107 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 107 run: *row <- copy new-row
9999 mem: location 1612 is 6
9999 mem: location 1614 is 1015
9999 mem: storing 6 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 107 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 228 -> 227
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 227 -> 228
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1371 is 1012
9999 mem: location 1373 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 228 -> 229
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 229 -> 230
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 60 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 164 -> 165
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 60
9999 mem: storing 1140 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 32
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 32
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1141
9999 mem: storing 7 in location 1141
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 230 -> 229
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 229 -> 230
 107 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 230 -> 231
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 61 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 165 -> 166
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 61
9999 mem: storing 1142 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 32
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 32
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1143
9999 mem: storing 7 in location 1143
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 231 -> 230
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 230 -> 231
 107 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 231 -> 232
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 62 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 166 -> 167
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 62
9999 mem: storing 1144 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 32
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 32
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1145
9999 mem: storing 7 in location 1145
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 232 -> 231
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 231 -> 232
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 232 -> 233
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 63 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 167 -> 168
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 63
9999 mem: storing 1146 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 32
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 32
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1147
9999 mem: storing 7 in location 1147
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 233 -> 232
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 232 -> 233
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 233 -> 234
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 64 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 168 -> 169
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 64
9999 mem: storing 1148 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 32
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 32
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1149
9999 mem: storing 7 in location 1149
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 234 -> 233
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 233 -> 234
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 234 -> 235
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 65 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 169 -> 170
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 65
9999 mem: storing 1150 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 32
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 32
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1151
9999 mem: storing 7 in location 1151
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 235 -> 234
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 234 -> 235
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 235 -> 236
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 66 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 170 -> 171
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 66
9999 mem: storing 1152 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 32
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 32
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1153
9999 mem: storing 7 in location 1153
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 236 -> 235
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 235 -> 236
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 236 -> 237
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 67 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 171 -> 172
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 67
9999 mem: storing 1154 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 32
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 32
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1155
9999 mem: storing 7 in location 1155
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 237 -> 236
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 236 -> 237
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 237 -> 238
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 68 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 172 -> 173
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 68
9999 mem: storing 1156 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 32
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 32
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1157
9999 mem: storing 7 in location 1157
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 238 -> 237
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 237 -> 238
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 238 -> 239
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 69 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 173 -> 174
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 69
9999 mem: storing 1158 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 32
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 32
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1159
9999 mem: storing 7 in location 1159
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 239 -> 238
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 238 -> 239
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 6
9999 mem: location 1374 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 239 -> 240
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1620
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1621
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1622
 107 run: row <- add row, 1
9999 mem: location 1620 is 6
9999 mem: storing 7 in location 1620
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 7
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 240 -> 241
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 7
9999 mem: location 1614 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 241 -> 240
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 240 -> 241
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1619 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 241 -> 242
 108 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 108 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1623
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 7
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 7
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 242 -> 243
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 7
9999 mem: location 1614 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 243 -> 242
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 242 -> 243
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 243 -> 244
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 244 -> 245
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 70 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 174 -> 175
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 70
9999 mem: storing 1160 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 32
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 32
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1161
9999 mem: storing 7 in location 1161
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 245 -> 244
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 244 -> 245
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 245 -> 246
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 71 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 175 -> 176
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 71
9999 mem: storing 1162 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 32
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 32
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1163
9999 mem: storing 7 in location 1163
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 246 -> 245
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 245 -> 246
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 246 -> 247
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 72 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 176 -> 177
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 72
9999 mem: storing 1164 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 32
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 32
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1165
9999 mem: storing 7 in location 1165
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 247 -> 246
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 246 -> 247
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 247 -> 248
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 73 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 177 -> 178
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 73
9999 mem: storing 1166 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 32
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 32
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1167
9999 mem: storing 7 in location 1167
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 248 -> 247
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 247 -> 248
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 248 -> 249
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 74 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 178 -> 179
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 74
9999 mem: storing 1168 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 32
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 32
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1169
9999 mem: storing 7 in location 1169
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 249 -> 248
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 248 -> 249
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 249 -> 250
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 75 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 179 -> 180
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 75
9999 mem: storing 1170 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 32
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 32
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1171
9999 mem: storing 7 in location 1171
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 250 -> 249
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 249 -> 250
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 250 -> 251
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 76 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 180 -> 181
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 76
9999 mem: storing 1172 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 32
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 32
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1173
9999 mem: storing 7 in location 1173
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 251 -> 250
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 250 -> 251
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 251 -> 252
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 77 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 181 -> 182
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 77
9999 mem: storing 1174 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 32
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 32
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1175
9999 mem: storing 7 in location 1175
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 252 -> 251
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 251 -> 252
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 252 -> 253
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 78 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 182 -> 183
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 78
9999 mem: storing 1176 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 32
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 32
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1177
9999 mem: storing 7 in location 1177
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 253 -> 252
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 252 -> 253
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 253 -> 254
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 79 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 183 -> 184
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 79
9999 mem: storing 1178 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 32
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 32
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1179
9999 mem: storing 1179 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1179
9999 mem: storing 7 in location 1179
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 254 -> 253
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 253 -> 254
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 7
9999 mem: storing 8 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 8
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 8
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 254 -> 255
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 8
9999 mem: location 1614 is 1015
9999 mem: storing 8 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 255 -> 254
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 254 -> 255
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 255 -> 256
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 256 -> 257
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 80 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 184 -> 185
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 80
9999 mem: storing 1180 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 32
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 32
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1181
9999 mem: storing 7 in location 1181
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 257 -> 256
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 256 -> 257
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 257 -> 258
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 81 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 185 -> 186
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 81
9999 mem: storing 1182 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 32
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 32
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1183
9999 mem: storing 1183 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1183
9999 mem: storing 7 in location 1183
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 258 -> 257
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 257 -> 258
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 258 -> 259
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 82 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 186 -> 187
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 82
9999 mem: storing 1184 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 32
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1184
9999 mem: storing 1184 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 32
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1185
9999 mem: storing 7 in location 1185
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 259 -> 258
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 258 -> 259
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 259 -> 260
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 83 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 187 -> 188
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 83
9999 mem: storing 1186 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 32
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1186
9999 mem: storing 1186 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 32
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1187
9999 mem: storing 1187 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1187
9999 mem: storing 7 in location 1187
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 260 -> 259
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 259 -> 260
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 260 -> 261
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 84 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 188 -> 189
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 84
9999 mem: storing 1188 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 32
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 32
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1189
9999 mem: storing 7 in location 1189
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 261 -> 260
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 260 -> 261
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 261 -> 262
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 85 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 189 -> 190
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 85
9999 mem: storing 1190 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 32
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1190
9999 mem: storing 1190 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 32
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1191
9999 mem: storing 1191 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1191
9999 mem: storing 7 in location 1191
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 262 -> 261
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 261 -> 262
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 262 -> 263
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 86 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 190 -> 191
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 86
9999 mem: storing 1192 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 32
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 32
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1193
9999 mem: storing 1193 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1193
9999 mem: storing 7 in location 1193
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 263 -> 262
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 262 -> 263
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 263 -> 264
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 87 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 191 -> 192
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 87
9999 mem: storing 1194 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 32
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1194
9999 mem: storing 1194 in location 1399
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 32
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1195
9999 mem: storing 1195 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1195
9999 mem: storing 7 in location 1195
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 264 -> 263
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 263 -> 264
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 264 -> 265
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 88 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 192 -> 193
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 88
9999 mem: storing 1196 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 32
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 32
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1197
9999 mem: storing 7 in location 1197
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 265 -> 264
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 264 -> 265
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 265 -> 266
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 89 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 193 -> 194
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 89
9999 mem: storing 1198 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 32
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 32
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1199
9999 mem: storing 1199 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1199
9999 mem: storing 7 in location 1199
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 266 -> 265
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 265 -> 266
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 8
9999 mem: storing 9 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 9
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 9
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 266 -> 267
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 9
9999 mem: location 1614 is 1015
9999 mem: storing 9 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 267 -> 266
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 266 -> 267
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 267 -> 268
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 268 -> 269
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 90 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 194 -> 195
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 90
9999 mem: storing 1200 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 32
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 32
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1201
9999 mem: storing 7 in location 1201
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 269 -> 268
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 268 -> 269
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 269 -> 270
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 91 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 195 -> 196
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 91
9999 mem: storing 1202 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 32
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 32
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1203
9999 mem: storing 1203 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1203
9999 mem: storing 7 in location 1203
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 270 -> 269
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 269 -> 270
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 270 -> 271
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 92 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 196 -> 197
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 92
9999 mem: storing 1204 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 32
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 32
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1205
9999 mem: storing 7 in location 1205
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 271 -> 270
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 270 -> 271
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 271 -> 272
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 93 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 197 -> 198
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 93
9999 mem: storing 1206 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 32
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 32
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1207
9999 mem: storing 1207 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1207
9999 mem: storing 7 in location 1207
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 272 -> 271
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 271 -> 272
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 272 -> 273
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 94 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 198 -> 199
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 94
9999 mem: storing 1208 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 32
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 32
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1209
9999 mem: storing 7 in location 1209
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 273 -> 272
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 272 -> 273
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 273 -> 274
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 95 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 199 -> 200
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 95
9999 mem: storing 1210 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 32
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 32
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1211
9999 mem: storing 1211 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1211
9999 mem: storing 7 in location 1211
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 274 -> 273
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 273 -> 274
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 274 -> 275
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 96 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 200 -> 201
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 96
9999 mem: storing 1212 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 32
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 32
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1213
9999 mem: storing 7 in location 1213
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 275 -> 274
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 274 -> 275
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 275 -> 276
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 97 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 201 -> 202
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 97
9999 mem: storing 1214 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 32
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 32
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1215
9999 mem: storing 7 in location 1215
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 276 -> 275
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 275 -> 276
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 276 -> 277
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 98 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 202 -> 203
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 98
9999 mem: storing 1216 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 32
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1216
9999 mem: storing 32 in location 1216
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 32
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1217
9999 mem: storing 7 in location 1217
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 277 -> 276
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 276 -> 277
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 277 -> 278
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 99 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 203 -> 204
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 99
9999 mem: storing 1218 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 32
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1218
9999 mem: storing 32 in location 1218
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 32
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1219
9999 mem: storing 1219 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1219
9999 mem: storing 7 in location 1219
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 278 -> 277
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 277 -> 278
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 9
9999 mem: storing 10 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 10
9999 mem: location 1623 is 10
9999 mem: storing 1 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1619 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 278 -> 277
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 277 -> 278
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 3
9999 mem: storing 3 in location 1430
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1431
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1427 is 1012
9999 mem: location 1430 is 3
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 278 -> 279
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 279 -> 278
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 278 -> 279
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1428 is 1421
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1443
9999 mem: incrementing refcount of 1421: 4 -> 5
 105 run: jump-unless console, 
9999 mem: location 1443 is 1421
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 3
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9999 mem: storing 1422 in location 1444
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 3
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1423
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1423 is 1403
9999 mem: storing 1403 in location 1445
9999 mem: incrementing refcount of 1403: 3 -> 4
 105 run: max:number <- length *buf
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 4 in location 1446
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 3
9999 mem: location 1446 is 4
9999 mem: storing 0 in location 1447
 105 run: jump-unless done?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9998 run: base address is 1404
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 3
9998 run: address to copy is 1417
9998 run: its type is event
9999 mem: location 1417 is 1
9999 mem: location 1418 is 65506
9999 mem: location 1419 is 0
9999 mem: location 1420 is 0
9999 mem: storing 1 in location 1449
9999 mem: storing 65506 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 3
9999 mem: location 1444 is 1422
9999 mem: storing 4 in location 1422
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1449 is 1
9999 mem: location 1450 is 65506
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1443 is 1421
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65506, 0, 0]
9998 run: result 1 is 1421
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1432
9999 mem: storing 65506 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: decrementing refcount of 1421: 5 -> 4
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 4 -> 5
9999 mem: storing 1 in location 1436
9999 mem: storing 0 in location 1437
 104 run: jump-unless found?, 
9999 mem: location 1436 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1432 is 1
9999 mem: location 1433 is 65506
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: storing 0 in location 1438
 104 run: jump-unless t, 
9999 mem: location 1438 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 mem: location 1432 is 1
9999 mem: location 1433 is 65506
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1524
9999 mem: incrementing refcount of 1012: 279 -> 280
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1525
9999 mem: incrementing refcount of 1257: 16 -> 17
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1526
9999 mem: storing 65506 in location 1527
9999 mem: storing 0 in location 1528
9999 mem: storing 0 in location 1529
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1530
 105 run: jump-if editor, 1:offset
9999 mem: location 1525 is 1257
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 280 -> 281
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1301
 106 run: reply width:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1531
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1524 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 281 -> 282
 106 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 106 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1533
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1534
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1535
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1536
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1537
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1536 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 3 in location 1538
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1537 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1539
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1526 is 1
9999 mem: location 1527 is 65506
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 0 in location 1540
 105 run: jump-unless c, 
9999 mem: location 1540 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1526 is 1
9999 mem: location 1527 is 65506
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 1527 in location 1594
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1594 is 1527
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1557
 105 run: jump-unless page-up?, 
9999 mem: location 1557 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1573
 105 run: jump-unless page-down?, 
9999 mem: location 1573 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1580
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1580 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1581
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1581 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1595
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1595 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1596
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1596 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1597
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1597 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1599
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1599 is 0
9998 run: jumping to instruction 757
 105 run: delete-next-character?:boolean <- equal *k, 65522/delete
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 0 in location 1601
 105 run: jump-unless delete-next-character?, 
9999 mem: location 1601 is 0
9998 run: jumping to instruction 796
 105 run: paste-end?:boolean <- equal *k, 65506/paste-end
9999 mem: location 1594 is 1527
9999 mem: location 1527 is 65506
9999 mem: storing 1 in location 1605
 105 run: jump-unless paste-end?, 
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 105 run: indent?:address:boolean <- get-address *editor, indent?:offset
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1525 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1267
9999 mem: storing 1267 in location 1606
 105 run: *indent? <- copy 1/true
9999 mem: location 1606 is 1267
9999 mem: storing 1 in location 1267
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1530
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1524 is 1012
9999 mem: location 1525 is 1257
9999 mem: location 1530 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1257
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 282 -> 281
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 281 -> 282
9999 mem: decrementing refcount of 1257: 17 -> 16
9999 mem: storing 1257 in location 1429
9999 mem: incrementing refcount of 1257: 16 -> 17
9999 mem: storing 1 in location 1439
 104 run: jump-unless go-render?, 
9999 mem: location 1439 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1427 is 1012
9999 mem: location 1429 is 1257
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1273
9999 mem: incrementing refcount of 1012: 282 -> 283
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1274
9999 mem: incrementing refcount of 1257: 17 -> 18
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1275
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1276
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 283 -> 284
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1342
9999 mem: incrementing refcount of 1257: 18 -> 19
 106 run: jump-if editor, 1:offset
9999 mem: location 1342 is 1257
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1262
9998 run: its type is number
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1343
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1341 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 284 -> 285
 107 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 107 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1344
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1263
9998 run: its type is number
9999 mem: location 1263 is 9
9999 mem: storing 9 in location 1345
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1259 is 1279
9999 mem: storing 1279 in location 1346
9999 mem: incrementing refcount of 1279: 18 -> 19
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1346 is 1279
9999 mem: storing 1279 in location 1347
9999 mem: incrementing refcount of 1279: 19 -> 20
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 21 -> 20
9999 mem: storing 1293 in location 1346
9999 mem: incrementing refcount of 1293: 23 -> 24
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1348
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1349
 106 run: column:number <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9999 mem: storing 1265 in location 1351
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9999 mem: storing 1266 in location 1352
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1353
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 1
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 285 -> 286
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 286 -> 285
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 285 -> 286
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1293
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1346 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is character
9999 mem: location 1294 is 97
9999 mem: storing 97 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 97
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 97
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 286 -> 287
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 204 -> 205
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 97
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 10
9999 mem: storing 1040 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 97
9999 mem: location 1399 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1398 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 25 -> 24
9999 mem: storing 1302 in location 1346
9999 mem: incrementing refcount of 1302: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1279
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1279 in location 1300
9999 mem: incrementing refcount of 1279: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1279
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1280 is 167
9999 mem: location 1281 is 1293
9999 mem: location 1282 is 0
9999 mem: location 1300 is 1279
9999 mem: skipping refcount at 1279
9999 type: type deduced to be character$
9998 run: address to copy is 1281
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1281 is 1293
9999 mem: storing 1293 in location 1301
9999 mem: incrementing refcount of 1293: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1279: 21 -> 20
9999 mem: storing 1293 in location 1347
9999 mem: incrementing refcount of 1293: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1302
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1346 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is character
9999 mem: location 1303 is 98
9999 mem: storing 98 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 98
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 98
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 287 -> 288
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 205 -> 206
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 98
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 11
9999 mem: storing 1042 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 98
9999 mem: location 1399 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1398 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 25 -> 24
9999 mem: storing 1306 in location 1346
9999 mem: incrementing refcount of 1306: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1300
9999 mem: incrementing refcount of 1293: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1293
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1294 is 97
9999 mem: location 1295 is 1302
9999 mem: location 1296 is 1279
9999 mem: location 1300 is 1293
9999 mem: skipping refcount at 1293
9999 type: type deduced to be character$
9998 run: address to copy is 1295
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1295 is 1302
9999 mem: storing 1302 in location 1301
9999 mem: incrementing refcount of 1302: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1293: 27 -> 26
9999 mem: storing 1302 in location 1347
9999 mem: incrementing refcount of 1302: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1306
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 1
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1346 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is character
9999 mem: location 1307 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 288 -> 289
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 289 -> 290
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 206 -> 207
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 12
9999 mem: storing 1044 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1398 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 290 -> 289
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 289 -> 290
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 290 -> 291
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 207 -> 208
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 13
9999 mem: storing 1046 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1398 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 291 -> 290
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 290 -> 291
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 291 -> 292
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 208 -> 209
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 14
9999 mem: storing 1048 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1398 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 292 -> 291
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 291 -> 292
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 292 -> 293
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 209 -> 210
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 15
9999 mem: storing 1050 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1398 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 293 -> 292
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 292 -> 293
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 293 -> 294
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 210 -> 211
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 16
9999 mem: storing 1052 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1398 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 294 -> 293
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 293 -> 294
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 294 -> 295
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 211 -> 212
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 17
9999 mem: storing 1054 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1398 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 295 -> 294
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 294 -> 295
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 295 -> 296
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 212 -> 213
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 18
9999 mem: storing 1056 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1398 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 296 -> 295
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 295 -> 296
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 296 -> 297
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1385 is 10
9999 mem: storing 10 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 10
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 213 -> 214
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 19
9999 mem: storing 1058 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1398 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 297 -> 296
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 296 -> 297
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 1
9999 mem: storing 2 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 2
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 297 -> 298
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 298 -> 297
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 297 -> 298
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 25 -> 24
9999 mem: storing 1310 in location 1346
9999 mem: incrementing refcount of 1310: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1300
9999 mem: incrementing refcount of 1302: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1302
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1303 is 98
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1293
9999 mem: location 1300 is 1302
9999 mem: skipping refcount at 1302
9999 type: type deduced to be character$
9998 run: address to copy is 1304
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1301
9999 mem: incrementing refcount of 1306: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 27 -> 26
9999 mem: storing 1306 in location 1347
9999 mem: incrementing refcount of 1306: 25 -> 26
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1310
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1346 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is character
9999 mem: location 1311 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 298 -> 299
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 214 -> 215
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 20
9999 mem: storing 1060 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1060
9999 mem: storing 32 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1398 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 25 -> 24
9999 mem: storing 1314 in location 1346
9999 mem: incrementing refcount of 1314: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1300
9999 mem: incrementing refcount of 1306: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1306
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1307 is 10
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1300 is 1306
9999 mem: skipping refcount at 1306
9999 type: type deduced to be character$
9998 run: address to copy is 1308
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1301
9999 mem: incrementing refcount of 1310: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 27 -> 26
9999 mem: storing 1310 in location 1347
9999 mem: incrementing refcount of 1310: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1314
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1346 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is character
9999 mem: location 1315 is 32
9999 mem: storing 32 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 32
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 32
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 299 -> 300
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 215 -> 216
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 21
9999 mem: storing 1062 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1062
9999 mem: storing 32 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1398 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 25 -> 24
9999 mem: storing 1318 in location 1346
9999 mem: incrementing refcount of 1318: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1300
9999 mem: incrementing refcount of 1310: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1310
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1311 is 32
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1300 is 1310
9999 mem: skipping refcount at 1310
9999 type: type deduced to be character$
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1301
9999 mem: incrementing refcount of 1314: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 27 -> 26
9999 mem: storing 1314 in location 1347
9999 mem: incrementing refcount of 1314: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1318
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1346 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is character
9999 mem: location 1319 is 99
9999 mem: storing 99 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 99
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 99
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 300 -> 301
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 216 -> 217
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 99
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 22
9999 mem: storing 1064 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 99
9999 mem: location 1399 is 1064
9999 mem: storing 99 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1064
9999 mem: location 1064 is 99
9999 mem: location 1065 is 7
9999 mem: location 1398 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 25 -> 24
9999 mem: storing 1322 in location 1346
9999 mem: incrementing refcount of 1322: 27 -> 28
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1300
9999 mem: incrementing refcount of 1314: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1314
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1315 is 32
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1300 is 1314
9999 mem: skipping refcount at 1314
9999 type: type deduced to be character$
9998 run: address to copy is 1316
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1301
9999 mem: incrementing refcount of 1318: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 27 -> 26
9999 mem: storing 1318 in location 1347
9999 mem: incrementing refcount of 1318: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 2
9999 mem: storing 3 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1322
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1346 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 100
9999 mem: storing 100 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 100
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 3
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 100
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 301 -> 302
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 217 -> 218
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 100
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 23
9999 mem: storing 1066 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 100
9999 mem: location 1399 is 1066
9999 mem: storing 100 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1066
9999 mem: location 1066 is 100
9999 mem: location 1067 is 7
9999 mem: location 1398 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: decrementing refcount of 1322: 29 -> 28
9999 mem: storing 1648 in location 1346
9999 mem: incrementing refcount of 1648: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1300
9999 mem: incrementing refcount of 1318: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1318
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1319 is 99
9999 mem: location 1320 is 1322
9999 mem: location 1321 is 1314
9999 mem: location 1300 is 1318
9999 mem: skipping refcount at 1318
9999 type: type deduced to be character$
9998 run: address to copy is 1320
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1320 is 1322
9999 mem: storing 1322 in location 1301
9999 mem: incrementing refcount of 1322: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1322
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1322
9999 mem: decrementing refcount of 1318: 27 -> 26
9999 mem: storing 1322 in location 1347
9999 mem: incrementing refcount of 1322: 29 -> 30
 106 run: column <- add column, 1
9999 mem: location 1350 is 3
9999 mem: storing 4 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1648
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 2
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1346 is 1648
9999 mem: skipping refcount at 1648
9998 run: address to copy is 1649
9998 run: its type is character
9999 mem: location 1649 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 2
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 4
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 302 -> 303
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 303 -> 304
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 218 -> 219
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 24
9999 mem: storing 1068 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1398 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1069
9999 mem: storing 7 in location 1069
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 304 -> 303
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 303 -> 304
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 304 -> 305
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 219 -> 220
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 25
9999 mem: storing 1070 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1398 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1071
9999 mem: storing 7 in location 1071
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 305 -> 304
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 304 -> 305
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 305 -> 306
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 220 -> 221
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 26
9999 mem: storing 1072 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1398 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1073
9999 mem: storing 7 in location 1073
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 306 -> 305
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 305 -> 306
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 306 -> 307
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 221 -> 222
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 27
9999 mem: storing 1074 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1398 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1075
9999 mem: storing 7 in location 1075
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 307 -> 306
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 306 -> 307
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 307 -> 308
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 222 -> 223
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 28
9999 mem: storing 1076 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1398 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1077
9999 mem: storing 7 in location 1077
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 308 -> 307
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 307 -> 308
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 308 -> 309
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1385 is 10
9999 mem: storing 20 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 20
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 223 -> 224
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 29
9999 mem: storing 1078 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1398 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1079
9999 mem: storing 7 in location 1079
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 309 -> 308
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 308 -> 309
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 2
9999 mem: storing 3 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 3
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 309 -> 310
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 310 -> 309
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 309 -> 310
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1648
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1300
9999 mem: incrementing refcount of 1648: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1648
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1650 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1648: 15 -> 14
9999 mem: storing 1326 in location 1346
9999 mem: incrementing refcount of 1326: 26 -> 27
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1322
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1300
9999 mem: incrementing refcount of 1322: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1322
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1323 is 100
9999 mem: location 1324 is 1648
9999 mem: location 1325 is 1318
9999 mem: location 1300 is 1322
9999 mem: skipping refcount at 1322
9999 type: type deduced to be character$
9998 run: address to copy is 1324
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1324 is 1648
9999 mem: storing 1648 in location 1301
9999 mem: incrementing refcount of 1648: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1648
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: decrementing refcount of 1322: 31 -> 30
9999 mem: storing 1648 in location 1347
9999 mem: incrementing refcount of 1648: 15 -> 16
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1326
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 3
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 1 in location 1356
 106 run: jump-unless at-cursor?, 
9999 mem: location 1356 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1347 is 1648
9999 mem: location 1353 is 1261
9999 mem: decrementing refcount of 1648: 16 -> 15
9999 mem: storing 1648 in location 1261
9999 mem: incrementing refcount of 1648: 15 -> 16
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1346 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is character
9999 mem: location 1327 is 10
9999 mem: storing 10 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 10
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 10
9999 mem: storing 1 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 3
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1359
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1341 is 1012
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 310 -> 311
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 311 -> 312
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 224 -> 225
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 30
9999 mem: storing 1080 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1080
9999 mem: storing 32 in location 1080
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1398 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1081
9999 mem: storing 7 in location 1081
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 312 -> 311
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 311 -> 312
 107 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 312 -> 313
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 225 -> 226
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 31
9999 mem: storing 1082 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1082
9999 mem: storing 32 in location 1082
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1398 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1083
9999 mem: storing 7 in location 1083
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 313 -> 312
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 312 -> 313
 107 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 313 -> 314
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 226 -> 227
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 32
9999 mem: storing 1084 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1398 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1085
9999 mem: storing 7 in location 1085
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 314 -> 313
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 313 -> 314
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 314 -> 315
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 227 -> 228
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 33
9999 mem: storing 1086 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1398 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1087
9999 mem: storing 7 in location 1087
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 315 -> 314
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 314 -> 315
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 315 -> 316
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 228 -> 229
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 34
9999 mem: storing 1088 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1398 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1089
9999 mem: storing 7 in location 1089
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 316 -> 315
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 315 -> 316
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 316 -> 317
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 229 -> 230
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 35
9999 mem: storing 1090 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1398 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1091
9999 mem: storing 7 in location 1091
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 317 -> 316
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 316 -> 317
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 317 -> 318
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 230 -> 231
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 36
9999 mem: storing 1092 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1398 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1093
9999 mem: storing 7 in location 1093
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 318 -> 317
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 317 -> 318
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 318 -> 319
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 231 -> 232
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 37
9999 mem: storing 1094 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1398 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1095
9999 mem: storing 7 in location 1095
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 319 -> 318
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 318 -> 319
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 319 -> 320
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 232 -> 233
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 38
9999 mem: storing 1096 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1096
9999 mem: storing 32 in location 1096
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1398 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1097
9999 mem: storing 7 in location 1097
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 320 -> 319
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 319 -> 320
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 320 -> 321
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1385 is 10
9999 mem: storing 30 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 30
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 233 -> 234
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 39
9999 mem: storing 1098 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1098
9999 mem: storing 32 in location 1098
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1398 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1099
9999 mem: storing 7 in location 1099
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 321 -> 320
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 320 -> 321
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1349 is 3
9999 mem: storing 4 in location 1349
 106 run: column <- copy left
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1350
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1341 is 1012
9999 mem: location 1349 is 4
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 321 -> 322
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 4
9999 mem: location 1374 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 322 -> 321
9999 mem: storing 1012 in location 1341
9999 mem: incrementing refcount of 1012: 321 -> 322
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 28 -> 27
9999 mem: storing 1330 in location 1346
9999 mem: incrementing refcount of 1330: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1648
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1648 in location 1300
9999 mem: incrementing refcount of 1648: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1648
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1649 is 10
9999 mem: location 1650 is 1326
9999 mem: location 1651 is 1322
9999 mem: location 1300 is 1648
9999 mem: skipping refcount at 1648
9999 type: type deduced to be character$
9998 run: address to copy is 1650
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1650 is 1326
9999 mem: storing 1326 in location 1301
9999 mem: incrementing refcount of 1326: 27 -> 28
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1326
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1326
9999 mem: decrementing refcount of 1648: 17 -> 16
9999 mem: storing 1326 in location 1347
9999 mem: incrementing refcount of 1326: 28 -> 29
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1330
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 4
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1346 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is character
9999 mem: location 1331 is 101
9999 mem: storing 101 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 101
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 101
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 101
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 101
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 322 -> 323
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 234 -> 235
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 101
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 40
9999 mem: storing 1100 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 101
9999 mem: location 1101 is 7
9999 mem: location 1398 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 101
9999 mem: location 1399 is 1100
9999 mem: storing 101 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1100
9999 mem: location 1100 is 101
9999 mem: location 1101 is 7
9999 mem: location 1398 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1101
9999 mem: storing 7 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 25 -> 24
9999 mem: storing 1334 in location 1346
9999 mem: incrementing refcount of 1334: 21 -> 22
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1326
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1326 in location 1300
9999 mem: incrementing refcount of 1326: 29 -> 30
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1326
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1327 is 10
9999 mem: location 1328 is 1330
9999 mem: location 1329 is 1648
9999 mem: location 1300 is 1326
9999 mem: skipping refcount at 1326
9999 type: type deduced to be character$
9998 run: address to copy is 1328
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1328 is 1330
9999 mem: storing 1330 in location 1301
9999 mem: incrementing refcount of 1330: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1330
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: decrementing refcount of 1326: 30 -> 29
9999 mem: storing 1330 in location 1347
9999 mem: incrementing refcount of 1330: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 1334
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1349 is 4
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1354
 106 run: jump-if off-screen?, 
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1346 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is character
9999 mem: location 1335 is 102
9999 mem: storing 102 in location 1357
 106 run: color <- get-color color, c
9999 mem: location 1348 is 7
9999 mem: location 1357 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1658
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1659
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1658 is 7
9999 mem: storing 1 in location 1660
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1659 is 102
9999 mem: storing 0 in location 1661
 107 run: jump-unless starting-comment?, 
9999 mem: location 1661 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1662
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1662 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1660 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1659 is 102
9999 mem: storing 0 in location 1664
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1664 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1658 is 7
9999 mem: storing 0 in location 1665
 107 run: jump-unless color-is-red?, 
9999 mem: location 1665 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1658 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1357 is 102
9999 mem: storing 0 in location 1358
 106 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless at-right?, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1341 is 1012
9999 mem: location 1357 is 102
9999 mem: location 1348 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 323 -> 324
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1383
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 235 -> 236
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 102
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 41
9999 mem: storing 1102 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 102
9999 mem: location 1103 is 7
9999 mem: location 1398 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 102
9999 mem: location 1399 is 1102
9999 mem: storing 102 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1102
9999 mem: location 1102 is 102
9999 mem: location 1103 is 7
9999 mem: location 1398 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1103
9999 mem: storing 7 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1346 is 1334
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1334
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1335 is 102
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1330
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 type: type deduced to be character$
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1301
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1334: 23 -> 22
9999 mem: storing 0 in location 1346
 106 run: prev <- next_2 prev
9999 mem: location 1347 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1300
9999 mem: incrementing refcount of 1330: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1300 is 1330
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1331 is 101
9999 mem: location 1332 is 1334
9999 mem: location 1333 is 1326
9999 mem: location 1300 is 1330
9999 mem: skipping refcount at 1330
9999 type: type deduced to be character$
9998 run: address to copy is 1332
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1332 is 1334
9999 mem: storing 1334 in location 1301
9999 mem: incrementing refcount of 1334: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1301 is 1334
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1334
9999 mem: decrementing refcount of 1330: 27 -> 26
9999 mem: storing 1334 in location 1347
9999 mem: incrementing refcount of 1334: 23 -> 24
 106 run: column <- add column, 1
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1362
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1346 is 0
9999 mem: location 1362 is 1260
9999 mem: storing 0 in location 1260
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1355
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1266
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1363
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1355 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1349 is 4
9999 mem: location 1351 is 1265
9999 mem: location 1265 is 3
9999 mem: storing 0 in location 1365
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 106 run: jump-unless before-cursor?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1342 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1367
 106 run: *bottom <- copy row
9999 mem: location 1349 is 4
9999 mem: location 1367 is 1264
9999 mem: storing 4 in location 1264
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1349 is 4
9999 mem: location 1350 is 2
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1257
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1277
9999 mem: storing 2 in location 1278
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1273 is 1012
9999 mem: location 1278 is 2
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 324 -> 325
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1287
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 106 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 325 -> 326
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 236 -> 237
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 42
9999 mem: storing 1104 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1398 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1104
9999 mem: storing 32 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1398 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1105
9999 mem: storing 7 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 326 -> 325
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 325 -> 326
 106 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 326 -> 327
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 237 -> 238
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 43
9999 mem: storing 1106 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1398 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1106
9999 mem: storing 32 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1398 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1107
9999 mem: storing 7 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 327 -> 326
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 326 -> 327
 106 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 327 -> 328
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 238 -> 239
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 44
9999 mem: storing 1108 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1398 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1108
9999 mem: storing 32 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1398 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1109
9999 mem: storing 7 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 328 -> 327
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 327 -> 328
 106 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 328 -> 329
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 239 -> 240
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 45
9999 mem: storing 1110 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1398 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1110
9999 mem: storing 32 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1398 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1111
9999 mem: storing 7 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 329 -> 328
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 328 -> 329
 106 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 329 -> 330
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 240 -> 241
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 46
9999 mem: storing 1112 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1398 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1112
9999 mem: storing 32 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1398 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1113
9999 mem: storing 7 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 330 -> 329
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 329 -> 330
 106 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 330 -> 331
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 241 -> 242
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 47
9999 mem: storing 1114 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1398 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1114
9999 mem: storing 32 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1398 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1115
9999 mem: storing 7 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 331 -> 330
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 330 -> 331
 106 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 331 -> 332
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 242 -> 243
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 48
9999 mem: storing 1116 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1398 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1116
9999 mem: storing 32 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1398 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1117
9999 mem: storing 7 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 332 -> 331
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 331 -> 332
 106 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 332 -> 333
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1385 is 10
9999 mem: storing 40 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 40
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 243 -> 244
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 49
9999 mem: storing 1118 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1398 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1118
9999 mem: storing 32 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1398 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1119
9999 mem: storing 7 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 333 -> 332
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 332 -> 333
 106 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 333 -> 334
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1444
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1445
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1446
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1447
9999 mem: storing 1 in location 1448
 106 run: jump-if style-found?, 
9999 mem: location 1448 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
 106 run: jump-if color-found?, 
9999 mem: location 1450 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1449
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
 106 run: jump-if bg-color-found?, 
9999 mem: location 1452 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1451
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1443 is 1012
9999 mem: location 1444 is 5
9999 mem: location 1445 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 334 -> 335
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1372
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 107 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 107 run: *row <- copy new-row
9999 mem: location 1372 is 5
9999 mem: location 1374 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 107 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 335 -> 334
9999 mem: storing 1012 in location 1443
9999 mem: incrementing refcount of 1012: 334 -> 335
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 0
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 335 -> 336
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 50 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 244 -> 245
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 50
9999 mem: storing 1120 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 9480
9999 mem: location 1121 is 245
9999 mem: location 1398 is 1120
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1120
9999 mem: storing 9480 in location 1120
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1120
9999 mem: location 1120 is 9480
9999 mem: location 1121 is 245
9999 mem: location 1398 is 1120
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1121
9999 mem: storing 245 in location 1121
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 0
9999 mem: storing 1 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 1
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 336 -> 337
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 51 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 245 -> 246
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 51
9999 mem: storing 1122 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 9480
9999 mem: location 1123 is 245
9999 mem: location 1398 is 1122
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1122
9999 mem: storing 9480 in location 1122
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1122
9999 mem: location 1122 is 9480
9999 mem: location 1123 is 245
9999 mem: location 1398 is 1122
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1123
9999 mem: storing 245 in location 1123
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 1
9999 mem: storing 2 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 2
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 337 -> 338
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 52 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 246 -> 247
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 52
9999 mem: storing 1124 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 9480
9999 mem: location 1125 is 245
9999 mem: location 1398 is 1124
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1124
9999 mem: storing 9480 in location 1124
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1124
9999 mem: location 1124 is 9480
9999 mem: location 1125 is 245
9999 mem: location 1398 is 1124
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1125
9999 mem: storing 245 in location 1125
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 2
9999 mem: storing 3 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 3
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 338 -> 339
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 53 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 247 -> 248
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 53
9999 mem: storing 1126 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 9480
9999 mem: location 1127 is 245
9999 mem: location 1398 is 1126
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1126
9999 mem: storing 9480 in location 1126
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1126
9999 mem: location 1126 is 9480
9999 mem: location 1127 is 245
9999 mem: location 1398 is 1126
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1127
9999 mem: storing 245 in location 1127
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 3
9999 mem: storing 4 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 4
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 339 -> 340
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 54 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 248 -> 249
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 54
9999 mem: storing 1128 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 9480
9999 mem: location 1129 is 245
9999 mem: location 1398 is 1128
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1128
9999 mem: storing 9480 in location 1128
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1128
9999 mem: location 1128 is 9480
9999 mem: location 1129 is 245
9999 mem: location 1398 is 1128
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1129
9999 mem: storing 245 in location 1129
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 4
9999 mem: storing 5 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 5
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 340 -> 341
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 55 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 249 -> 250
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 55
9999 mem: storing 1130 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 9480
9999 mem: location 1131 is 245
9999 mem: location 1398 is 1130
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1130
9999 mem: storing 9480 in location 1130
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1130
9999 mem: location 1130 is 9480
9999 mem: location 1131 is 245
9999 mem: location 1398 is 1130
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1131
9999 mem: storing 245 in location 1131
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 5
9999 mem: storing 6 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 6
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 341 -> 342
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 56 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 250 -> 251
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 56
9999 mem: storing 1132 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 9480
9999 mem: location 1133 is 245
9999 mem: location 1398 is 1132
9998 run: address to copy is 1132
9999 mem: storing 1132 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1132
9999 mem: storing 9480 in location 1132
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1132
9999 mem: location 1132 is 9480
9999 mem: location 1133 is 245
9999 mem: location 1398 is 1132
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1133
9999 mem: storing 245 in location 1133
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 6
9999 mem: storing 7 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 7
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 342 -> 343
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 57 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 251 -> 252
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 57
9999 mem: storing 1134 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 9480
9999 mem: location 1135 is 245
9999 mem: location 1398 is 1134
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1134
9999 mem: storing 9480 in location 1134
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1134
9999 mem: location 1134 is 9480
9999 mem: location 1135 is 245
9999 mem: location 1398 is 1134
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1135
9999 mem: storing 245 in location 1135
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 7
9999 mem: storing 8 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 8
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 343 -> 344
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 58 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 252 -> 253
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 58
9999 mem: storing 1136 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 9480
9999 mem: location 1137 is 245
9999 mem: location 1398 is 1136
9998 run: address to copy is 1136
9999 mem: storing 1136 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1136
9999 mem: storing 9480 in location 1136
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1136
9999 mem: location 1136 is 9480
9999 mem: location 1137 is 245
9999 mem: location 1398 is 1136
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1137
9999 mem: storing 245 in location 1137
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 8
9999 mem: storing 9 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 9
9999 mem: location 1446 is 9
9999 mem: storing 1 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1443 is 1012
9999 mem: location 1447 is 9480
9999 mem: location 1449 is 245
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 344 -> 345
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1380
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1381
9999 mem: storing 1 in location 1382
 107 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 107 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1380 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 107 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1390
 107 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1385 is 10
9999 mem: storing 50 in location 1393
 107 run: index <- add index, *column
9999 mem: location 1393 is 50
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 59 in location 1393
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 253 -> 254
 107 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 9480
9999 mem: storing 0 in location 1396
 107 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 59
9999 mem: storing 1138 in location 1398
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 9480
9999 mem: location 1139 is 245
9999 mem: location 1398 is 1138
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1399
 107 run: *cursor-contents <- copy c
9999 mem: location 1380 is 9480
9999 mem: location 1399 is 1138
9999 mem: storing 9480 in location 1138
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1138
9999 mem: location 1138 is 9480
9999 mem: location 1139 is 245
9999 mem: location 1398 is 1138
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1400
 107 run: *cursor-color <- copy color
9999 mem: location 1381 is 245
9999 mem: location 1400 is 1139
9999 mem: storing 245 in location 1139
 107 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 107 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1445 is 9
9999 mem: storing 10 in location 1445
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1445 is 10
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1453
 106 run: jump-unless continue?, 
9999 mem: location 1453 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1443 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1273 is 1012
9999 mem: location 1277 is 6
9999 mem: location 1275 is 0
9999 mem: location 1275 is 0
9999 mem: location 1276 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 345 -> 346
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1372
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1374
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1375
 106 run: jump-if screen, 
9999 mem: location 1371 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 6
9999 mem: location 1373 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 346 -> 347
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1612
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 107 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 107 run: *row <- copy new-row
9999 mem: location 1612 is 6
9999 mem: location 1614 is 1015
9999 mem: storing 6 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 107 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 347 -> 346
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 346 -> 347
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1371 is 1012
9999 mem: location 1373 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 347 -> 348
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 107 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 348 -> 349
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 60 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 254 -> 255
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 60
9999 mem: storing 1140 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 32
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1140
9999 mem: location 1140 is 32
9999 mem: location 1141 is 7
9999 mem: location 1398 is 1140
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1141
9999 mem: storing 7 in location 1141
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 349 -> 348
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 348 -> 349
 107 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 349 -> 350
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 61 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 255 -> 256
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 61
9999 mem: storing 1142 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 32
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1142
9999 mem: location 1142 is 32
9999 mem: location 1143 is 7
9999 mem: location 1398 is 1142
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1143
9999 mem: storing 7 in location 1143
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 350 -> 349
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 349 -> 350
 107 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 350 -> 351
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 62 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 256 -> 257
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 62
9999 mem: storing 1144 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 32
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1144
9999 mem: location 1144 is 32
9999 mem: location 1145 is 7
9999 mem: location 1398 is 1144
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1145
9999 mem: storing 7 in location 1145
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 351 -> 350
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 350 -> 351
 107 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 351 -> 352
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 63 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 257 -> 258
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 63
9999 mem: storing 1146 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 32
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1146
9999 mem: location 1146 is 32
9999 mem: location 1147 is 7
9999 mem: location 1398 is 1146
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1147
9999 mem: storing 7 in location 1147
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 352 -> 351
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 351 -> 352
 107 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 352 -> 353
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 64 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 258 -> 259
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 64
9999 mem: storing 1148 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 32
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1148
9999 mem: location 1148 is 32
9999 mem: location 1149 is 7
9999 mem: location 1398 is 1148
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1149
9999 mem: storing 7 in location 1149
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 353 -> 352
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 352 -> 353
 107 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 353 -> 354
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 65 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 259 -> 260
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 65
9999 mem: storing 1150 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 32
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1150
9999 mem: location 1150 is 32
9999 mem: location 1151 is 7
9999 mem: location 1398 is 1150
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1151
9999 mem: storing 7 in location 1151
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 354 -> 353
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 353 -> 354
 107 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 354 -> 355
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 66 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 260 -> 261
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 66
9999 mem: storing 1152 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 32
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1152
9999 mem: location 1152 is 32
9999 mem: location 1153 is 7
9999 mem: location 1398 is 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1153
9999 mem: storing 7 in location 1153
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 355 -> 354
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 354 -> 355
 107 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 355 -> 356
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 67 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 261 -> 262
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 67
9999 mem: storing 1154 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 32
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1154
9999 mem: location 1154 is 32
9999 mem: location 1155 is 7
9999 mem: location 1398 is 1154
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1155
9999 mem: storing 7 in location 1155
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 356 -> 355
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 355 -> 356
 107 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 356 -> 357
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 68 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 262 -> 263
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 68
9999 mem: storing 1156 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 32
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1156
9999 mem: location 1156 is 32
9999 mem: location 1157 is 7
9999 mem: location 1398 is 1156
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1157
9999 mem: storing 7 in location 1157
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 357 -> 356
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 356 -> 357
 107 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 357 -> 358
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 108 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 108 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 108 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 108 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1385 is 10
9999 mem: storing 60 in location 1393
 108 run: index <- add index, *column
9999 mem: location 1393 is 60
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 69 in location 1393
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 263 -> 264
 108 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 108 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 69
9999 mem: storing 1158 in location 1398
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 32
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1399
 108 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1158
9999 mem: location 1158 is 32
9999 mem: location 1159 is 7
9999 mem: location 1398 is 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1400
 108 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1159
9999 mem: storing 7 in location 1159
 108 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 108 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 358 -> 357
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 357 -> 358
 107 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 6
9999 mem: location 1374 is 0
9999 mem: location 1375 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 358 -> 359
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1620
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1621
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1622
 107 run: row <- add row, 1
9999 mem: location 1620 is 6
9999 mem: storing 7 in location 1620
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 7
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 359 -> 360
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 7
9999 mem: location 1614 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 360 -> 359
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 359 -> 360
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1619 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1300
9999 mem: incrementing refcount of 1012: 360 -> 361
 108 run: jump-unless screen, 
9999 mem: location 1300 is 1012
9998 run: jump-unless fell through
9990 schedule: screen-height/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1300 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1301
 108 run: reply height:number
9999 mem: location 1301 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1623
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 7
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 7
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 361 -> 362
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 7
9999 mem: location 1614 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 362 -> 361
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 361 -> 362
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 362 -> 363
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 363 -> 364
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 70 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 264 -> 265
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 70
9999 mem: storing 1160 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 32
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 32
9999 mem: location 1161 is 7
9999 mem: location 1398 is 1160
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1161
9999 mem: storing 7 in location 1161
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 364 -> 363
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 363 -> 364
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 364 -> 365
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 71 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 265 -> 266
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 71
9999 mem: storing 1162 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 32
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1162
9999 mem: location 1162 is 32
9999 mem: location 1163 is 7
9999 mem: location 1398 is 1162
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1163
9999 mem: storing 7 in location 1163
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 365 -> 364
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 364 -> 365
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 365 -> 366
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 72 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 266 -> 267
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 72
9999 mem: storing 1164 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 32
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1164
9999 mem: location 1164 is 32
9999 mem: location 1165 is 7
9999 mem: location 1398 is 1164
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1165
9999 mem: storing 7 in location 1165
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 366 -> 365
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 365 -> 366
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 366 -> 367
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 73 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 267 -> 268
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 73
9999 mem: storing 1166 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 32
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1166
9999 mem: location 1166 is 32
9999 mem: location 1167 is 7
9999 mem: location 1398 is 1166
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1167
9999 mem: storing 7 in location 1167
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 367 -> 366
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 366 -> 367
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 367 -> 368
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 74 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 268 -> 269
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 74
9999 mem: storing 1168 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 32
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1168
9999 mem: location 1168 is 32
9999 mem: location 1169 is 7
9999 mem: location 1398 is 1168
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1169
9999 mem: storing 7 in location 1169
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 368 -> 367
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 367 -> 368
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 368 -> 369
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 75 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 269 -> 270
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 75
9999 mem: storing 1170 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 32
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1170
9999 mem: location 1170 is 32
9999 mem: location 1171 is 7
9999 mem: location 1398 is 1170
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1171
9999 mem: storing 7 in location 1171
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 369 -> 368
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 368 -> 369
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 369 -> 370
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 76 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 270 -> 271
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 76
9999 mem: storing 1172 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 32
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1172
9999 mem: location 1172 is 32
9999 mem: location 1173 is 7
9999 mem: location 1398 is 1172
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1173
9999 mem: storing 7 in location 1173
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 370 -> 369
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 369 -> 370
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 370 -> 371
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 77 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 271 -> 272
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 77
9999 mem: storing 1174 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 32
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1174
9999 mem: location 1174 is 32
9999 mem: location 1175 is 7
9999 mem: location 1398 is 1174
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1175
9999 mem: storing 7 in location 1175
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 371 -> 370
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 370 -> 371
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 371 -> 372
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 78 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 272 -> 273
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 78
9999 mem: storing 1176 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 32
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1176
9999 mem: location 1176 is 32
9999 mem: location 1177 is 7
9999 mem: location 1398 is 1176
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1177
9999 mem: storing 7 in location 1177
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 372 -> 371
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 371 -> 372
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 372 -> 373
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1385 is 10
9999 mem: storing 70 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 70
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 79 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 273 -> 274
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 79
9999 mem: storing 1178 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 32
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1178
9999 mem: location 1178 is 32
9999 mem: location 1179 is 7
9999 mem: location 1398 is 1178
9998 run: address to copy is 1179
9999 mem: storing 1179 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1179
9999 mem: storing 7 in location 1179
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 373 -> 372
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 372 -> 373
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 7
9999 mem: storing 8 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 8
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 8
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 373 -> 374
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 8
9999 mem: location 1614 is 1015
9999 mem: storing 8 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 374 -> 373
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 373 -> 374
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 374 -> 375
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 375 -> 376
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 80 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 274 -> 275
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 80
9999 mem: storing 1180 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 32
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1180
9999 mem: location 1180 is 32
9999 mem: location 1181 is 7
9999 mem: location 1398 is 1180
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1181
9999 mem: storing 7 in location 1181
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 376 -> 375
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 375 -> 376
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 376 -> 377
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 81 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 275 -> 276
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 81
9999 mem: storing 1182 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 32
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1182
9999 mem: location 1182 is 32
9999 mem: location 1183 is 7
9999 mem: location 1398 is 1182
9998 run: address to copy is 1183
9999 mem: storing 1183 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1183
9999 mem: storing 7 in location 1183
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 377 -> 376
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 376 -> 377
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 377 -> 378
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 82 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 276 -> 277
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 82
9999 mem: storing 1184 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 32
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1184
9999 mem: storing 1184 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1184
9999 mem: location 1184 is 32
9999 mem: location 1185 is 7
9999 mem: location 1398 is 1184
9998 run: address to copy is 1185
9999 mem: storing 1185 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1185
9999 mem: storing 7 in location 1185
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 378 -> 377
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 377 -> 378
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 378 -> 379
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 83 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 277 -> 278
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 83
9999 mem: storing 1186 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 32
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1186
9999 mem: storing 1186 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1186
9999 mem: location 1186 is 32
9999 mem: location 1187 is 7
9999 mem: location 1398 is 1186
9998 run: address to copy is 1187
9999 mem: storing 1187 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1187
9999 mem: storing 7 in location 1187
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 379 -> 378
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 378 -> 379
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 379 -> 380
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 84 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 278 -> 279
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 84
9999 mem: storing 1188 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 32
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1188
9999 mem: location 1188 is 32
9999 mem: location 1189 is 7
9999 mem: location 1398 is 1188
9998 run: address to copy is 1189
9999 mem: storing 1189 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1189
9999 mem: storing 7 in location 1189
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 380 -> 379
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 379 -> 380
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 380 -> 381
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 85 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 279 -> 280
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 85
9999 mem: storing 1190 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 32
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1190
9999 mem: storing 1190 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1190
9999 mem: location 1190 is 32
9999 mem: location 1191 is 7
9999 mem: location 1398 is 1190
9998 run: address to copy is 1191
9999 mem: storing 1191 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1191
9999 mem: storing 7 in location 1191
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 381 -> 380
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 380 -> 381
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 381 -> 382
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 86 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 280 -> 281
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 86
9999 mem: storing 1192 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 32
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1192
9999 mem: location 1192 is 32
9999 mem: location 1193 is 7
9999 mem: location 1398 is 1192
9998 run: address to copy is 1193
9999 mem: storing 1193 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1193
9999 mem: storing 7 in location 1193
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 382 -> 381
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 381 -> 382
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 382 -> 383
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 87 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 281 -> 282
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 87
9999 mem: storing 1194 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 32
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1194
9999 mem: storing 1194 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1194
9999 mem: location 1194 is 32
9999 mem: location 1195 is 7
9999 mem: location 1398 is 1194
9998 run: address to copy is 1195
9999 mem: storing 1195 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1195
9999 mem: storing 7 in location 1195
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 383 -> 382
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 382 -> 383
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 383 -> 384
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 88 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 282 -> 283
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 88
9999 mem: storing 1196 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 32
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1196
9999 mem: location 1196 is 32
9999 mem: location 1197 is 7
9999 mem: location 1398 is 1196
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1197
9999 mem: storing 7 in location 1197
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 384 -> 383
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 383 -> 384
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 384 -> 385
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 8
9999 mem: location 1385 is 10
9999 mem: storing 80 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 80
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 89 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 283 -> 284
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 89
9999 mem: storing 1198 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 32
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1198
9999 mem: location 1198 is 32
9999 mem: location 1199 is 7
9999 mem: location 1398 is 1198
9998 run: address to copy is 1199
9999 mem: storing 1199 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1199
9999 mem: storing 7 in location 1199
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 385 -> 384
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 384 -> 385
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 8
9999 mem: storing 9 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 9
9999 mem: location 1623 is 10
9999 mem: storing 0 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 0
9998 run: jump-if fell through
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1619 is 1012
9999 mem: location 1620 is 9
9999 mem: location 1621 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1611
9999 mem: incrementing refcount of 1012: 385 -> 386
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1612
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1613
 108 run: jump-unless screen, 
9999 mem: location 1611 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1614
 108 run: *row <- copy new-row
9999 mem: location 1612 is 9
9999 mem: location 1614 is 1015
9999 mem: storing 9 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1611 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1615
 108 run: *column <- copy new-column
9999 mem: location 1613 is 0
9999 mem: location 1615 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1611 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 386 -> 385
9999 mem: storing 1012 in location 1619
9999 mem: incrementing refcount of 1012: 385 -> 386
 107 run: clear-line-delimited screen, left, right
9999 mem: location 1619 is 1012
9999 mem: location 1621 is 0
9999 mem: location 1622 is 9
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 386 -> 387
 108 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1287
 108 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1288
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1289
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 108 run: jump-if bg-color-found?, 
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1290
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 0
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 387 -> 388
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 90 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 284 -> 285
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 90
9999 mem: storing 1200 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 32
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1200
9999 mem: location 1200 is 32
9999 mem: location 1201 is 7
9999 mem: location 1398 is 1200
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1201
9999 mem: storing 7 in location 1201
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1389 is 1016
9999 mem: storing 1 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 388 -> 387
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 387 -> 388
 108 run: column <- add column, 1
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 1
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 388 -> 389
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 91 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 285 -> 286
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 91
9999 mem: storing 1202 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 32
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1202
9999 mem: location 1202 is 32
9999 mem: location 1203 is 7
9999 mem: location 1398 is 1202
9998 run: address to copy is 1203
9999 mem: storing 1203 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1203
9999 mem: storing 7 in location 1203
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1389 is 1016
9999 mem: storing 2 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 389 -> 388
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 388 -> 389
 108 run: column <- add column, 1
9999 mem: location 1287 is 1
9999 mem: storing 2 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 2
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 389 -> 390
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 92 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 286 -> 287
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 92
9999 mem: storing 1204 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 32
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1204
9999 mem: location 1204 is 32
9999 mem: location 1205 is 7
9999 mem: location 1398 is 1204
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1205
9999 mem: storing 7 in location 1205
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1389 is 1016
9999 mem: storing 3 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 390 -> 389
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 389 -> 390
 108 run: column <- add column, 1
9999 mem: location 1287 is 2
9999 mem: storing 3 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 3
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 390 -> 391
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 93 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 287 -> 288
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 93
9999 mem: storing 1206 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 32
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1206
9999 mem: location 1206 is 32
9999 mem: location 1207 is 7
9999 mem: location 1398 is 1206
9998 run: address to copy is 1207
9999 mem: storing 1207 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1207
9999 mem: storing 7 in location 1207
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1389 is 1016
9999 mem: storing 4 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 391 -> 390
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 390 -> 391
 108 run: column <- add column, 1
9999 mem: location 1287 is 3
9999 mem: storing 4 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 4
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 391 -> 392
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 94 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 288 -> 289
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 94
9999 mem: storing 1208 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 32
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1208
9999 mem: location 1208 is 32
9999 mem: location 1209 is 7
9999 mem: location 1398 is 1208
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1209
9999 mem: storing 7 in location 1209
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1389 is 1016
9999 mem: storing 5 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 392 -> 391
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 391 -> 392
 108 run: column <- add column, 1
9999 mem: location 1287 is 4
9999 mem: storing 5 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 5
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 392 -> 393
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 95 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 289 -> 290
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 95
9999 mem: storing 1210 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 32
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1210
9999 mem: location 1210 is 32
9999 mem: location 1211 is 7
9999 mem: location 1398 is 1210
9998 run: address to copy is 1211
9999 mem: storing 1211 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1211
9999 mem: storing 7 in location 1211
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1389 is 1016
9999 mem: storing 6 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 393 -> 392
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 392 -> 393
 108 run: column <- add column, 1
9999 mem: location 1287 is 5
9999 mem: storing 6 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 6
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 393 -> 394
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 96 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 290 -> 291
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 96
9999 mem: storing 1212 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 32
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1212
9999 mem: location 1212 is 32
9999 mem: location 1213 is 7
9999 mem: location 1398 is 1212
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1213
9999 mem: storing 7 in location 1213
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1389 is 1016
9999 mem: storing 7 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 394 -> 393
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 393 -> 394
 108 run: column <- add column, 1
9999 mem: location 1287 is 6
9999 mem: storing 7 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 7
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 394 -> 395
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 97 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 291 -> 292
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 97
9999 mem: storing 1214 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 32
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1214
9999 mem: location 1214 is 32
9999 mem: location 1215 is 7
9999 mem: location 1398 is 1214
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1215
9999 mem: storing 7 in location 1215
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1389 is 1016
9999 mem: storing 8 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 395 -> 394
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 394 -> 395
 108 run: column <- add column, 1
9999 mem: location 1287 is 7
9999 mem: storing 8 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 8
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 395 -> 396
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 98 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 292 -> 293
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 98
9999 mem: storing 1216 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 32
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1216
9999 mem: storing 32 in location 1216
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1216
9999 mem: location 1216 is 32
9999 mem: location 1217 is 7
9999 mem: location 1398 is 1216
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1217
9999 mem: storing 7 in location 1217
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1401 is 9
9999 mem: storing 0 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 109 run: *column <- add *column, 1
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1389 is 1016
9999 mem: storing 9 in location 1016
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 396 -> 395
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 395 -> 396
 108 run: column <- add column, 1
9999 mem: location 1287 is 8
9999 mem: storing 9 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 9
9999 mem: location 1288 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1286 is 1012
9999 mem: location 1289 is 32
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 109 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 396 -> 397
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1380
 109 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1381
9999 mem: storing 1 in location 1382
 109 run: jump-if color-found?, 
9999 mem: location 1382 is 1
9998 run: jumping to instruction 7
 109 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1383
9999 mem: storing 1 in location 1384
 109 run: jump-if bg-color-found?, 
9999 mem: location 1384 is 1
9998 run: jumping to instruction 12
 109 run: trace 90, [print-character], c
9999 mem: location 1380 is 32
  90 print-character: 32 
 109 run: jump-unless screen, 
9999 mem: location 1379 is 1012
9998 run: jump-unless fell through
 109 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1385
 109 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 10
9999 mem: storing 10 in location 1386
 109 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1387
 109 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 22
 109 run: legal? <- lesser-than *row, height
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 25
 109 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1389
 109 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 29
 109 run: legal? <- lesser-than *column, width
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1385 is 10
9999 mem: storing 1 in location 1388
 109 run: jump-if legal?, 1:offset
9999 mem: location 1388 is 1
9998 run: jumping to instruction 32
 109 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1390
 109 run: jump-unless newline?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 109 run: index:number <- multiply *row, width
9999 mem: location 1387 is 1015
9999 mem: location 1015 is 9
9999 mem: location 1385 is 10
9999 mem: storing 90 in location 1393
 109 run: index <- add index, *column
9999 mem: location 1393 is 90
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 99 in location 1393
 109 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1379 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1394
9999 mem: incrementing refcount of 1018: 293 -> 294
 109 run: len:number <- length *buf
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 100 in location 1395
 109 run: backspace?:boolean <- equal c, 8
9999 mem: location 1380 is 32
9999 mem: storing 0 in location 1396
 109 run: jump-unless backspace?, 
9999 mem: location 1396 is 0
9998 run: jumping to instruction 63
 109 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1394 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1393 is 99
9999 mem: storing 1218 in location 1398
 109 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 32
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1399
 109 run: *cursor-contents <- copy c
9999 mem: location 1380 is 32
9999 mem: location 1399 is 1218
9999 mem: storing 32 in location 1218
 109 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1398 is 1218
9999 mem: location 1218 is 32
9999 mem: location 1219 is 7
9999 mem: location 1398 is 1218
9998 run: address to copy is 1219
9999 mem: storing 1219 in location 1400
 109 run: *cursor-color <- copy color
9999 mem: location 1381 is 7
9999 mem: location 1400 is 1219
9999 mem: storing 7 in location 1219
 109 run: right:number <- subtract width, 1
9999 mem: location 1385 is 10
9999 mem: storing 9 in location 1401
 109 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1389 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1401 is 9
9999 mem: storing 1 in location 1402
 109 run: jump-if at-right?, 
9999 mem: location 1402 is 1
9998 run: jumping to instruction 74
 109 run: reply screen:address:shared:screen
9999 mem: location 1379 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 397 -> 396
9999 mem: storing 1012 in location 1286
9999 mem: incrementing refcount of 1012: 396 -> 397
 108 run: column <- add column, 1
9999 mem: location 1287 is 9
9999 mem: storing 10 in location 1287
 108 run: jump 
9998 run: jumping to instruction 11
 108 run: done?:boolean <- greater-than column, right
9999 mem: location 1287 is 10
9999 mem: location 1288 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if done?, 
9999 mem: location 1292 is 1
9998 run: jumping to instruction 16
 108 run: reply screen:address:shared:screen
9999 mem: location 1286 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: row <- add row, 1
9999 mem: location 1620 is 9
9999 mem: storing 10 in location 1620
 107 run: jump 
9998 run: jumping to instruction 9
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1620 is 10
9999 mem: location 1623 is 10
9999 mem: storing 1 in location 1624
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1624 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1619 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1273 is 1012
9999 mem: location 1274 is 1257
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 397 -> 396
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 396 -> 397
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 3
9999 mem: storing 3 in location 1430
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 1429 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1431
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1427 is 1012
9999 mem: location 1430 is 3
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 397 -> 398
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1372
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1373
 105 run: jump-unless screen, 
9999 mem: location 1371 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 9
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1374
 105 run: *row <- copy new-row
9999 mem: location 1372 is 3
9999 mem: location 1374 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 10
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1371 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1375
 105 run: *column <- copy new-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1371 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 398 -> 397
9999 mem: storing 1012 in location 1427
9999 mem: incrementing refcount of 1012: 397 -> 398
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1428 is 1421
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1443
9999 mem: incrementing refcount of 1421: 5 -> 6
 105 run: jump-unless console, 
9999 mem: location 1443 is 1421
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 4
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9999 mem: storing 1422 in location 1444
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 4
9999 mem: location 1423 is 1403
9999 mem: location 1443 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1423
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1423 is 1403
9999 mem: storing 1403 in location 1445
9999 mem: incrementing refcount of 1403: 4 -> 5
 105 run: max:number <- length *buf
9999 mem: location 1445 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 4 in location 1446
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1444 is 1422
9999 mem: location 1422 is 4
9999 mem: location 1446 is 4
9999 mem: storing 1 in location 1447
 105 run: jump-unless done?, 
9999 mem: location 1447 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1297 in location 1448
9999 mem: incrementing refcount of 1297: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1448 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1443 is 1421
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1421
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: decrementing refcount of 1421: 6 -> 5
9999 mem: storing 1421 in location 1428
9999 mem: incrementing refcount of 1421: 5 -> 6
9999 mem: storing 1 in location 1436
9999 mem: storing 1 in location 1437
 104 run: jump-unless found?, 
9999 mem: location 1436 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1437 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1427 is 1012
9999 mem: location 1428 is 1421
9999 mem: location 1429 is 1257
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 2 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1265
9998 run: its type is number
9999 mem: location 1265 is 3
9999 mem: storing 3 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 1279
9999 mem: location 1259 is 1279
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: location 1264 is 4
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1652
9999 mem: location 1269 is 0
9999 mem: location 2 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1266
9998 run: its type is number
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 3  # cursor row
    4 <- 0  # cursor column (not indented)
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
