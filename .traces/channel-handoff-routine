schedule: consumer
run: 1 consumer 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 2 consumer 1: (((1 channel-address)) <- ((init-channel)) ((3 literal)))
run: 3 init-channel 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 3
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 3 1
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 4
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1002 to 1062
run: 14 consumer 2: (((fork)) ((producer fn)) ((default-scope address)))
run: 15 consumer 3: (((1 tagged-value) (raw)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 16 read 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 17 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1076 to 1062
run: 18 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 19 empty? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1105 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 20 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1107 to 0
setm: ((1 channel)): setting 1108 to 0
setm: ((1 channel)): setting 1109 to 1065
run: 21 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1107 integer) (raw))
sizeof: ((1107 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1110 to 0
run: 22 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1111 to 0
run: 23 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1112 to t
run: 24 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 1077 to t
run: 25 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
jump: checking that t is not t
run: 26 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1078 to 1063
run: 27 read 5: (((sleep)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: producer
run: 28 producer 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 2000 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 29 producer 1: (((1 integer-address)) <- ((new)) ((integer literal)))
sizeof: ((_ integer))
run: 2031 => ((1 integer-address))
setm: ((1 integer-address)) <= 2031
setm: size of ((1 integer-address)) is 1
setm: ((1 integer-address)): setting 2002 to 2031
run: 30 producer 2: (((1 integer-address) (deref)) <- ((copy)) ((24 literal)))
run: 24 => ((1 integer-address) (deref))
setm: ((1 integer-address) (deref)) <= 24
setm: size of ((1 integer-address) (deref)) is 1
setm: ((1 integer-address) (deref)): setting 2031 to 24
run: 31 producer 3: (((2 tagged-value)) <- ((save-type)) ((1 integer-address)))
m: ((1 integer-address))
sizeof: ((1 integer-address))
run: #(tagged record (integer-address 2031)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (integer-address 2031))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 2003 to integer-address
setm: ((2 tagged-value)): setting 2004 to 2031
run: 32 producer 4: (((1 channel-address) (space global) (deref)) <- ((write)) ((1 channel-address) (space global)) ((2 tagged-value)))
m: ((1 channel-address) (space global))
sizeof: ((1 channel-address) (space global))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 33 write 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 2032 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 34 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (integer-address 2031 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 2034 to 1062
run: 35 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (integer-address 2031 . nil)))
run: #(tagged record (integer-address 2031 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (integer-address 2031 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 2035 to integer-address
setm: ((2 tagged-value)): setting 2036 to 2031
run: 36 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 37 full? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 2063 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 38 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2065 to 0
setm: ((1 channel)): setting 2066 to 0
setm: ((1 channel)): setting 2067 to 1065
run: 39 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((2066 integer) (raw))
sizeof: ((2066 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2068 to 0
run: 40 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 0 1
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 2068 to 1
run: 41 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 42 capacity 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 2094 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 43 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 2096 to 0
setm: ((1 channel)): setting 2097 to 0
setm: ((1 channel)): setting 2098 to 1065
run: 44 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((2098 tagged-value-array-address) (raw))
sizeof: ((2098 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 2099 to 1065
run: 45 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2100 to 4
run: 46 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 2069 to 4
run: 47 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 2070 to t
run: 48 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
jump: checking that t is t
jump: jumping to 8
run: 49 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((2065 integer) (raw))
sizeof: ((2065 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 2071 to 0
run: 50 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 2072 to nil
run: 51 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 2037 to nil
run: 52 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
jump: checking that nil is not t
jump: jumping to 7
run: 53 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 2039 to 1065
run: 54 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 2040 to 1063
run: 55 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 2041 to 1066
run: 56 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer-address 2031 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (integer-address 2031 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to integer-address
setm: ((8 tagged-value-address) (deref)): setting 1067 to 2031
run: 57 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
add: 0 1
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 58 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 2042 to 4
run: 59 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 2043 to t
run: 60 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is t
jump: jumping to 16
run: 61 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (space global) (deref)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (space global) (deref))
setm: ((1 channel-address) (space global) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (space global) (deref)) is 3
sizeof: ((1 channel-address) (space global) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (space global) (deref)): setting 1062 to 0
setm: ((1 channel-address) (space global) (deref)): setting 1063 to 1
setm: ((1 channel-address) (space global) (deref)): setting 1064 to 1065
schedule: done with routine
schedule: waking up read
schedule: read
run: 62 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1079 to 1062
run: 63 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 1080 to 1065
run: 64 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer-address 2031 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (integer-address 2031 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 1081 to integer-address
setm: ((6 tagged-value)): setting 1082 to 2031
run: 65 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
add: 0 1
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 66 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1083 to 4
run: 67 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1084 to t
run: 68 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
jump: checking that t is t
jump: jumping to 14
run: 69 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value) (raw)))
reply: #(tagged record (integer-address 2031 . nil)) => ((1 tagged-value) (raw))
setm: ((1 tagged-value) (raw)) <= #(tagged record (integer-address 2031 . nil))
setm: size of ((1 tagged-value) (raw)) is 2
sizeof: ((1 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value) (raw)): setting 1 to integer-address
setm: ((1 tagged-value) (raw)): setting 2 to 2031
schedule: done with routine
