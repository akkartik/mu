9991 load: --- defining main
9993 parse: instruction: create-array
9993 parse:   product: {"1": <"array" : <"number" : <"3" : <>>>>}
9992 load: after rewriting: 1:array:number:3 <- create-array 
9993 parse: instruction: copy
9993 parse:   ingredient: {"14": "literal"}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- copy 14
9993 parse: instruction: copy
9993 parse:   ingredient: {"15": "literal"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- copy 15
9993 parse: instruction: copy
9993 parse:   ingredient: {"16": "literal"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- copy 16
9993 parse: instruction: stash
9993 parse:   ingredient: {"foo:": "literal-string"}
9993 parse:   ingredient: {"1": <"array" : <"number" : <"3" : <>>>>}
9992 load: after rewriting: stash [foo:], 1:array:number:3
9999 after-brace: recipe main
9999 after-brace: create-array ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: stash ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:array:number:3 <- create-array 
9999 run: creating array of size 4

9999 mem: storing 3 in location 1
 102 run: 2:number <- copy 14
9999 mem: storing 14 in location 2
 102 run: 3:number <- copy 15
9999 mem: storing 15 in location 3
 102 run: 4:number <- copy 16
9999 mem: storing 16 in location 4
 102 run: stash [foo:], 1:array:number:3
9999 mem: location 1 is 3
9999 mem: location 2 is 14
9999 mem: location 3 is 15
9999 mem: location 4 is 16
   2 app: foo: 3 14 15 16 
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
