 102 run: assume-console [
    left-click 1, 0
    press left-arrow
    type [0]
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 1, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"left-arrow": <>}
9992 load: after rewriting: press left-arrow
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'left-click' event starting at 1317
9999 mem: storing 'press' event starting at 1321
9999 mem: storing 'type' event starting at 1325
9999 mem: storing 'text' tag at 1325
9999 mem: storing character 48 at 1326
9999 mem: storing console in 1329
9999 mem: storing console data in 1331
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1329
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1332
9999 mem: storing 14 in location 1333
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1335
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1336
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1337
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1252
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1253
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 105 run: jump-unless screen, 
9999 mem: location 1252 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1255
 105 run: *row <- copy new-row
9999 mem: location 1253 is 1
9999 mem: location 1255 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1256
 105 run: *column <- copy new-column
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1252 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1335
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1287
 105 run: jump-unless console, 
9999 mem: location 1287 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 0
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1288
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 0
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1315
9999 mem: storing 1315 in location 1289
 105 run: max:number <- length *buf
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 3 in location 1290
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 0
9999 mem: location 1290 is 3
9999 mem: storing 0 in location 1291
 105 run: jump-unless done?, 
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 0
9998 run: address to copy is 1317
9998 run: its type is event
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 mem: storing 2 in location 1293
9999 mem: storing 65513 in location 1294
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 0
9999 mem: location 1288 is 1330
9999 mem: storing 1 in location 1330
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1293 is 2
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 1
9999 mem: location 1296 is 0
9999 mem: location 1287 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1340
9999 mem: storing 65513 in location 1341
9999 mem: storing 1 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1329 in location 1336
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 2
9999 mem: location 1341 is 65513
9999 mem: location 1342 is 1
9999 mem: location 1343 is 0
9999 mem: storing 1341 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 1341
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1000
9999 mem: location 1346 is 1341
9999 mem: location 1341 is 65513
9999 mem: location 1342 is 1
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1223
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1224
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1225
9999 mem: storing 1 in location 1226
9999 mem: storing 0 in location 1227
 105 run: jump-if editor, 1:offset
9999 mem: location 1224 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1225 is 65513
9999 mem: location 1226 is 1
9999 mem: location 1227 is 0
9998 run: address to copy is 1226
9998 run: its type is number
9999 mem: location 1226 is 1
9999 mem: storing 1 in location 1228
 105 run: jump-if click-row, 1:offset
9999 mem: location 1228 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1225 is 65513
9999 mem: location 1226 is 1
9999 mem: location 1227 is 0
9998 run: address to copy is 1227
9998 run: its type is number
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1229
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1230
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1231
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1231 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1232
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1229 is 0
9999 mem: location 1232 is 9
9999 mem: storing 0 in location 1233
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1233 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1234
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1235
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1165
9999 mem: storing 1165 in location 1236
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1223 is 1012
9999 mem: location 1224 is 1000
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1348
9999 mem: storing 26 in location 1349
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1351
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1352
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1353
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1354
 106 run: jump-if editor, 1:offset
9999 mem: location 1352 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1355
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1356
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1351 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1187
 107 run: reply height:number
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1357
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1165
9999 mem: storing 1165 in location 1358
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1358 is 1165
9999 mem: storing 1165 in location 1359
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 0
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1179
9999 mem: storing 1179 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1358
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1360
 106 run: column:number <- copy left
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1361
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1362
 106 run: *cursor-row <- copy target-row
9999 mem: location 1353 is 1
9999 mem: location 1362 is 1007
9999 mem: storing 1 in location 1007
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1363
 106 run: *cursor-column <- copy target-column
9999 mem: location 1354 is 0
9999 mem: location 1363 is 1008
9999 mem: storing 0 in location 1008
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1352 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1364
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 1
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 1
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1361 is 0
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 1 in location 1367
 106 run: jump-unless at-cursor?, 
9999 mem: location 1367 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1359 is 1165
9999 mem: location 1364 is 1004
9999 mem: storing 1165 in location 1004
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1165
9999 mem: location 1358 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is character
9999 mem: location 1180 is 97
9999 mem: storing 97 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 97
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 0
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1165
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 0
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1179
9999 mem: storing 1179 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 0
9999 mem: storing 1 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1188
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 1
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 1
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1361 is 1
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1367
 106 run: jump-unless at-cursor?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1358 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 98
9999 mem: storing 98 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 98
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 1
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1165
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 1
9999 mem: storing 2 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1192
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 1
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 1
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1361 is 2
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1367
 106 run: jump-unless at-cursor?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1358 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is character
9999 mem: location 1193 is 99
9999 mem: storing 99 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 99
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 2
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 2
9999 mem: storing 3 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1196
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 1
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 1
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1361 is 3
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1367
 106 run: jump-unless at-cursor?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1358 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is character
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 10
9999 mem: storing 1 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 1
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1361 is 3
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1370
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1360 is 1
9999 mem: storing 2 in location 1360
 106 run: column <- copy left
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1361
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1359
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1200
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 2
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 2
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1358 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is character
9999 mem: location 1201 is 100
9999 mem: storing 100 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 100
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 0
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 0
9999 mem: storing 1 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1204
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 2
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 2
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1358 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is character
9999 mem: location 1205 is 101
9999 mem: storing 101 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 101
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 1
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: storing 1208 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 1
9999 mem: storing 2 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1208
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 2
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 2
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1358 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is character
9999 mem: location 1209 is 102
9999 mem: storing 102 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 102
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 2
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: storing 1212 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: storing 1208 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 2
9999 mem: storing 3 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1212
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 2
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 2
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 10
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1358 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 10
9999 mem: storing 10 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 10
9999 mem: storing 1 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 2
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1360 is 2
9999 mem: storing 3 in location 1360
 106 run: column <- copy left
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1361
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 10
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: storing 1212 in location 1359
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1358 is 1216
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1360 is 3
9999 mem: location 1357 is 5
9999 mem: storing 0 in location 1365
 106 run: jump-if off-screen?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 3
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1358 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 103
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1358 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is character
9999 mem: location 1217 is 103
9999 mem: storing 103 in location 1368
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1368 is 103
9999 mem: storing 0 in location 1369
 106 run: jump-unless newline?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1361 is 0
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1371
 106 run: jump-unless at-right?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1358 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 103
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1358
 106 run: prev <- next_2 prev
9999 mem: location 1359 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 10
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1359
 106 run: column <- add column, 1
9999 mem: location 1361 is 0
9999 mem: storing 1 in location 1361
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1360 is 3
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1366
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1361 is 1
9999 mem: location 1363 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1372
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1366 is 0
9999 mem: location 1372 is 0
9999 mem: storing 0 in location 1373
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1360 is 3
9999 mem: location 1362 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1374
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: storing 0 in location 1375
 106 run: jump-unless before-cursor?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1352 is 1000
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1224
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1237
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1238
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1239
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1224 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1165
9999 mem: storing 1165 in location 1240
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1237 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1242
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1234 is 1
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1165
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1165
9999 mem: location 1237 is 0
9999 mem: location 1242 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1242 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1165 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1165 in location 1127
9999 mem: storing 0 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1224 is 1000
9999 mem: location 1242 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1376
9999 mem: storing 5 in location 1377
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1379
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1380
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1381
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1380 is 1120
9999 mem: location 1381 is 1010
9999 mem: location 1010 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1252
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1253
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1383
9999 mem: storing 1383 in location 1254
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1254 is 1383
9999 mem: skipping refcount at 1383
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1384 is 0
9999 mem: location 1385 is 0
9999 mem: location 1254 is 1383
9999 mem: skipping refcount at 1383
9998 run: address to copy is 1384
9999 mem: storing 1384 in location 1255
 107 run: *val <- copy x
9999 mem: location 1252 is 1120
9999 mem: location 1255 is 1384
9999 mem: storing 1120 in location 1384
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1254 is 1383
9999 mem: skipping refcount at 1383
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1384 is 1120
9999 mem: location 1385 is 0
9999 mem: location 1254 is 1383
9999 mem: skipping refcount at 1383
9999 type: type deduced to be address$
9998 run: address to copy is 1385
9999 mem: storing 1385 in location 1256
 107 run: *next <- copy in
9999 mem: location 1253 is 0
9999 mem: location 1256 is 1385
9999 mem: storing 0 in location 1385
 107 run: reply result
9999 mem: location 1254 is 1383
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1383
9999 mem: location 1381 is 1010
9999 mem: storing 1383 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1382
 106 run: *redo <- copy 0
9999 mem: location 1382 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1379 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1224
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1252
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1253
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 105 run: jump-unless screen, 
9999 mem: location 1252 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1255
 105 run: *row <- copy new-row
9999 mem: location 1253 is 1
9999 mem: location 1255 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1256
 105 run: *column <- copy new-column
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1252 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1335
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1287
 105 run: jump-unless console, 
9999 mem: location 1287 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1288
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 1
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1315
9999 mem: storing 1315 in location 1289
 105 run: max:number <- length *buf
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 3 in location 1290
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 1
9999 mem: location 1290 is 3
9999 mem: storing 0 in location 1291
 105 run: jump-unless done?, 
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 1
9998 run: address to copy is 1321
9998 run: its type is event
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65515
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1293
9999 mem: storing 65515 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 1
9999 mem: location 1288 is 1330
9999 mem: storing 2 in location 1330
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1293 is 1
9999 mem: location 1294 is 65515
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1287 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1340
9999 mem: storing 65515 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1329 in location 1336
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65515
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1000
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65515
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1386
9999 mem: storing 85 in location 1387
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1389
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1390
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1391
9999 mem: storing 65515 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1395
 105 run: jump-if editor, 1:offset
9999 mem: location 1390 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1389 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 106 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1187
 106 run: reply width:number
9999 mem: location 1187 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1396
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1389 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 106 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1187
 106 run: reply height:number
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1397
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1398
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1399
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1400
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1401
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1402
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1401 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1403
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1402 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1404
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1391 is 1
9999 mem: location 1392 is 65515
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: storing 0 in location 1405
 105 run: jump-unless c, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1391 is 1
9999 mem: location 1392 is 65515
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: storing 1392 in location 1459
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1459 is 1392
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1422
 105 run: jump-unless page-up?, 
9999 mem: location 1422 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1438
 105 run: jump-unless page-down?, 
9999 mem: location 1438 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1445
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1445 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1446
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1446 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1460
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 0 in location 1461
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1461 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1459 is 1392
9999 mem: location 1392 is 65515
9999 mem: storing 1 in location 1462
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1462 is 1
9998 run: jump-unless fell through
 105 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 105 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1400 is 1004
9999 mem: location 1004 is 1165
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1186
 106 run: jump-if in, 1:offset
9999 mem: location 1186 is 1165
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 0
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1187
 106 run: reply result
9999 mem: location 1187 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1463
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1395
 105 run: jump-if prev, 1:offset
9999 mem: location 1463 is 0
9998 run: jump-if fell through
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1389 is 1012
9999 mem: location 1390 is 1000
9999 mem: location 1395 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1012 in location 1335
9999 mem: storing 1000 in location 1337
9999 mem: storing 0 in location 1347
 104 run: jump-unless go-render?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1252
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1253
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 105 run: jump-unless screen, 
9999 mem: location 1252 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1255
 105 run: *row <- copy new-row
9999 mem: location 1253 is 1
9999 mem: location 1255 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1256
 105 run: *column <- copy new-column
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1252 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1335
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1287
 105 run: jump-unless console, 
9999 mem: location 1287 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1288
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1315
9999 mem: storing 1315 in location 1289
 105 run: max:number <- length *buf
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 3 in location 1290
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 2
9999 mem: location 1290 is 3
9999 mem: storing 0 in location 1291
 105 run: jump-unless done?, 
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 2
9998 run: address to copy is 1325
9998 run: its type is event
9999 mem: location 1325 is 0
9999 mem: location 1326 is 48
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: storing 0 in location 1293
9999 mem: storing 48 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 2
9999 mem: location 1288 is 1330
9999 mem: storing 3 in location 1330
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1293 is 0
9999 mem: location 1294 is 48
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1287 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1340
9999 mem: storing 48 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1329 in location 1336
9999 mem: storing 1 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1340 is 0
9999 mem: location 1341 is 48
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless t, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1335 is 1012
9999 mem: location 1337 is 1000
9999 mem: location 1340 is 0
9999 mem: location 1341 is 48
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1389
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1390
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1391
9999 mem: storing 48 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1395
 105 run: jump-if editor, 1:offset
9999 mem: location 1390 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1389 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 106 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1187
 106 run: reply width:number
9999 mem: location 1187 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1396
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1389 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 106 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1187
 106 run: reply height:number
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1397
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1398
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1399
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1400
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1401
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1402
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1401 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1403
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1402 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1404
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1391 is 0
9999 mem: location 1392 is 48
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: storing 1392 in location 1405
 105 run: jump-unless c, 
9999 mem: location 1405 is 1392
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1406
 105 run: jump-unless redo?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1417
 105 run: jump-unless undo?, 
9999 mem: location 1417 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1422
 105 run: jump-unless page-up?, 
9999 mem: location 1422 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1438
 105 run: jump-unless page-down?, 
9999 mem: location 1438 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1439
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1439 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1444
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1444 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1445
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1445 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1446
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1446 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1447
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1447 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1451
 105 run: jump-unless tab?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 0 in location 1455
 105 run: jump-unless newline?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: storing 1 in location 1458
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1395
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1458 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1165
9999 mem: storing 1165 in location 1440
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1400 is 1004
9999 mem: location 1004 is 1165
9999 mem: storing 1165 in location 1452
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1390 is 1000
9999 mem: location 1405 is 1392
9999 mem: location 1392 is 48
9999 mem: location 1389 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1473
9999 mem: storing 31 in location 1474
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1476
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1477
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1478
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1165
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1479
 106 run: insert_2 c, *before-cursor
9999 mem: location 1477 is 48
9999 mem: location 1479 is 1004
9999 mem: location 1004 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1159
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1160
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1506
9999 mem: storing 1506 in location 1161
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9998 run: address to copy is 1507
9999 mem: storing 1507 in location 1162
 107 run: *val <- copy x
9999 mem: location 1159 is 48
9999 mem: location 1162 is 1507
9999 mem: storing 48 in location 1507
9990 schedule: insert_2/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1160 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 0
9999 mem: location 1160 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1179
9999 mem: storing 1179 in location 1163
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1160 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 0
9999 mem: location 1160 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1164
 107 run: *y <- copy new-node
9999 mem: location 1161 is 1506
9999 mem: location 1164 is 1167
9999 mem: storing 1506 in location 1167
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9999 type: type deduced to be character$
9998 run: address to copy is 1509
9999 mem: storing 1509 in location 1164
 107 run: *y <- copy in
9999 mem: location 1160 is 1165
9999 mem: location 1164 is 1509
9999 mem: storing 1165 in location 1509
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 0
9999 mem: location 1509 is 1165
9999 mem: location 1161 is 1506
9999 mem: skipping refcount at 1506
9999 type: type deduced to be character$
9998 run: address to copy is 1508
9999 mem: storing 1508 in location 1164
 107 run: *y <- copy next-node
9999 mem: location 1163 is 1179
9999 mem: location 1164 is 1508
9999 mem: storing 1179 in location 1508
 107 run: jump-if next-node, 1:offset
9999 mem: location 1163 is 1179
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1163 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1165
9999 mem: location 1163 is 1179
9999 mem: skipping refcount at 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1164
 107 run: *y <- copy new-node
9999 mem: location 1161 is 1506
9999 mem: location 1164 is 1182
9999 mem: storing 1506 in location 1182
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1160 is 1165
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1479 is 1004
9999 mem: location 1004 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1506
9999 mem: location 1168 is 0
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1506
9999 mem: storing 1506 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1506
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1506
9999 mem: location 1479 is 1004
9999 mem: storing 1506 in location 1004
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1480
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1481
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1482
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1476 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1483
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1480 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1484
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1481 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1485
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1478 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1187
 107 run: reply width:number
9999 mem: location 1187 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1486
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1478 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1187
 107 run: reply height:number
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1487
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1483 is 9
9999 mem: storing 8 in location 1488
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1481 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1488 is 8
9999 mem: storing 0 in location 1489
 106 run: jump-unless at-wrap?, 
9999 mem: location 1489 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1481 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1481 is 1008
9999 mem: storing 1 in location 1008
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1479 is 1004
9999 mem: location 1004 is 1506
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1506 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1506
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 1179
9999 mem: location 1509 is 1165
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: type deduced to be character$
9998 run: address to copy is 1508
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1508 is 1179
9999 mem: storing 1179 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1496
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1496 is 1179
9999 mem: storing 0 in location 1497
 106 run: jump-unless at-end?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1496 is 1179
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1481 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1486 is 10
9999 mem: storing 0 in location 1500
 106 run: jump-if at-right?, 
9999 mem: location 1500 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1479 is 1004
9999 mem: location 1004 is 1506
9999 mem: storing 1506 in location 1502
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1478 is 1012
9999 mem: location 1484 is 1
9999 mem: location 1485 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1252
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1253
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless screen, 
9999 mem: location 1252 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1255
 107 run: *row <- copy new-row
9999 mem: location 1253 is 1
9999 mem: location 1255 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1256
 107 run: *column <- copy new-column
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1252 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1485 is 0
9999 mem: storing 0 in location 1503
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1495
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1503 is 0
9999 mem: location 1483 is 9
9999 mem: storing 0 in location 1500
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1500 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1502 is 1506
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1502 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 1179
9999 mem: location 1509 is 1165
9999 mem: location 1502 is 1506
9999 mem: skipping refcount at 1506
9998 run: address to copy is 1507
9998 run: its type is character
9999 mem: location 1507 is 48
9999 mem: storing 48 in location 1504
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1504 is 48
9999 mem: storing 0 in location 1505
 106 run: jump-if at-newline?, 
9999 mem: location 1505 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1478 is 1012
9999 mem: location 1504 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1261
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1262
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 107 run: trace 90, [print-character], c
9999 mem: location 1261 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1266
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1267
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1268
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1270
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1261 is 48
9999 mem: storing 0 in location 1271
 107 run: jump-unless newline?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: index <- add index, *column
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1274
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1275
 107 run: len:number <- length *buf
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1276
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1261 is 48
9999 mem: storing 0 in location 1277
 107 run: jump-unless backspace?, 
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1274 is 10
9999 mem: storing 1040 in location 1279
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1279 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1279 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1280
 107 run: *cursor-contents <- copy c
9999 mem: location 1261 is 48
9999 mem: location 1280 is 1040
9999 mem: storing 48 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1279 is 1040
9999 mem: location 1040 is 48
9999 mem: location 1041 is 7
9999 mem: location 1279 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1281
 107 run: *cursor-color <- copy color
9999 mem: location 1262 is 7
9999 mem: location 1281 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1282
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1282 is 9
9999 mem: storing 0 in location 1283
 107 run: jump-if at-right?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1503 is 0
9999 mem: storing 1 in location 1503
 106 run: curr <- next_2 curr
9999 mem: location 1502 is 1506
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1506 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1506
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 1179
9999 mem: location 1509 is 1165
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: type deduced to be character$
9998 run: address to copy is 1508
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1508 is 1179
9999 mem: storing 1179 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1502
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1495
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1503 is 1
9999 mem: location 1483 is 9
9999 mem: storing 0 in location 1500
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1500 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1502 is 1179
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1502 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1506
9999 mem: location 1502 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is character
9999 mem: location 1180 is 97
9999 mem: storing 97 in location 1504
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1504 is 97
9999 mem: storing 0 in location 1505
 106 run: jump-if at-newline?, 
9999 mem: location 1505 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1478 is 1012
9999 mem: location 1504 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1261
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1262
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 107 run: trace 90, [print-character], c
9999 mem: location 1261 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1266
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1267
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1268
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1270
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1261 is 97
9999 mem: storing 0 in location 1271
 107 run: jump-unless newline?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: index <- add index, *column
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1274
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1275
 107 run: len:number <- length *buf
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1276
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1261 is 97
9999 mem: storing 0 in location 1277
 107 run: jump-unless backspace?, 
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1274 is 11
9999 mem: storing 1042 in location 1279
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1279 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1279 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1280
 107 run: *cursor-contents <- copy c
9999 mem: location 1261 is 97
9999 mem: location 1280 is 1042
9999 mem: storing 97 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1279 is 1042
9999 mem: location 1042 is 97
9999 mem: location 1043 is 7
9999 mem: location 1279 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1281
 107 run: *cursor-color <- copy color
9999 mem: location 1262 is 7
9999 mem: location 1281 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1282
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1282 is 9
9999 mem: storing 0 in location 1283
 107 run: jump-if at-right?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1503 is 1
9999 mem: storing 2 in location 1503
 106 run: curr <- next_2 curr
9999 mem: location 1502 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1506
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1502
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1495
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1503 is 2
9999 mem: location 1483 is 9
9999 mem: storing 0 in location 1500
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1500 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1502 is 1188
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1502 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1502 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 98
9999 mem: storing 98 in location 1504
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1504 is 98
9999 mem: storing 0 in location 1505
 106 run: jump-if at-newline?, 
9999 mem: location 1505 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1478 is 1012
9999 mem: location 1504 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1261
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1262
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 107 run: trace 90, [print-character], c
9999 mem: location 1261 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1266
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1267
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1268
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1270
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1261 is 98
9999 mem: storing 0 in location 1271
 107 run: jump-unless newline?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: index <- add index, *column
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1274
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1275
 107 run: len:number <- length *buf
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1276
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1261 is 98
9999 mem: storing 0 in location 1277
 107 run: jump-unless backspace?, 
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1274 is 12
9999 mem: storing 1044 in location 1279
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1279 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1279 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1280
 107 run: *cursor-contents <- copy c
9999 mem: location 1261 is 98
9999 mem: location 1280 is 1044
9999 mem: storing 98 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1279 is 1044
9999 mem: location 1044 is 98
9999 mem: location 1045 is 7
9999 mem: location 1279 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1281
 107 run: *cursor-color <- copy color
9999 mem: location 1262 is 7
9999 mem: location 1281 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1282
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1282 is 9
9999 mem: storing 0 in location 1283
 107 run: jump-if at-right?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1503 is 2
9999 mem: storing 3 in location 1503
 106 run: curr <- next_2 curr
9999 mem: location 1502 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1502
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1495
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1503 is 3
9999 mem: location 1483 is 9
9999 mem: storing 0 in location 1500
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1500 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1502 is 1192
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1502 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1502 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is character
9999 mem: location 1193 is 99
9999 mem: storing 99 in location 1504
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1504 is 99
9999 mem: storing 0 in location 1505
 106 run: jump-if at-newline?, 
9999 mem: location 1505 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1478 is 1012
9999 mem: location 1504 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1261
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if color-found?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1262
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if bg-color-found?, 
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1264
 107 run: trace 90, [print-character], c
9999 mem: location 1261 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1266
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1267
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1268
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1270
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if legal?, 1:offset
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1271
 107 run: jump-unless newline?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1268 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: index <- add index, *column
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1274
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1275
 107 run: len:number <- length *buf
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1276
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1277
 107 run: jump-unless backspace?, 
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1275 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1274 is 13
9999 mem: storing 1046 in location 1279
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1279 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1279 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1280
 107 run: *cursor-contents <- copy c
9999 mem: location 1261 is 99
9999 mem: location 1280 is 1046
9999 mem: storing 99 in location 1046
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1279 is 1046
9999 mem: location 1046 is 99
9999 mem: location 1047 is 7
9999 mem: location 1279 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1281
 107 run: *cursor-color <- copy color
9999 mem: location 1262 is 7
9999 mem: location 1281 is 1047
9999 mem: storing 7 in location 1047
 107 run: right:number <- subtract width, 1
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1282
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1282 is 9
9999 mem: storing 0 in location 1283
 107 run: jump-if at-right?, 
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1270 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1503 is 3
9999 mem: storing 4 in location 1503
 106 run: curr <- next_2 curr
9999 mem: location 1502 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
 107 run: jump-if in, 1:offset
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1187
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1502
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1495
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1503 is 4
9999 mem: location 1483 is 9
9999 mem: storing 0 in location 1500
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1500 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1502 is 1196
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1502 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 10
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1502 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is character
9999 mem: location 1197 is 10
9999 mem: storing 10 in location 1504
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1504 is 10
9999 mem: storing 1 in location 1505
 106 run: jump-if at-newline?, 
9999 mem: location 1505 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1495
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1476 is 1000
9999 mem: location 1478 is 1012
9999 mem: location 1495 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: storing 1000 in location 1390
9999 mem: storing 1012 in location 1389
9999 mem: storing 0 in location 1395
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1165
9999 mem: storing 1165 in location 1442
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1409
 105 run: jump-unless *undo, 
9999 mem: location 1409 is 1010
9999 mem: location 1010 is 1383
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1409 is 1010
9999 mem: location 1010 is 1383
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1383 in location 1186
 106 run: result <- get *in, value:offset
9999 mem: location 1186 is 1383
9999 mem: skipping refcount at 1383
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1384 is 1120
9999 mem: location 1385 is 0
9999 mem: location 1186 is 1383
9999 mem: skipping refcount at 1383
9998 run: address to copy is 1384
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1384 is 1120
9999 mem: storing 1120 in location 1187
 106 run: reply result:_elem
9999 mem: location 1187 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1408
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1165
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1165
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1415
 105 run: jump-unless typing, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1452 is 1165
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1186
 106 run: jump-if in, 1:offset
9999 mem: location 1186 is 1165
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1506
9999 mem: location 1168 is 0
9999 mem: location 1186 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1506
9999 mem: storing 1506 in location 1187
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1506
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1506
9999 mem: storing 1506 in location 1416
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1416 is 1506
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1506 in location 1186
 106 run: jump-if in, 1:offset
9999 mem: location 1186 is 1506
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1507 is 48
9999 mem: location 1508 is 1179
9999 mem: location 1509 is 1165
9999 mem: location 1186 is 1506
9999 mem: skipping refcount at 1506
9999 type: type deduced to be character$
9998 run: address to copy is 1508
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1508 is 1179
9999 mem: storing 1179 in location 1187
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1454
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1510
9999 mem: storing 1510 in location 1408
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1403 is 1
9999 mem: location 1404 is 0
9999 mem: location 1440 is 1165
9999 mem: location 1401 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1402 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1442 is 1165
9999 mem: location 1416 is 1506
9999 mem: location 1454 is 1179
9999 mem: location 1408 is 1510
9999 mem: skipping refcount at 1510
9999 mem: location 1408 is 1510
9999 mem: skipping refcount at 1510
9999 mem: storing 0 in location 1511
9999 mem: storing 1 in location 1512
9999 mem: storing 0 in location 1513
9999 mem: storing 1165 in location 1514
9999 mem: storing 1 in location 1515
9999 mem: storing 1 in location 1516
9999 mem: storing 1165 in location 1517
9999 mem: storing 1506 in location 1518
9999 mem: storing 1179 in location 1519
9999 mem: storing 1 in location 1520
 105 run: editor <- add-operation editor, op
9999 mem: location 1390 is 1000
9999 mem: location 1408 is 1510
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1379
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1510 in location 1380
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1383
9999 mem: location 1011 is 0
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1381
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1380 is 1510
9999 mem: location 1381 is 1010
9999 mem: location 1010 is 1383
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1510 in location 1252
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1383 in location 1253
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1522
9999 mem: storing 1522 in location 1254
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1254 is 1522
9999 mem: skipping refcount at 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1254 is 1522
9999 mem: skipping refcount at 1522
9998 run: address to copy is 1523
9999 mem: storing 1523 in location 1255
 107 run: *val <- copy x
9999 mem: location 1252 is 1510
9999 mem: location 1255 is 1523
9999 mem: storing 1510 in location 1523
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1254 is 1522
9999 mem: skipping refcount at 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1523 is 1510
9999 mem: location 1524 is 0
9999 mem: location 1254 is 1522
9999 mem: skipping refcount at 1522
9999 type: type deduced to be address$
9998 run: address to copy is 1524
9999 mem: storing 1524 in location 1256
 107 run: *next <- copy in
9999 mem: location 1253 is 1383
9999 mem: location 1256 is 1524
9999 mem: storing 1383 in location 1524
 107 run: reply result
9999 mem: location 1254 is 1522
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1522
9999 mem: location 1381 is 1010
9999 mem: storing 1522 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1522
9999 mem: location 1011 is 0
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1382
 106 run: *redo <- copy 0
9999 mem: location 1382 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1379 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1390
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1389 is 1012
9999 mem: location 1390 is 1000
9999 mem: location 1395 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1012 in location 1335
9999 mem: storing 1000 in location 1337
9999 mem: storing 0 in location 1347
 104 run: jump-unless go-render?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1522
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1338
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1165
9999 mem: location 1002 is 1165
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1506
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1522
9999 mem: location 1011 is 0
9999 mem: location 1337 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1339
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1335 is 1012
9999 mem: location 1338 is 1
9999 mem: location 1339 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1252
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1253
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1254
 105 run: jump-unless screen, 
9999 mem: location 1252 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1255
 105 run: *row <- copy new-row
9999 mem: location 1253 is 1
9999 mem: location 1255 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1252 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1256
 105 run: *column <- copy new-column
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1252 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1335
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1336 is 1329
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1329 in location 1287
 105 run: jump-unless console, 
9999 mem: location 1287 is 1329
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 3
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1288
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9999 mem: location 1330 is 3
9999 mem: location 1331 is 1315
9999 mem: location 1287 is 1329
9999 mem: skipping refcount at 1329
9998 run: address to copy is 1331
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1331 is 1315
9999 mem: storing 1315 in location 1289
 105 run: max:number <- length *buf
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 3 in location 1290
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1288 is 1330
9999 mem: location 1330 is 3
9999 mem: location 1290 is 3
9999 mem: storing 1 in location 1291
 105 run: jump-unless done?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1183 in location 1292
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1292 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1287 is 1329
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1329
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1329 in location 1336
9999 mem: storing 1 in location 1344
9999 mem: storing 1 in location 1345
 104 run: jump-unless found?, 
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1345 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1335 is 1012
9999 mem: location 1336 is 1329
9999 mem: location 1337 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .0abc      .
    .def       .
    .g         .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
 102 run: check-trace-count-for-label 4, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
