 101 run: assume-console [
    left-click 1, 0
    press 65515  # left arrow should have no effect
    type [0]
  ]
parse: instruction: left-click
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65515", properties: ["65515": "literal"]}
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1306
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1267
 102 run: console:address <- next-ingredient 
9999 mem: storing 1306 in location 1268
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1269
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1268 is 1306
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1308
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1306 in location 1310
 103 run: break-unless x, 
9999 mem: location 1310 is 1306
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1306
9999 mem: storing 1306 in location 1311
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1307
9999 run: its type is address
9999 mem: location 1307 is 1293
9999 mem: storing 1293 in location 1312
 103 run: max:number <- length *buf
9999 mem: location 1312 is 1293
9999 mem: storing 3 in location 1313
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1313 is 3
9999 mem: storing 0 in location 1314
 103 run: break-unless done?, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1312 is 1293
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 0
9999 run: address to copy is 1294
9999 run: its type is event
9999 mem: location 1294 is 2
9999 mem: location 1295 is 65513
9999 mem: location 1296 is 1
9999 mem: location 1297 is 0
9999 mem: storing 2 in location 1316
9999 mem: storing 65513 in location 1317
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 103 run: *idx <- add *idx, 1
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 0
9999 mem: location 1311 is 1306
9999 mem: storing 1 in location 1306
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1316 is 2
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 1
9999 mem: location 1319 is 0
9999 mem: location 1310 is 1306
9999 run: result 0 is [2, 65513, 1, 0]
9999 run: result 1 is 1306
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1270
9999 mem: storing 65513 in location 1271
9999 mem: storing 1 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1306 in location 1268
9999 mem: storing 1 in location 1274
9999 mem: storing 0 in location 1275
 102 run: loop-unless found?, 
9999 mem: location 1274 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1275 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1270 is 2
9999 mem: location 1271 is 65513
9999 mem: location 1272 is 1
9999 mem: location 1273 is 0
9999 mem: storing 1271 in location 1276
 102 run: break-unless t, 
9999 mem: location 1276 is 1271
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1267 is 1009
9999 mem: location 1269 is 1000
9999 mem: location 1276 is 1271
9999 mem: location 1271 is 65513
9999 mem: location 1272 is 1
9999 mem: location 1273 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1321
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1323
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1324
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1325
9999 mem: storing 1 in location 1326
9999 mem: storing 0 in location 1327
 103 run: jump-if editor, 1:offset
9999 mem: location 1324 is 1000
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1325 is 65513
9999 mem: location 1326 is 1
9999 mem: location 1327 is 0
9999 run: address to copy is 1327
9999 run: its type is number
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1328
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1324 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1324 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1329
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1330
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1330 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1324 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1324 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1331
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1328 is 0
9999 mem: location 1331 is 9
9999 mem: storing 0 in location 1332
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1332 is 0
9999 run: jumping to instruction 15
 103 run: cursor-row:number <- get t, row:offset
9999 mem: location 1325 is 65513
9999 mem: location 1326 is 1
9999 mem: location 1327 is 0
9999 run: address to copy is 1326
9999 run: its type is number
9999 mem: location 1326 is 1
9999 mem: storing 1 in location 1333
 103 run: cursor-column:number <- get t, column:offset
9999 mem: location 1325 is 65513
9999 mem: location 1326 is 1
9999 mem: location 1327 is 0
9999 run: address to copy is 1327
9999 run: its type is number
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 103 run: editor <- snap-cursor screen, editor, cursor-row, cursor-column
9999 mem: location 1323 is 1009
9999 mem: location 1324 is 1000
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1202
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1203
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1204
 104 run: jump-if editor, 1:offset
9999 mem: location 1202 is 1000
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1205
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1206
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1174
 105 run: reply height
9999 mem: location 1174 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1207
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1156
9999 mem: storing 1156 in location 1208
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1208 is 1156
9999 mem: storing 1156 in location 1209
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1156
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1168
9999 mem: location 1158 is 0
9999 mem: location 1173 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1168
9999 mem: storing 1168 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1208
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1210
 104 run: column:number <- copy left
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1211
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1212
 104 run: *cursor-row <- copy target-row
9999 mem: location 1203 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1212 is 1006
9999 mem: storing 1 in location 1006
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1213
 104 run: *cursor-column <- copy target-column
9999 mem: location 1204 is 0
9999 mem: location 1213 is 1007
9999 mem: location 1213 is 1007
9999 mem: storing 0 in location 1007
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1202 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1202 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1214
 104 run: break-unless curr, 
9999 mem: location 1208 is 1168
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1211 is 0
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1217
 104 run: break-unless at-cursor?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1209 is 1156
9999 mem: location 1214 is 1003
9999 mem: location 1214 is 1003
9999 mem: storing 1156 in location 1003
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1156
9999 mem: location 1208 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 97
9999 mem: storing 97 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 97
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 0
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1156
9999 mem: location 1173 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1175
9999 mem: storing 1175 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1156
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1168
9999 mem: location 1158 is 0
9999 mem: location 1173 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1168
9999 mem: storing 1168 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 0
9999 mem: storing 1 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1175
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1211 is 1
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1217
 104 run: break-unless at-cursor?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1175
9999 mem: location 1175 is 98
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1168
9999 mem: location 1208 is 1175
9999 run: address to copy is 1175
9999 run: its type is number
9999 mem: location 1175 is 98
9999 mem: storing 98 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 98
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 1
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1175
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1175
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1175
9999 mem: location 1175 is 98
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1168
9999 mem: location 1173 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1178
9999 run: result 0 is 1178
9999 mem: storing 1178 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1156
9999 mem: location 1173 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1175
9999 mem: storing 1175 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 1
9999 mem: storing 2 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1178
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1211 is 2
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1217
 104 run: break-unless at-cursor?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1178
9999 mem: location 1178 is 99
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1208 is 1178
9999 run: address to copy is 1178
9999 run: its type is number
9999 mem: location 1178 is 99
9999 mem: storing 99 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 99
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 2
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1178
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1178
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1178
9999 mem: location 1178 is 99
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1173 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1181
9999 run: result 0 is 1181
9999 mem: storing 1181 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1175
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1175
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1175
9999 mem: location 1175 is 98
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1168
9999 mem: location 1173 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1178
9999 run: result 0 is 1178
9999 mem: storing 1178 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 2
9999 mem: storing 3 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1181
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1211 is 3
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1217
 104 run: break-unless at-cursor?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1181
9999 mem: location 1181 is 10
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1208 is 1181
9999 run: address to copy is 1181
9999 run: its type is number
9999 mem: location 1181 is 10
9999 mem: storing 10 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 10
9999 mem: storing 1 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1211 is 3
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1220
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: column <- copy left
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1211
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1181
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1181
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1181
9999 mem: location 1181 is 10
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1173 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1184
9999 run: result 0 is 1184
9999 mem: storing 1184 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1178
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1178
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1178
9999 mem: location 1178 is 99
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1173 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1181
9999 run: result 0 is 1181
9999 mem: storing 1181 in location 1209
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1208 is 1184
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1184
9999 mem: location 1184 is 100
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1208 is 1184
9999 run: address to copy is 1184
9999 run: its type is number
9999 mem: location 1184 is 100
9999 mem: storing 100 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 100
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 0
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1184
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1184 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1184
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1184
9999 mem: location 1184 is 100
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1173 is 1184
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1181
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1181
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1181
9999 mem: location 1181 is 10
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1173 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1184
9999 run: result 0 is 1184
9999 mem: storing 1184 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 0
9999 mem: storing 1 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1187
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1187
9999 mem: location 1187 is 101
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1208 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 101
9999 mem: storing 101 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 101
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 1
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1187
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1187
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1187
9999 mem: location 1187 is 101
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1173 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1190
9999 run: result 0 is 1190
9999 mem: storing 1190 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1184
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1184 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1184
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1184
9999 mem: location 1184 is 100
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1173 is 1184
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 1
9999 mem: storing 2 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1190
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1190
9999 mem: location 1190 is 102
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1208 is 1190
9999 run: address to copy is 1190
9999 run: its type is number
9999 mem: location 1190 is 102
9999 mem: storing 102 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 102
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 2
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1190
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1190
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1190
9999 mem: location 1190 is 102
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1173 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1193
9999 run: result 0 is 1193
9999 mem: storing 1193 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1187
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1187
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1187
9999 mem: location 1187 is 101
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1173 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1190
9999 run: result 0 is 1190
9999 mem: storing 1190 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 2
9999 mem: storing 3 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 1193
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1193
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1208 is 1193
9999 run: address to copy is 1193
9999 run: its type is number
9999 mem: location 1193 is 10
9999 mem: storing 10 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 10
9999 mem: storing 1 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: column <- copy left
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1211
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1193
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1193 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1193
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1193
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1173 is 1193
9999 run: address to copy is 1194
9999 run: its type is address
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1196
9999 run: result 0 is 1196
9999 mem: storing 1196 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1190
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1190 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1190
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1190
9999 mem: location 1190 is 102
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1173 is 1190
9999 run: address to copy is 1191
9999 run: its type is address
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1193
9999 run: result 0 is 1193
9999 mem: storing 1193 in location 1209
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1208 is 1196
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1210 is 3
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1215
 104 run: break-if off-screen?, 
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1208 is 1196
9999 mem: location 1196 is 103
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1193
9999 mem: location 1208 is 1196
9999 run: address to copy is 1196
9999 run: its type is number
9999 mem: location 1196 is 103
9999 mem: storing 103 in location 1218
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1218 is 103
9999 mem: storing 0 in location 1219
 104 run: break-unless newline?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1211 is 0
9999 mem: location 1206 is 9
9999 mem: storing 0 in location 1221
 104 run: break-unless at-right?, 
9999 mem: location 1221 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1208 is 1196
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1196 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1196
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1196
9999 mem: location 1196 is 103
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1193
9999 mem: location 1173 is 1196
9999 run: address to copy is 1197
9999 run: its type is address
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1174
 105 run: reply result
9999 mem: location 1174 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1208
 104 run: prev <- next-duplex prev
9999 mem: location 1209 is 1193
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1193 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1193
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1193
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1173 is 1193
9999 run: address to copy is 1194
9999 run: its type is address
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1196
9999 run: result 0 is 1196
9999 mem: storing 1196 in location 1209
 104 run: column <- add column, 1
9999 mem: location 1211 is 0
9999 mem: storing 1 in location 1211
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1211 is 1
9999 mem: location 1213 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1222
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1216 is 0
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1223
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1224
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1225
 104 run: break-unless before-cursor?, 
9999 mem: location 1225 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1202 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1324
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1268 is 1306
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1306 in location 1310
 103 run: break-unless x, 
9999 mem: location 1310 is 1306
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1306
9999 mem: storing 1306 in location 1311
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1307
9999 run: its type is address
9999 mem: location 1307 is 1293
9999 mem: storing 1293 in location 1312
 103 run: max:number <- length *buf
9999 mem: location 1312 is 1293
9999 mem: storing 3 in location 1313
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 1
9999 mem: location 1313 is 3
9999 mem: storing 0 in location 1314
 103 run: break-unless done?, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1312 is 1293
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 1
9999 run: address to copy is 1298
9999 run: its type is event
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65515
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 1 in location 1316
9999 mem: storing 65515 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
 103 run: *idx <- add *idx, 1
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 1
9999 mem: location 1311 is 1306
9999 mem: storing 2 in location 1306
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65515
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: location 1310 is 1306
9999 run: result 0 is [1, 65515, 0, 0]
9999 run: result 1 is 1306
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1270
9999 mem: storing 65515 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1306 in location 1268
9999 mem: storing 1 in location 1274
9999 mem: storing 0 in location 1275
 102 run: loop-unless found?, 
9999 mem: location 1274 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1275 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1270 is 1
9999 mem: location 1271 is 65515
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
9999 mem: storing 0 in location 1276
 102 run: break-unless t, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1267 is 1009
9999 mem: location 1269 is 1000
9999 mem: location 1270 is 1
9999 mem: location 1271 is 65515
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 55
9999 mem: new alloc: 1335
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1337
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1338
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1339
9999 mem: storing 65515 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
 103 run: jump-if editor, 1:offset
9999 mem: location 1338 is 1000
9999 run: jumping to instruction 6
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1337 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1174
 104 run: reply height
9999 mem: location 1174 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1343
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1344
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1345
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1346
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1347
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1348
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1347 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1347 is 1006
9999 mem: location 1347 is 1006
9999 mem: storing 1 in location 1349
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1348 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1348 is 1007
9999 mem: location 1348 is 1007
9999 mem: storing 0 in location 1350
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65515
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1351
 103 run: break-unless c, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 74
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65515
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 1340 in location 1363
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1363 is 1340
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1364
 103 run: break-unless page-up?, 
9999 mem: location 1364 is 0
9999 run: jumping to instruction 83
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1365
 103 run: break-unless page-down?, 
9999 mem: location 1365 is 0
9999 run: jumping to instruction 89
 103 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1366
 103 run: break-unless end?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 95
 103 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1367
 103 run: break-unless home?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 101
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1368
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 121
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 0 in location 1373
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 137
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1363 is 1340
9999 mem: location 1340 is 65515
9999 mem: storing 1 in location 1375
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1375 is 1
9999 run: jump-unless fell through
 103 run: prev:address:duplex-list <- prev-duplex *before-cursor
9999 mem: location 1346 is 1003
9999 mem: location 1003 is 1156
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1173
 104 run: jump-if in, 1:offset
9999 mem: location 1173 is 1156
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1173 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1168
9999 mem: location 1158 is 0
9999 mem: location 1173 is 1156
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1174
 104 run: reply result
9999 mem: location 1174 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1376
 103 run: jump-if prev, 1:offset
9999 mem: location 1376 is 0
9999 run: jump-if fell through
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1337 is 1009
9999 mem: location 1338 is 1000
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1267
9999 mem: storing 1000 in location 1269
9999 mem: storing 0 in location 1277
 102 run: break-unless go-render?, 
9999 mem: location 1277 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1268 is 1306
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1306 in location 1310
 103 run: break-unless x, 
9999 mem: location 1310 is 1306
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 2
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1306
9999 mem: storing 1306 in location 1311
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 2
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1307
9999 run: its type is address
9999 mem: location 1307 is 1293
9999 mem: storing 1293 in location 1312
 103 run: max:number <- length *buf
9999 mem: location 1312 is 1293
9999 mem: storing 3 in location 1313
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 2
9999 mem: location 1313 is 3
9999 mem: storing 0 in location 1314
 103 run: break-unless done?, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1312 is 1293
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 2
9999 run: address to copy is 1302
9999 run: its type is event
9999 mem: location 1302 is 0
9999 mem: location 1303 is 48
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1316
9999 mem: storing 48 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
 103 run: *idx <- add *idx, 1
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 2
9999 mem: location 1311 is 1306
9999 mem: storing 3 in location 1306
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1316 is 0
9999 mem: location 1317 is 48
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: location 1310 is 1306
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1306
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1270
9999 mem: storing 48 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1306 in location 1268
9999 mem: storing 1 in location 1274
9999 mem: storing 0 in location 1275
 102 run: loop-unless found?, 
9999 mem: location 1274 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1275 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1270 is 0
9999 mem: location 1271 is 48
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
9999 mem: storing 0 in location 1276
 102 run: break-unless t, 
9999 mem: location 1276 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1276 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1267 is 1009
9999 mem: location 1269 is 1000
9999 mem: location 1270 is 0
9999 mem: location 1271 is 48
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 55
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1337
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1338
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1339
9999 mem: storing 48 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
 103 run: jump-if editor, 1:offset
9999 mem: location 1338 is 1000
9999 run: jumping to instruction 6
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1337 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 104 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1174
 104 run: reply height
9999 mem: location 1174 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1343
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1344
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1345
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1346
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1347
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1338 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1338 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1348
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1347 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1347 is 1006
9999 mem: location 1347 is 1006
9999 mem: storing 1 in location 1349
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1348 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1348 is 1007
9999 mem: location 1348 is 1007
9999 mem: storing 0 in location 1350
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1339 is 0
9999 mem: location 1340 is 48
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 1340 in location 1351
 103 run: break-unless c, 
9999 mem: location 1351 is 1340
9999 run: jump-unless fell through
 103 run: ctrl-b?:boolean <- equal *c, 2/ctrl-f
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1352
 103 run: break-unless ctrl-b?, 
9999 mem: location 1352 is 0
9999 run: jumping to instruction 23
 103 run: ctrl-f?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1353
 103 run: break-unless ctrl-f?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 29
 103 run: ctrl-k?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1354
 103 run: break-unless ctrl-k?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 35
 103 run: ctrl-u?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1355
 103 run: break-unless ctrl-u?, 
9999 mem: location 1355 is 0
9999 run: jumping to instruction 41
 103 run: ctrl-e?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1356
 103 run: break-unless ctrl-e?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 47
 103 run: ctrl-a?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1357
 103 run: break-unless ctrl-a?, 
9999 mem: location 1357 is 0
9999 run: jumping to instruction 53
 103 run: backspace?:boolean <- equal *c, 8/backspace
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1358
 103 run: break-unless backspace?, 
9999 mem: location 1358 is 0
9999 run: jumping to instruction 59
 103 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1360
 103 run: break-unless tab?, 
9999 mem: location 1360 is 0
9999 run: jumping to instruction 66
 103 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 1 in location 1361
 103 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: storing 0 in location 1362
 103 run: regular-character? <- or regular-character?, newline?
9999 mem: location 1361 is 1
9999 mem: location 1362 is 0
9999 mem: storing 1 in location 1361
 103 run: jump-if regular-character?, 1:offset
9999 mem: location 1361 is 1
9999 run: jumping to instruction 72
 103 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1338 is 1000
9999 mem: location 1351 is 1340
9999 mem: location 1340 is 48
9999 mem: location 1337 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 35
9999 mem: new alloc: 1391
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1393
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1394
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1395
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1393 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1156
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1393 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1396
 104 run: insert-duplex c, *before-cursor
9999 mem: location 1394 is 48
9999 mem: location 1396 is 1003
9999 mem: location 1003 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1150
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1151
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1427
9999 mem: storing 1427 in location 1152
 105 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1152 is 1427
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1152 is 1427
9999 run: address to copy is 1427
9999 mem: storing 1427 in location 1153
 105 run: *val <- copy x
9999 mem: location 1150 is 48
9999 mem: location 1153 is 1427
9999 mem: location 1153 is 1427
9999 mem: storing 48 in location 1427
 105 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1151 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1168
9999 mem: location 1158 is 0
9999 mem: location 1151 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1168
9999 mem: storing 1168 in location 1154
 105 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1151 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1168
9999 mem: location 1158 is 0
9999 mem: location 1151 is 1156
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1155
 105 run: *y <- copy new-node
9999 mem: location 1152 is 1427
9999 mem: location 1155 is 1157
9999 mem: location 1155 is 1157
9999 mem: storing 1427 in location 1157
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1152 is 1427
9999 mem: location 1427 is 48
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1152 is 1427
9999 run: address to copy is 1429
9999 mem: storing 1429 in location 1155
 105 run: *y <- copy in
9999 mem: location 1151 is 1156
9999 mem: location 1155 is 1429
9999 mem: location 1155 is 1429
9999 mem: storing 1156 in location 1429
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1152 is 1427
9999 mem: location 1427 is 48
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1156
9999 mem: location 1152 is 1427
9999 run: address to copy is 1428
9999 mem: storing 1428 in location 1155
 105 run: *y <- copy next-node
9999 mem: location 1154 is 1168
9999 mem: location 1155 is 1428
9999 mem: location 1155 is 1428
9999 mem: storing 1168 in location 1428
 105 run: jump-if next-node, 1:offset
9999 mem: location 1154 is 1168
9999 run: jumping to instruction 15
 105 run: y <- get-address *next-node, prev:offset
9999 mem: location 1154 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1156
9999 mem: location 1154 is 1168
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 1155
 105 run: *y <- copy new-node
9999 mem: location 1152 is 1427
9999 mem: location 1155 is 1170
9999 mem: location 1155 is 1170
9999 mem: storing 1427 in location 1170
 105 run: reply new-node
9999 mem: location 1152 is 1427
 104 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1396 is 1003
9999 mem: location 1003 is 1156
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1156 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1156
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1156
9999 mem: location 1156 is 167
9999 mem: location 1157 is 1427
9999 mem: location 1158 is 0
9999 mem: location 1173 is 1156
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1427
9999 mem: storing 1427 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1427
9999 run: result 0 is 1427
9999 mem: location 1396 is 1003
9999 mem: storing 1427 in location 1003
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1393 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1427
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1393 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1397
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1393 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1427
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1393 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1398
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1393 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1427
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1393 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1399
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1393 is 1000
9999 mem: location 1000 is 1156
9999 mem: location 1001 is 1156
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1427
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1393 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1400
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1397 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1397 is 1006
9999 mem: location 1397 is 1006
9999 mem: storing 1 in location 1401
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1398 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1398 is 1007
9999 mem: location 1398 is 1007
9999 mem: storing 0 in location 1402
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1395 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1174
 105 run: reply width
9999 mem: location 1174 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1403
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1395 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1173
 105 run: break-unless sc, 
9999 mem: location 1173 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1173 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1173 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1174
 105 run: reply height
9999 mem: location 1174 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1404
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1394 is 48
9999 mem: storing 0 in location 1405
 104 run: break-unless newline?, 
9999 mem: location 1405 is 0
9999 run: jumping to instruction 47
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1400 is 9
9999 mem: storing 8 in location 1415
 104 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1398 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1415 is 8
9999 mem: storing 0 in location 1416
 104 run: break-unless at-wrap?, 
9999 mem: location 1416 is 0
9999 run: jumping to instruction 65
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1398 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1398 is 1007
9999 mem: storing 1 in location 1007
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1396 is 1003
9999 mem: location 1003 is 1427
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1427
9999 mem: location 1427 is 48
9999 mem: location 1428 is 1168
9999 mem: location 1429 is 1156
9999 mem: location 1173 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1168
9999 mem: storing 1168 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1417
 104 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1417 is 1168
9999 mem: storing 0 in location 1418
 104 run: break-unless at-end?, 
9999 mem: location 1418 is 0
9999 run: jumping to instruction 79
 104 run: break-unless next, 
9999 mem: location 1417 is 1168
9999 run: jump-unless fell through
 104 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1398 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: break-if at-right?, 
9999 mem: location 1421 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1396 is 1003
9999 mem: location 1003 is 1427
9999 mem: location 1396 is 1003
9999 mem: location 1396 is 1003
9999 mem: storing 1427 in location 1423
 104 run: move-cursor screen, save-row, save-column
9999 mem: location 1395 is 1009
9999 mem: location 1401 is 1
9999 mem: location 1402 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1228
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1229
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1230
 105 run: break-unless sc, 
9999 mem: location 1228 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1228 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1228 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1231
 105 run: *row <- copy new-row
9999 mem: location 1229 is 1
9999 mem: location 1231 is 1011
9999 mem: location 1231 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1228 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1228 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1232
 105 run: *column <- copy new-column
9999 mem: location 1230 is 0
9999 mem: location 1232 is 1012
9999 mem: location 1232 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1228 is 1009
 104 run: curr-column:number <- copy save-column
9999 mem: location 1402 is 0
9999 mem: storing 0 in location 1424
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1424 is 0
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1421 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1423 is 1427
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1423 is 1427
9999 mem: location 1427 is 48
9999 mem: location 1428 is 1168
9999 mem: location 1429 is 1156
9999 mem: location 1423 is 1427
9999 run: address to copy is 1427
9999 run: its type is number
9999 mem: location 1427 is 48
9999 mem: storing 48 in location 1425
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1425 is 48
9999 mem: storing 0 in location 1426
 104 run: break-if at-newline?, 
9999 mem: location 1426 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1395 is 1009
9999 mem: location 1425 is 48
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 105 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1236
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 105 run: break-if color-found?, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1237
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: break-if bg-color-found?, 
9999 mem: location 1240 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1239
 105 run: trace 90, [print-character], c
9999 mem: location 1236 is 48
  90 print-character: 48 
 105 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1243
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1245
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 48
9999 mem: storing 0 in location 1246
 105 run: break-unless newline?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: index <- add index, *column
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1249
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
 105 run: len:number <- length *buf
9999 mem: location 1250 is 1014
9999 mem: storing 50 in location 1251
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1236 is 48
9999 mem: storing 0 in location 1252
 105 run: break-unless backspace?, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1250 is 1014
9999 mem: location 1249 is 10
9999 mem: storing 1035 in location 1254
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1254 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1254 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1255
 105 run: *cursor-contents <- copy c
9999 mem: location 1236 is 48
9999 mem: location 1255 is 1035
9999 mem: location 1255 is 1035
9999 mem: storing 48 in location 1035
schedule: print-character/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1254 is 1035
9999 mem: location 1035 is 48
9999 mem: location 1036 is 7
9999 mem: location 1254 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1256
 105 run: *cursor-color <- copy color
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1036
9999 mem: location 1256 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: break-if at-right?, 
9999 mem: location 1258 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1245 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1424 is 0
9999 mem: storing 1 in location 1424
 104 run: curr <- next-duplex curr
9999 mem: location 1423 is 1427
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1427 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1427
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1427
9999 mem: location 1427 is 48
9999 mem: location 1428 is 1168
9999 mem: location 1429 is 1156
9999 mem: location 1173 is 1427
9999 run: address to copy is 1428
9999 run: its type is address
9999 mem: location 1428 is 1168
9999 mem: storing 1168 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1423
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1424 is 1
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1421 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1423 is 1168
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1423 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1427
9999 mem: location 1423 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 97
9999 mem: storing 97 in location 1425
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1425 is 97
9999 mem: storing 0 in location 1426
 104 run: break-if at-newline?, 
9999 mem: location 1426 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1395 is 1009
9999 mem: location 1425 is 97
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1236
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 105 run: break-if color-found?, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1237
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: break-if bg-color-found?, 
9999 mem: location 1240 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1239
 105 run: trace 90, [print-character], c
9999 mem: location 1236 is 97
  90 print-character: 97 
 105 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1243
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1245
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 105 run: break-unless newline?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: index <- add index, *column
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1249
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
 105 run: len:number <- length *buf
9999 mem: location 1250 is 1014
9999 mem: storing 50 in location 1251
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 105 run: break-unless backspace?, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1250 is 1014
9999 mem: location 1249 is 11
9999 mem: storing 1037 in location 1254
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1254 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1254 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1255
 105 run: *cursor-contents <- copy c
9999 mem: location 1236 is 97
9999 mem: location 1255 is 1037
9999 mem: location 1255 is 1037
9999 mem: storing 97 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1254 is 1037
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1254 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1256
 105 run: *cursor-color <- copy color
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1038
9999 mem: location 1256 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: break-if at-right?, 
9999 mem: location 1258 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1245 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 104 run: curr <- next-duplex curr
9999 mem: location 1423 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1168
9999 mem: location 1168 is 97
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1427
9999 mem: location 1173 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1175
9999 mem: storing 1175 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1175
9999 run: result 0 is 1175
9999 mem: storing 1175 in location 1423
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1424 is 2
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1421 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1423 is 1175
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1423 is 1175
9999 mem: location 1175 is 98
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1168
9999 mem: location 1423 is 1175
9999 run: address to copy is 1175
9999 run: its type is number
9999 mem: location 1175 is 98
9999 mem: storing 98 in location 1425
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1425 is 98
9999 mem: storing 0 in location 1426
 104 run: break-if at-newline?, 
9999 mem: location 1426 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1395 is 1009
9999 mem: location 1425 is 98
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1236
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 105 run: break-if color-found?, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1237
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: break-if bg-color-found?, 
9999 mem: location 1240 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1239
 105 run: trace 90, [print-character], c
9999 mem: location 1236 is 98
  90 print-character: 98 
 105 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1243
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1245
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1246
 105 run: break-unless newline?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: index <- add index, *column
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1249
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
 105 run: len:number <- length *buf
9999 mem: location 1250 is 1014
9999 mem: storing 50 in location 1251
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1252
 105 run: break-unless backspace?, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1250 is 1014
9999 mem: location 1249 is 12
9999 mem: storing 1039 in location 1254
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1254 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1254 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1255
 105 run: *cursor-contents <- copy c
9999 mem: location 1236 is 98
9999 mem: location 1255 is 1039
9999 mem: location 1255 is 1039
9999 mem: storing 98 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1254 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1254 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1256
 105 run: *cursor-color <- copy color
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1040
9999 mem: location 1256 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: break-if at-right?, 
9999 mem: location 1258 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1245 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1424 is 2
9999 mem: storing 3 in location 1424
 104 run: curr <- next-duplex curr
9999 mem: location 1423 is 1175
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1175 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1175
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1175
9999 mem: location 1175 is 98
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1168
9999 mem: location 1173 is 1175
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1178
9999 run: result 0 is 1178
9999 mem: storing 1178 in location 1423
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1424 is 3
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1421 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1423 is 1178
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1423 is 1178
9999 mem: location 1178 is 99
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1423 is 1178
9999 run: address to copy is 1178
9999 run: its type is number
9999 mem: location 1178 is 99
9999 mem: storing 99 in location 1425
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1425 is 99
9999 mem: storing 0 in location 1426
 104 run: break-if at-newline?, 
9999 mem: location 1426 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1395 is 1009
9999 mem: location 1425 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1235
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1236
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 105 run: break-if color-found?, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1237
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: break-if bg-color-found?, 
9999 mem: location 1240 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1239
 105 run: trace 90, [print-character], c
9999 mem: location 1236 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1235 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1243
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1245
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if legal?, 1:offset
9999 mem: location 1244 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1246
 105 run: break-unless newline?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1243 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: index <- add index, *column
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1249
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1235 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
 105 run: len:number <- length *buf
9999 mem: location 1250 is 1014
9999 mem: storing 50 in location 1251
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1252
 105 run: break-unless backspace?, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1250 is 1014
9999 mem: location 1249 is 13
9999 mem: storing 1041 in location 1254
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1254 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1254 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1255
 105 run: *cursor-contents <- copy c
9999 mem: location 1236 is 99
9999 mem: location 1255 is 1041
9999 mem: location 1255 is 1041
9999 mem: storing 99 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1254 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1254 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1256
 105 run: *cursor-color <- copy color
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1042
9999 mem: location 1256 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: break-if at-right?, 
9999 mem: location 1258 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1245 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1245 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1235 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1424 is 3
9999 mem: storing 4 in location 1424
 104 run: curr <- next-duplex curr
9999 mem: location 1423 is 1178
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1173
 105 run: jump-if in, 1:offset
9999 mem: location 1173 is 1178
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1173 is 1178
9999 mem: location 1178 is 99
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1173 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1174
 105 run: reply result
9999 mem: location 1174 is 1181
9999 run: result 0 is 1181
9999 mem: storing 1181 in location 1423
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1424 is 4
9999 mem: location 1403 is 10
9999 mem: storing 0 in location 1421
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1421 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1423 is 1181
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1423 is 1181
9999 mem: location 1181 is 10
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1423 is 1181
9999 run: address to copy is 1181
9999 run: its type is number
9999 mem: location 1181 is 10
9999 mem: storing 10 in location 1425
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1425 is 10
9999 mem: storing 1 in location 1426
 104 run: break-if at-newline?, 
9999 mem: location 1426 is 1
9999 run: jumping to instruction 99
 104 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1393 is 1000
9999 mem: location 1395 is 1009
9999 run: result 0 is 1000
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1000 in location 1338
9999 mem: storing 1009 in location 1337
9999 mem: storing 0 in location 1359
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1337 is 1009
9999 mem: location 1338 is 1000
9999 mem: location 1359 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1267
9999 mem: storing 1000 in location 1269
9999 mem: storing 0 in location 1277
 102 run: break-unless go-render?, 
9999 mem: location 1277 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1268 is 1306
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1306 in location 1310
 103 run: break-unless x, 
9999 mem: location 1310 is 1306
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 3
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1306
9999 mem: storing 1306 in location 1311
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1310 is 1306
9999 mem: location 1306 is 3
9999 mem: location 1307 is 1293
9999 mem: location 1310 is 1306
9999 run: address to copy is 1307
9999 run: its type is address
9999 mem: location 1307 is 1293
9999 mem: storing 1293 in location 1312
 103 run: max:number <- length *buf
9999 mem: location 1312 is 1293
9999 mem: storing 3 in location 1313
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1311 is 1306
9999 mem: location 1306 is 3
9999 mem: location 1313 is 3
9999 mem: storing 1 in location 1314
 103 run: break-unless done?, 
9999 mem: location 1314 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1171 in location 1315
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1315 is 1171
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1310 is 1306
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1306
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1306 in location 1268
9999 mem: storing 1 in location 1274
9999 mem: storing 1 in location 1275
 102 run: loop-unless found?, 
9999 mem: location 1274 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1275 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .0abc      .
    .def       .
    .g         .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
 100 run: check-trace-count-for-label 4, [print-character]
