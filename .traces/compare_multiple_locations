parse: instruction: copy
parse:   ingredient: {name: "34", value: 0, type: 0, properties: ["34": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "35", value: 0, type: 0, properties: ["35": "literal"]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "36", value: 0, type: 0, properties: ["36": "literal"]}
parse:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "34", value: 0, type: 0, properties: ["34": "literal"]}
parse:   product: {name: "4", value: 0, type: 1, properties: ["4": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "35", value: 0, type: 0, properties: ["35": "literal"]}
parse:   product: {name: "5", value: 0, type: 1, properties: ["5": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "36", value: 0, type: 0, properties: ["36": "literal"]}
parse:   product: {name: "6", value: 0, type: 1, properties: ["6": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "1", value: 0, type: 7, properties: ["1": "point-number"]}
parse:   ingredient: {name: "4", value: 0, type: 7, properties: ["4": "point-number"]}
parse:   product: {name: "7", value: 0, type: 3, properties: ["7": "boolean"]}
after-brace: recipe main
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: equal ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- copy/1 {name: "34", value: 34, type: 0, properties: ["34": "literal"]}
run: ingredient 0 is 34
run: product 0 is 1
mem: storing 34 in location 1
run: instruction main/1
run: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- copy/1 {name: "35", value: 35, type: 0, properties: ["35": "literal"]}
run: ingredient 0 is 35
run: product 0 is 2
mem: storing 35 in location 2
run: instruction main/2
run: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- copy/1 {name: "36", value: 36, type: 0, properties: ["36": "literal"]}
run: ingredient 0 is 36
run: product 0 is 3
mem: storing 36 in location 3
run: instruction main/3
run: {name: "4", value: 4, type: 1, properties: ["4": "number"]} <- copy/1 {name: "34", value: 34, type: 0, properties: ["34": "literal"]}
run: ingredient 0 is 34
run: product 0 is 4
mem: storing 34 in location 4
run: instruction main/4
run: {name: "5", value: 5, type: 1, properties: ["5": "number"]} <- copy/1 {name: "35", value: 35, type: 0, properties: ["35": "literal"]}
run: ingredient 0 is 35
run: product 0 is 5
mem: storing 35 in location 5
run: instruction main/5
run: {name: "6", value: 6, type: 1, properties: ["6": "number"]} <- copy/1 {name: "36", value: 36, type: 0, properties: ["36": "literal"]}
run: ingredient 0 is 36
run: product 0 is 6
mem: storing 36 in location 6
run: instruction main/6
run: {name: "7", value: 7, type: 3, properties: ["7": "boolean"]} <- equal/13 {name: "1", value: 1, type: 7, properties: ["1": "point-number"]}, {name: "4", value: 4, type: 7, properties: ["4": "point-number"]}
run: ingredient 0 is 1
mem: location 1 is 34
mem: location 2 is 35
mem: location 3 is 36
run: ingredient 1 is 4
mem: location 4 is 34
mem: location 5 is 35
mem: location 6 is 36
run: product 0 is 7
mem: storing 1 in location 7
