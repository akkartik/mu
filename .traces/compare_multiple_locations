9999 parse: instruction: copy
9999 parse:   ingredient: {"34": "literal"}
9999 parse:   product: {"1": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"35": "literal"}
9999 parse:   product: {"2": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"36": "literal"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"34": "literal"}
9999 parse:   product: {"4": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"35": "literal"}
9999 parse:   product: {"5": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"36": "literal"}
9999 parse:   product: {"6": "number"}
9999 parse: instruction: equal
9999 parse:   ingredient: {"1": "point-number", "raw": ""}
9999 parse:   ingredient: {"4": "point-number", "raw": ""}
9999 parse:   product: {"7": "boolean"}
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: equal ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:number <- copy 34
9999 mem: storing 34 in location 1
 102 run: 2:number <- copy 35
9999 mem: storing 35 in location 2
 102 run: 3:number <- copy 36
9999 mem: storing 36 in location 3
 102 run: 4:number <- copy 34
9999 mem: storing 34 in location 4
 102 run: 5:number <- copy 35
9999 mem: storing 35 in location 5
 102 run: 6:number <- copy 36
9999 mem: storing 36 in location 6
 102 run: 7:boolean <- equal 1:point-number/raw, 4:point-number/raw
9999 mem: location 1 is 34
9999 mem: location 2 is 35
9999 mem: location 3 is 36
9999 mem: location 4 is 34
9999 mem: location 5 is 35
9999 mem: location 6 is 36
9999 mem: storing 1 in location 7
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
