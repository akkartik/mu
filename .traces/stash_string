9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [abc]
9993 parse: instruction: stash
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"foo:": "literal-string"}
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: stash [foo:], 1:address:shared:array:character
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: stash ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:address:shared:array:character <- new [abc]
9999 mem: storing 1000 in location 1
 102 run: stash [foo:], 1:address:shared:array:character
9999 mem: location 1 is 1000
   2 app: foo: abc 
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
