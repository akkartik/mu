9991 parse: --- defining scenario_editor-scrolls-down-on-newline
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"5": "literal", "width": <>}
9993 parse:   ingredient: {"4": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 5/width, 4/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [a
b
c]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"5": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 5/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 3, 4\n    type [\n]\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 3, 4
    type [
]
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .b    .\n    .c    .\n    .     .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .     .
    .b    .
    .c    .
    .     .
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 parse: recipe scenario_editor-scrolls-down-on-newline has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- deduce types for recipe scenario_editor-scrolls-down-on-newline
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- transform names for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-scrolls-down-on-newline
9992 transform: instruction screen:address:shared:screen <- new-fake-screen 5/width, 4/height
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 100
9992 transform: checking variant 0: recipe new-fake-screen {"w": "number"} {"h": "number"} -> {"result": <"address" : <"shared" : <"screen" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 100
9992 transform: instruction 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 5/right
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 99
9992 transform: checking variant 0: recipe new-editor {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"left": "number"} {"right": "number"} -> {"result": <"address" : <"shared" : <"editor-data" : <>>>>} {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 99
9991 transform: --- compute instruction operations for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- transform braces for recipe scenario_editor-scrolls-down-on-newline
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- type-check calls inside recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-scrolls-down-on-newline
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-scrolls-down-on-newline
 102 run: screen:address:shared:screen <- new-fake-screen 5/width, 4/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 5
9999 mem: location 1006 is 1014
9999 mem: storing 5 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 4
9999 mem: location 1007 is 1013
9999 mem: storing 4 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 20 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 20
9999 mem: array size is 20
9999 mem: allocating size 42
9999 mem: new alloc: 1018
9999 mem: storing 20 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1060
9999 mem: storing 10 in location 1061
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1063
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1063 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1064
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1065
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1066
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 0
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 0
9999 mem: storing 1020 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1068 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1068 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1066 is 0
9999 mem: storing 1 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 1
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 1
9999 mem: storing 1022 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1068 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1068 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1066 is 1
9999 mem: storing 2 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 2
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 2
9999 mem: storing 1024 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1068 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1068 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1066 is 2
9999 mem: storing 3 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 3
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 3
9999 mem: storing 1026 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1068 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1068 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1066 is 3
9999 mem: storing 4 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 4
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 4
9999 mem: storing 1028 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1068 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1068 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1066 is 4
9999 mem: storing 5 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 5
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 5
9999 mem: storing 1030 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1068 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1068 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1066 is 5
9999 mem: storing 6 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 6
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 6
9999 mem: storing 1032 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1068 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1068 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1066 is 6
9999 mem: storing 7 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 7
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 7
9999 mem: storing 1034 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1068 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1068 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1066 is 7
9999 mem: storing 8 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 8
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 8
9999 mem: storing 1036 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1068 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1068 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1066 is 8
9999 mem: storing 9 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 9
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 9
9999 mem: storing 1038 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1068 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1068 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1066 is 9
9999 mem: storing 10 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 10
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 10
9999 mem: storing 1040 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1068 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1068 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1066 is 10
9999 mem: storing 11 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 11
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 11
9999 mem: storing 1042 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1068 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1068 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1066 is 11
9999 mem: storing 12 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 12
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 12
9999 mem: storing 1044 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1068 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1068 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1066 is 12
9999 mem: storing 13 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 13
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 13
9999 mem: storing 1046 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1068 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1068 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1066 is 13
9999 mem: storing 14 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 14
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 14
9999 mem: storing 1048 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1068 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1068 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1066 is 14
9999 mem: storing 15 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 15
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 15
9999 mem: storing 1050 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1068 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1068 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1066 is 15
9999 mem: storing 16 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 16
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 16
9999 mem: storing 1052 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1068 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1068 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1066 is 16
9999 mem: storing 17 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 17
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 17
9999 mem: storing 1054 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1068 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1068 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1066 is 17
9999 mem: storing 18 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 18
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 18
9999 mem: storing 1056 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1068 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1068 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1066 is 18
9999 mem: storing 19 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 19
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 19
9999 mem: storing 1058 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1068 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1068 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1066 is 19
9999 mem: storing 20 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 20
9999 mem: location 1065 is 20
9999 mem: storing 1 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1071
 104 run: *x <- copy 0
9999 mem: location 1071 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1071
 104 run: *x <- copy 0
9999 mem: location 1071 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1063 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new [a
b
c]
9999 mem: storing 1072 in location 1
9999 mem: incrementing refcount of 1072: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 5/right
9999 mem: location 1 is 1072
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1079
9999 mem: storing 11 in location 1080
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1072 in location 1082
9999 mem: incrementing refcount of 1072: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1083
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1084
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1085
 103 run: right <- subtract right, 1
9999 mem: location 1085 is 5
9999 mem: storing 4 in location 1085
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1092
9999 mem: storing 1092 in location 1086
9999 mem: incrementing refcount of 1092: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1087
 103 run: *x <- copy left
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1097
9999 mem: storing 0 in location 1097
 103 run: x <- get-address *result, right:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1087
 103 run: *x <- copy right
9999 mem: location 1085 is 4
9999 mem: location 1087 is 1098
9999 mem: storing 4 in location 1098
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1087
 103 run: *x <- copy 1/top
9999 mem: location 1087 is 1100
9999 mem: storing 1 in location 1100
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1087
 103 run: *x <- copy left
9999 mem: location 1084 is 0
9999 mem: location 1087 is 1101
9999 mem: storing 0 in location 1101
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1088
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1105
9999 mem: storing 7 in location 1106
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1108
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1109
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1114
9999 mem: storing 1114 in location 1110
9999 mem: incrementing refcount of 1114: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1110 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1110 is 1114
9999 mem: skipping refcount at 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1111
 104 run: *val <- copy x
9999 mem: location 1108 is 167
9999 mem: location 1111 is 1115
9999 mem: storing 167 in location 1115
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1110 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1110 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1112
 104 run: *next <- copy in
9999 mem: location 1109 is 0
9999 mem: location 1112 is 1116
9999 mem: storing 0 in location 1116
 104 run: jump-unless in, 
9999 mem: location 1109 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1110 is 1114
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1114
9999 mem: location 1088 is 1093
9999 mem: storing 1114 in location 1093
9999 mem: incrementing refcount of 1114: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1089
 103 run: *top-of-screen <- copy *init
9999 mem: location 1088 is 1093
9999 mem: location 1093 is 1114
9999 mem: location 1089 is 1094
9999 mem: storing 1114 in location 1094
9999 mem: incrementing refcount of 1114: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1090
 103 run: *y <- copy *init
9999 mem: location 1088 is 1093
9999 mem: location 1093 is 1114
9999 mem: location 1090 is 1096
9999 mem: storing 1114 in location 1096
9999 mem: incrementing refcount of 1114: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1086 is 1092
9999 mem: location 1082 is 1072
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1118
9999 mem: storing 8 in location 1119
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1121
9999 mem: incrementing refcount of 1092: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1072 in location 1122
9999 mem: incrementing refcount of 1072: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1122 is 1072
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9999 mem: storing 5 in location 1123
 104 run: jump-if len, 1:offset
9999 mem: location 1123 is 5
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1124
 104 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1121 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1121 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1093
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1093 is 1114
9999 mem: storing 1114 in location 1125
9999 mem: incrementing refcount of 1114: 4 -> 5
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 0
9999 mem: location 1123 is 5
9999 mem: storing 0 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1124 is 0
9998 run: address to copy is 1074
9998 run: its type is character
9999 mem: location 1074 is 97
9999 mem: storing 97 in location 1127
 104 run: insert_2 c, curr
9999 mem: location 1127 is 97
9999 mem: location 1125 is 1114
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1108
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1109
9999 mem: incrementing refcount of 1114: 5 -> 6
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1128
9999 mem: storing 1128 in location 1110
9999 mem: incrementing refcount of 1128: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1111
 105 run: *val <- copy x
9999 mem: location 1108 is 97
9999 mem: location 1111 is 1129
9999 mem: storing 97 in location 1129
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1109 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 0
9999 mem: storing 0 in location 1112
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1109 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1113
 105 run: *y <- copy new-node
9999 mem: location 1110 is 1128
9999 mem: location 1113 is 1116
9999 mem: storing 1128 in location 1116
9999 mem: incrementing refcount of 1128: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1113
 105 run: *y <- copy in
9999 mem: location 1109 is 1114
9999 mem: location 1113 is 1131
9999 mem: storing 1114 in location 1131
9999 mem: incrementing refcount of 1114: 6 -> 7
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1114
9999 mem: location 1110 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1113
 105 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1130
9999 mem: storing 0 in location 1130
 105 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1114
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1125 is 1114
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1132
9999 mem: storing 3 in location 1133
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 8 -> 7
9999 mem: storing 1128 in location 1125
9999 mem: incrementing refcount of 1128: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1124 is 0
9999 mem: storing 1 in location 1124
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 1
9999 mem: location 1123 is 5
9999 mem: storing 0 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1124 is 1
9998 run: address to copy is 1075
9998 run: its type is character
9999 mem: location 1075 is 10
9999 mem: storing 10 in location 1127
 104 run: insert_2 c, curr
9999 mem: location 1127 is 10
9999 mem: location 1125 is 1128
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1108
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1109
9999 mem: incrementing refcount of 1128: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1110
9999 mem: incrementing refcount of 1137: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1111
 105 run: *val <- copy x
9999 mem: location 1108 is 10
9999 mem: location 1111 is 1138
9999 mem: storing 10 in location 1138
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1114
9999 mem: location 1109 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 0
9999 mem: storing 0 in location 1112
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1114
9999 mem: location 1109 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1113
 105 run: *y <- copy new-node
9999 mem: location 1110 is 1137
9999 mem: location 1113 is 1130
9999 mem: storing 1137 in location 1130
9999 mem: incrementing refcount of 1137: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1113
 105 run: *y <- copy in
9999 mem: location 1109 is 1128
9999 mem: location 1113 is 1140
9999 mem: storing 1128 in location 1140
9999 mem: incrementing refcount of 1128: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1128
9999 mem: location 1110 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1113
 105 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1139
9999 mem: storing 0 in location 1139
 105 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1128
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1125 is 1128
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 7 -> 6
9999 mem: storing 1137 in location 1125
9999 mem: incrementing refcount of 1137: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1124 is 1
9999 mem: storing 2 in location 1124
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 2
9999 mem: location 1123 is 5
9999 mem: storing 0 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1124 is 2
9998 run: address to copy is 1076
9998 run: its type is character
9999 mem: location 1076 is 98
9999 mem: storing 98 in location 1127
 104 run: insert_2 c, curr
9999 mem: location 1127 is 98
9999 mem: location 1125 is 1137
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1108
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1109
9999 mem: incrementing refcount of 1137: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1141
9999 mem: storing 1141 in location 1110
9999 mem: incrementing refcount of 1141: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1111
 105 run: *val <- copy x
9999 mem: location 1108 is 98
9999 mem: location 1111 is 1142
9999 mem: storing 98 in location 1142
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1128
9999 mem: location 1109 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1112
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1128
9999 mem: location 1109 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1113
 105 run: *y <- copy new-node
9999 mem: location 1110 is 1141
9999 mem: location 1113 is 1139
9999 mem: storing 1141 in location 1139
9999 mem: incrementing refcount of 1141: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1113
 105 run: *y <- copy in
9999 mem: location 1109 is 1137
9999 mem: location 1113 is 1144
9999 mem: storing 1137 in location 1144
9999 mem: incrementing refcount of 1137: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1137
9999 mem: location 1110 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1113
 105 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1143
9999 mem: storing 0 in location 1143
 105 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1137
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1125 is 1137
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 7 -> 6
9999 mem: storing 1141 in location 1125
9999 mem: incrementing refcount of 1141: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1124 is 2
9999 mem: storing 3 in location 1124
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 3
9999 mem: location 1123 is 5
9999 mem: storing 0 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1124 is 3
9998 run: address to copy is 1077
9998 run: its type is character
9999 mem: location 1077 is 10
9999 mem: storing 10 in location 1127
 104 run: insert_2 c, curr
9999 mem: location 1127 is 10
9999 mem: location 1125 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1108
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1109
9999 mem: incrementing refcount of 1141: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1145
9999 mem: storing 1145 in location 1110
9999 mem: incrementing refcount of 1145: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1111
 105 run: *val <- copy x
9999 mem: location 1108 is 10
9999 mem: location 1111 is 1146
9999 mem: storing 10 in location 1146
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1137
9999 mem: location 1109 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1112
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1137
9999 mem: location 1109 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1113
 105 run: *y <- copy new-node
9999 mem: location 1110 is 1145
9999 mem: location 1113 is 1143
9999 mem: storing 1145 in location 1143
9999 mem: incrementing refcount of 1145: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1113
 105 run: *y <- copy in
9999 mem: location 1109 is 1141
9999 mem: location 1113 is 1148
9999 mem: storing 1141 in location 1148
9999 mem: incrementing refcount of 1141: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1110 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1113
 105 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1147
9999 mem: storing 0 in location 1147
 105 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1141
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1125 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 7 -> 6
9999 mem: storing 1145 in location 1125
9999 mem: incrementing refcount of 1145: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1124 is 3
9999 mem: storing 4 in location 1124
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 4
9999 mem: location 1123 is 5
9999 mem: storing 0 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1122 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1124 is 4
9998 run: address to copy is 1078
9998 run: its type is character
9999 mem: location 1078 is 99
9999 mem: storing 99 in location 1127
 104 run: insert_2 c, curr
9999 mem: location 1127 is 99
9999 mem: location 1125 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1108
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1109
9999 mem: incrementing refcount of 1145: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1149
9999 mem: storing 1149 in location 1110
9999 mem: incrementing refcount of 1149: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1111
 105 run: *val <- copy x
9999 mem: location 1108 is 99
9999 mem: location 1111 is 1150
9999 mem: storing 99 in location 1150
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1109 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1112
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1109 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1113
 105 run: *y <- copy new-node
9999 mem: location 1110 is 1149
9999 mem: location 1113 is 1147
9999 mem: storing 1149 in location 1147
9999 mem: incrementing refcount of 1149: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1113
 105 run: *y <- copy in
9999 mem: location 1109 is 1145
9999 mem: location 1113 is 1152
9999 mem: storing 1145 in location 1152
9999 mem: incrementing refcount of 1145: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1110 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1113
 105 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1151
9999 mem: storing 0 in location 1151
 105 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1145
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1125 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 7 -> 6
9999 mem: storing 1149 in location 1125
9999 mem: incrementing refcount of 1149: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1124 is 4
9999 mem: storing 5 in location 1124
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1124 is 5
9999 mem: location 1123 is 5
9999 mem: storing 1 in location 1126
 104 run: jump-if done?, 
9999 mem: location 1126 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1121 is 1092
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1092
9999 mem: decrementing refcount of 1092: 2 -> 1
9999 mem: storing 1092 in location 1086
9999 mem: incrementing refcount of 1092: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1090
 103 run: *y <- copy *init
9999 mem: location 1088 is 1093
9999 mem: location 1093 is 1114
9999 mem: location 1090 is 1096
9999 mem: decrementing refcount of 1114: 7 -> 6
9999 mem: storing 1114 in location 1096
9999 mem: incrementing refcount of 1114: 6 -> 7
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1083 is 1012
9999 mem: location 1086 is 1092
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1153
9999 mem: storing 28 in location 1154
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1157
9999 mem: incrementing refcount of 1092: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1157 is 1092
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1158
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1156 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 105 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1159
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1160
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1161
9999 mem: incrementing refcount of 1114: 7 -> 8
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1161 is 1114
9999 mem: storing 1114 in location 1162
9999 mem: incrementing refcount of 1114: 8 -> 9
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1114
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 10 -> 9
9999 mem: storing 1128 in location 1161
9999 mem: incrementing refcount of 1128: 7 -> 8
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1163
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1164
 104 run: column:number <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1166
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1167
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1168
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1183
9999 mem: storing 6 in location 1184
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1161 is 1128
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 1
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 104 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1165 is 0
9999 mem: location 1167 is 1101
9999 mem: location 1101 is 0
9999 mem: storing 1 in location 1171
 104 run: jump-unless at-cursor?, 
9999 mem: location 1171 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1162 is 1114
9999 mem: location 1168 is 1096
9999 mem: decrementing refcount of 1114: 9 -> 8
9999 mem: storing 1114 in location 1096
9999 mem: incrementing refcount of 1114: 8 -> 9
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1161 is 1128
9999 mem: skipping refcount at 1128
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 97
9999 mem: storing 97 in location 1172
 104 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 97
9999 mem: storing 0 in location 1173
 104 run: jump-unless newline?, 
9999 mem: location 1173 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1165 is 0
9999 mem: location 1160 is 4
9999 mem: storing 0 in location 1175
 104 run: jump-unless at-right?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1156 is 1012
9999 mem: location 1172 is 97
9999 mem: location 1163 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1191
9999 mem: storing 25 in location 1192
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1195
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 105 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1198
9990 schedule: print/render/new-editor/scenario_editor-scrolls-down-on-newline
 105 run: trace 90, [print-character], c
9999 mem: location 1195 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 97
9999 mem: storing 0 in location 1205
 105 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 105 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 5 in location 1208
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 97
9999 mem: storing 0 in location 1211
 105 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 5
9999 mem: storing 1030 in location 1213
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 7
9999 mem: location 1213 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1214
 105 run: *cursor-contents <- copy c
9999 mem: location 1195 is 97
9999 mem: location 1214 is 1030
9999 mem: storing 97 in location 1030
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1030
9999 mem: location 1030 is 97
9999 mem: location 1031 is 7
9999 mem: location 1213 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1215
 105 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1031
9999 mem: storing 7 in location 1031
 105 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 105 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1128
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 9 -> 8
9999 mem: storing 1137 in location 1161
9999 mem: incrementing refcount of 1137: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1162 is 1114
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 10 -> 9
9999 mem: storing 1128 in location 1162
9999 mem: incrementing refcount of 1128: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1165
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1161 is 1137
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 1
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 104 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1165 is 1
9999 mem: location 1167 is 1101
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1171
 104 run: jump-unless at-cursor?, 
9999 mem: location 1171 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1161 is 1137
9999 mem: skipping refcount at 1137
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 10
9999 mem: storing 10 in location 1172
 104 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 10
9999 mem: storing 1 in location 1173
 104 run: jump-unless newline?, 
9999 mem: location 1173 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1165 is 1
9999 mem: location 1167 is 1101
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1174
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1174 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1156 is 1012
9999 mem: location 1165 is 1
9999 mem: location 1160 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1122
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 105 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 9 -> 10
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 6 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 3 -> 4
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 6
9999 mem: storing 1032 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 7
9999 mem: location 1213 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1032
9999 mem: storing 32 in location 1032
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1213 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1033
9999 mem: storing 7 in location 1033
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1204 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 10 -> 9
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 10 -> 11
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 7 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 4 -> 5
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 7
9999 mem: storing 1034 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 7
9999 mem: location 1213 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1034
9999 mem: storing 32 in location 1034
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1213 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1035
9999 mem: storing 7 in location 1035
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1204 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 8 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 8
9999 mem: storing 1036 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1213 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1036
9999 mem: storing 32 in location 1036
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1213 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1037
9999 mem: storing 7 in location 1037
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1204 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 9 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 9
9999 mem: storing 1038 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1213 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1038
9999 mem: storing 32 in location 1038
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1213 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1039
9999 mem: storing 7 in location 1039
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1216 is 4
9999 mem: storing 1 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1164 is 1
9999 mem: storing 2 in location 1164
 104 run: column <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 2
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 2
9999 mem: location 1189 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 13 -> 14
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1137
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 9 -> 8
9999 mem: storing 1141 in location 1161
9999 mem: incrementing refcount of 1141: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1162 is 1128
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 11 -> 10
9999 mem: storing 1137 in location 1162
9999 mem: incrementing refcount of 1137: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1161 is 1141
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 2
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 104 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1161 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 98
9999 mem: storing 98 in location 1172
 104 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 98
9999 mem: storing 0 in location 1173
 104 run: jump-unless newline?, 
9999 mem: location 1173 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1165 is 0
9999 mem: location 1160 is 4
9999 mem: storing 0 in location 1175
 104 run: jump-unless at-right?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1156 is 1012
9999 mem: location 1172 is 98
9999 mem: location 1163 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1195
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 105 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1198
 105 run: trace 90, [print-character], c
9999 mem: location 1195 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 98
9999 mem: storing 0 in location 1205
 105 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 105 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1208
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 7 -> 8
 105 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 98
9999 mem: storing 0 in location 1211
 105 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 10
9999 mem: storing 1040 in location 1213
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1213 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1214
 105 run: *cursor-contents <- copy c
9999 mem: location 1195 is 98
9999 mem: location 1214 is 1040
9999 mem: storing 98 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1213 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1215
 105 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 105 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 9 -> 8
9999 mem: storing 1145 in location 1161
9999 mem: incrementing refcount of 1145: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1162 is 1137
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 11 -> 10
9999 mem: storing 1141 in location 1162
9999 mem: incrementing refcount of 1141: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1165
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1161 is 1145
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 2
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 104 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1161 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 10
9999 mem: storing 10 in location 1172
 104 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/new-editor/scenario_editor-scrolls-down-on-newline
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 10
9999 mem: storing 1 in location 1173
 104 run: jump-unless newline?, 
9999 mem: location 1173 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1156 is 1012
9999 mem: location 1165 is 1
9999 mem: location 1160 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1122
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 105 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 11
9999 mem: storing 1042 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1213 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1042
9999 mem: storing 32 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1213 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1204 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 12
9999 mem: storing 1044 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1213 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1044
9999 mem: storing 32 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1213 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1204 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 18 -> 19
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 13
9999 mem: storing 1046 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1213 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1213 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1204 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 19 -> 20
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 106 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 106 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 106 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 106 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 106 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1208
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 106 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 14
9999 mem: storing 1048 in location 1213
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1213 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1214
 106 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1213 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1215
 106 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1216 is 4
9999 mem: storing 1 in location 1217
 106 run: jump-if at-right?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 20 -> 19
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 105 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1164 is 2
9999 mem: storing 3 in location 1164
 104 run: column <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 3
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 3
9999 mem: location 1189 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 21 -> 20
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 20 -> 21
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 4 -> 5
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1149 in location 1161
9999 mem: incrementing refcount of 1149: 5 -> 6
 104 run: prev <- next_2 prev
9999 mem: location 1162 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 11 -> 10
9999 mem: storing 1145 in location 1162
9999 mem: incrementing refcount of 1145: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1161 is 1149
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 3
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 104 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1170
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1161 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1172
 104 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 99
9999 mem: storing 0 in location 1173
 104 run: jump-unless newline?, 
9999 mem: location 1173 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1165 is 0
9999 mem: location 1160 is 4
9999 mem: storing 0 in location 1175
 104 run: jump-unless at-right?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1156 is 1012
9999 mem: location 1172 is 99
9999 mem: location 1163 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1195
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 105 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 105 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1198
 105 run: trace 90, [print-character], c
9999 mem: location 1195 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 105 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 99
9999 mem: storing 0 in location 1205
 105 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 105 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 15 in location 1208
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 99
9999 mem: storing 0 in location 1211
 105 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 15
9999 mem: storing 1050 in location 1213
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1213 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1214
 105 run: *cursor-contents <- copy c
9999 mem: location 1195 is 99
9999 mem: location 1214 is 1050
9999 mem: storing 99 in location 1050
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1050
9999 mem: location 1050 is 99
9999 mem: location 1051 is 7
9999 mem: location 1213 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1215
 105 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1051
9999 mem: storing 7 in location 1051
 105 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 105 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1161 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1136
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1149: 7 -> 6
9999 mem: storing 0 in location 1161
 104 run: prev <- next_2 prev
9999 mem: location 1162 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 11 -> 10
9999 mem: storing 1149 in location 1162
9999 mem: incrementing refcount of 1149: 7 -> 8
 104 run: column <- add column, 1
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1165
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1177
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1161 is 0
9999 mem: location 1177 is 1095
9999 mem: storing 0 in location 1095
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1170
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1165 is 1
9999 mem: location 1167 is 1101
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1178
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1170 is 0
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1179
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 1
9999 mem: storing 0 in location 1180
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1181
 104 run: jump-unless before-cursor?, 
9999 mem: location 1181 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1182
 104 run: *bottom <- copy row
9999 mem: location 1164 is 3
9999 mem: location 1182 is 1099
9999 mem: storing 3 in location 1099
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1164 is 3
9999 mem: location 1165 is 1
9999 mem: location 1156 is 1012
9999 mem: location 1157 is 1092
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 1
9998 run: result 2 is 1012
9998 run: result 3 is 1092
9999 mem: decrementing refcount of 1012: 22 -> 21
9999 mem: storing 1012 in location 1083
9999 mem: incrementing refcount of 1012: 21 -> 22
9999 mem: decrementing refcount of 1092: 3 -> 2
9999 mem: storing 1092 in location 1086
9999 mem: incrementing refcount of 1092: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1086 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1091
 103 run: *indent? <- copy 1/true
9999 mem: location 1091 is 1102
9999 mem: storing 1 in location 1102
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1086 is 1092
9999 mem: location 1083 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1092
9999 mem: storing 1092 in location 2
9999 mem: incrementing refcount of 1092: 3 -> 4
 102 run: assume-console [
    left-click 3, 4
    type [
]
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"4": "literal"}
9992 load: after rewriting: left-click 3, 4
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n": "literal-string"}
9992 load: after rewriting: type [
]
9999 mem: storing 'left-click' event starting at 1220
9999 mem: storing 'type' event starting at 1224
9999 mem: storing 'text' tag at 1224
9999 mem: storing character 10 at 1225
9999 mem: storing console in 1228
9999 mem: storing console data in 1230
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9992 transform: checking variant 0: recipe editor-event-loop {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>} -> {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1228
9999 mem: location 2 is 1092
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1231
9999 mem: storing 14 in location 1232
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 22 -> 23
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1235
9999 mem: incrementing refcount of 1228: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1236
9999 mem: incrementing refcount of 1092: 4 -> 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1237
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1238
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1234 is 1012
9999 mem: location 1237 is 1
9999 mem: location 1238 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 23 -> 24
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1235 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1247
9999 mem: storing 12 in location 1248
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1250
9999 mem: incrementing refcount of 1228: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1250 is 1228
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1251
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1230 is 1218
9999 mem: storing 1218 in location 1252
9999 mem: incrementing refcount of 1218: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1252 is 1218
9999 mem: skipping refcount at 1218
9999 mem: storing 2 in location 1253
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 0
9999 mem: location 1253 is 2
9999 mem: storing 0 in location 1254
 105 run: jump-unless done?, 
9999 mem: location 1254 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1252 is 1218
9999 mem: skipping refcount at 1218
9998 run: base address is 1219
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 0
9998 run: address to copy is 1220
9998 run: its type is event
9999 mem: location 1220 is 2
9999 mem: location 1221 is 65513
9999 mem: location 1222 is 3
9999 mem: location 1223 is 4
9999 mem: storing 2 in location 1256
9999 mem: storing 65513 in location 1257
9999 mem: storing 3 in location 1258
9999 mem: storing 4 in location 1259
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 0
9999 mem: location 1251 is 1229
9999 mem: storing 1 in location 1229
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1256 is 2
9999 mem: location 1257 is 65513
9999 mem: location 1258 is 3
9999 mem: location 1259 is 4
9999 mem: location 1250 is 1228
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 4]
9998 run: result 1 is 1228
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1239
9999 mem: storing 65513 in location 1240
9999 mem: storing 3 in location 1241
9999 mem: storing 4 in location 1242
9999 mem: decrementing refcount of 1228: 2 -> 1
9999 mem: storing 1228 in location 1235
9999 mem: incrementing refcount of 1228: 1 -> 2
9999 mem: storing 1 in location 1243
9999 mem: storing 0 in location 1244
 104 run: jump-unless found?, 
9999 mem: location 1243 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1239 is 2
9999 mem: location 1240 is 65513
9999 mem: location 1241 is 3
9999 mem: location 1242 is 4
9999 mem: storing 1240 in location 1245
 104 run: jump-unless t, 
9999 mem: location 1245 is 1240
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1234 is 1012
9999 mem: location 1236 is 1092
9999 mem: location 1245 is 1240
9999 mem: location 1240 is 65513
9999 mem: location 1241 is 3
9999 mem: location 1242 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1261
9999 mem: storing 27 in location 1262
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1265
9999 mem: incrementing refcount of 1092: 5 -> 6
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1266
9999 mem: storing 3 in location 1267
9999 mem: storing 4 in location 1268
 105 run: jump-if editor, 1:offset
9999 mem: location 1265 is 1092
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1266 is 65513
9999 mem: location 1267 is 3
9999 mem: location 1268 is 4
9998 run: address to copy is 1267
9998 run: its type is number
9999 mem: location 1267 is 3
9999 mem: storing 3 in location 1269
 105 run: jump-if click-row, 1:offset
9999 mem: location 1269 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1266 is 65513
9999 mem: location 1267 is 3
9999 mem: location 1268 is 4
9998 run: address to copy is 1268
9998 run: its type is number
9999 mem: location 1268 is 4
9999 mem: storing 4 in location 1270
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1271
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1270 is 4
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1272
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1272 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1273
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1270 is 4
9999 mem: location 1273 is 4
9999 mem: storing 0 in location 1274
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1274 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 1
9999 mem: storing 1 in location 1275
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1276
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1277
9999 mem: incrementing refcount of 1114: 9 -> 10
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1264 is 1012
9999 mem: location 1265 is 1092
9999 mem: location 1269 is 3
9999 mem: location 1270 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1290
9999 mem: storing 26 in location 1291
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1293
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1294
9999 mem: incrementing refcount of 1092: 6 -> 7
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1295
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1296
 106 run: jump-if editor, 1:offset
9999 mem: location 1294 is 1092
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1297
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1298
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1293 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 26 -> 27
 107 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 107 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1299
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1300
9999 mem: incrementing refcount of 1114: 10 -> 11
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1300 is 1114
9999 mem: storing 1114 in location 1301
9999 mem: incrementing refcount of 1114: 11 -> 12
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1114
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 13 -> 12
9999 mem: storing 1128 in location 1300
9999 mem: incrementing refcount of 1128: 11 -> 12
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1302
 106 run: column:number <- copy left
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1303
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1304
 106 run: *cursor-row <- copy target-row
9999 mem: location 1295 is 3
9999 mem: location 1304 is 1100
9999 mem: storing 3 in location 1100
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1305
 106 run: *cursor-column <- copy target-column
9999 mem: location 1296 is 4
9999 mem: location 1305 is 1101
9999 mem: storing 4 in location 1101
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1114
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 4
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1294 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1306
 106 run: jump-unless curr, 
9999 mem: location 1300 is 1128
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 1
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1307
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-newline
 106 run: jump-if off-screen?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 1
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1300 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1300 is 1128
9999 mem: skipping refcount at 1128
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 97
9999 mem: storing 97 in location 1310
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1310 is 97
9999 mem: storing 0 in location 1311
 106 run: jump-unless newline?, 
9999 mem: location 1311 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1303 is 0
9999 mem: location 1298 is 4
9999 mem: storing 0 in location 1313
 106 run: jump-unless at-right?, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1128
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 13 -> 12
9999 mem: storing 1137 in location 1300
9999 mem: incrementing refcount of 1137: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1301 is 1114
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 13 -> 12
9999 mem: storing 1128 in location 1301
9999 mem: incrementing refcount of 1128: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1303 is 0
9999 mem: storing 1 in location 1303
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1300 is 1137
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 1
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1307
 106 run: jump-if off-screen?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 1
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1300 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1300 is 1137
9999 mem: skipping refcount at 1137
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 10
9999 mem: storing 10 in location 1310
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1310 is 10
9999 mem: storing 1 in location 1311
 106 run: jump-unless newline?, 
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 1
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1302 is 1
9999 mem: storing 2 in location 1302
 106 run: column <- copy left
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1303
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1137
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 13 -> 12
9999 mem: storing 1141 in location 1300
9999 mem: incrementing refcount of 1141: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1301 is 1128
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 15 -> 14
9999 mem: storing 1137 in location 1301
9999 mem: incrementing refcount of 1137: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1300 is 1141
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 2
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1307
 106 run: jump-if off-screen?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 2
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1300 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1300 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 98
9999 mem: storing 98 in location 1310
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1310 is 98
9999 mem: storing 0 in location 1311
 106 run: jump-unless newline?, 
9999 mem: location 1311 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1303 is 0
9999 mem: location 1298 is 4
9999 mem: storing 0 in location 1313
 106 run: jump-unless at-right?, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 13 -> 12
9999 mem: storing 1145 in location 1300
9999 mem: incrementing refcount of 1145: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1301 is 1137
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 15 -> 14
9999 mem: storing 1141 in location 1301
9999 mem: incrementing refcount of 1141: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1303 is 0
9999 mem: storing 1 in location 1303
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1300 is 1145
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 2
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1307
 106 run: jump-if off-screen?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 2
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1300 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1300 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 10
9999 mem: storing 10 in location 1310
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1310 is 10
9999 mem: storing 1 in location 1311
 106 run: jump-unless newline?, 
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 2
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1302 is 2
9999 mem: storing 3 in location 1302
 106 run: column <- copy left
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1303
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 13 -> 12
9999 mem: storing 1149 in location 1300
9999 mem: incrementing refcount of 1149: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1301 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 15 -> 14
9999 mem: storing 1145 in location 1301
9999 mem: incrementing refcount of 1145: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1300 is 1149
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 3
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1307
 106 run: jump-if off-screen?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 3
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 1 in location 1308
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1308 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1303 is 0
9999 mem: location 1305 is 1101
9999 mem: location 1101 is 4
9999 mem: storing 0 in location 1309
 106 run: jump-unless at-cursor?, 
9999 mem: location 1309 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1300 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1300 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1310
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1310 is 99
9999 mem: storing 0 in location 1311
 106 run: jump-unless newline?, 
9999 mem: location 1311 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1303 is 0
9999 mem: location 1298 is 4
9999 mem: storing 0 in location 1313
 106 run: jump-unless at-right?, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1300 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1136
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1149: 11 -> 10
9999 mem: storing 0 in location 1300
 106 run: prev <- next_2 prev
9999 mem: location 1301 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 15 -> 14
9999 mem: storing 1149 in location 1301
9999 mem: incrementing refcount of 1149: 11 -> 12
 106 run: column <- add column, 1
9999 mem: location 1303 is 0
9999 mem: storing 1 in location 1303
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1300 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1302 is 3
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 1 in location 1308
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1303 is 1
9999 mem: location 1305 is 1101
9999 mem: location 1101 is 4
9999 mem: storing 1 in location 1314
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1308 is 1
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1315
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1302 is 3
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1316
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1315 is 1
9999 mem: location 1316 is 0
9999 mem: storing 1 in location 1317
 106 run: jump-unless before-cursor?, 
9999 mem: location 1317 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1302 is 3
9999 mem: location 1304 is 1100
9999 mem: storing 3 in location 1100
 106 run: *cursor-column <- copy column
9999 mem: location 1303 is 1
9999 mem: location 1305 is 1101
9999 mem: storing 1 in location 1101
 106 run: *before-cursor <- copy prev
9999 mem: location 1301 is 1149
9999 mem: location 1306 is 1096
9999 mem: decrementing refcount of 1114: 12 -> 11
9999 mem: storing 1149 in location 1096
9999 mem: incrementing refcount of 1149: 12 -> 13
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1294 is 1092
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1092
9999 mem: decrementing refcount of 1092: 7 -> 6
9999 mem: storing 1092 in location 1265
9999 mem: incrementing refcount of 1092: 6 -> 7
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1278
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 1279
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1280
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1265 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1281
9999 mem: incrementing refcount of 1114: 11 -> 12
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1278 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1283
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1275 is 1
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1114
9999 mem: location 1279 is 3
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1114
9999 mem: location 1278 is 0
9999 mem: location 1283 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1283 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1114 in location 1004
9999 mem: storing 3 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1114 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1265 is 1092
9999 mem: location 1283 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1318
9999 mem: storing 5 in location 1319
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1321
9999 mem: incrementing refcount of 1092: 7 -> 8
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1322
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1323
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1322 is 1000
9999 mem: location 1323 is 1103
9999 mem: location 1103 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1186
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1187
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1325
9999 mem: storing 1325 in location 1188
9999 mem: incrementing refcount of 1325: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1188 is 1325
9999 mem: skipping refcount at 1325
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1326 is 0
9999 mem: location 1327 is 0
9999 mem: location 1188 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9999 mem: storing 1326 in location 1189
 107 run: *val <- copy x
9999 mem: location 1186 is 1000
9999 mem: location 1189 is 1326
9999 mem: storing 1000 in location 1326
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1188 is 1325
9999 mem: skipping refcount at 1325
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1326 is 1000
9999 mem: location 1327 is 0
9999 mem: location 1188 is 1325
9999 mem: skipping refcount at 1325
9999 type: type deduced to be address$
9998 run: address to copy is 1327
9999 mem: storing 1327 in location 1190
 107 run: *next <- copy in
9999 mem: location 1187 is 0
9999 mem: location 1190 is 1327
9999 mem: storing 0 in location 1327
 107 run: reply result
9999 mem: location 1188 is 1325
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1325
9999 mem: location 1323 is 1103
9999 mem: storing 1325 in location 1103
9999 mem: incrementing refcount of 1325: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1324
 106 run: *redo <- copy 0
9999 mem: location 1324 is 1104
9999 mem: storing 0 in location 1104
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1321 is 1092
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1092
9999 mem: decrementing refcount of 1092: 8 -> 7
9999 mem: storing 1092 in location 1265
9999 mem: incrementing refcount of 1092: 7 -> 8
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 1237
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1238
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1234 is 1012
9999 mem: location 1237 is 3
9999 mem: location 1238 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 3
9999 mem: location 1189 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 27 -> 28
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1235 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1250
9999 mem: incrementing refcount of 1228: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1250 is 1228
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 1
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1251
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 1
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1230 is 1218
9999 mem: storing 1218 in location 1252
9999 mem: incrementing refcount of 1218: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1252 is 1218
9999 mem: skipping refcount at 1218
9999 mem: storing 2 in location 1253
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 1
9999 mem: location 1253 is 2
9999 mem: storing 0 in location 1254
 105 run: jump-unless done?, 
9999 mem: location 1254 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1252 is 1218
9999 mem: skipping refcount at 1218
9998 run: base address is 1219
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 1
9998 run: address to copy is 1224
9998 run: its type is event
9999 mem: location 1224 is 0
9999 mem: location 1225 is 10
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1256
9999 mem: storing 10 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 0 in location 1259
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 1
9999 mem: location 1251 is 1229
9999 mem: storing 2 in location 1229
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1256 is 0
9999 mem: location 1257 is 10
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1250 is 1228
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 10, 0, 0]
9998 run: result 1 is 1228
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1239
9999 mem: storing 10 in location 1240
9999 mem: storing 0 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: decrementing refcount of 1228: 3 -> 2
9999 mem: storing 1228 in location 1235
9999 mem: incrementing refcount of 1228: 2 -> 3
9999 mem: storing 1 in location 1243
9999 mem: storing 0 in location 1244
 104 run: jump-unless found?, 
9999 mem: location 1243 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1239 is 0
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: storing 0 in location 1245
 104 run: jump-unless t, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1234 is 1012
9999 mem: location 1236 is 1092
9999 mem: location 1239 is 0
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1328
9999 mem: storing 85 in location 1329
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1331
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1332
9999 mem: incrementing refcount of 1092: 8 -> 9
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1333
9999 mem: storing 10 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1337
 105 run: jump-if editor, 1:offset
9999 mem: location 1332 is 1092
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1331 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1136
 106 run: reply width:number
9999 mem: location 1136 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1338
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1331 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 30 -> 31
 106 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 106 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1339
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1340
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1341
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1342
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1343
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1344
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1343 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 1345
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1344 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1346
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1333 is 0
9999 mem: location 1334 is 10
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 1334 in location 1347
 105 run: jump-unless c, 
9999 mem: location 1347 is 1334
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1348
 105 run: jump-unless redo?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1359
 105 run: jump-unless undo?, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1364
 105 run: jump-unless page-up?, 
9999 mem: location 1364 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1380
 105 run: jump-unless page-down?, 
9999 mem: location 1380 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1381
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1386
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1387
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1387 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1388
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1389
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 0 in location 1393
 105 run: jump-unless tab?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1347 is 1334
9999 mem: location 1334 is 10
9999 mem: storing 1 in location 1397
 105 run: jump-unless newline?, 
9999 mem: location 1397 is 1
9998 run: jump-unless fell through
 105 run: cursor-row-before:number <- copy *cursor-row
9999 mem: location 1343 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 1398
 105 run: cursor-column-before:number <- copy *cursor-column
9999 mem: location 1344 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1399
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1382
9999 mem: incrementing refcount of 1114: 12 -> 13
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1342 is 1096
9999 mem: location 1096 is 1149
9999 mem: storing 1149 in location 1394
9999 mem: incrementing refcount of 1149: 13 -> 14
 105 run: editor <- insert-new-line-and-indent editor, screen
9999 mem: location 1332 is 1092
9999 mem: location 1331 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1415
9999 mem: storing 21 in location 1416
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1418
9999 mem: incrementing refcount of 1092: 9 -> 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1419
9999 mem: incrementing refcount of 1012: 31 -> 32
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1420
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1421
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1422
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1423
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1149
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 1
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1424
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 32 -> 33
 107 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 107 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1425
 106 run: insert_2 10/newline, *before-cursor
9999 mem: location 1422 is 1096
9999 mem: location 1096 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1108
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1109
9999 mem: incrementing refcount of 1149: 14 -> 15
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1438
9999 mem: storing 1438 in location 1110
9999 mem: incrementing refcount of 1438: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9998 run: address to copy is 1439
9999 mem: storing 1439 in location 1111
 107 run: *val <- copy x
9999 mem: location 1108 is 10
9999 mem: location 1111 is 1439
9999 mem: storing 10 in location 1439
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1109 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1109 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1112
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1109 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1109 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1113
 107 run: *y <- copy new-node
9999 mem: location 1110 is 1438
9999 mem: location 1113 is 1151
9999 mem: storing 1438 in location 1151
9999 mem: incrementing refcount of 1438: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9999 type: type deduced to be character$
9998 run: address to copy is 1441
9999 mem: storing 1441 in location 1113
 107 run: *y <- copy in
9999 mem: location 1109 is 1149
9999 mem: location 1113 is 1441
9999 mem: storing 1149 in location 1441
9999 mem: incrementing refcount of 1149: 15 -> 16
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1149
9999 mem: location 1110 is 1438
9999 mem: skipping refcount at 1438
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 mem: storing 1440 in location 1113
 107 run: *y <- copy next-node
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1440
9999 mem: storing 0 in location 1440
 107 run: jump-if next-node, 1:offset
9999 mem: location 1112 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1109 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1422 is 1096
9999 mem: location 1096 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1438
9999 mem: storing 1438 in location 1136
9999 mem: incrementing refcount of 1438: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1438
9999 mem: location 1422 is 1096
9999 mem: decrementing refcount of 1149: 17 -> 16
9999 mem: storing 1438 in location 1096
9999 mem: incrementing refcount of 1438: 3 -> 4
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1420 is 1100
9999 mem: location 1100 is 3
9999 mem: location 1420 is 1100
9999 mem: storing 4 in location 1100
 106 run: *cursor-column <- copy left
9999 mem: location 1423 is 0
9999 mem: location 1421 is 1101
9999 mem: storing 0 in location 1101
 106 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1420 is 1100
9999 mem: location 1100 is 4
9999 mem: location 1425 is 4
9999 mem: storing 1 in location 1426
 106 run: jump-unless below-screen?, 
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [scroll down]
  10 app: scroll down 
 106 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 4
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1427
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 4
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1423
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1114
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 4
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1424
 106 run: max:number <- subtract right, left
9999 mem: location 1424 is 4
9999 mem: location 1423 is 0
9999 mem: storing 4 in location 1428
 106 run: old-top:address:shared:duplex-list:character <- copy *top-of-screen
9999 mem: location 1427 is 1094
9999 mem: location 1094 is 1114
9999 mem: storing 1114 in location 1429
9999 mem: incrementing refcount of 1114: 13 -> 14
 106 run: *top-of-screen <- before-start-of-next-line *top-of-screen, max
9999 mem: location 1427 is 1094
9999 mem: location 1094 is 1114
9999 mem: location 1428 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: original:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1121
9999 mem: incrementing refcount of 1114: 14 -> 15
 107 run: max:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1122
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1123
 107 run: curr:address:shared:duplex-list:character <- copy original
9999 mem: location 1121 is 1114
9999 mem: storing 1114 in location 1124
9999 mem: incrementing refcount of 1114: 15 -> 16
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1124 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1124 is 1114
9999 mem: skipping refcount at 1114
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 167
9999 mem: storing 167 in location 1125
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1125 is 167
9999 mem: storing 0 in location 1126
 107 run: jump-unless at-newline?, 
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1124 is 1114
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1123 is 0
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1124 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1124 is 1114
9999 mem: skipping refcount at 1114
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 167
9999 mem: storing 167 in location 1125
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1125 is 167
9999 mem: storing 0 in location 1126
 107 run: jump-if at-newline?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1124 is 1114
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1135
9999 mem: incrementing refcount of 1114: 16 -> 17
 108 run: jump-if in, 1:offset
9999 mem: location 1135 is 1114
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1115 is 167
9999 mem: location 1116 is 1128
9999 mem: location 1117 is 0
9999 mem: location 1135 is 1114
9999 mem: skipping refcount at 1114
9999 type: type deduced to be character$
9998 run: address to copy is 1116
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1116 is 1128
9999 mem: storing 1128 in location 1136
9999 mem: incrementing refcount of 1128: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1128
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1128
9999 mem: decrementing refcount of 1114: 17 -> 16
9999 mem: storing 1128 in location 1124
9999 mem: incrementing refcount of 1128: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1123 is 0
9999 mem: storing 1 in location 1123
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1124 is 1128
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1123 is 1
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1124 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1124 is 1128
9999 mem: skipping refcount at 1128
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 97
9999 mem: storing 97 in location 1125
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1125 is 97
9999 mem: storing 0 in location 1126
 107 run: jump-if at-newline?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1124 is 1128
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1128 in location 1135
9999 mem: incrementing refcount of 1128: 16 -> 17
 108 run: jump-if in, 1:offset
9999 mem: location 1135 is 1128
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1129 is 97
9999 mem: location 1130 is 1137
9999 mem: location 1131 is 1114
9999 mem: location 1135 is 1128
9999 mem: skipping refcount at 1128
9999 type: type deduced to be character$
9998 run: address to copy is 1130
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1130 is 1137
9999 mem: storing 1137 in location 1136
9999 mem: incrementing refcount of 1137: 14 -> 15
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1137
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1137
9999 mem: decrementing refcount of 1128: 17 -> 16
9999 mem: storing 1137 in location 1124
9999 mem: incrementing refcount of 1137: 15 -> 16
 107 run: count <- add count, 1
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1124 is 1137
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1123 is 2
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1124 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1124 is 1137
9999 mem: skipping refcount at 1137
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 10
9999 mem: storing 10 in location 1125
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1125 is 10
9999 mem: storing 1 in location 1126
 107 run: jump-if at-newline?, 
9999 mem: location 1126 is 1
9998 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1124 is 1137
9998 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1124 is 1137
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1137
9999 mem: location 1427 is 1094
9999 mem: decrementing refcount of 1114: 16 -> 15
9999 mem: storing 1137 in location 1094
9999 mem: incrementing refcount of 1137: 16 -> 17
 106 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1429 is 1114
9999 mem: location 1427 is 1094
9999 mem: location 1094 is 1137
9999 mem: storing 0 in location 1430
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1431
 106 run: jump-unless no-movement?, 1:offset
9999 mem: location 1430 is 0
9998 run: jumping to instruction 28
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1431
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1420 is 1100
9999 mem: location 1100 is 4
9999 mem: location 1420 is 1100
9999 mem: storing 3 in location 1100
 106 run: indent?:boolean <- get *editor, indent?:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1102
9998 run: its type is boolean
9999 mem: location 1102 is 1
9999 mem: storing 1 in location 1432
 106 run: jump-if indent?, 1:offset
9999 mem: location 1432 is 1
9998 run: jumping to instruction 34
 106 run: d:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1418 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1093
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1093 is 1114
9999 mem: storing 1114 in location 1433
9999 mem: incrementing refcount of 1114: 15 -> 16
 106 run: end-of-previous-line:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1422 is 1096
9999 mem: location 1096 is 1438
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1135
9999 mem: incrementing refcount of 1438: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1438
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1149
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: type deduced to be character$
9998 run: address to copy is 1441
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1441 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 16 -> 17
 107 run: reply result
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 1434
9999 mem: incrementing refcount of 1149: 17 -> 18
 106 run: indent:number <- line-indent end-of-previous-line, d
9999 mem: location 1434 is 1149
9999 mem: location 1433 is 1114
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1121
9999 mem: incrementing refcount of 1149: 18 -> 19
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1114 in location 1122
9999 mem: incrementing refcount of 1114: 16 -> 17
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1123
 107 run: jump-if curr, 1:offset
9999 mem: location 1121 is 1149
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1121 is 1149
9999 mem: location 1122 is 1114
9999 mem: storing 0 in location 1124
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1124 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1121 is 1149
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 19 -> 20
 108 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 14 -> 15
 108 run: reply result
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1149: 20 -> 19
9999 mem: storing 1145 in location 1121
9999 mem: incrementing refcount of 1145: 15 -> 16
 107 run: jump-unless curr, 
9999 mem: location 1121 is 1145
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1121 is 1145
9999 mem: location 1122 is 1114
9999 mem: storing 0 in location 1124
 107 run: jump-if at-start?, 
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1121 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 10
9999 mem: storing 10 in location 1125
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1125 is 10
9999 mem: storing 1 in location 1126
 107 run: jump-if at-newline?, 
9999 mem: location 1126 is 1
9998 run: jumping to instruction 27
 107 run: reply result:number
9999 mem: location 1123 is 0
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1435
 106 run: i:number <- copy 0
9999 mem: storing 0 in location 1436
 106 run: indent-done?:boolean <- greater-or-equal i, indent
9999 mem: location 1436 is 0
9999 mem: location 1435 is 0
9999 mem: storing 1 in location 1437
 106 run: jump-if indent-done?, 
9999 mem: location 1437 is 1
9998 run: jumping to instruction 44
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1418 is 1092
9999 mem: location 1419 is 1012
9999 mem: location 1431 is 1
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1092
9999 mem: decrementing refcount of 1092: 10 -> 9
9999 mem: storing 1092 in location 1332
9999 mem: incrementing refcount of 1092: 9 -> 10
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1332 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1137
9999 mem: storing 1137 in location 1384
9999 mem: incrementing refcount of 1137: 17 -> 18
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1394 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1438
9999 mem: storing 1438 in location 1136
9999 mem: incrementing refcount of 1438: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1438
9999 mem: storing 1438 in location 1358
9999 mem: incrementing refcount of 1438: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1342 is 1096
9999 mem: location 1096 is 1438
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1135
9999 mem: incrementing refcount of 1438: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1135 is 1438
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1149
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1136
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1396
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1060 in location 1350
9999 mem: incrementing refcount of 1060: 0 -> 1
 105 run: *op <- merge 0/insert-operation, cursor-row-before, cursor-column-before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 0/never-coalesce
9999 mem: location 1398 is 3
9999 mem: location 1399 is 1
9999 mem: location 1382 is 1114
9999 mem: location 1343 is 1100
9999 mem: location 1100 is 3
9999 mem: location 1344 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1384 is 1137
9999 mem: location 1358 is 1438
9999 mem: location 1396 is 0
9999 mem: location 1350 is 1060
9999 mem: skipping refcount at 1060
9999 mem: location 1350 is 1060
9999 mem: skipping refcount at 1060
9999 mem: storing 0 in location 1061
9999 mem: storing 3 in location 1062
9999 mem: storing 1 in location 1063
9999 mem: storing 1114 in location 1064
9999 mem: storing 3 in location 1065
9999 mem: storing 0 in location 1066
9999 mem: storing 1137 in location 1067
9999 mem: storing 1438 in location 1068
9999 mem: storing 0 in location 1069
9999 mem: storing 0 in location 1070
 105 run: editor <- add-operation editor, op
9999 mem: location 1332 is 1092
9999 mem: location 1350 is 1060
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1321
9999 mem: incrementing refcount of 1092: 10 -> 11
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1060 in location 1322
9999 mem: incrementing refcount of 1060: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1325
9999 mem: location 1104 is 0
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1323
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1322 is 1060
9999 mem: location 1323 is 1103
9999 mem: location 1103 is 1325
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1060 in location 1186
9999 mem: incrementing refcount of 1060: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1187
9999 mem: incrementing refcount of 1325: 2 -> 3
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1442
9999 mem: storing 1442 in location 1188
9999 mem: incrementing refcount of 1442: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1188 is 1442
9999 mem: skipping refcount at 1442
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1443 is 0
9999 mem: location 1444 is 0
9999 mem: location 1188 is 1442
9999 mem: skipping refcount at 1442
9998 run: address to copy is 1443
9999 mem: storing 1443 in location 1189
 107 run: *val <- copy x
9999 mem: location 1186 is 1060
9999 mem: location 1189 is 1443
9999 mem: storing 1060 in location 1443
9999 mem: incrementing refcount of 1060: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1188 is 1442
9999 mem: skipping refcount at 1442
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1443 is 1060
9999 mem: location 1444 is 0
9999 mem: location 1188 is 1442
9999 mem: skipping refcount at 1442
9999 type: type deduced to be address$
9998 run: address to copy is 1444
9999 mem: storing 1444 in location 1190
 107 run: *next <- copy in
9999 mem: location 1187 is 1325
9999 mem: location 1190 is 1444
9999 mem: storing 1325 in location 1444
9999 mem: incrementing refcount of 1325: 3 -> 4
 107 run: reply result
9999 mem: location 1188 is 1442
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1442
9999 mem: location 1323 is 1103
9999 mem: decrementing refcount of 1325: 4 -> 3
9999 mem: storing 1442 in location 1103
9999 mem: incrementing refcount of 1442: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1321 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1324
 106 run: *redo <- copy 0
9999 mem: location 1324 is 1104
9999 mem: storing 0 in location 1104
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1321 is 1092
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1092
9999 mem: decrementing refcount of 1092: 11 -> 10
9999 mem: storing 1092 in location 1332
9999 mem: incrementing refcount of 1092: 10 -> 11
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1337
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1331 is 1012
9999 mem: location 1332 is 1092
9999 mem: location 1337 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1092
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 33 -> 32
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 32 -> 33
9999 mem: decrementing refcount of 1092: 11 -> 10
9999 mem: storing 1092 in location 1236
9999 mem: incrementing refcount of 1092: 10 -> 11
9999 mem: storing 1 in location 1246
 104 run: jump-unless go-render?, 
9999 mem: location 1246 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1234 is 1012
9999 mem: location 1236 is 1092
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9990 schedule: editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-newline
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1108
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1109
9999 mem: incrementing refcount of 1092: 11 -> 12
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1109 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1109 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1110
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1109 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1109 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1111
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1108 is 1012
9999 mem: location 1109 is 1092
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 34 -> 35
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1092 in location 1157
9999 mem: incrementing refcount of 1092: 12 -> 13
 106 run: jump-if editor, 1:offset
9999 mem: location 1157 is 1092
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1097
9998 run: its type is number
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1158
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1156 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 35 -> 36
 107 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 107 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1159
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1098
9998 run: its type is number
9999 mem: location 1098 is 4
9999 mem: storing 4 in location 1160
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1094
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1094 is 1137
9999 mem: storing 1137 in location 1161
9999 mem: incrementing refcount of 1137: 18 -> 19
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1161 is 1137
9999 mem: storing 1137 in location 1162
9999 mem: incrementing refcount of 1137: 19 -> 20
 106 run: curr <- next_2 curr
9999 mem: location 1161 is 1137
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 21 -> 20
9999 mem: storing 1141 in location 1161
9999 mem: incrementing refcount of 1141: 15 -> 16
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1164
 106 run: column:number <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1166
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1167
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1168
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 36 -> 37
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1187
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 107 run: *row <- copy new-row
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 107 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 37 -> 36
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 36 -> 37
 106 run: jump-unless curr, 
9999 mem: location 1161 is 1141
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 1
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 106 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1161 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 98
9999 mem: storing 98 in location 1172
 106 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1445
9999 mem: storing 10 in location 1446
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1448
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1449
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1448 is 7
9999 mem: storing 1 in location 1450
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1449 is 98
9999 mem: storing 0 in location 1451
 107 run: jump-unless starting-comment?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1452
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1449 is 98
9999 mem: storing 0 in location 1454
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1455
 107 run: jump-unless color-is-red?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1448 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 98
9999 mem: storing 0 in location 1173
 106 run: jump-unless newline?, 
9999 mem: location 1173 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1165 is 0
9999 mem: location 1160 is 4
9999 mem: storing 0 in location 1175
 106 run: jump-unless at-right?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1156 is 1012
9999 mem: location 1172 is 98
9999 mem: location 1163 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 37 -> 38
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1198
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 98
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 5 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 13 -> 14
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 98
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 5
9999 mem: storing 1030 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1030
9999 mem: location 1030 is 97
9999 mem: location 1031 is 7
9999 mem: location 1213 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 98
9999 mem: location 1214 is 1030
9999 mem: storing 98 in location 1030
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1030
9999 mem: location 1030 is 98
9999 mem: location 1031 is 7
9999 mem: location 1213 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1031
9999 mem: storing 7 in location 1031
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1161 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 17 -> 16
9999 mem: storing 1145 in location 1161
9999 mem: incrementing refcount of 1145: 17 -> 18
 106 run: prev <- next_2 prev
9999 mem: location 1162 is 1137
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1137 in location 1135
9999 mem: incrementing refcount of 1137: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1137
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1138 is 10
9999 mem: location 1139 is 1141
9999 mem: location 1140 is 1128
9999 mem: location 1135 is 1137
9999 mem: skipping refcount at 1137
9999 type: type deduced to be character$
9998 run: address to copy is 1139
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1139 is 1141
9999 mem: storing 1141 in location 1136
9999 mem: incrementing refcount of 1141: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1137: 21 -> 20
9999 mem: storing 1141 in location 1162
9999 mem: incrementing refcount of 1141: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1165
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1161 is 1145
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 1
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 106 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1161 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 10
9999 mem: storing 10 in location 1172
 106 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1448
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1449
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1448 is 7
9999 mem: storing 1 in location 1450
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1449 is 10
9999 mem: storing 0 in location 1451
 107 run: jump-unless starting-comment?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1452
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1449 is 10
9999 mem: storing 0 in location 1454
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1455
 107 run: jump-unless color-is-red?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1448 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 10
9999 mem: storing 1 in location 1173
 106 run: jump-unless newline?, 
9999 mem: location 1173 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 1
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1156 is 1012
9999 mem: location 1165 is 1
9999 mem: location 1160 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 38 -> 39
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1122
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 107 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 39 -> 40
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 6 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 14 -> 15
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 6
9999 mem: storing 1032 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1213 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1032
9999 mem: storing 32 in location 1032
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1213 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1033
9999 mem: storing 7 in location 1033
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1204 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 39 -> 40
 107 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 40 -> 41
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 7 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 15 -> 16
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 7
9999 mem: storing 1034 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1213 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1034
9999 mem: storing 32 in location 1034
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1213 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1035
9999 mem: storing 7 in location 1035
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1204 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 40 -> 41
 107 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 41 -> 42
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 8 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 16 -> 17
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 8
9999 mem: storing 1036 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1213 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1036
9999 mem: storing 32 in location 1036
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1213 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1037
9999 mem: storing 7 in location 1037
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1204 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 41 -> 42
 107 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 42 -> 43
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1200 is 5
9999 mem: storing 5 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 5
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 9 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 17 -> 18
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 9
9999 mem: storing 1038 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1213 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1038
9999 mem: storing 32 in location 1038
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1213 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1039
9999 mem: storing 7 in location 1039
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1216 is 4
9999 mem: storing 1 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 42 -> 43
 107 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1164 is 1
9999 mem: storing 2 in location 1164
 106 run: column <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 2
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 43 -> 44
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1187
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 107 run: *row <- copy new-row
9999 mem: location 1187 is 2
9999 mem: location 1189 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 107 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: curr <- next_2 curr
9999 mem: location 1161 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 19 -> 18
9999 mem: storing 1149 in location 1161
9999 mem: incrementing refcount of 1149: 21 -> 22
 106 run: prev <- next_2 prev
9999 mem: location 1162 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 98
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1137
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1136
9999 mem: incrementing refcount of 1145: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 19 -> 18
9999 mem: storing 1145 in location 1162
9999 mem: incrementing refcount of 1145: 19 -> 20
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1161 is 1149
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 2
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 106 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1161 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 99
9999 mem: storing 99 in location 1172
 106 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1448
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1449
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1448 is 7
9999 mem: storing 1 in location 1450
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1449 is 99
9999 mem: storing 0 in location 1451
 107 run: jump-unless starting-comment?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1452
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1449 is 99
9999 mem: storing 0 in location 1454
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1455
 107 run: jump-unless color-is-red?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1448 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 99
9999 mem: storing 0 in location 1173
 106 run: jump-unless newline?, 
9999 mem: location 1173 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1165 is 0
9999 mem: location 1160 is 4
9999 mem: storing 0 in location 1175
 106 run: jump-unless at-right?, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 62
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-newline
 106 run: print screen, c, color
9999 mem: location 1156 is 1012
9999 mem: location 1172 is 99
9999 mem: location 1163 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 44 -> 45
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1198
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 99
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 18 -> 19
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 99
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 10
9999 mem: storing 1040 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1213 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 99
9999 mem: location 1214 is 1040
9999 mem: storing 99 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1213 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1161 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1438
9999 mem: storing 1438 in location 1136
9999 mem: incrementing refcount of 1438: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1438
9999 mem: decrementing refcount of 1149: 23 -> 22
9999 mem: storing 1438 in location 1161
9999 mem: incrementing refcount of 1438: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1162 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1135
9999 mem: incrementing refcount of 1145: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 10
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1135 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1136
9999 mem: incrementing refcount of 1149: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 21 -> 20
9999 mem: storing 1149 in location 1162
9999 mem: incrementing refcount of 1149: 23 -> 24
 106 run: column <- add column, 1
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1165
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1161 is 1438
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1164 is 2
9999 mem: location 1159 is 4
9999 mem: storing 0 in location 1169
 106 run: jump-if off-screen?, 
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1149
9999 mem: location 1161 is 1438
9999 mem: skipping refcount at 1438
9998 run: address to copy is 1439
9998 run: its type is character
9999 mem: location 1439 is 10
9999 mem: storing 10 in location 1172
 106 run: color <- get-color color, c
9999 mem: location 1163 is 7
9999 mem: location 1172 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1448
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1449
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1448 is 7
9999 mem: storing 1 in location 1450
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1449 is 10
9999 mem: storing 0 in location 1451
 107 run: jump-unless starting-comment?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1452
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1450 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1449 is 10
9999 mem: storing 0 in location 1454
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1448 is 7
9999 mem: storing 0 in location 1455
 107 run: jump-unless color-is-red?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1448 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1163
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1172 is 10
9999 mem: storing 1 in location 1173
 106 run: jump-unless newline?, 
9999 mem: location 1173 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 2
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1170
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1170 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1156 is 1012
9999 mem: location 1165 is 1
9999 mem: location 1160 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 45 -> 46
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1122
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 107 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 46 -> 47
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 19 -> 20
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 11
9999 mem: storing 1042 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1213 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1042
9999 mem: storing 32 in location 1042
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1213 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1043
9999 mem: storing 7 in location 1043
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1204 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 46 -> 47
 107 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 47 -> 48
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 20 -> 21
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 12
9999 mem: storing 1044 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1213 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1213 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1204 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 48 -> 47
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 47 -> 48
 107 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 48 -> 49
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 21 -> 22
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 13
9999 mem: storing 1046 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1213 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1213 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1204 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 48 -> 49
 107 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 49 -> 50
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 108 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1200 is 5
9999 mem: storing 10 in location 1208
 108 run: index <- add index, *column
9999 mem: location 1208 is 10
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1208
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 22 -> 23
 108 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 108 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 14
9999 mem: storing 1048 in location 1213
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1213 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1214
 108 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1213 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1215
 108 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1216 is 4
9999 mem: storing 1 in location 1217
 108 run: jump-if at-right?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 50 -> 49
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 49 -> 50
 107 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1164 is 2
9999 mem: storing 3 in location 1164
 106 run: column <- copy left
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1165
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1156 is 1012
9999 mem: location 1164 is 3
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 50 -> 51
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1187
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 107 run: *row <- copy new-row
9999 mem: location 1187 is 3
9999 mem: location 1189 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 107 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1156
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: curr <- next_2 curr
9999 mem: location 1161 is 1438
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1135
9999 mem: incrementing refcount of 1438: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1438
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 10
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1149
9999 mem: location 1135 is 1438
9999 mem: skipping refcount at 1438
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1136
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1438: 11 -> 10
9999 mem: storing 0 in location 1161
 106 run: prev <- next_2 prev
9999 mem: location 1162 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1135
9999 mem: incrementing refcount of 1149: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1135 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 99
9999 mem: location 1151 is 1438
9999 mem: location 1152 is 1145
9999 mem: location 1135 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1438
9999 mem: storing 1438 in location 1136
9999 mem: incrementing refcount of 1438: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1136 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1438
9999 mem: decrementing refcount of 1149: 25 -> 24
9999 mem: storing 1438 in location 1162
9999 mem: incrementing refcount of 1438: 11 -> 12
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1177
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1161 is 0
9999 mem: location 1177 is 1095
9999 mem: storing 0 in location 1095
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 1 in location 1170
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1165 is 0
9999 mem: location 1167 is 1101
9999 mem: location 1101 is 0
9999 mem: storing 1 in location 1178
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1170 is 1
9999 mem: location 1178 is 1
9999 mem: storing 1 in location 1179
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: location 1100 is 3
9999 mem: storing 0 in location 1180
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: storing 1 in location 1181
 106 run: jump-unless before-cursor?, 
9999 mem: location 1181 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1164 is 3
9999 mem: location 1166 is 1100
9999 mem: storing 3 in location 1100
 106 run: *cursor-column <- copy column
9999 mem: location 1165 is 0
9999 mem: location 1167 is 1101
9999 mem: storing 0 in location 1101
 106 run: *before-cursor <- copy prev
9999 mem: location 1162 is 1438
9999 mem: location 1168 is 1096
9999 mem: decrementing refcount of 1438: 12 -> 11
9999 mem: storing 1438 in location 1096
9999 mem: incrementing refcount of 1438: 11 -> 12
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1157 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1182
 106 run: *bottom <- copy row
9999 mem: location 1164 is 3
9999 mem: location 1182 is 1099
9999 mem: storing 3 in location 1099
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1164 is 3
9999 mem: location 1165 is 0
9999 mem: location 1156 is 1012
9999 mem: location 1157 is 1092
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 0
9999 mem: storing 3 in location 1112
9999 mem: storing 0 in location 1113
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1108 is 1012
9999 mem: location 1113 is 0
9999 mem: location 1111 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 51 -> 52
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1122
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 106 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 0
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 52 -> 53
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 15 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 23 -> 24
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 15
9999 mem: storing 1050 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1050
9999 mem: location 1050 is 99
9999 mem: location 1051 is 7
9999 mem: location 1213 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1050
9999 mem: storing 32 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1213 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1204 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: column <- add column, 1
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 16 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 24 -> 25
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 16
9999 mem: storing 1052 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1213 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1052
9999 mem: storing 32 in location 1052
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-newline
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1213 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1204 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 17 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 25 -> 26
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 17
9999 mem: storing 1054 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1213 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1213 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1204 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 18 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 26 -> 27
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 18
9999 mem: storing 1056 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1213 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1213 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1216 is 4
9999 mem: storing 0 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1204 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1201 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1204
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1200 is 5
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1205
 107 run: jump-unless newline?, 
9999 mem: location 1205 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1200 is 5
9999 mem: storing 15 in location 1208
 107 run: index <- add index, *column
9999 mem: location 1208 is 15
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 19 in location 1208
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1209
9999 mem: incrementing refcount of 1018: 27 -> 28
 107 run: len:number <- length *buf
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1210
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1195 is 32
9999 mem: storing 0 in location 1211
 107 run: jump-unless backspace?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1209 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1208 is 19
9999 mem: storing 1058 in location 1213
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1213 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1213 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1214
 107 run: *cursor-contents <- copy c
9999 mem: location 1195 is 32
9999 mem: location 1214 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1213 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1213 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1215
 107 run: *cursor-color <- copy color
9999 mem: location 1196 is 7
9999 mem: location 1215 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1200 is 5
9999 mem: storing 4 in location 1216
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1204 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1216 is 4
9999 mem: storing 1 in location 1217
 107 run: jump-if at-right?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 106 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1112 is 3
9999 mem: storing 4 in location 1112
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1108 is 1012
9999 mem: location 1112 is 4
9999 mem: location 1110 is 0
9999 mem: location 1111 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1251
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1252
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1254
9999 mem: storing 1 in location 1255
 106 run: jump-if style-found?, 
9999 mem: location 1255 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
 106 run: jump-if color-found?, 
9999 mem: location 1257 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1256
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1258
9999 mem: storing 0 in location 1259
 106 run: jump-if bg-color-found?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1258
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 4
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1187
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 107 run: *row <- copy new-row
9999 mem: location 1187 is 4
9999 mem: location 1189 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 107 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 0
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1250 is 1012
9999 mem: location 1254 is 9480
9999 mem: location 1256 is 245
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 1
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1250 is 1012
9999 mem: location 1254 is 9480
9999 mem: location 1256 is 245
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 2
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1250 is 1012
9999 mem: location 1254 is 9480
9999 mem: location 1256 is 245
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 3
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1250 is 1012
9999 mem: location 1254 is 9480
9999 mem: location 1256 is 245
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 62 -> 63
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1252 is 3
9999 mem: storing 4 in location 1252
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 4
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1250 is 1012
9999 mem: location 1254 is 9480
9999 mem: location 1256 is 245
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 63 -> 64
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1195
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1196
9999 mem: storing 1 in location 1197
 107 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 107 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1195 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 107 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1252 is 4
9999 mem: storing 5 in location 1252
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1252 is 5
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1260
 106 run: jump-unless continue?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1112 is 4
9999 mem: storing 5 in location 1112
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1108 is 1012
9999 mem: location 1112 is 5
9999 mem: location 1110 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 64 -> 65
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1187
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1190
 106 run: jump-if screen, 
9999 mem: location 1186 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 5
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1457
9999 mem: storing 6 in location 1458
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1460
9999 mem: incrementing refcount of 1012: 65 -> 66
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1461
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1462
 107 run: jump-unless screen, 
9999 mem: location 1460 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1463
 107 run: *row <- copy new-row
9999 mem: location 1461 is 5
9999 mem: location 1463 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1464
 107 run: *column <- copy new-column
9999 mem: location 1462 is 0
9999 mem: location 1464 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1460 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 66 -> 65
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 65 -> 66
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1186 is 1012
9999 mem: location 1188 is 0
9999 mem: location 1190 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1122
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1123
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1124
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
 107 run: jump-if bg-color-found?, 
9999 mem: location 1126 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1125
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 0
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 67 -> 68
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 67 -> 68
 107 run: column <- add column, 1
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 1
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 68 -> 69
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 69 -> 68
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 68 -> 69
 107 run: column <- add column, 1
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 2
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 69 -> 70
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: column <- add column, 1
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 3
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 70 -> 71
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 70 -> 71
 107 run: column <- add column, 1
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 4
9999 mem: location 1123 is 4
9999 mem: storing 0 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1121 is 1012
9999 mem: location 1124 is 32
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1194
9999 mem: incrementing refcount of 1012: 71 -> 72
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-newline
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1195
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1196
9999 mem: storing 1 in location 1197
 108 run: jump-if color-found?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 1 in location 1199
 108 run: jump-if bg-color-found?, 
9999 mem: location 1199 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1195 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1194 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1200
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1201
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1194 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1202
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1202 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1201 is 4
9999 mem: storing 0 in location 1203
 108 run: jump-if legal?, 1:offset
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1194 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1121
9999 mem: incrementing refcount of 1012: 71 -> 72
 107 run: column <- add column, 1
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1122 is 5
9999 mem: location 1123 is 4
9999 mem: storing 1 in location 1127
 107 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1121 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1186 is 1012
9999 mem: location 1187 is 5
9999 mem: location 1189 is 0
9999 mem: location 1190 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1465
9999 mem: storing 7 in location 1466
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1468
9999 mem: incrementing refcount of 1012: 72 -> 73
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1469
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1470
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1471
 107 run: row <- add row, 1
9999 mem: location 1469 is 5
9999 mem: storing 6 in location 1469
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1468 is 1012
9999 mem: location 1469 is 6
9999 mem: location 1470 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1460
9999 mem: incrementing refcount of 1012: 73 -> 74
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1461
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1462
 108 run: jump-unless screen, 
9999 mem: location 1460 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1463
 108 run: *row <- copy new-row
9999 mem: location 1461 is 6
9999 mem: location 1463 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1460 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1464
 108 run: *column <- copy new-column
9999 mem: location 1462 is 0
9999 mem: location 1464 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1460 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 74 -> 73
9999 mem: storing 1012 in location 1468
9999 mem: incrementing refcount of 1012: 73 -> 74
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1468 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1135
9999 mem: incrementing refcount of 1012: 74 -> 75
 108 run: jump-unless screen, 
9999 mem: location 1135 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1135 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1136
 108 run: reply height:number
9999 mem: location 1136 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1472
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1469 is 6
9999 mem: location 1472 is 4
9999 mem: storing 1 in location 1473
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1473 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1468 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1108 is 1012
9999 mem: location 1109 is 1092
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 74 -> 75
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 1237
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 1236 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1238
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1234 is 1012
9999 mem: location 1237 is 3
9999 mem: location 1238 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1186
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1187
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: jump-unless screen, 
9999 mem: location 1186 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1189
 105 run: *row <- copy new-row
9999 mem: location 1187 is 3
9999 mem: location 1189 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1186 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1190
 105 run: *column <- copy new-column
9999 mem: location 1188 is 0
9999 mem: location 1190 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1186 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1234
9999 mem: incrementing refcount of 1012: 75 -> 76
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1235 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1250
9999 mem: incrementing refcount of 1228: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1250 is 1228
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 2
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1251
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 2
9999 mem: location 1230 is 1218
9999 mem: location 1250 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1230 is 1218
9999 mem: storing 1218 in location 1252
9999 mem: incrementing refcount of 1218: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1252 is 1218
9999 mem: skipping refcount at 1218
9999 mem: storing 2 in location 1253
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1251 is 1229
9999 mem: location 1229 is 2
9999 mem: location 1253 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-unless done?, 
9999 mem: location 1254 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1132 in location 1255
9999 mem: incrementing refcount of 1132: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1255 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1250 is 1228
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1228
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
9999 mem: storing 0 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: decrementing refcount of 1228: 4 -> 3
9999 mem: storing 1228 in location 1235
9999 mem: incrementing refcount of 1228: 3 -> 4
9999 mem: storing 1 in location 1243
9999 mem: storing 1 in location 1244
 104 run: jump-unless found?, 
9999 mem: location 1243 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1244 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1234 is 1012
9999 mem: location 1235 is 1228
9999 mem: location 1236 is 1092
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 2 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 3
9999 mem: storing 3 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1092
9999 mem: skipping refcount at 1092
9999 mem: location 1093 is 1114
9999 mem: location 1094 is 1137
9999 mem: location 1095 is 0
9999 mem: location 1096 is 1438
9999 mem: location 1097 is 0
9999 mem: location 1098 is 4
9999 mem: location 1099 is 3
9999 mem: location 1100 is 3
9999 mem: location 1101 is 0
9999 mem: location 1102 is 1
9999 mem: location 1103 is 1442
9999 mem: location 1104 is 0
9999 mem: location 2 is 1092
9999 mem: skipping refcount at 1092
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .     .
    .b    .
    .c    .
    .     .
  ]
 102 run: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
