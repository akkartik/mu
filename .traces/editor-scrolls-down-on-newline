9991 parse: --- defining scenario-editor-scrolls-down-on-newline
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"5": "literal", "width": <>}
9993 parse:   ingredient: {"4": "literal", "height": <>}
9992 load: after rewriting: screen:address:screen <- new-fake-screen 5/width, 4/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 1:address:array:character <- new [a
b
c]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"5": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 3, 4\n    type [\n]\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 3, 4
    type [
]
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .b    .\n    .c    .\n    .     .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .     .
    .b    .
    .c    .
    .     .
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 parse: recipe scenario-editor-scrolls-down-on-newline has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- collect surrounding spaces for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- deduce types for recipe scenario-editor-scrolls-down-on-newline
9992 transform: screen => <address : <screen : <>>>
9991 transform: --- resolve ambiguous calls for recipe scenario-editor-scrolls-down-on-newline
9992 transform: instruction new-editor
9992 transform: checking variant 0: 100
9991 transform: --- transform names for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- transform braces for recipe scenario-editor-scrolls-down-on-newline
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9991 transform: --- compute instruction operations for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- perform checks for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-editor-scrolls-down-on-newline
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-editor-scrolls-down-on-newline
 102 run: screen:address:screen <- new-fake-screen 5/width, 4/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 103 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 103 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 103 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 4 in location 1009
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 103 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 103 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 4
9999 mem: storing 20 in location 1007
 103 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 20
9999 mem: array size is 20
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 103 run: clear-screen result
9999 mem: location 1002 is 1009
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1055
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1057
 104 run: jump-unless sc, 
9999 mem: location 1057 is 1009
9998 run: jump-unless fell through
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1058
 104 run: max:number <- length *buf
9999 mem: location 1058 is 1014
9999 mem: storing 20 in location 1059
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1060
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 0
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 0
9999 mem: storing 1015 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1015
9999 mem: storing 0 in location 1015
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1016
9999 mem: storing 7 in location 1016
 104 run: i <- add i, 1
9999 mem: location 1060 is 0
9999 mem: storing 1 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 1
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 1
9999 mem: storing 1017 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1017
9999 mem: storing 0 in location 1017
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9998 run: address to copy is 1018
9999 mem: storing 1018 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1018
9999 mem: storing 7 in location 1018
 104 run: i <- add i, 1
9999 mem: location 1060 is 1
9999 mem: storing 2 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 2
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 2
9999 mem: storing 1019 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9998 run: address to copy is 1019
9999 mem: storing 1019 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1019
9999 mem: storing 0 in location 1019
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1020
9999 mem: storing 7 in location 1020
 104 run: i <- add i, 1
9999 mem: location 1060 is 2
9999 mem: storing 3 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 3
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 3
9999 mem: storing 1021 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1021
9999 mem: storing 0 in location 1021
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1022
9999 mem: storing 7 in location 1022
 104 run: i <- add i, 1
9999 mem: location 1060 is 3
9999 mem: storing 4 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 4
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 4
9999 mem: storing 1023 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1023
9999 mem: storing 0 in location 1023
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1024
9999 mem: storing 7 in location 1024
 104 run: i <- add i, 1
9999 mem: location 1060 is 4
9999 mem: storing 5 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 5
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 5
9999 mem: storing 1025 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1025
9999 mem: storing 0 in location 1025
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1026
9999 mem: storing 7 in location 1026
 104 run: i <- add i, 1
9999 mem: location 1060 is 5
9999 mem: storing 6 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 6
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 6
9999 mem: storing 1027 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1027
9999 mem: storing 0 in location 1027
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1028
9999 mem: storing 7 in location 1028
 104 run: i <- add i, 1
9999 mem: location 1060 is 6
9999 mem: storing 7 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 7
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 7
9999 mem: storing 1029 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1029
9999 mem: storing 0 in location 1029
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1030
9999 mem: storing 7 in location 1030
 104 run: i <- add i, 1
9999 mem: location 1060 is 7
9999 mem: storing 8 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 8
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 8
9999 mem: storing 1031 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1031
9999 mem: storing 0 in location 1031
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1032
9999 mem: storing 7 in location 1032
 104 run: i <- add i, 1
9999 mem: location 1060 is 8
9999 mem: storing 9 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 9
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 9
9999 mem: storing 1033 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1033
9999 mem: storing 0 in location 1033
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1034
9999 mem: storing 7 in location 1034
 104 run: i <- add i, 1
9999 mem: location 1060 is 9
9999 mem: storing 10 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 10
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 10
9999 mem: storing 1035 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1035
9999 mem: storing 0 in location 1035
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1036
9999 mem: storing 7 in location 1036
 104 run: i <- add i, 1
9999 mem: location 1060 is 10
9999 mem: storing 11 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 11
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 11
9999 mem: storing 1037 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1037
9999 mem: storing 0 in location 1037
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1038
9999 mem: storing 7 in location 1038
 104 run: i <- add i, 1
9999 mem: location 1060 is 11
9999 mem: storing 12 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 12
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 12
9999 mem: storing 1039 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1039
9999 mem: storing 0 in location 1039
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1040
9999 mem: storing 7 in location 1040
 104 run: i <- add i, 1
9999 mem: location 1060 is 12
9999 mem: storing 13 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 13
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 13
9999 mem: storing 1041 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1041
9999 mem: storing 0 in location 1041
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1042
9999 mem: storing 7 in location 1042
 104 run: i <- add i, 1
9999 mem: location 1060 is 13
9999 mem: storing 14 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 14
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 14
9999 mem: storing 1043 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1043
9999 mem: storing 0 in location 1043
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1044
9999 mem: storing 7 in location 1044
 104 run: i <- add i, 1
9999 mem: location 1060 is 14
9999 mem: storing 15 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 15
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 15
9999 mem: storing 1045 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1045
9999 mem: storing 0 in location 1045
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1046
9999 mem: storing 7 in location 1046
 104 run: i <- add i, 1
9999 mem: location 1060 is 15
9999 mem: storing 16 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 16
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 16
9999 mem: storing 1047 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1047
9999 mem: storing 0 in location 1047
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1048
9999 mem: storing 7 in location 1048
 104 run: i <- add i, 1
9999 mem: location 1060 is 16
9999 mem: storing 17 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 17
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 17
9999 mem: storing 1049 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1049
9999 mem: storing 0 in location 1049
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1050
9999 mem: storing 7 in location 1050
 104 run: i <- add i, 1
9999 mem: location 1060 is 17
9999 mem: storing 18 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 18
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 18
9999 mem: storing 1051 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1051
9999 mem: storing 0 in location 1051
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1052
9999 mem: storing 7 in location 1052
 104 run: i <- add i, 1
9999 mem: location 1060 is 18
9999 mem: storing 19 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 19
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 19
9999 mem: storing 1053 in location 1062
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1063
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1063 is 1053
9999 mem: storing 0 in location 1053
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1064
 104 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1054
9999 mem: storing 7 in location 1054
 104 run: i <- add i, 1
9999 mem: location 1060 is 19
9999 mem: storing 20 in location 1060
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 20
9999 mem: location 1059 is 20
9999 mem: storing 1 in location 1061
 104 run: jump-if done?, 
9999 mem: location 1061 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1065
 104 run: *x <- copy 0
9999 mem: location 1065 is 1011
9999 mem: storing 0 in location 1011
 104 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1065
 104 run: *x <- copy 0
9999 mem: location 1065 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1057 is 1009
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply result
9999 mem: location 1002 is 1009
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 102 run: 1:address:array:character <- new [a
b
c]
9999 mem: storing 1066 in location 1
 102 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9999 mem: location 1 is 1066
9999 mem: location 900 is 1009
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1072
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1074
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1075
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1076
 103 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1077
 103 run: right <- subtract right, 1
9999 mem: location 1077 is 5
9999 mem: storing 4 in location 1077
 103 run: result <- new editor-data:type
9999 mem: storing 1055 in location 1078
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1079
 103 run: *x <- copy left
9999 mem: location 1076 is 0
9999 mem: location 1079 is 1059
9999 mem: storing 0 in location 1059
 103 run: x <- get-address *result, right:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1079
 103 run: *x <- copy right
9999 mem: location 1077 is 4
9999 mem: location 1079 is 1060
9999 mem: storing 4 in location 1060
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1079
 103 run: *x <- copy 1/top
9999 mem: location 1079 is 1061
9999 mem: storing 1 in location 1061
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1079
 103 run: *x <- copy left
9999 mem: location 1076 is 0
9999 mem: location 1079 is 1062
9999 mem: storing 0 in location 1062
 103 run: init:address:address:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1080
 103 run: *init <- push-duplex_2 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1084
 104 run: x:_elem <- next-ingredient 
9999 mem: storing 167 in location 1086
 104 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1087
 104 run: result <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1092
9999 mem: storing 1092 in location 1088
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1088 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1088 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1089
 104 run: *val <- copy x
9999 mem: location 1086 is 167
9999 mem: location 1089 is 1092
9999 mem: storing 167 in location 1092
 104 run: next:address:address:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1088 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1088 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1090
 104 run: *next <- copy in
9999 mem: location 1087 is 0
9999 mem: location 1090 is 1093
9999 mem: storing 0 in location 1093
 104 run: jump-if in, 1:offset
9999 mem: location 1087 is 0
9998 run: jump-if fell through
 104 run: reply result:address:duplex-list:_elem
9999 mem: location 1088 is 1092
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1092
9999 mem: location 1080 is 1055
9999 mem: storing 1092 in location 1055
 103 run: top-of-screen:address:address:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1081
 103 run: *top-of-screen <- copy *init
9999 mem: location 1080 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1081 is 1056
9999 mem: storing 1092 in location 1056
 103 run: y:address:address:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1082
 103 run: *y <- copy *init
9999 mem: location 1080 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1082 is 1058
9999 mem: storing 1092 in location 1058
 103 run: result <- insert-text result, s
9999 mem: location 1078 is 1055
9999 mem: location 1074 is 1066
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1002
 104 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1003
 104 run: jump-if text, 1:offset
9999 mem: location 1003 is 1066
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1003 is 1066
9999 mem: storing 5 in location 1004
 104 run: jump-if len, 1:offset
9999 mem: location 1004 is 5
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1005
 104 run: curr:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1002 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1002 is 1055
9998 run: address to copy is 1055
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1055 is 1092
9999 mem: storing 1092 in location 1006
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 0
9999 mem: location 1004 is 5
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 0
9998 run: address to copy is 1067
9998 run: its type is character
9999 mem: location 1067 is 97
9999 mem: storing 97 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 97
9999 mem: location 1006 is 1092
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 97 in location 1086
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1087
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1095
9999 mem: storing 1095 in location 1088
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1088 is 1095
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1089
 105 run: *val <- copy x
9999 mem: location 1086 is 97
9999 mem: location 1089 is 1095
9999 mem: storing 97 in location 1095
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1087 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 0
9999 mem: storing 0 in location 1090
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1087 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1091
 105 run: *y <- copy new-node
9999 mem: location 1088 is 1095
9999 mem: location 1091 is 1093
9999 mem: storing 1095 in location 1093
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1088 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1091
 105 run: *y <- copy in
9999 mem: location 1087 is 1092
9999 mem: location 1091 is 1097
9999 mem: storing 1092 in location 1097
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 0
9999 mem: location 1097 is 1092
9999 mem: location 1088 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1091
 105 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1096
 105 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1088 is 1095
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1092
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1098
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 1
9999 mem: location 1004 is 5
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 1
9998 run: address to copy is 1068
9998 run: its type is character
9999 mem: location 1068 is 10
9999 mem: storing 10 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1086
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1087
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1102
9999 mem: storing 1102 in location 1088
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1088 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1089
 105 run: *val <- copy x
9999 mem: location 1086 is 10
9999 mem: location 1089 is 1102
9999 mem: storing 10 in location 1102
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 0
9999 mem: location 1097 is 1092
9999 mem: location 1087 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 0
9999 mem: storing 0 in location 1090
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 0
9999 mem: location 1097 is 1092
9999 mem: location 1087 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1091
 105 run: *y <- copy new-node
9999 mem: location 1088 is 1102
9999 mem: location 1091 is 1096
9999 mem: storing 1102 in location 1096
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1088 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1091
 105 run: *y <- copy in
9999 mem: location 1087 is 1095
9999 mem: location 1091 is 1104
9999 mem: storing 1095 in location 1104
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1095
9999 mem: location 1088 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1091
 105 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1103
9999 mem: storing 0 in location 1103
 105 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1088 is 1102
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 2
9999 mem: location 1004 is 5
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 2
9998 run: address to copy is 1069
9998 run: its type is character
9999 mem: location 1069 is 98
9999 mem: storing 98 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 98
9999 mem: location 1006 is 1102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 98 in location 1086
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1087
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1105
9999 mem: storing 1105 in location 1088
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1088 is 1105
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1089
 105 run: *val <- copy x
9999 mem: location 1086 is 98
9999 mem: location 1089 is 1105
9999 mem: storing 98 in location 1105
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1095
9999 mem: location 1087 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 0
9999 mem: storing 0 in location 1090
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1095
9999 mem: location 1087 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1091
 105 run: *y <- copy new-node
9999 mem: location 1088 is 1105
9999 mem: location 1091 is 1103
9999 mem: storing 1105 in location 1103
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1088 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1091
 105 run: *y <- copy in
9999 mem: location 1087 is 1102
9999 mem: location 1091 is 1107
9999 mem: storing 1102 in location 1107
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1102
9999 mem: location 1088 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1091
 105 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1106
9999 mem: storing 0 in location 1106
 105 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1088 is 1105
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 3
9999 mem: location 1004 is 5
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 3
9998 run: address to copy is 1070
9998 run: its type is character
9999 mem: location 1070 is 10
9999 mem: storing 10 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1086
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1087
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1108
9999 mem: storing 1108 in location 1088
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1088 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1089
 105 run: *val <- copy x
9999 mem: location 1086 is 10
9999 mem: location 1089 is 1108
9999 mem: storing 10 in location 1108
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1102
9999 mem: location 1087 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 0
9999 mem: storing 0 in location 1090
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 0
9999 mem: location 1107 is 1102
9999 mem: location 1087 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1091
 105 run: *y <- copy new-node
9999 mem: location 1088 is 1108
9999 mem: location 1091 is 1106
9999 mem: storing 1108 in location 1106
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1088 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1091
 105 run: *y <- copy in
9999 mem: location 1087 is 1105
9999 mem: location 1091 is 1110
9999 mem: storing 1105 in location 1110
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1088 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1091
 105 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1109
9999 mem: storing 0 in location 1109
 105 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1088 is 1108
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 4
9999 mem: location 1004 is 5
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1066
9999 mem: location 1005 is 4
9998 run: address to copy is 1071
9998 run: its type is character
9999 mem: location 1071 is 99
9999 mem: storing 99 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 99
9999 mem: location 1006 is 1108
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 99 in location 1086
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1087
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1111
9999 mem: storing 1111 in location 1088
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1088 is 1111
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1089
 105 run: *val <- copy x
9999 mem: location 1086 is 99
9999 mem: location 1089 is 1111
9999 mem: storing 99 in location 1111
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1087 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 0
9999 mem: storing 0 in location 1090
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1105
9999 mem: location 1087 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1091
 105 run: *y <- copy new-node
9999 mem: location 1088 is 1111
9999 mem: location 1091 is 1109
9999 mem: storing 1111 in location 1109
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1088 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1091
 105 run: *y <- copy in
9999 mem: location 1087 is 1108
9999 mem: location 1091 is 1113
9999 mem: storing 1108 in location 1113
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1088 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1091
 105 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1112
9999 mem: storing 0 in location 1112
 105 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1088 is 1111
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1108
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 5
9999 mem: location 1004 is 5
9999 mem: storing 1 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1055
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 1078
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1082
 103 run: *y <- copy *init
9999 mem: location 1080 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1082 is 1058
9999 mem: storing 1092 in location 1058
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1075 is 1009
9999 mem: location 1078 is 1055
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1114
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1116
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1117
 104 run: jump-if editor, 1:offset
9999 mem: location 1117 is 1055
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1118
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1116 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 105 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 105 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1119
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1120
 104 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1121
 104 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1121 is 1092
9999 mem: storing 1092 in location 1122
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1092
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1121
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1123
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1124
 104 run: column:number <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1126
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1127
 104 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1128
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 1
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1141
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 1
9999 mem: location 1146 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 104 run: jump-unless curr, 
9999 mem: location 1121 is 1095
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 1
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 104 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1125 is 0
9999 mem: location 1127 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 1 in location 1131
 104 run: jump-unless at-cursor?, 
9999 mem: location 1131 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1122 is 1092
9999 mem: location 1128 is 1058
9999 mem: storing 1092 in location 1058
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1121 is 1095
9998 run: address to copy is 1095
9998 run: its type is character
9999 mem: location 1095 is 97
9999 mem: storing 97 in location 1132
 104 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1148
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1150
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1151
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1150 is 7
9999 mem: storing 1 in location 1152
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1151 is 97
9999 mem: storing 0 in location 1153
 105 run: jump-unless starting-comment?, 
9999 mem: location 1153 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1154
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1154 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1151 is 97
9999 mem: storing 0 in location 1156
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1156 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1157
 105 run: jump-unless color-is-red?, 
9999 mem: location 1157 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1150 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 97
9999 mem: storing 0 in location 1133
 104 run: jump-unless newline?, 
9999 mem: location 1133 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1125 is 0
9999 mem: location 1120 is 4
9999 mem: storing 0 in location 1135
 104 run: jump-unless at-right?, 
9999 mem: location 1135 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1116 is 1009
9999 mem: location 1132 is 97
9999 mem: location 1123 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1159
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1162
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1163
9999 mem: storing 1 in location 1164
 105 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 105 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 105 run: trace 90, [print-character], c
9999 mem: location 1162 is 97
  90 print-character: 97 
 105 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
9990 schedule: print-character/render/new-editor/scenario-editor-scrolls-down-on-newline
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 97
9999 mem: storing 0 in location 1172
 105 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 105 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1175
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 105 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 97
9999 mem: storing 0 in location 1178
 105 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 5
9999 mem: storing 1025 in location 1180
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1180 is 1025
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1181
 105 run: *cursor-contents <- copy c
9999 mem: location 1162 is 97
9999 mem: location 1181 is 1025
9999 mem: storing 97 in location 1025
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1180 is 1025
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1182
 105 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1026
9999 mem: storing 7 in location 1026
 105 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1121
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1092
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1122
 104 run: column <- add column, 1
9999 mem: location 1125 is 0
9999 mem: storing 1 in location 1125
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1121 is 1102
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 1
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 104 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1131
 104 run: jump-unless at-cursor?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1121 is 1102
9998 run: address to copy is 1102
9998 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1132
 104 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1150
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1151
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1150 is 7
9999 mem: storing 1 in location 1152
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1151 is 10
9999 mem: storing 0 in location 1153
 105 run: jump-unless starting-comment?, 
9999 mem: location 1153 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1154
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1154 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1151 is 10
9999 mem: storing 0 in location 1156
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1156 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1157
 105 run: jump-unless color-is-red?, 
9999 mem: location 1157 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1150 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 10
9999 mem: storing 1 in location 1133
 104 run: jump-unless newline?, 
9999 mem: location 1133 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1134
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1134 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1116 is 1009
9999 mem: location 1125 is 1
9999 mem: location 1120 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1185
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1188
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 6
9999 mem: storing 1027 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1180 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1027
9999 mem: storing 32 in location 1027
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1180 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1028
9999 mem: storing 7 in location 1028
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1171 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 7
9999 mem: storing 1029 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1180 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1029
9999 mem: storing 32 in location 1029
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1180 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1030
9999 mem: storing 7 in location 1030
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1171 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 8
9999 mem: storing 1031 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1180 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1031
9999 mem: storing 32 in location 1031
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1180 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1032
9999 mem: storing 7 in location 1032
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1171 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 9
9999 mem: storing 1033 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1180 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1033
9999 mem: storing 32 in location 1033
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1180 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1034
9999 mem: storing 7 in location 1034
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1183 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1124 is 1
9999 mem: storing 2 in location 1124
 104 run: column <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 2
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 2
9999 mem: location 1146 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1121
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1122
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1121 is 1105
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 2
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 104 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1121 is 1105
9998 run: address to copy is 1105
9998 run: its type is character
9999 mem: location 1105 is 98
9999 mem: storing 98 in location 1132
 104 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1150
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1151
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1150 is 7
9999 mem: storing 1 in location 1152
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1151 is 98
9999 mem: storing 0 in location 1153
 105 run: jump-unless starting-comment?, 
9999 mem: location 1153 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1154
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1154 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1151 is 98
9999 mem: storing 0 in location 1156
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1156 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1157
 105 run: jump-unless color-is-red?, 
9999 mem: location 1157 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1150 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 98
9999 mem: storing 0 in location 1133
 104 run: jump-unless newline?, 
9999 mem: location 1133 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1125 is 0
9999 mem: location 1120 is 4
9999 mem: storing 0 in location 1135
 104 run: jump-unless at-right?, 
9999 mem: location 1135 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1116 is 1009
9999 mem: location 1132 is 98
9999 mem: location 1123 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1162
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1163
9999 mem: storing 1 in location 1164
 105 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 105 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 105 run: trace 90, [print-character], c
9999 mem: location 1162 is 98
  90 print-character: 98 
 105 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 98
9999 mem: storing 0 in location 1172
 105 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 105 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1175
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 105 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 98
9999 mem: storing 0 in location 1178
 105 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 10
9999 mem: storing 1035 in location 1180
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1180 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1181
 105 run: *cursor-contents <- copy c
9999 mem: location 1162 is 98
9999 mem: location 1181 is 1035
9999 mem: storing 98 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1180 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1182
 105 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1121
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1122
 104 run: column <- add column, 1
9999 mem: location 1125 is 0
9999 mem: storing 1 in location 1125
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1121 is 1108
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 2
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 104 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1121 is 1108
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 10
9999 mem: storing 10 in location 1132
 104 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1150
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1151
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1150 is 7
9999 mem: storing 1 in location 1152
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1151 is 10
9999 mem: storing 0 in location 1153
 105 run: jump-unless starting-comment?, 
9999 mem: location 1153 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1154
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1154 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1151 is 10
9999 mem: storing 0 in location 1156
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1156 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1157
 105 run: jump-unless color-is-red?, 
9999 mem: location 1157 is 0
9998 run: jumping to instruction 35
9990 schedule: get-color/render/new-editor/scenario-editor-scrolls-down-on-newline
 105 run: reply color
9999 mem: location 1150 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 10
9999 mem: storing 1 in location 1133
 104 run: jump-unless newline?, 
9999 mem: location 1133 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1116 is 1009
9999 mem: location 1125 is 1
9999 mem: location 1120 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1188
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 11
9999 mem: storing 1037 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1180 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1037
9999 mem: storing 32 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1180 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1171 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 12
9999 mem: storing 1039 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1180 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1180 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1171 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 13
9999 mem: storing 1041 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1180 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1180 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1171 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 106 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 106 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 106 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 106 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 106 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 106 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1175
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 106 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 106 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 14
9999 mem: storing 1043 in location 1180
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1180 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1181
 106 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1180 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1182
 106 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1183 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if at-right?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 105 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1124 is 2
9999 mem: storing 3 in location 1124
 104 run: column <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 3
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 3
9999 mem: location 1146 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1108
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1121
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1122
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1121 is 1111
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 3
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 104 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1130
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1121 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 99
9999 mem: storing 99 in location 1132
 104 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1150
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1151
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1150 is 7
9999 mem: storing 1 in location 1152
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1151 is 99
9999 mem: storing 0 in location 1153
 105 run: jump-unless starting-comment?, 
9999 mem: location 1153 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1154
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1154 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1152 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1151 is 99
9999 mem: storing 0 in location 1156
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1156 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1150 is 7
9999 mem: storing 0 in location 1157
 105 run: jump-unless color-is-red?, 
9999 mem: location 1157 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1150 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 99
9999 mem: storing 0 in location 1133
 104 run: jump-unless newline?, 
9999 mem: location 1133 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1125 is 0
9999 mem: location 1120 is 4
9999 mem: storing 0 in location 1135
 104 run: jump-unless at-right?, 
9999 mem: location 1135 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1116 is 1009
9999 mem: location 1132 is 99
9999 mem: location 1123 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1162
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1163
9999 mem: storing 1 in location 1164
 105 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 105 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 105 run: trace 90, [print-character], c
9999 mem: location 1162 is 99
  90 print-character: 99 
 105 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 105 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 99
9999 mem: storing 0 in location 1172
 105 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 105 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1175
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 105 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 99
9999 mem: storing 0 in location 1178
 105 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 15
9999 mem: storing 1045 in location 1180
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1180 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1181
 105 run: *cursor-contents <- copy c
9999 mem: location 1162 is 99
9999 mem: location 1181 is 1045
9999 mem: storing 99 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1180 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1182
 105 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1111
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1121
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1108
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 105 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1122
 104 run: column <- add column, 1
9999 mem: location 1125 is 0
9999 mem: storing 1 in location 1125
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1121 is 0
9998 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1136
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1121 is 0
9999 mem: location 1136 is 1057
9999 mem: storing 0 in location 1057
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1130
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1137
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1130 is 0
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1138
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 1
9999 mem: storing 0 in location 1139
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1140
 104 run: jump-unless before-cursor?, 
9999 mem: location 1140 is 0
9998 run: jumping to instruction 80
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1124 is 3
9999 mem: location 1125 is 1
9999 mem: location 1116 is 1009
9999 mem: location 1117 is 1055
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 1
9998 run: result 2 is 1009
9998 run: result 3 is 1055
9999 mem: storing 1009 in location 1075
9999 mem: storing 1055 in location 1078
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1078 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1078 is 1055
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1083
 103 run: *indent? <- copy 1/true
9999 mem: location 1083 is 1063
9999 mem: storing 1 in location 1063
 103 run: reply result:address:editor-data
9999 mem: location 1078 is 1055
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 2
 102 run: assume-console [
    left-click 3, 4
    type [
]
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"4": "literal"}
9992 load: after rewriting: left-click 3, 4
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n": "literal-string"}
9992 load: after rewriting: type [
]
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1200
9999 mem: location 2 is 1055
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1202
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1200 in location 1205
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1206
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1207
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1208
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1204 is 1009
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 1
9999 mem: location 1146 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1204
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1205 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1217
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1200 in location 1219
 105 run: jump-unless x, 
9999 mem: location 1219 is 1200
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1220
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1201
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1201 is 1191
9999 mem: storing 1191 in location 1221
 105 run: max:number <- length *buf
9999 mem: location 1221 is 1191
9999 mem: storing 2 in location 1222
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1222 is 2
9999 mem: storing 0 in location 1223
 105 run: jump-unless done?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1221 is 1191
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 0
9998 run: address to copy is 1192
9998 run: its type is event
9999 mem: location 1192 is 2
9999 mem: location 1193 is 65513
9999 mem: location 1194 is 3
9999 mem: location 1195 is 4
9999 mem: storing 2 in location 1225
9999 mem: storing 65513 in location 1226
9999 mem: storing 3 in location 1227
9999 mem: storing 4 in location 1228
 105 run: *idx <- add *idx, 1
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 0
9999 mem: location 1220 is 1200
9999 mem: storing 1 in location 1200
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1225 is 2
9999 mem: location 1226 is 65513
9999 mem: location 1227 is 3
9999 mem: location 1228 is 4
9999 mem: location 1219 is 1200
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 4]
9998 run: result 1 is 1200
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1209
9999 mem: storing 65513 in location 1210
9999 mem: storing 3 in location 1211
9999 mem: storing 4 in location 1212
9999 mem: storing 1200 in location 1205
9999 mem: storing 1 in location 1213
9999 mem: storing 0 in location 1214
 104 run: jump-unless found?, 
9999 mem: location 1213 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1209 is 2
9999 mem: location 1210 is 65513
9999 mem: location 1211 is 3
9999 mem: location 1212 is 4
9999 mem: storing 1210 in location 1215
 104 run: jump-unless t, 
9999 mem: location 1215 is 1210
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1204 is 1009
9999 mem: location 1206 is 1055
9999 mem: location 1215 is 1210
9999 mem: location 1210 is 65513
9999 mem: location 1211 is 3
9999 mem: location 1212 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1230
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1232
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1233
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1234
9999 mem: storing 3 in location 1235
9999 mem: storing 4 in location 1236
 105 run: jump-if editor, 1:offset
9999 mem: location 1233 is 1055
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1234 is 65513
9999 mem: location 1235 is 3
9999 mem: location 1236 is 4
9998 run: address to copy is 1235
9998 run: its type is number
9999 mem: location 1235 is 3
9999 mem: storing 3 in location 1237
 105 run: jump-if click-row, 1:offset
9999 mem: location 1237 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1234 is 65513
9999 mem: location 1235 is 3
9999 mem: location 1236 is 4
9998 run: address to copy is 1236
9998 run: its type is number
9999 mem: location 1236 is 4
9999 mem: storing 4 in location 1238
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1239
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1238 is 4
9999 mem: location 1239 is 0
9999 mem: storing 0 in location 1240
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1240 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1241
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1238 is 4
9999 mem: location 1241 is 4
9999 mem: storing 0 in location 1242
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1242 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 1
9999 mem: storing 1 in location 1243
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1244
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1245
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1232 is 1009
9999 mem: location 1233 is 1055
9999 mem: location 1237 is 3
9999 mem: location 1238 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1116
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1117
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 3 in location 1118
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 4 in location 1119
 106 run: jump-if editor, 1:offset
9999 mem: location 1117 is 1055
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1120
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1121
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1116 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 107 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 107 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1122
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1123
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1123 is 1092
9999 mem: storing 1092 in location 1124
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1092
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1123
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1125
 106 run: column:number <- copy left
9999 mem: location 1120 is 0
9999 mem: storing 0 in location 1126
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 1
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1127
 106 run: *cursor-row <- copy target-row
9999 mem: location 1118 is 3
9999 mem: location 1127 is 1061
9999 mem: storing 3 in location 1061
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1128
 106 run: *cursor-column <- copy target-column
9999 mem: location 1119 is 4
9999 mem: location 1128 is 1062
9999 mem: storing 4 in location 1062
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1092
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 4
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 106 run: jump-unless curr, 
9999 mem: location 1123 is 1095
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1125 is 1
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1130
 106 run: jump-if off-screen?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 31
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-scrolls-down-on-newline
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1123 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1123 is 1095
9998 run: address to copy is 1095
9998 run: its type is character
9999 mem: location 1095 is 97
9999 mem: storing 97 in location 1133
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1133 is 97
9999 mem: storing 0 in location 1134
 106 run: jump-unless newline?, 
9999 mem: location 1134 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1126 is 0
9999 mem: location 1121 is 4
9999 mem: storing 0 in location 1136
 106 run: jump-unless at-right?, 
9999 mem: location 1136 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1095
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1123
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1124 is 1092
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1124
 106 run: column <- add column, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1123 is 1102
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1125 is 1
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1130
 106 run: jump-if off-screen?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1123 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1123 is 1102
9998 run: address to copy is 1102
9998 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1133
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1133 is 10
9999 mem: storing 1 in location 1134
 106 run: jump-unless newline?, 
9999 mem: location 1134 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 1
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1125 is 1
9999 mem: storing 2 in location 1125
 106 run: column <- copy left
9999 mem: location 1120 is 0
9999 mem: storing 0 in location 1126
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1123
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1124 is 1095
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1124
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1123 is 1105
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1125 is 2
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1130
 106 run: jump-if off-screen?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 2
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1123 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1123 is 1105
9998 run: address to copy is 1105
9998 run: its type is character
9999 mem: location 1105 is 98
9999 mem: storing 98 in location 1133
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1133 is 98
9999 mem: storing 0 in location 1134
 106 run: jump-unless newline?, 
9999 mem: location 1134 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1126 is 0
9999 mem: location 1121 is 4
9999 mem: storing 0 in location 1136
 106 run: jump-unless at-right?, 
9999 mem: location 1136 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1123
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1124 is 1102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1124
 106 run: column <- add column, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1123 is 1108
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1125 is 2
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1130
 106 run: jump-if off-screen?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 2
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1123 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1123 is 1108
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 10
9999 mem: storing 10 in location 1133
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1133 is 10
9999 mem: storing 1 in location 1134
 106 run: jump-unless newline?, 
9999 mem: location 1134 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 2
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1125 is 2
9999 mem: storing 3 in location 1125
 106 run: column <- copy left
9999 mem: location 1120 is 0
9999 mem: storing 0 in location 1126
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1108
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1123
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1124 is 1105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1124
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1123 is 1111
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1125 is 3
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1130
 106 run: jump-if off-screen?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 3
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1131
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1131 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1126 is 0
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 0 in location 1132
 106 run: jump-unless at-cursor?, 
9999 mem: location 1132 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1123 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1123 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 99
9999 mem: storing 99 in location 1133
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1133 is 99
9999 mem: storing 0 in location 1134
 106 run: jump-unless newline?, 
9999 mem: location 1134 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1126 is 0
9999 mem: location 1121 is 4
9999 mem: storing 0 in location 1136
 106 run: jump-unless at-right?, 
9999 mem: location 1136 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1123 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1123
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1124 is 1108
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1124
 106 run: column <- add column, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1123 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1125 is 3
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1131
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1126 is 1
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 4
9999 mem: storing 1 in location 1137
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1131 is 1
9999 mem: location 1137 is 1
9999 mem: storing 1 in location 1138
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1125 is 3
9999 mem: location 1127 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1139
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: storing 1 in location 1140
 106 run: jump-unless before-cursor?, 
9999 mem: location 1140 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1125 is 3
9999 mem: location 1127 is 1061
9999 mem: storing 3 in location 1061
 106 run: *cursor-column <- copy column
9999 mem: location 1126 is 1
9999 mem: location 1128 is 1062
9999 mem: storing 1 in location 1062
 106 run: *before-cursor <- copy prev
9999 mem: location 1124 is 1111
9999 mem: location 1129 is 1058
9999 mem: storing 1111 in location 1058
 106 run: reply editor:address:editor-data
9999 mem: location 1117 is 1055
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 1233
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1246
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1247
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1248
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1233 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1233 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1249
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1148 in location 1251
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1243 is 1
9999 mem: location 1244 is 0
9999 mem: location 1245 is 1092
9999 mem: location 1247 is 3
9999 mem: location 1248 is 1
9999 mem: location 1249 is 1092
9999 mem: location 1246 is 0
9999 mem: location 1251 is 1148
9999 mem: location 1251 is 1148
9999 mem: storing 1 in location 1148
9999 mem: storing 1 in location 1149
9999 mem: storing 0 in location 1150
9999 mem: storing 1092 in location 1151
9999 mem: storing 3 in location 1152
9999 mem: storing 1 in location 1153
9999 mem: storing 1092 in location 1154
9999 mem: storing 0 in location 1155
 105 run: editor <- add-operation editor, op
9999 mem: location 1233 is 1055
9999 mem: location 1251 is 1148
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1187
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1148 in location 1188
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1187 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1187 is 1055
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1189
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1188 is 1148
9999 mem: location 1189 is 1064
9999 mem: location 1064 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1148 in location 1143
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1144
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1258
9999 mem: storing 1258 in location 1145
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1145 is 1258
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1145 is 1258
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1146
 107 run: *val <- copy x
9999 mem: location 1143 is 1148
9999 mem: location 1146 is 1258
9999 mem: storing 1148 in location 1258
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1145 is 1258
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1258 is 1148
9999 mem: location 1259 is 0
9999 mem: location 1145 is 1258
9999 type: type deduced to be address$
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1147
 107 run: *next <- copy in
9999 mem: location 1144 is 0
9999 mem: location 1147 is 1259
9999 mem: storing 0 in location 1259
 107 run: reply result
9999 mem: location 1145 is 1258
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: location 1189 is 1064
9999 mem: storing 1258 in location 1064
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1187 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1187 is 1055
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1190
 106 run: *redo <- copy 0
9999 mem: location 1190 is 1065
9999 mem: storing 0 in location 1065
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1187 is 1055
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 1233
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1207
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1208
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1204 is 1009
9999 mem: location 1207 is 3
9999 mem: location 1208 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 3
9999 mem: location 1146 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 1
9999 mem: location 1147 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1204
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1205 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1200 in location 1219
 105 run: jump-unless x, 
9999 mem: location 1219 is 1200
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1220
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1201
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1201 is 1191
9999 mem: storing 1191 in location 1221
 105 run: max:number <- length *buf
9999 mem: location 1221 is 1191
9999 mem: storing 2 in location 1222
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1222 is 2
9999 mem: storing 0 in location 1223
 105 run: jump-unless done?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1221 is 1191
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 1
9998 run: address to copy is 1196
9998 run: its type is event
9999 mem: location 1196 is 0
9999 mem: location 1197 is 10
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: storing 0 in location 1225
9999 mem: storing 10 in location 1226
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
 105 run: *idx <- add *idx, 1
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1220 is 1200
9999 mem: storing 2 in location 1200
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1225 is 0
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1219 is 1200
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 10, 0, 0]
9998 run: result 1 is 1200
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1209
9999 mem: storing 10 in location 1210
9999 mem: storing 0 in location 1211
9999 mem: storing 0 in location 1212
9999 mem: storing 1200 in location 1205
9999 mem: storing 1 in location 1213
9999 mem: storing 0 in location 1214
 104 run: jump-unless found?, 
9999 mem: location 1213 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1209 is 0
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1215
 104 run: jump-unless t, 
9999 mem: location 1215 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1215 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1204 is 1009
9999 mem: location 1206 is 1055
9999 mem: location 1209 is 0
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1260
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1262
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1263
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 10 in location 1265
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1268
 105 run: jump-if editor, 1:offset
9999 mem: location 1263 is 1055
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1262 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 106 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1101
 106 run: reply width
9999 mem: location 1101 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1269
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1262 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 106 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 106 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1270
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1271
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1272
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1273
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1274
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1275
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1274 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1276
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1275 is 1062
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1277
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1264 is 0
9999 mem: location 1265 is 10
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: storing 1265 in location 1278
 105 run: jump-unless c, 
9999 mem: location 1278 is 1265
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1279
 105 run: jump-unless redo?, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1290
 105 run: jump-unless undo?, 
9999 mem: location 1290 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1295
 105 run: jump-unless page-up?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1311
 105 run: jump-unless page-down?, 
9999 mem: location 1311 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1312
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1312 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1317
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1317 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1318
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1318 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1319
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1319 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1320
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1320 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 0 in location 1324
 105 run: jump-unless tab?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1278 is 1265
9999 mem: location 1265 is 10
9999 mem: storing 1 in location 1328
 105 run: jump-unless newline?, 
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 105 run: cursor-row-before:number <- copy *cursor-row
9999 mem: location 1274 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1329
 105 run: cursor-column-before:number <- copy *cursor-column
9999 mem: location 1275 is 1062
9999 mem: location 1062 is 1
9999 mem: storing 1 in location 1330
 105 run: top-before:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1313
 105 run: cursor-before:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1273 is 1058
9999 mem: location 1058 is 1111
9999 mem: storing 1111 in location 1325
 105 run: editor <- insert-new-line-and-indent editor, screen
9999 mem: location 1263 is 1055
9999 mem: location 1262 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: new alloc: 1346
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1348
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1349
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1350
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1351
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1352
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1353
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1111
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 1
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1354
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1349 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 107 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 107 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1355
 106 run: insert-duplex_2 10/newline, *before-cursor
9999 mem: location 1352 is 1058
9999 mem: location 1058 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1086
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1087
 107 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1368
9999 mem: storing 1368 in location 1088
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1088 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 0
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: location 1088 is 1368
9998 run: address to copy is 1368
9999 mem: storing 1368 in location 1089
 107 run: *val <- copy x
9999 mem: location 1086 is 10
9999 mem: location 1089 is 1368
9999 mem: storing 10 in location 1368
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1087 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1087 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1090
 107 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1087 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1108
9999 mem: location 1087 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1091
 107 run: *y <- copy new-node
9999 mem: location 1088 is 1368
9999 mem: location 1091 is 1112
9999 mem: storing 1368 in location 1112
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1088 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: location 1088 is 1368
9999 type: type deduced to be character$
9998 run: address to copy is 1370
9999 mem: storing 1370 in location 1091
 107 run: *y <- copy in
9999 mem: location 1087 is 1111
9999 mem: location 1091 is 1370
9999 mem: storing 1111 in location 1370
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1088 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 1111
9999 mem: location 1088 is 1368
9999 type: type deduced to be character$
9998 run: address to copy is 1369
9999 mem: storing 1369 in location 1091
 107 run: *y <- copy next-node
9999 mem: location 1090 is 0
9999 mem: location 1091 is 1369
9999 mem: storing 0 in location 1369
 107 run: jump-if next-node, 1:offset
9999 mem: location 1090 is 0
9998 run: jump-if fell through
 107 run: reply new-node
9999 mem: location 1088 is 1368
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next-duplex_2 *before-cursor
9999 mem: location 1352 is 1058
9999 mem: location 1058 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1368
9999 mem: storing 1368 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1368
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1368
9999 mem: location 1352 is 1058
9999 mem: storing 1368 in location 1058
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1350 is 1061
9999 mem: location 1061 is 3
9999 mem: location 1350 is 1061
9999 mem: storing 4 in location 1061
 106 run: *cursor-column <- copy left
9999 mem: location 1353 is 0
9999 mem: location 1351 is 1062
9999 mem: storing 0 in location 1062
 106 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1350 is 1061
9999 mem: location 1061 is 4
9999 mem: location 1355 is 4
9999 mem: storing 1 in location 1356
 106 run: jump-unless below-screen?, 
9999 mem: location 1356 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [scroll down]
  10 app: scroll down 
 106 run: top-of-screen:address:address:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1357
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1353
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1092
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 4
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1354
 106 run: max:number <- subtract right, left
9999 mem: location 1354 is 4
9999 mem: location 1353 is 0
9999 mem: storing 4 in location 1358
 106 run: old-top:address:duplex-list:character <- copy *top-of-screen
9999 mem: location 1357 is 1056
9999 mem: location 1056 is 1092
9999 mem: storing 1092 in location 1359
 106 run: *top-of-screen <- before-start-of-next-line *top-of-screen, max
9999 mem: location 1357 is 1056
9999 mem: location 1056 is 1092
9999 mem: location 1358 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: original:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1092 in location 1002
 107 run: max:number <- next-ingredient 
9999 mem: storing 4 in location 1003
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1004
 107 run: curr:address:duplex-list:character <- copy original
9999 mem: location 1002 is 1092
9999 mem: storing 1092 in location 1005
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1005 is 1092
9998 run: address to copy is 1092
9998 run: its type is character
9999 mem: location 1092 is 167
9999 mem: storing 167 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 107 run: jump-unless at-newline?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1092
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 0
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 107 run: jump-if done?, 
9999 mem: location 1008 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1005 is 1092
9998 run: address to copy is 1092
9998 run: its type is character
9999 mem: location 1092 is 167
9999 mem: storing 167 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 167
9999 mem: storing 0 in location 1007
 107 run: jump-if at-newline?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 107 run: curr <- next-duplex_2 curr
9999 mem: location 1005 is 1092
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1092 in location 1100
 108 run: jump-if in, 1:offset
9999 mem: location 1100 is 1092
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1100 is 1092
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1092 is 167
9999 mem: location 1093 is 1095
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1092
9999 type: type deduced to be character$
9998 run: address to copy is 1093
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1093 is 1095
9999 mem: storing 1095 in location 1101
 108 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1095
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 0
9999 mem: storing 1 in location 1004
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1095
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 1
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 107 run: jump-if done?, 
9999 mem: location 1008 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1005 is 1095
9998 run: address to copy is 1095
9998 run: its type is character
9999 mem: location 1095 is 97
9999 mem: storing 97 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 97
9999 mem: storing 0 in location 1007
 107 run: jump-if at-newline?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 107 run: curr <- next-duplex_2 curr
9999 mem: location 1005 is 1095
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1095 in location 1100
 108 run: jump-if in, 1:offset
9999 mem: location 1100 is 1095
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1100 is 1095
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1095 is 97
9999 mem: location 1096 is 1102
9999 mem: location 1097 is 1092
9999 mem: location 1100 is 1095
9999 type: type deduced to be character$
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1102
9999 mem: storing 1102 in location 1101
 108 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1102
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1102
9999 mem: storing 1102 in location 1005
 107 run: count <- add count, 1
9999 mem: location 1004 is 1
9999 mem: storing 2 in location 1004
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1102
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1004 is 2
9999 mem: location 1003 is 4
9999 mem: storing 0 in location 1008
 107 run: jump-if done?, 
9999 mem: location 1008 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1005 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1005 is 1102
9998 run: address to copy is 1102
9998 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 107 run: jump-if at-newline?, 
9999 mem: location 1007 is 1
9998 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1005 is 1102
9998 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1005 is 1102
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1102
9999 mem: location 1357 is 1056
9999 mem: storing 1102 in location 1056
 106 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1359 is 1092
9999 mem: location 1357 is 1056
9999 mem: location 1056 is 1102
9999 mem: storing 0 in location 1360
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1361
 106 run: jump-unless no-movement?, 1:offset
9999 mem: location 1360 is 0
9998 run: jumping to instruction 28
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1361
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1350 is 1061
9999 mem: location 1061 is 4
9999 mem: location 1350 is 1061
9999 mem: storing 3 in location 1061
 106 run: indent?:boolean <- get *editor, indent?:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1063
9998 run: its type is boolean
9999 mem: location 1063 is 1
9999 mem: storing 1 in location 1362
 106 run: jump-if indent?, 1:offset
9999 mem: location 1362 is 1
9998 run: jumping to instruction 34
 106 run: d:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1348 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1348 is 1055
9998 run: address to copy is 1055
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1055 is 1092
9999 mem: storing 1092 in location 1363
 106 run: end-of-previous-line:address:duplex-list:character <- prev-duplex_2 *before-cursor
9999 mem: location 1352 is 1058
9999 mem: location 1058 is 1368
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1368 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1368
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1100 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 1111
9999 mem: location 1100 is 1368
9999 type: type deduced to be character$
9998 run: address to copy is 1370
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1370 is 1111
9999 mem: storing 1111 in location 1101
 107 run: reply result
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1364
 106 run: indent:number <- line-indent end-of-previous-line, d
9999 mem: location 1364 is 1111
9999 mem: location 1363 is 1092
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1111 in location 1002
 107 run: start:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1092 in location 1003
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1004
 107 run: jump-if curr, 1:offset
9999 mem: location 1002 is 1111
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1002 is 1111
9999 mem: location 1003 is 1092
9999 mem: storing 0 in location 1005
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1005 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev-duplex_2 curr
9999 mem: location 1002 is 1111
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 108 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1113
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1113 is 1108
9999 mem: storing 1108 in location 1101
 108 run: reply result
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1002
 107 run: jump-unless curr, 
9999 mem: location 1002 is 1108
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1002 is 1108
9999 mem: location 1003 is 1092
9999 mem: storing 0 in location 1005
 107 run: jump-if at-start?, 
9999 mem: location 1005 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1002 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1002 is 1108
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 10
9999 mem: storing 10 in location 1006
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 107 run: jump-if at-newline?, 
9999 mem: location 1007 is 1
9998 run: jumping to instruction 27
 107 run: reply result:number
9999 mem: location 1004 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1365
 106 run: i:number <- copy 0
9999 mem: storing 0 in location 1366
 106 run: indent-done?:boolean <- greater-or-equal i, indent
9999 mem: location 1366 is 0
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1367
 106 run: jump-if indent-done?, 
9999 mem: location 1367 is 1
9998 run: jumping to instruction 44
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean
9999 mem: location 1348 is 1055
9999 mem: location 1349 is 1009
9999 mem: location 1361 is 1
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 1263
 105 run: top-after:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1263 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1263 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1102
9999 mem: storing 1102 in location 1315
 105 run: insert-from:address:duplex-list:character <- next-duplex_2 cursor-before
9999 mem: location 1325 is 1111
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 106 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1368
9999 mem: storing 1368 in location 1101
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1368
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1368
9999 mem: storing 1368 in location 1289
 105 run: insert-to:address:duplex-list:character <- next-duplex_2 *before-cursor
9999 mem: location 1273 is 1058
9999 mem: location 1058 is 1368
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1368 in location 1100
 106 run: jump-if in, 1:offset
9999 mem: location 1100 is 1368
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1100 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 1111
9999 mem: location 1100 is 1368
9999 type: type deduced to be character$
9998 run: address to copy is 1369
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1369 is 0
9999 mem: storing 0 in location 1101
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1327
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1371
9999 mem: storing 1371 in location 1281
 105 run: *op <- merge 0/insert-operation, cursor-row-before, cursor-column-before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 0/never-coalesce
9999 mem: location 1329 is 3
9999 mem: location 1330 is 1
9999 mem: location 1313 is 1092
9999 mem: location 1274 is 1061
9999 mem: location 1061 is 3
9999 mem: location 1275 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1315 is 1102
9999 mem: location 1289 is 1368
9999 mem: location 1327 is 0
9999 mem: location 1281 is 1371
9999 mem: location 1281 is 1371
9999 mem: storing 0 in location 1371
9999 mem: storing 3 in location 1372
9999 mem: storing 1 in location 1373
9999 mem: storing 1092 in location 1374
9999 mem: storing 3 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 1102 in location 1377
9999 mem: storing 1368 in location 1378
9999 mem: storing 0 in location 1379
9999 mem: storing 0 in location 1380
 105 run: editor <- add-operation editor, op
9999 mem: location 1263 is 1055
9999 mem: location 1281 is 1371
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1187
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1371 in location 1188
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1187 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1258
9999 mem: location 1065 is 0
9999 mem: location 1187 is 1055
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1189
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1188 is 1371
9999 mem: location 1189 is 1064
9999 mem: location 1064 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1371 in location 1143
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1258 in location 1144
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1382
9999 mem: storing 1382 in location 1145
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1145 is 1382
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1382 is 0
9999 mem: location 1383 is 0
9999 mem: location 1145 is 1382
9998 run: address to copy is 1382
9999 mem: storing 1382 in location 1146
 107 run: *val <- copy x
9999 mem: location 1143 is 1371
9999 mem: location 1146 is 1382
9999 mem: storing 1371 in location 1382
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1145 is 1382
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1382 is 1371
9999 mem: location 1383 is 0
9999 mem: location 1145 is 1382
9999 type: type deduced to be address$
9998 run: address to copy is 1383
9999 mem: storing 1383 in location 1147
 107 run: *next <- copy in
9999 mem: location 1144 is 1258
9999 mem: location 1147 is 1383
9999 mem: storing 1258 in location 1383
 107 run: reply result
9999 mem: location 1145 is 1382
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1382
9999 mem: location 1189 is 1064
9999 mem: storing 1382 in location 1064
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1187 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1187 is 1055
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1190
 106 run: *redo <- copy 0
9999 mem: location 1190 is 1065
9999 mem: storing 0 in location 1065
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1187 is 1055
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1055
9999 mem: storing 1055 in location 1263
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1268
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1262 is 1009
9999 mem: location 1263 is 1055
9999 mem: location 1268 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1055
9998 run: result 2 is 1
9999 mem: storing 1009 in location 1204
9999 mem: storing 1055 in location 1206
9999 mem: storing 1 in location 1216
 104 run: jump-unless go-render?, 
9999 mem: location 1216 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1204 is 1009
9999 mem: location 1206 is 1055
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1086
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1087
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1087 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1087 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1088
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1087 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1087 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1089
9990 schedule: editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-newline
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1086 is 1009
9999 mem: location 1087 is 1055
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1116
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1055 in location 1117
 106 run: jump-if editor, 1:offset
9999 mem: location 1117 is 1055
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1059
9998 run: its type is number
9999 mem: location 1059 is 0
9999 mem: storing 0 in location 1118
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1116 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 107 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 107 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1119
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1060
9998 run: its type is number
9999 mem: location 1060 is 4
9999 mem: storing 4 in location 1120
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1056
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1056 is 1102
9999 mem: storing 1102 in location 1121
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1121 is 1102
9999 mem: storing 1102 in location 1122
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1121
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1123
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1124
 106 run: column:number <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1126
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1127
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1128
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 1
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1144
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 107 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 107 run: *row <- copy new-row
9999 mem: location 1144 is 1
9999 mem: location 1146 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 107 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 106 run: jump-unless curr, 
9999 mem: location 1121 is 1105
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 1
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 106 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1121 is 1105
9998 run: address to copy is 1105
9998 run: its type is character
9999 mem: location 1105 is 98
9999 mem: storing 98 in location 1132
 106 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1384
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1386
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1387
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1386 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1387 is 98
9999 mem: storing 0 in location 1389
 107 run: jump-unless starting-comment?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1390
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1387 is 98
9999 mem: storing 0 in location 1392
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1392 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1393
 107 run: jump-unless color-is-red?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1386 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 98
9999 mem: storing 0 in location 1133
 106 run: jump-unless newline?, 
9999 mem: location 1133 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1125 is 0
9999 mem: location 1120 is 4
9999 mem: storing 0 in location 1135
 106 run: jump-unless at-right?, 
9999 mem: location 1135 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1116 is 1009
9999 mem: location 1132 is 98
9999 mem: location 1123 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 98
  90 print-character: 98 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 98
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 98
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 5
9999 mem: storing 1025 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1180 is 1025
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 98
9999 mem: location 1181 is 1025
9999 mem: storing 98 in location 1025
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1025
9999 mem: location 1025 is 98
9999 mem: location 1026 is 7
9999 mem: location 1180 is 1025
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1026
9999 mem: storing 7 in location 1026
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1121
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1102 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1102
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1102
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1102 is 10
9999 mem: location 1103 is 1105
9999 mem: location 1104 is 1095
9999 mem: location 1100 is 1102
9999 type: type deduced to be character$
9998 run: address to copy is 1103
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1103 is 1105
9999 mem: storing 1105 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1105
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1105
9999 mem: storing 1105 in location 1122
 106 run: column <- add column, 1
9999 mem: location 1125 is 0
9999 mem: storing 1 in location 1125
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1121 is 1108
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 1
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 106 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1121 is 1108
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 10
9999 mem: storing 10 in location 1132
 106 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1386
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1387
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1386 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1387 is 10
9999 mem: storing 0 in location 1389
 107 run: jump-unless starting-comment?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1390
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1387 is 10
9999 mem: storing 0 in location 1392
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1392 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1393
 107 run: jump-unless color-is-red?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1386 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 10
9999 mem: storing 1 in location 1133
 106 run: jump-unless newline?, 
9999 mem: location 1133 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 1
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1116 is 1009
9999 mem: location 1125 is 1
9999 mem: location 1120 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1188
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 6
9999 mem: storing 1027 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1180 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1027
9999 mem: storing 32 in location 1027
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1180 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1028
9999 mem: storing 7 in location 1028
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1171 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 7
9999 mem: storing 1029 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1180 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1029
9999 mem: storing 32 in location 1029
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1180 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1030
9999 mem: storing 7 in location 1030
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1171 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 8
9999 mem: storing 1031 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1180 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1031
9999 mem: storing 32 in location 1031
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1180 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1032
9999 mem: storing 7 in location 1032
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1171 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1167 is 5
9999 mem: storing 5 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 5
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 9
9999 mem: storing 1033 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1180 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1033
9999 mem: storing 32 in location 1033
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1180 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1034
9999 mem: storing 7 in location 1034
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1183 is 4
9999 mem: storing 1 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1124 is 1
9999 mem: storing 2 in location 1124
 106 run: column <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 2
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1144
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 107 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 107 run: *row <- copy new-row
9999 mem: location 1144 is 2
9999 mem: location 1146 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 107 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1108
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1121
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1105 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1105
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1105
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1105 is 98
9999 mem: location 1106 is 1108
9999 mem: location 1107 is 1102
9999 mem: location 1100 is 1105
9999 type: type deduced to be character$
9998 run: address to copy is 1106
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1106 is 1108
9999 mem: storing 1108 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1108
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1108
9999 mem: storing 1108 in location 1122
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1121 is 1111
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 2
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 106 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1121 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 99
9999 mem: storing 99 in location 1132
 106 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1386
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1387
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1386 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1387 is 99
9999 mem: storing 0 in location 1389
 107 run: jump-unless starting-comment?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1390
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1387 is 99
9999 mem: storing 0 in location 1392
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1392 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1393
 107 run: jump-unless color-is-red?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1386 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 99
9999 mem: storing 0 in location 1133
 106 run: jump-unless newline?, 
9999 mem: location 1133 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1125 is 0
9999 mem: location 1120 is 4
9999 mem: storing 0 in location 1135
 106 run: jump-unless at-right?, 
9999 mem: location 1135 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1116 is 1009
9999 mem: location 1132 is 99
9999 mem: location 1123 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9990 schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-newline
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 99
  90 print-character: 99 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 99
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 99
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 10
9999 mem: storing 1035 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1180 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 99
9999 mem: location 1181 is 1035
9999 mem: storing 99 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1035
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1180 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1368
9999 mem: storing 1368 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1368
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1368
9999 mem: storing 1368 in location 1121
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1108
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1108 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1108
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1108
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1108 is 10
9999 mem: location 1109 is 1111
9999 mem: location 1110 is 1105
9999 mem: location 1100 is 1108
9999 type: type deduced to be character$
9998 run: address to copy is 1109
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1109 is 1111
9999 mem: storing 1111 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1122
 106 run: column <- add column, 1
9999 mem: location 1125 is 0
9999 mem: storing 1 in location 1125
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1121 is 1368
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1124 is 2
9999 mem: location 1119 is 4
9999 mem: storing 0 in location 1129
 106 run: jump-if off-screen?, 
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1121 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 1111
9999 mem: location 1121 is 1368
9998 run: address to copy is 1368
9998 run: its type is character
9999 mem: location 1368 is 10
9999 mem: storing 10 in location 1132
 106 run: color <- get-color color, c
9999 mem: location 1123 is 7
9999 mem: location 1132 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1386
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1387
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1386 is 7
9999 mem: storing 1 in location 1388
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1387 is 10
9999 mem: storing 0 in location 1389
 107 run: jump-unless starting-comment?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1390
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1387 is 10
9999 mem: storing 0 in location 1392
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1392 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1386 is 7
9999 mem: storing 0 in location 1393
 107 run: jump-unless color-is-red?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1386 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1123
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1132 is 10
9999 mem: storing 1 in location 1133
 106 run: jump-unless newline?, 
9999 mem: location 1133 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 2
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1130 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1116 is 1009
9999 mem: location 1125 is 1
9999 mem: location 1120 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1188
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 11
9999 mem: storing 1037 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1180 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1037
9999 mem: storing 32 in location 1037
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1180 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1038
9999 mem: storing 7 in location 1038
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1171 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 12
9999 mem: storing 1039 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1180 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1039
9999 mem: storing 32 in location 1039
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1180 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1040
9999 mem: storing 7 in location 1040
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1171 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 13
9999 mem: storing 1041 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1180 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1041
9999 mem: storing 32 in location 1041
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1180 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1042
9999 mem: storing 7 in location 1042
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1171 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 108 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1167 is 5
9999 mem: storing 10 in location 1175
 108 run: index <- add index, *column
9999 mem: location 1175 is 10
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1175
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 108 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 108 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 14
9999 mem: storing 1043 in location 1180
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1180 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1181
 108 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1043
9999 mem: storing 32 in location 1043
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1180 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1182
 108 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1044
9999 mem: storing 7 in location 1044
 108 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1183 is 4
9999 mem: storing 1 in location 1184
 108 run: jump-if at-right?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 74
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1124 is 2
9999 mem: storing 3 in location 1124
 106 run: column <- copy left
9999 mem: location 1118 is 0
9999 mem: storing 0 in location 1125
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1116 is 1009
9999 mem: location 1124 is 3
9999 mem: location 1125 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1144
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 107 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 107 run: *row <- copy new-row
9999 mem: location 1144 is 3
9999 mem: location 1146 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 107 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1116
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1121 is 1368
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1368 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1368
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1368
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1368 is 10
9999 mem: location 1369 is 0
9999 mem: location 1370 is 1111
9999 mem: location 1100 is 1368
9999 type: type deduced to be character$
9998 run: address to copy is 1369
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1369 is 0
9999 mem: storing 0 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1121
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1122 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1111 in location 1100
 107 run: jump-if in, 1:offset
9999 mem: location 1100 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1100 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 99
9999 mem: location 1112 is 1368
9999 mem: location 1113 is 1108
9999 mem: location 1100 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1368
9999 mem: storing 1368 in location 1101
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1101 is 1368
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1368
9999 mem: storing 1368 in location 1122
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1121 is 0
9998 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1117 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1117 is 1055
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1136
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1121 is 0
9999 mem: location 1136 is 1057
9999 mem: storing 0 in location 1057
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 1 in location 1130
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1125 is 0
9999 mem: location 1127 is 1062
9999 mem: location 1062 is 0
9999 mem: storing 1 in location 1137
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1130 is 1
9999 mem: location 1137 is 1
9999 mem: storing 1 in location 1138
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: location 1061 is 3
9999 mem: storing 0 in location 1139
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: storing 1 in location 1140
 106 run: jump-unless before-cursor?, 
9999 mem: location 1140 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1124 is 3
9999 mem: location 1126 is 1061
9999 mem: storing 3 in location 1061
 106 run: *cursor-column <- copy column
9999 mem: location 1125 is 0
9999 mem: location 1127 is 1062
9999 mem: storing 0 in location 1062
 106 run: *before-cursor <- copy prev
9999 mem: location 1122 is 1368
9999 mem: location 1128 is 1058
9999 mem: storing 1368 in location 1058
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1124 is 3
9999 mem: location 1125 is 0
9999 mem: location 1116 is 1009
9999 mem: location 1117 is 1055
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 0
9999 mem: storing 3 in location 1090
9999 mem: storing 0 in location 1091
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1086 is 1009
9999 mem: location 1091 is 0
9999 mem: location 1089 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1188
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 0
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 15
9999 mem: storing 1045 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1180 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1045
9999 mem: storing 32 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1180 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1171 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1188 is 0
9999 mem: storing 1 in location 1188
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 16
9999 mem: storing 1047 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1180 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1180 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
9990 schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-newline
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1171 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 17
9999 mem: storing 1049 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1180 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1049
9999 mem: storing 32 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1180 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1171 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 18
9999 mem: storing 1051 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1180 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1180 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1183 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1171 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1168 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1171
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1167 is 5
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1172
 107 run: jump-unless newline?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1167 is 5
9999 mem: storing 15 in location 1175
 107 run: index <- add index, *column
9999 mem: location 1175 is 15
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1175
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1176
 107 run: len:number <- length *buf
9999 mem: location 1176 is 1014
9999 mem: storing 20 in location 1177
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1162 is 32
9999 mem: storing 0 in location 1178
 107 run: jump-unless backspace?, 
9999 mem: location 1178 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1176 is 1014
9999 mem: location 1175 is 19
9999 mem: storing 1053 in location 1180
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1180 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1180 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1181
 107 run: *cursor-contents <- copy c
9999 mem: location 1162 is 32
9999 mem: location 1181 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1180 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1180 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1182
 107 run: *cursor-color <- copy color
9999 mem: location 1163 is 7
9999 mem: location 1182 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1167 is 5
9999 mem: storing 4 in location 1183
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1171 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1183 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if at-right?, 
9999 mem: location 1184 is 1
9998 run: jumping to instruction 74
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 106 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1090 is 3
9999 mem: storing 4 in location 1090
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1086 is 1009
9999 mem: location 1090 is 4
9999 mem: location 1088 is 0
9999 mem: location 1089 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1219
 106 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1220
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1221
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1222
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1223
9999 mem: storing 1 in location 1224
 106 run: jump-if style-found?, 
9999 mem: location 1224 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
 106 run: jump-if color-found?, 
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1225
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
 106 run: jump-if bg-color-found?, 
9999 mem: location 1228 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1227
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1219 is 1009
9999 mem: location 1220 is 4
9999 mem: location 1221 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1144
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 107 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 107 run: *row <- copy new-row
9999 mem: location 1144 is 4
9999 mem: location 1146 is 1011
9999 mem: storing 4 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 107 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1219
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 0
9999 mem: location 1222 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1219 is 1009
9999 mem: location 1223 is 9480
9999 mem: location 1225 is 245
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 1 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1221 is 0
9999 mem: storing 1 in location 1221
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 1
9999 mem: location 1222 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1219 is 1009
9999 mem: location 1223 is 9480
9999 mem: location 1225 is 245
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 1 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1221 is 1
9999 mem: storing 2 in location 1221
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 2
9999 mem: location 1222 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1219 is 1009
9999 mem: location 1223 is 9480
9999 mem: location 1225 is 245
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 1 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1221 is 2
9999 mem: storing 3 in location 1221
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 3
9999 mem: location 1222 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1219 is 1009
9999 mem: location 1223 is 9480
9999 mem: location 1225 is 245
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 1 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1221 is 3
9999 mem: storing 4 in location 1221
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 4
9999 mem: location 1222 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1219 is 1009
9999 mem: location 1223 is 9480
9999 mem: location 1225 is 245
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1162
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1163
9999 mem: storing 1 in location 1164
 107 run: jump-if color-found?, 
9999 mem: location 1164 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 1 in location 1166
 107 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1162 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 107 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1221 is 4
9999 mem: storing 5 in location 1221
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1221 is 5
9999 mem: location 1222 is 4
9999 mem: storing 0 in location 1229
 106 run: jump-unless continue?, 
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1090 is 4
9999 mem: storing 5 in location 1090
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1086 is 1009
9999 mem: location 1090 is 5
9999 mem: location 1088 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 106 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1144
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1146
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1147
 106 run: jump-if screen, 
9999 mem: location 1143 is 1009
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1143 is 1009
9999 mem: location 1144 is 5
9999 mem: location 1145 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1395
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1397
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1398
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1399
 107 run: jump-unless sc, 
9999 mem: location 1397 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1400
 107 run: *row <- copy new-row
9999 mem: location 1398 is 5
9999 mem: location 1400 is 1011
9999 mem: storing 5 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1401
 107 run: *column <- copy new-column
9999 mem: location 1399 is 0
9999 mem: location 1401 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1397 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1143
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1143 is 1009
9999 mem: location 1145 is 0
9999 mem: location 1147 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1187
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1188
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1189
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 0
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 0
9999 mem: storing 1 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1187 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1161
9990 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-newline
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1162
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
 108 run: jump-if color-found?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1163
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
 108 run: jump-if bg-color-found?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1165
 108 run: trace 90, [print-character], c
9999 mem: location 1162 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1161 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1167
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1161 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1169
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1169 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1168 is 4
9999 mem: storing 0 in location 1170
 108 run: jump-if legal?, 1:offset
9999 mem: location 1170 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1161 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1190
 107 run: jump-if done?, 
9999 mem: location 1190 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1143 is 1009
9999 mem: location 1144 is 5
9999 mem: location 1146 is 0
9999 mem: location 1147 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1402
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1404
 107 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1405
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1406
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1407
 107 run: row <- add row, 1
9999 mem: location 1405 is 5
9999 mem: storing 6 in location 1405
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1404 is 1009
9999 mem: location 1405 is 6
9999 mem: location 1406 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1397
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1398
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1399
 108 run: jump-unless sc, 
9999 mem: location 1397 is 1009
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1400
 108 run: *row <- copy new-row
9999 mem: location 1398 is 6
9999 mem: location 1400 is 1011
9999 mem: storing 6 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1397 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1397 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1401
 108 run: *column <- copy new-column
9999 mem: location 1399 is 0
9999 mem: location 1401 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1397 is 1009
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1404
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1404 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1100
 108 run: jump-unless sc, 
9999 mem: location 1100 is 1009
9998 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1100 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1100 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1101
 108 run: reply height
9999 mem: location 1101 is 4
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1408
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1405 is 6
9999 mem: location 1408 is 4
9999 mem: storing 1 in location 1409
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1409 is 1
9998 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 1207
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1206 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 1206 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 1208
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1204 is 1009
9999 mem: location 1207 is 3
9999 mem: location 1208 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1143
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1144
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 105 run: jump-unless sc, 
9999 mem: location 1143 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1146
 105 run: *row <- copy new-row
9999 mem: location 1144 is 3
9999 mem: location 1146 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1143 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1143 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1147
 105 run: *column <- copy new-column
9999 mem: location 1145 is 0
9999 mem: location 1147 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1143 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1204
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1205 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1200 in location 1219
 105 run: jump-unless x, 
9999 mem: location 1219 is 1200
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 2
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1220
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1219 is 1200
9999 mem: location 1200 is 2
9999 mem: location 1201 is 1191
9999 mem: location 1219 is 1200
9998 run: address to copy is 1201
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1201 is 1191
9999 mem: storing 1191 in location 1221
 105 run: max:number <- length *buf
9999 mem: location 1221 is 1191
9999 mem: storing 2 in location 1222
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1220 is 1200
9999 mem: location 1200 is 2
9999 mem: location 1222 is 2
9999 mem: storing 1 in location 1223
 105 run: jump-unless done?, 
9999 mem: location 1223 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1098 in location 1224
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1224 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1219 is 1200
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1200
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1209
9999 mem: storing 0 in location 1210
9999 mem: storing 0 in location 1211
9999 mem: storing 0 in location 1212
9999 mem: storing 1200 in location 1205
9999 mem: storing 1 in location 1213
9999 mem: storing 1 in location 1214
 104 run: jump-unless found?, 
9999 mem: location 1213 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1214 is 1
9998 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 2 is 1055
9998 run: address to copy is 1061
9998 run: its type is number
9999 mem: location 1061 is 3
9999 mem: storing 3 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1055
9999 mem: location 1055 is 1092
9999 mem: location 1056 is 1102
9999 mem: location 1057 is 0
9999 mem: location 1058 is 1368
9999 mem: location 1059 is 0
9999 mem: location 1060 is 4
9999 mem: location 1061 is 3
9999 mem: location 1062 is 0
9999 mem: location 1063 is 1
9999 mem: location 1064 is 1382
9999 mem: location 1065 is 0
9999 mem: location 2 is 1055
9998 run: address to copy is 1062
9998 run: its type is number
9999 mem: location 1062 is 0
9999 mem: storing 0 in location 4
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .     .
    .b    .
    .c    .
    .     .
  ]
 102 run: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
9999 trace: fall-through: exiting scenario-editor-scrolls-down-on-newline; decrementing callstack depth from 1
