9999 parse: instruction: foo
9999 parse:   product: {name: "1", properties: ["1": "address"]}
9999 parse: instruction: foo
9999 parse:   product: {name: "2", properties: ["2": "address"]}
9999 parse: instruction: equal
9999 parse:   ingredient: {name: "1", properties: ["1": "address"]}
9999 parse:   ingredient: {name: "2", properties: ["2": "address"]}
9999 parse:   product: {name: "3", properties: ["3": "boolean"]}
9999 parse: instruction: local-scope
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "34", properties: ["34": "literal"]}
9999 parse:   product: {name: "x", properties: ["x": "number"]}
9999 parse: instruction: reply
9999 parse:   ingredient: {name: "default-space", properties: ["default-space": "address":"array":"location"]}
9999 new: location -> location
9999 name: assign x 1
9999 after-brace: recipe main
9999 after-brace: foo ...
9999 after-brace: foo ...
9999 after-brace: equal ...
9999 after-brace: recipe foo
9999 after-brace: local-scope ...
9999 after-brace: copy ...
9999 after-brace: reply ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: 1:address <- foo 
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1000
 102 run: x:number <- copy 34
9999 mem: storing 34 in location 1002
 102 run: reply default-space:address:array:location
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1
 101 run: 2:address <- foo 
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 102 run: x:number <- copy 34
9999 mem: storing 34 in location 1002
 102 run: reply default-space:address:array:location
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 2
 101 run: 3:boolean <- equal 1:address, 2:address
9999 mem: location 1 is 1000
9999 mem: location 2 is 1000
9999 mem: storing 1 in location 3
