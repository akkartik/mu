9991 load: --- defining main
9993 parse: instruction: foo
9993 parse:   product: {"1": "address"}
9992 load: after rewriting: 1:address <- foo 
9993 parse: instruction: foo
9993 parse:   product: {"2": "address"}
9992 load: after rewriting: 2:address <- foo 
9993 parse: instruction: equal
9993 parse:   ingredient: {"1": "address"}
9993 parse:   ingredient: {"2": "address"}
9993 parse:   product: {"3": "boolean"}
9992 load: after rewriting: 3:boolean <- equal 1:address, 2:address
9991 load: --- defining foo
9993 parse: instruction: local-scope
9992 load: after rewriting: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9993 parse: instruction: copy
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   product: {"x": "number"}
9992 load: after rewriting: x:number <- copy 34
9993 parse: instruction: reply
9993 parse:   ingredient: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: reply default-space:address:array:location
9999 new: location -> location
9999 name: assign x 1
9999 after-brace: recipe main
9999 after-brace: foo ...
9999 after-brace: foo ...
9999 after-brace: equal ...
9999 after-brace: recipe foo
9999 after-brace: local-scope ...
9999 after-brace: copy ...
9999 after-brace: reply ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:address <- foo 
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1000
 103 run: x:number <- copy 34
9999 mem: storing 34 in location 1002
 103 run: reply default-space:address:array:location
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1
 102 run: 2:address <- foo 
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
 103 run: x:number <- copy 34
9999 mem: storing 34 in location 1002
 103 run: reply default-space:address:array:location
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 2
 102 run: 3:boolean <- equal 1:address, 2:address
9999 mem: location 1 is 1000
9999 mem: location 2 is 1000
9999 mem: storing 1 in location 3
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
