9991 load: --- defining main
9993 parse: instruction: copy
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"12": "number"}
9992 load: after rewriting: 12:number <- copy 1
9993 parse: instruction: copy
9993 parse:   ingredient: {"35": "literal"}
9993 parse:   product: {"13": "number"}
9992 load: after rewriting: 13:number <- copy 35
9993 parse: instruction: copy
9993 parse:   ingredient: {"36": "literal"}
9993 parse:   product: {"14": "number"}
9992 load: after rewriting: 14:number <- copy 36
9993 parse: instruction: maybe-convert
9993 parse:   ingredient: {"12": "number-or-point", "raw": <>}
9993 parse:   ingredient: {"p": "variant"}
9993 parse:   product: {"20": <"address" : <"point" : <>>>}
9992 load: after rewriting: 20:address:point <- maybe-convert 12:number-or-point/raw, p:variant
9999 name: variant p of type number-or-point has tag 1
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: maybe-convert ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 12:number <- copy 1
9999 mem: storing 1 in location 12
 102 run: 13:number <- copy 35
9999 mem: storing 35 in location 13
 102 run: 14:number <- copy 36
9999 mem: storing 36 in location 14
 102 run: 20:address:point <- maybe-convert 12:number-or-point/raw, p:variant
9999 mem: location 12 is 1
9999 mem: location 13 is 35
9999 mem: location 14 is 36
9999 mem: storing 13 in location 20
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
