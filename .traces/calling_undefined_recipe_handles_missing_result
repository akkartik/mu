9991 parse: --- defining main
9993 parse: instruction: foo
9993 parse:   number of ingredients: 0
9993 parse:   product: {"x": "number"}
9992 load: after rewriting: x:number <- foo 
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: x => number
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: assign x 1
9991 transform: --- transform braces for recipe main
9991 transform: foo ...
9991 transform: --- compute instruction operations for recipe main
   0 error: main: instruction foo has no recipe

9991 transform: --- perform checks for recipe main
   0 error: main: undefined operation in 'x:number <- foo '

9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: x:number <- foo 
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
