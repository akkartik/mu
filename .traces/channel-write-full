schedule: main
run: -- nil
run: 1 main 0: (((1 channel-address)) <- ((new-channel)) ((1 literal)))
run: -- nil
run: 2 new-channel 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1000 30))
run: 3 new-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1001 to 1031
run: -- ((1000 30) (1001 1031))
run: 4 new-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((2 integer-address))
setm: ((2 integer-address)) <= 1031
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1002 to 1031
run: -- ((1000 30) (1001 1031) (1002 1031))
run: 5 new-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1031 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1031 0))
run: 6 new-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((3 integer-address))
setm: ((3 integer-address)) <= 1032
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1003 to 1032
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0))
run: 7 new-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1032 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0) (1032 0))
run: 8 new-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 1
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 1) (1031 0) (1032 0))
run: 9 new-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 1 1
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1004 to 2
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1031 0) (1032 0))
run: 10 new-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1033 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1033
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1005 to 1033
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0))
run: 11 new-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1034 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1034
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1033 to 1034
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2))
run: 12 new-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2))
run: 13 main 1: (((2 integer-address)) <- ((new)) ((integer literal)))
sizeof: ((_ integer))
run: 1039 => ((2 integer-address))
setm: ((2 integer-address)) <= 1039
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 2 to 1039
run: -- ((1 1031) (2 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2))
run: 14 main 2: (((2 integer-address) (deref)) <- ((copy)) ((34 literal)))
run: 34 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 34
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1039 to 34
run: -- ((1 1031) (2 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34))
run: 15 main 3: (((3 tagged-value)) <- ((save-type)) ((2 integer-address)))
m: ((2 integer-address))
sizeof: ((2 integer-address))
run: #(tagged record (integer-address 1039)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (integer-address 1039))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 3 to integer-address
setm: ((3 tagged-value)): setting 4 to 1039
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34))
run: 16 main 4: (((1 channel-address) (deref)) <- ((write)) ((1 channel-address)) ((3 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34))
run: 17 write 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1040 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30))
run: 18 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031 #(tagged record (integer-address 1039 . nil)))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1041 to 1031
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031))
run: 19 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1031 #(tagged record (integer-address 1039 . nil)))
run: #(tagged record (integer-address 1039 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (integer-address 1039 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1042 to integer-address
setm: ((2 tagged-value)): setting 1043 to 1039
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039))
run: 20 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039))
run: 21 full? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1071 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30))
run: 22 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1072 to 0
setm: ((1 channel)): setting 1073 to 0
setm: ((1 channel)): setting 1074 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034))
run: 23 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 integer) (raw))
sizeof: ((1073 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1075 to 0
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 0))
run: 24 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 0 1
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1075 to 1
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1))
run: 25 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1))
run: 26 capacity 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1102 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1102 30))
run: 27 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1103 to 0
setm: ((1 channel)): setting 1104 to 0
setm: ((1 channel)): setting 1105 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1102 30) (1103 0) (1104 0) (1105 1034))
run: 28 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1105 tagged-value-array-address) (raw))
sizeof: ((1105 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1106 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034))
run: 29 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1107 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 30 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1076 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 31 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1077 to t
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 32 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 33 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1072 integer) (raw))
sizeof: ((1072 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1078 to 0
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 34 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1079 to nil
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 35 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1044 to nil
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 36 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 37 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1034
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1046 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 38 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((7 integer-address))
setm: ((7 integer-address)) <= 1032
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1047 to 1032
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 39 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1035 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1035
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1048 to 1035
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 40 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer-address 1039 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (integer-address 1039 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1035 to integer-address
setm: ((8 tagged-value-address) (deref)): setting 1036 to 1039
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 41 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
add: 0 1
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1032 to 1
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 42 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1049 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 43 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1050 to t
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 44 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is t
jump: jumping to 16
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 45 write 16: reply:chan:channel-address/deref
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 46 main 5: (((5 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2))
run: 47 empty? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1133 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30))
run: 48 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1134 to 0
setm: ((1 channel)): setting 1135 to 1
setm: ((1 channel)): setting 1136 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034))
run: 49 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1134 integer) (raw))
sizeof: ((1134 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1137 to 0
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0))
run: 50 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1135 integer) (raw))
sizeof: ((1135 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1138 to 1
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1))
run: 51 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1139 to nil
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1))
run: 52 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((5 boolean)))
reply: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 5 to nil
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1))
run: 53 main 6: (((6 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1))
run: 54 full? 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1164 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30))
run: 55 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1165 to 0
setm: ((1 channel)): setting 1166 to 1
setm: ((1 channel)): setting 1167 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034))
run: 56 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1166 integer) (raw))
sizeof: ((1166 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1168 to 1
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 1))
run: 57 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
add: 1 1
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1168 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2))
run: 58 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2))
run: 59 capacity 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal)))
sizeof: ((_ location))
run: 1195 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1195 30))
run: 60 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1196 to 0
setm: ((1 channel)): setting 1197 to 1
setm: ((1 channel)): setting 1198 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1195 30) (1196 0) (1197 1) (1198 1034))
run: 61 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1198 tagged-value-array-address) (raw))
sizeof: ((1198 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1199 to 1034
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034))
run: 62 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1200 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 63 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1169 to 2
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1169 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 64 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1170 to nil
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1169 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 65 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
jump: checking that nil is t
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 2) (1169 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 66 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1168 to 0
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 0) (1169 2) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 67 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1165 integer) (raw))
sizeof: ((1165 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1171 to 0
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 0) (1169 2) (1171 0) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 68 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1172 to t
run: -- ((1 1031) (2 1039) (3 integer-address) (4 1039) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 2) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 2) (1035 integer-address) (1036 1039) (1039 34) (1040 30) (1041 1031) (1042 integer-address) (1043 1039) (1046 1034) (1047 1032) (1048 1035) (1049 2) (1050 t) (1071 30) (1072 0) (1073 0) (1074 1034) (1075 1) (1076 2) (1077 t) (1078 0) (1102 30) (1103 0) (1104 0) (1105 1034) (1106 1034) (1107 2) (1133 30) (1134 0) (1135 1) (1136 1034) (1137 0) (1138 1) (1164 30) (1165 0) (1166 1) (1167 1034) (1168 0) (1169 2) (1171 0) (1172 t) (1195 30) (1196 0) (1197 1) (1198 1034) (1199 1034) (1200 2))
run: 69 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((6 boolean)))
reply: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 6 to t
schedule: done with routine
