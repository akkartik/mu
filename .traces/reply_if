parse: instruction: test1
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse: instruction: reply-if
parse:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse:   ingredient: {name: "34", value: 0, type: 0, properties: ["34": "literal"]}
parse: instruction: reply
parse:   ingredient: {name: "35", value: 0, type: 0, properties: ["35": "literal"]}
after-brace: recipe main
after-brace: test1 ...
after-brace: recipe test1
after-brace: reply-if ...
after-brace: reply-if ...
after-brace: reply ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- test1/1001 
run: instruction test1/0
run: reply-if/12 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}, {name: "1", value: 1, type: 0, properties: ["1": "offset"]}
run: ingredient 0 is 0
run: ingredient 1 is 1
run: jumping to instruction 2
run: instruction test1/2
run: reply/37 {name: "35", value: 35, type: 0, properties: ["35": "literal"]}
run: ingredient 0 is 35
run: result 0 is 35
run: product 0 is 1
mem: storing 35 in location 1
