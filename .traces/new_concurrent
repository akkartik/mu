parse: instruction: start-running
parse:   ingredient: {name: "f2", properties: ["f2": "recipe"]}
parse: instruction: new
parse:   ingredient: {name: "number", properties: ["number": "type"]}
parse:   product: {name: "1", properties: ["1": "address":"number", "raw": ]}
parse: label: {
parse: instruction: loop-unless
parse:   ingredient: {name: "4", properties: ["4": "number", "raw": ]}
parse: label: }
parse: instruction: new
parse:   ingredient: {name: "number", properties: ["number": "type"]}
parse:   product: {name: "2", properties: ["2": "address":"number", "raw": ]}
parse: instruction: equal
parse:   ingredient: {name: "1", properties: ["1": "address":"number", "raw": ]}
parse:   ingredient: {name: "2", properties: ["2": "address":"number", "raw": ]}
parse:   product: {name: "3", properties: ["3": "boolean", "raw": ]}
parse: instruction: copy
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse:   product: {name: "4", properties: ["4": "number", "raw": ]}
new: number -> 1
new: number -> 1
brace: 1000: push (open, 2)
brace: push (close, 4)
after-brace: recipe f1
after-brace: start-running ...
after-brace: new ...
after-brace: jump-unless 4, -1:offset
after-brace: recipe f2
after-brace: new ...
after-brace: equal ...
after-brace: copy ...
new: routine allocated memory from 1000 to 101000
schedule: f1
run: start-running f2:recipe
new: routine allocated memory from 101000 to 201000
run: 1:address:number/raw <- new number:type
mem: new alloc: 1000
mem: storing 1000 in location 1
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
run: loop-unless 4:number/raw, 
mem: location 4 is 0
run: jumping to instruction 3
schedule: f2
run: 2:address:number/raw <- new number:type
mem: new alloc: 101000
mem: storing 101000 in location 2
run: 3:boolean/raw <- equal 1:address:number/raw, 2:address:number/raw
mem: location 1 is 1000
mem: location 2 is 101000
mem: storing 0 in location 3
run: 4:number/raw <- copy 1:literal
mem: storing 1 in location 4
schedule: f1
run: loop-unless 4:number/raw, 
mem: location 4 is 1
run: jump-unless fell through
