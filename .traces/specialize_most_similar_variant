9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"number": "type"}
9993 parse:   product: {"1": <"address" : <"shared" : <"number" : <>>>>}
9992 load: after rewriting: 1:address:shared:number <- new number:type
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"number" : <>>>>}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- foo 1:address:shared:number
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:_elem
9999 parse: header product: y:number
9991 parse: --- defining foo
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9992 load: after rewriting: reply 34
9999 parse: recipe foo has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:address:shared:_elem
9999 parse: header product: y:number
9999 load: switching foo to foo_2
9991 parse: --- defining foo_2
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"35": "literal"}
9992 load: after rewriting: reply 35
9999 parse: recipe foo_2 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction 2:number <- foo 1:address:shared:number
9992 transform: checking variant (strict) 50: recipe foo {"x": "_elem"} -> {"y": "number"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 51: recipe foo_2 {"x": <"address" : <"shared" : <"_elem" : <>>>>} -> {"y": "number"}
9993 transform: strict match failed: ingredient 0
9992 transform: found variant to specialize: 1002 foo_2
9993 transform: switching foo to specialized foo_3
9993 transform: compute type names: foo_3
9994 transform:     checking {"x": <"address" : <"shared" : <"_elem" : <>>>>}: <"address" : <"shared" : <"_elem" : <>>>>
9993 transform: type of x is <"address" : <"shared" : <"_elem" : <>>>>
9994 transform:     checking {"y": "number"}: "number"
9993 transform: type of y is "number"
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: x:address:shared:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"x": <"address" : <"shared" : <"_elem" : <>>>>}: <"address" : <"shared" : <"_elem" : <>>>>
9993 transform:   instruction: reply 35
9994 transform:     checking {"35": "literal"}: "literal"
9993 transform: type of 35 is "literal"
9993 transform: adding mapping from _elem to "number"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient x:address:shared:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <number : <>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient y:number
9993 transform:   after: number
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'x:address:shared:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient x:address:shared:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <number : <>>>>
9993 transform: replacing in instruction 'reply 35'
9993 transform: replacing in ingredient 35
9993 transform:   after: ?0
9992 transform: transforming new specialization: foo_3
9991 transform: --- checking reply instructions against header for foo_3
9991 transform: --- fill in reply ingredients from header for recipe foo_3
9991 transform: --- deduce types for recipe foo_3
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: x => <address : <shared : <number : <>>>>
9991 transform: --- deduce types from header for foo_3
9993 transform: type of x is <address : <shared : <number : <>>>>
9993 transform: type of y is number
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: x:address:shared:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: x: <address : <shared : <number : <>>>> -- {"x": <"address" : <"shared" : <"number" : <>>>>}
9992 transform: instruction: reply 35
9991 transform: --- collect surrounding spaces for recipe foo_3
9991 transform: --- transform names for recipe foo_3
9993 name: assign x 1
9991 transform: --- resolve ambiguous calls for recipe foo_3
9991 transform: --- compute instruction operations for recipe foo_3
9991 transform: --- transform braces for recipe foo_3
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: reply ...
9991 transform: --- perform checks for recipe foo_3
9991 transform: --- type-check 'call' instructions inside recipe foo_3
9991 transform: --- type-check calls inside recipe foo_3
9991 transform: --- convert 'new' to 'allocate' for recipe foo_3
9992 new: size of "location" is 1
9991 transform: --- checking reply instructions against header for foo_3
9992 transform: new specialization: foo_3
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "number" is 1
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:address:shared:number <- new number:type
9999 mem: allocating size 2
9999 mem: new alloc: 1000
9999 mem: storing 1000 in location 1
9999 mem: incrementing refcount of 1000: 0 -> 1
 102 run: 2:number <- foo_3 1:address:shared:number
9999 mem: location 1 is 1000
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 mem: new alloc: 1002
9999 mem: storing 2 in location 1003
 103 run: x:address:shared:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1005
9999 mem: incrementing refcount of 1000: 1 -> 2
 103 run: reply 35
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 35
9999 mem: storing 35 in location 2
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
