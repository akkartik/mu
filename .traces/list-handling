parse/0: instruction: run
parse/0:   ingredient: {name: "
#?     $start-tracing #? 1
    1:address:list <- copy 0:literal
    1:address:list <- push 3:literal, 1:address:list
    1:address:list <- push 4:literal, 1:address:list
    1:address:list <- push 5:literal, 1:address:list
    2:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    3:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    4:number <- first 1:address:list
    1:address:list <- rest 1:address:list
  ", value: 0, type: 0, properties: ["
#?     $start-tracing #? 1
    1:address:list <- copy 0:literal
    1:address:list <- push 3:literal, 1:address:list
    1:address:list <- push 4:literal, 1:address:list
    1:address:list <- push 5:literal, 1:address:list
    2:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    3:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    4:number <- first 1:address:list
    1:address:list <- rest 1:address:list
  ": "literal-string"]}
parse/0: instruction: memory-should-contain
parse/0:   ingredient: {name: "
    1 <- 0  # empty to empty, dust to dust..
    2 <- 5
    3 <- 4
    4 <- 3
  ", value: 0, type: 0, properties: ["
    1 <- 0  # empty to empty, dust to dust..
    2 <- 5
    3 <- 4
    4 <- 3
  ": "literal-string"]}
after-brace/0: recipe list-handling
after-brace/0: run ...
after-brace/0: memory-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: list-handling
run/0: instruction list-handling/0
run/0: run/54 {name: "
#?     $start-tracing #? 1
    1:address:list <- copy 0:literal
    1:address:list <- push 3:literal, 1:address:list
    1:address:list <- push 4:literal, 1:address:list
    1:address:list <- push 5:literal, 1:address:list
    2:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    3:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    4:number <- first 1:address:list
    1:address:list <- rest 1:address:list
  ", value: 0, type: 0, properties: ["
#?     $start-tracing #? 1
    1:address:list <- copy 0:literal
    1:address:list <- push 3:literal, 1:address:list
    1:address:list <- push 4:literal, 1:address:list
    1:address:list <- push 5:literal, 1:address:list
    2:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    3:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    4:number <- first 1:address:list
    1:address:list <- rest 1:address:list
  ": "literal-string"]}
run/0: ingredient 0 is 
#?     $start-tracing #? 1
    1:address:list <- copy 0:literal
    1:address:list <- push 3:literal, 1:address:list
    1:address:list <- push 4:literal, 1:address:list
    1:address:list <- push 5:literal, 1:address:list
    2:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    3:number <- first 1:address:list
    1:address:list <- rest 1:address:list
    4:number <- first 1:address:list
    1:address:list <- rest 1:address:list
  
parse/0: instruction: copy
parse/0:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: push
parse/0:   ingredient: {name: "3", value: 0, type: 0, properties: ["3": "literal"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: push
parse/0:   ingredient: {name: "4", value: 0, type: 0, properties: ["4": "literal"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: push
parse/0:   ingredient: {name: "5", value: 0, type: 0, properties: ["5": "literal"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: first
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse/0: instruction: rest
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: first
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse/0: instruction: rest
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0: instruction: first
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "4", value: 0, type: 1, properties: ["4": "number"]}
parse/0: instruction: rest
parse/0:   ingredient: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
parse/0:   product: {name: "1", value: 0, type: 2-12, properties: ["1": "address":"list"]}
after-brace/0: recipe run1001
after-brace/0: copy ...
after-brace/0: push ...
after-brace/0: push ...
after-brace/0: push ...
after-brace/0: first ...
after-brace/0: rest ...
after-brace/0: first ...
after-brace/0: rest ...
after-brace/0: first ...
after-brace/0: rest ...
run/0: instruction run1001/0
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is 1
mem/0: storing 0 in location 1
run/0: instruction run1001/1
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- push/117 {name: "3", value: 3, type: 0, properties: ["3": "literal"]}, {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 3
run/0: ingredient 1 is 1
mem/0: location 1 is 0
run/0: instruction push/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: product 0 is default-space
run/0: instruction push/1
run/0: {name: "x", value: 1, type: 1, properties: ["x": "location"]} <- next-ingredient/33 
run/0: product 0 is x
mem/0: storing 3 in location 1002
run/0: instruction push/2
run/0: {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 0 in location 1003
run/0: instruction push/3
run/0: {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]} <- new/51 {name: "list", value: 12, type: 0, properties: ["list": "type"]}
run/0: ingredient 0 is list
mem/0: new alloc: 1031
run/0: product 0 is result
mem/0: storing 1031 in location 1004
run/0: instruction push/4
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1004 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
run/0: ingredient 1 is value
mem/0: location 1004 is 1031
run/0: address to copy is 1031
run/0: product 0 is val
mem/0: storing 1031 in location 1005
run/0: instruction push/5
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location", "deref": ]} <- copy/1 {name: "x", value: 1, type: 1, properties: ["x": "location"]}
run/0: ingredient 0 is x
mem/0: location 1002 is 3
run/0: product 0 is val
mem/0: location 1005 is 1031
mem/0: storing 3 in location 1031
run/0: instruction push/6
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1004 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 0
run/0: ingredient 1 is next
mem/0: location 1004 is 1031
run/0: address to copy is 1032
run/0: product 0 is next
mem/0: storing 1032 in location 1006
run/0: instruction push/7
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list", "deref": ]} <- copy/1 {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]}
run/0: ingredient 0 is in
mem/0: location 1003 is 0
run/0: product 0 is next
mem/0: location 1006 is 1032
mem/0: storing 0 in location 1032
run/0: instruction push/8
run/0: reply/36 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1004 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/2
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- push/117 {name: "4", value: 4, type: 0, properties: ["4": "literal"]}, {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 4
run/0: ingredient 1 is 1
mem/0: location 1 is 1031
run/0: instruction push/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1033
run/0: product 0 is default-space
run/0: instruction push/1
run/0: {name: "x", value: 1, type: 1, properties: ["x": "location"]} <- next-ingredient/33 
run/0: product 0 is x
mem/0: storing 4 in location 1035
run/0: instruction push/2
run/0: {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1031 in location 1036
run/0: instruction push/3
run/0: {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]} <- new/51 {name: "list", value: 12, type: 0, properties: ["list": "type"]}
run/0: ingredient 0 is list
mem/0: new alloc: 1064
run/0: product 0 is result
mem/0: storing 1064 in location 1037
run/0: instruction push/4
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1037 is 1064
mem/0: location 1064 is 0
mem/0: location 1065 is 0
run/0: ingredient 1 is value
mem/0: location 1037 is 1064
run/0: address to copy is 1064
run/0: product 0 is val
mem/0: storing 1064 in location 1038
run/0: instruction push/5
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location", "deref": ]} <- copy/1 {name: "x", value: 1, type: 1, properties: ["x": "location"]}
run/0: ingredient 0 is x
mem/0: location 1035 is 4
run/0: product 0 is val
mem/0: location 1038 is 1064
mem/0: storing 4 in location 1064
run/0: instruction push/6
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1037 is 1064
mem/0: location 1064 is 4
mem/0: location 1065 is 0
run/0: ingredient 1 is next
mem/0: location 1037 is 1064
run/0: address to copy is 1065
run/0: product 0 is next
mem/0: storing 1065 in location 1039
run/0: instruction push/7
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list", "deref": ]} <- copy/1 {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]}
run/0: ingredient 0 is in
mem/0: location 1036 is 1031
run/0: product 0 is next
mem/0: location 1039 is 1065
mem/0: storing 1031 in location 1065
run/0: instruction push/8
run/0: reply/36 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1037 is 1064
run/0: result 0 is 1064
run/0: product 0 is 1
mem/0: storing 1064 in location 1
run/0: instruction run1001/3
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- push/117 {name: "5", value: 5, type: 0, properties: ["5": "literal"]}, {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 5
run/0: ingredient 1 is 1
mem/0: location 1 is 1064
run/0: instruction push/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1066
run/0: product 0 is default-space
run/0: instruction push/1
run/0: {name: "x", value: 1, type: 1, properties: ["x": "location"]} <- next-ingredient/33 
run/0: product 0 is x
mem/0: storing 5 in location 1068
run/0: instruction push/2
run/0: {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1064 in location 1069
run/0: instruction push/3
run/0: {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]} <- new/51 {name: "list", value: 12, type: 0, properties: ["list": "type"]}
run/0: ingredient 0 is list
mem/0: new alloc: 1097
run/0: product 0 is result
mem/0: storing 1097 in location 1070
run/0: instruction push/4
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1070 is 1097
mem/0: location 1097 is 0
mem/0: location 1098 is 0
run/0: ingredient 1 is value
mem/0: location 1070 is 1097
run/0: address to copy is 1097
run/0: product 0 is val
mem/0: storing 1097 in location 1071
run/0: instruction push/5
run/0: {name: "val", value: 4, type: 2-1, properties: ["val": "address":"location", "deref": ]} <- copy/1 {name: "x", value: 1, type: 1, properties: ["x": "location"]}
run/0: ingredient 0 is x
mem/0: location 1068 is 5
run/0: product 0 is val
mem/0: location 1071 is 1097
mem/0: storing 5 in location 1097
run/0: instruction push/6
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list"]} <- get-address/28 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1070 is 1097
mem/0: location 1097 is 5
mem/0: location 1098 is 0
run/0: ingredient 1 is next
mem/0: location 1070 is 1097
run/0: address to copy is 1098
run/0: product 0 is next
mem/0: storing 1098 in location 1072
run/0: instruction push/7
run/0: {name: "next", value: 5, type: 2-2-12, properties: ["next": "address":"address":"list", "deref": ]} <- copy/1 {name: "in", value: 2, type: 2-12, properties: ["in": "address":"list"]}
run/0: ingredient 0 is in
mem/0: location 1069 is 1064
run/0: product 0 is next
mem/0: location 1072 is 1098
mem/0: storing 1064 in location 1098
run/0: instruction push/8
run/0: reply/36 {name: "result", value: 3, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1070 is 1097
run/0: result 0 is 1097
run/0: product 0 is 1
mem/0: storing 1097 in location 1
run/0: instruction run1001/4
run/0: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- first/118 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1097
run/0: instruction first/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1099
run/0: product 0 is default-space
run/0: instruction first/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1097 in location 1101
run/0: instruction first/2
run/0: {name: "result", value: 2, type: 1, properties: ["result": "location"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1101 is 1097
mem/0: location 1097 is 5
mem/0: location 1098 is 1064
run/0: ingredient 1 is value
mem/0: location 1101 is 1097
run/0: address to copy is 1097
run/0: its type is 1
mem/0: location 1097 is 5
run/0: product 0 is result
mem/0: storing 5 in location 1102
run/0: instruction first/3
run/0: reply/36 {name: "result", value: 2, type: 1, properties: ["result": "location"]}
run/0: ingredient 0 is result
mem/0: location 1102 is 5
run/0: result 0 is 5
run/0: product 0 is 2
mem/0: storing 5 in location 2
run/0: instruction run1001/5
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- rest/119 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1097
run/0: instruction rest/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1130
run/0: product 0 is default-space
run/0: instruction rest/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1097 in location 1132
run/0: instruction rest/2
run/0: {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1132 is 1097
mem/0: location 1097 is 5
mem/0: location 1098 is 1064
run/0: ingredient 1 is next
mem/0: location 1132 is 1097
run/0: address to copy is 1098
run/0: its type is 2
mem/0: location 1098 is 1064
run/0: product 0 is result
mem/0: storing 1064 in location 1133
run/0: instruction rest/3
run/0: reply/36 {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1133 is 1064
run/0: result 0 is 1064
run/0: product 0 is 1
mem/0: storing 1064 in location 1
run/0: instruction run1001/6
run/0: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- first/118 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1064
run/0: instruction first/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1161
run/0: product 0 is default-space
run/0: instruction first/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1064 in location 1163
run/0: instruction first/2
run/0: {name: "result", value: 2, type: 1, properties: ["result": "location"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1163 is 1064
mem/0: location 1064 is 4
mem/0: location 1065 is 1031
run/0: ingredient 1 is value
mem/0: location 1163 is 1064
run/0: address to copy is 1064
run/0: its type is 1
mem/0: location 1064 is 4
run/0: product 0 is result
mem/0: storing 4 in location 1164
run/0: instruction first/3
run/0: reply/36 {name: "result", value: 2, type: 1, properties: ["result": "location"]}
run/0: ingredient 0 is result
mem/0: location 1164 is 4
run/0: result 0 is 4
run/0: product 0 is 3
mem/0: storing 4 in location 3
run/0: instruction run1001/7
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- rest/119 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1064
run/0: instruction rest/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1192
run/0: product 0 is default-space
run/0: instruction rest/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1064 in location 1194
run/0: instruction rest/2
run/0: {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1194 is 1064
mem/0: location 1064 is 4
mem/0: location 1065 is 1031
run/0: ingredient 1 is next
mem/0: location 1194 is 1064
run/0: address to copy is 1065
run/0: its type is 2
mem/0: location 1065 is 1031
run/0: product 0 is result
mem/0: storing 1031 in location 1195
run/0: instruction rest/3
run/0: reply/36 {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1195 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/8
run/0: {name: "4", value: 4, type: 1, properties: ["4": "number"]} <- first/118 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: instruction first/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1223
run/0: product 0 is default-space
run/0: instruction first/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1031 in location 1225
run/0: instruction first/2
run/0: {name: "result", value: 2, type: 1, properties: ["result": "location"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "value", value: 0, type: 0, properties: ["value": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1225 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 0
run/0: ingredient 1 is value
mem/0: location 1225 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 3
run/0: product 0 is result
mem/0: storing 3 in location 1226
run/0: instruction first/3
run/0: reply/36 {name: "result", value: 2, type: 1, properties: ["result": "location"]}
run/0: ingredient 0 is result
mem/0: location 1226 is 3
run/0: result 0 is 3
run/0: product 0 is 4
mem/0: storing 3 in location 4
run/0: instruction run1001/9
run/0: {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]} <- rest/119 {name: "1", value: 1, type: 2-12, properties: ["1": "address":"list"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: instruction rest/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1254
run/0: product 0 is default-space
run/0: instruction rest/1
run/0: {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list"]} <- next-ingredient/33 
run/0: product 0 is in
mem/0: storing 1031 in location 1256
run/0: instruction rest/2
run/0: {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]} <- get/27 {name: "in", value: 1, type: 2-12, properties: ["in": "address":"list", "deref": ]}, {name: "next", value: 1, type: 0, properties: ["next": "offset"]}
run/0: ingredient 0 is in
mem/0: location 1256 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 0
run/0: ingredient 1 is next
mem/0: location 1256 is 1031
run/0: address to copy is 1032
run/0: its type is 2
mem/0: location 1032 is 0
run/0: product 0 is result
mem/0: storing 0 in location 1257
run/0: instruction rest/3
run/0: reply/36 {name: "result", value: 2, type: 2-12, properties: ["result": "address":"list"]}
run/0: ingredient 0 is result
mem/0: location 1257 is 0
run/0: result 0 is 0
run/0: product 0 is 1
mem/0: storing 0 in location 1
run/0: instruction list-handling/1
run/0: memory-should-contain/55 {name: "
    1 <- 0  # empty to empty, dust to dust..
    2 <- 5
    3 <- 4
    4 <- 3
  ", value: 0, type: 0, properties: ["
    1 <- 0  # empty to empty, dust to dust..
    2 <- 5
    3 <- 4
    4 <- 3
  ": "literal-string"]}
run/0: ingredient 0 is 
    1 <- 0  # empty to empty, dust to dust..
    2 <- 5
    3 <- 4
    4 <- 3
  
run/0: checking location 1
run/0: checking location 2
run/0: checking location 3
run/0: checking location 4
