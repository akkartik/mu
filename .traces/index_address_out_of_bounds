9999 parse: instruction: create-array
9999 parse:   product: {name: "1", properties: ["1": "array":"point":"3"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "14", properties: ["14": "literal"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "15", properties: ["15": "literal"]}
9999 parse:   product: {name: "3", properties: ["3": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "16", properties: ["16": "literal"]}
9999 parse:   product: {name: "4", properties: ["4": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "14", properties: ["14": "literal"]}
9999 parse:   product: {name: "5", properties: ["5": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "15", properties: ["15": "literal"]}
9999 parse:   product: {name: "6", properties: ["6": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "16", properties: ["16": "literal"]}
9999 parse:   product: {name: "7", properties: ["7": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "1", properties: ["1": "literal"]}
9999 parse:   product: {name: "8", properties: ["8": "address":"array":"point"]}
9999 parse: instruction: index-address
9999 parse:   ingredient: {name: "8", properties: ["*8": "address":"array":"point", "lookup": ]}
9999 parse:   ingredient: {name: "4", properties: ["4": "literal"]}
9999 after-brace: recipe main
9999 after-brace: create-array ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: index-address ...
error: main: can't copy 1 to 8:address:array:point; types don't match

9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: 1:array:point:3 <- create-array 
9999 run: creating array of size 7

9999 mem: storing 3 in location 1
 101 run: 2:number <- copy 14
9999 mem: storing 14 in location 2
 101 run: 3:number <- copy 15
9999 mem: storing 15 in location 3
 101 run: 4:number <- copy 16
9999 mem: storing 16 in location 4
 101 run: 5:number <- copy 14
9999 mem: storing 14 in location 5
 101 run: 6:number <- copy 15
9999 mem: storing 15 in location 6
 101 run: 7:number <- copy 16
9999 mem: storing 16 in location 7
 101 run: 8:address:array:point <- copy 1
9999 mem: storing 1 in location 8
 101 run: index-address *8:address:array:point, 4
9999 mem: location 8 is 1
error: main: invalid index 4

