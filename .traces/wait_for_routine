9999 parse: instruction: copy
9999 parse:   ingredient: {"0": "literal"}
9999 parse:   product: {"1": "number"}
9999 parse: instruction: start-running
9999 parse:   ingredient: {"f2": "recipe"}
9999 parse:   product: {"12": "number", "routine": ""}
9999 parse: instruction: wait-for-routine
9999 parse:   ingredient: {"12": "number", "routine": ""}
9999 parse: instruction: copy
9999 parse:   ingredient: {"1": "number"}
9999 parse:   product: {"3": "number"}
9999 parse: instruction: copy
9999 parse:   ingredient: {"34": "literal"}
9999 parse:   product: {"1": "number"}
9999 after-brace: recipe f1
9999 after-brace: copy ...
9999 after-brace: start-running ...
9999 after-brace: wait-for-routine ...
9999 after-brace: copy ...
9999 after-brace: recipe f2
9999 after-brace: copy ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: f1
 102 run: 1:number <- copy 0
9999 mem: storing 0 in location 1
 102 run: 12:number/routine <- start-running f2:recipe
9999 trace: new routine; incrementing callstack depth to 2
9999 new: routine allocated memory from 101000 to 201000
9999 mem: storing 2 in location 12
 103 run: wait-for-routine 12:number/routine
9999 mem: location 12 is 2
9999 run: waiting for routine 2
9999 schedule: f2
 103 run: 1:number <- copy 34
9999 mem: storing 34 in location 1
9999 trace: fall-through: exiting f2; decrementing callstack depth from 2
9999 schedule: waking up routine 1
9999 schedule: f1
 102 run: 3:number <- copy 1:number
9999 mem: location 1 is 34
9999 mem: storing 34 in location 3
9999 trace: fall-through: exiting f1; decrementing callstack depth from 1
