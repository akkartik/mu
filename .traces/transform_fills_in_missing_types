9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"x": "number"}
9992 load: after rewriting: x:number <- copy 1
9993 parse: instruction: add
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"x": <>}
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"y": "number"}
9992 load: after rewriting: y:number <- add x, 1
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: x => number
9992 transform: y => number
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: assign x 1
9993 name: assign y 2
9991 transform: --- transform braces for recipe main
9991 transform: copy ...
9991 transform: add ...
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: x:number <- copy 1
9999 mem: storing 1 in location 1
 102 run: y:number <- add x, 1
9999 mem: location 1 is 1
9999 mem: storing 2 in location 2
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
