9991 parse: --- defining foo
9993 parse: instruction: get-address
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"p": <>, "lookup": <>}
9993 parse:   ingredient: {"x": "offset"}
9993 parse:   product: {"1": <"address" : <"number" : <>>>}
9992 load: after rewriting: 1:address:number <- get-address *p, x:offset
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe foo
9991 transform: --- deduce types for recipe foo
9991 transform: --- collect surrounding spaces for recipe foo
9991 transform: --- transform names for recipe foo
   0 error: foo: expected a container

   0 error: foo: missing type for *p in '1:address:number <- get-address *p, x:offset'

   0 error: foo: mixing variable names and numeric addresses

9991 transform: --- resolve ambiguous calls for recipe foo
9991 transform: --- compute instruction operations for recipe foo
9991 transform: --- transform braces for recipe foo
9992 transform: get-address ...
9992 transform:  ...
9991 transform: --- perform checks for recipe foo
   0 error: can't lookup non-address: {"p": <>, "lookup": <>}: NULLNULLNULL

9991 transform: --- convert 'new' to 'allocate' for recipe foo
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: foo
 102 run: 1:address:number <- get-address *p, x:offset
   0 error: 1:address:number <- get-address *p, x:offset: reagent not initialized: *p

   0 error: foo: tried to /lookup *p but it isn't an address

   0 error: foo: tried to /lookup 0

9999 mem: location 0 is 0
   0 error: can't drop address from p: NULLNULLNULL -- {"p": <>, "lookup": <>, "raw": <>}

   0 error: 1:address:number <- get-address *p, x:offset: reagent not initialized: *p

   0 error: foo: tried to /lookup *p but it isn't an address

   0 error: foo: tried to /lookup 0

9999 mem: location 0 is 0
   0 error: can't drop address from p: NULLNULLNULL -- {"p": <>, "lookup": <>, "raw": <>}

   0 error: foo: tried to access location 0 in '1:address:number <- get-address *p, x:offset'

   0 error: 0 vs 1: failed to write to all products! 1:address:number <- get-address *p, x:offset

