9991 parse: --- defining main
9993 parse: instruction: f
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- f 2
9999 parse: recipe main has a header
9991 parse: --- defining f
9993 parse: instruction: next-ingredient
9993 parse:   number of ingredients: 0
9993 parse:   product: {"12": "number"}
9992 load: after rewriting: 12:number <- next-ingredient 
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"35": "literal"}
9993 parse:   product: {"13": "number"}
9992 load: after rewriting: 13:number <- copy 35
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"12": "point", "raw": <>}
9993 parse:   product: {"14": "point"}
9992 load: after rewriting: 14:point <- copy 12:point/raw
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"14": "point"}
9992 load: after rewriting: reply 14:point
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- deduce types for recipe f
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- resolve ambiguous calls for recipe f
9992 transform: instruction copy
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 0
9993 transform: no type ingredients
9992 transform: final score: -1
9992 transform: instruction copy
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 0
9993 transform: no type ingredients
9992 transform: final score: -1
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- compute instruction operations for recipe f
9991 transform: --- transform braces for recipe main
9992 transform: f ...
9992 transform:  ...
9991 transform: --- transform braces for recipe f
9992 transform: next-ingredient ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: reply ...
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- collect surrounding spaces for recipe f
9991 transform: --- transform names for recipe main
9991 transform: --- transform names for recipe f
9991 transform: --- perform checks for recipe main
9991 transform: --- perform checks for recipe f
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe f
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 3:number <- f 2
9999 trace: incrementing callstack depth to 2
 103 run: 12:number <- next-ingredient 
9999 mem: storing 2 in location 12
 103 run: 13:number <- copy 35
9999 mem: storing 35 in location 13
 103 run: 14:point <- copy 12:point/raw
9999 mem: location 12 is 2
9999 mem: location 13 is 35
9999 mem: storing 2 in location 14
9999 mem: storing 35 in location 15
 103 run: reply 14:point
9999 mem: location 14 is 2
9999 mem: location 15 is 35
9999 trace: reply: decrementing callstack depth from 2
   0 error: f: reply ingredient 14:point can't be saved in 3:number

   0 error: point vs number

   0 error: 0 vs 1: failed to write to all products! 3:number <- f 2

