9991 parse: --- defining main
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"recipe foo [\n  get 1234:number, foo:offset\n]": "literal-string"}
9993 parse:   product: {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: x:address:shared:array:character <- new [recipe foo [
  get 1234:number, foo:offset
]]
9993 parse: instruction: reload
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9992 load: after rewriting: reload x
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   product: {"1": "number", "raw": <>}
9992 load: after rewriting: 1:number/raw <- copy 34
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: x => <address : <shared : <array : <character : <>>>>>
9992 transform: x <= <address : <shared : <array : <character : <>>>>>
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: assign x 1
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: local-scope ...
9992 transform: new ...
9992 transform: reload ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "location" is 1
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 mem: new alloc: 1000
9999 mem: storing 2 in location 1001
 102 run: x:address:shared:array:character <- new [recipe foo [
  get 1234:number, foo:offset
]]
9999 mem: storing 1004 in location 1003
9999 mem: incrementing refcount of 1004: 0 -> 1
 102 run: reload x
9999 mem: location 1003 is 1004
 102 run: 1:number/raw <- copy 34
9999 mem: storing 34 in location 1
 102 run: reply 
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 1
