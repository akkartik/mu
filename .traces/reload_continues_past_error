9999 parse: instruction: local-scope
9999 parse: instruction: new
9999 parse:   ingredient: {name: "recipe foo [\n  get 1234:number, foo:offset\n]", properties: [_: "literal-string"]}
9999 parse:   product: {name: "x", properties: ["x": "address":"array":"character"]}
9999 parse: instruction: reload
9999 parse:   ingredient: {name: "x", properties: ["x": ]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "34", properties: ["34": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number", "raw": ]}
9999 new: location -> location
9999 name: assign x 1
9999 after-brace: recipe main
9999 after-brace: local-scope ...
9999 after-brace: new ...
9999 after-brace: reload ...
9999 after-brace: copy ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1000
 101 run: x:address:array:character <- new [recipe foo [
  get 1234:number, foo:offset
]]
9999 mem: storing 1003 in location 1002
 101 run: reload x
9999 mem: location 1002 is 1003
 101 run: 1:number/raw <- copy 34
9999 mem: storing 34 in location 1
