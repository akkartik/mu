parse: instruction: run
parse:   ingredient: {name: "
    1:number <- copy 13:literal
  ", value: 0, type: 0, properties: ["
    1:number <- copy 13:literal
  ": "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "
    2:number <- copy 13:literal
  ", value: 0, type: 0, properties: ["
    2:number <- copy 13:literal
  ": "literal-string"]}
after-brace: recipe main
after-brace: run ...
after-brace: run ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: run/55 {name: "
    1:number <- copy 13:literal
  ", value: 0, type: 0, properties: ["
    1:number <- copy 13:literal
  ": "literal-string"]}
run: ingredient 0 is 
    1:number <- copy 13:literal
  
parse: instruction: copy
parse:   ingredient: {name: "13", value: 0, type: 0, properties: ["13": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
after-brace: recipe run1001
after-brace: copy ...
run: instruction run1001/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- copy/1 {name: "13", value: 13, type: 0, properties: ["13": "literal"]}
run: ingredient 0 is 13
run: product 0 is 1
mem: storing 13 in location 1
run: instruction main/1
run: run/55 {name: "
    2:number <- copy 13:literal
  ", value: 0, type: 0, properties: ["
    2:number <- copy 13:literal
  ": "literal-string"]}
run: ingredient 0 is 
    2:number <- copy 13:literal
  
parse: instruction: copy
parse:   ingredient: {name: "13", value: 0, type: 0, properties: ["13": "literal"]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
after-brace: recipe run1002
after-brace: copy ...
run: instruction run1002/0
run: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- copy/1 {name: "13", value: 13, type: 0, properties: ["13": "literal"]}
run: ingredient 0 is 13
run: product 0 is 2
mem: storing 13 in location 2
