9999 parse: instruction: copy
9999 parse:   ingredient: {name: "3", properties: ["3": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "97", properties: ["97": "literal"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "98", properties: ["98": "literal"]}
9999 parse:   product: {name: "3", properties: ["3": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "99", properties: ["99": "literal"]}
9999 parse:   product: {name: "4", properties: ["4": "number"]}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {name: "\n    1:string <- [abc]\n  ", properties: [_: "literal-string"]}
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: memory-should-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:number <- copy 3
9999 mem: storing 3 in location 1
 102 run: 2:number <- copy 97
9999 mem: storing 97 in location 2
 102 run: 3:number <- copy 98
9999 mem: storing 98 in location 3
 102 run: 4:number <- copy 99
9999 mem: storing 99 in location 4
 102 run: memory-should-contain [
    1:string <- [abc]
  ]
9999 run: checking string length at 1
9999 run: checking location 2
9999 run: checking location 3
9999 run: checking location 4
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
