parse: instruction: copy
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   product: {name: "1", properties: ["1": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "2", properties: ["2": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "98", properties: ["98": "literal"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "99", properties: ["99": "literal"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1:string <- [abc]
  ", properties: ["
    1:string <- [abc]
  ": "literal-string"]}
after-brace: recipe main
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: memory-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: 1:number <- copy 3:literal
mem: storing 3 in location 1
run: 2:number <- copy 97:literal
mem: storing 97 in location 2
run: 3:number <- copy 98:literal
mem: storing 98 in location 3
run: 4:number <- copy 99:literal
mem: storing 99 in location 4
run: memory-should-contain [
    1:string <- [abc]
  ]
run: checking string length at 1
run: checking location 2
run: checking location 3
run: checking location 4
