9999 parse: container has type ingredients; parsing
9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element name: x
9999 parse:   type: 2000
9993 parse:   element name: y
9993 parse:   type: 1
9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"12": "literal"}
9993 parse:   ingredient: {"13": "literal"}
9993 parse:   product: {"1": <"foo" : <"number" : <>>>}
9992 load: after rewriting: 1:foo:number <- merge 12, 13
9993 parse: instruction: merge
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"14": "literal"}
9993 parse:   ingredient: {"15": "literal"}
9993 parse:   ingredient: {"16": "literal"}
9993 parse:   product: {"3": <"foo" : <"point" : <>>>}
9992 load: after rewriting: 3:foo:point <- merge 14, 15, 16
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9992 transform: merge ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:foo:number <- merge 12, 13
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: storing 12 in location 1
9999 mem: storing 13 in location 2
 102 run: 3:foo:point <- merge 14, 15, 16
9999 type: checking size of type ingredient

9999 type: type deduced to be point$
9999 mem: storing 14 in location 3
9999 mem: storing 15 in location 4
9999 mem: storing 16 in location 5
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
