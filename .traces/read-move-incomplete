schedule: read-rank
run: 1647 read-rank 3: (((3 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 1648 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101814 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1649 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101816 to 1031
run: 1650 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1651 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101845 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1652 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101847 to 0
setm: ((1 channel)): setting 101848 to 0
setm: ((1 channel)): setting 101849 to 1034
run: 1653 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101847 integer) (raw))
sizeof: ((101847 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101850 to 0
run: 1654 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101848 integer) (raw))
sizeof: ((101848 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101851 to 0
run: 1655 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101852 to t
run: 1656 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101817 to t
run: 1657 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1658 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((3 integer-address))
setm: ((3 integer-address)) <= 1032
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101818 to 1032
run: 1659 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: send-final-key
run: 1660 send-final-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 401000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1661 send-final-key 1: (((1 character)) <- ((copy)) ((4 literal)))
run: 4 => ((1 character))
setm: ((1 character)) <= 4
setm: size of ((1 character)) is 1
setm: ((1 character)): setting 401002 to 4
run: 1662 send-final-key 2: (((2 tagged-value)) <- ((save-type)) ((1 character)))
m: ((1 character))
sizeof: ((1 character))
run: #(tagged record (character 4)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 4))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 401003 to character
setm: ((2 tagged-value)): setting 401004 to 4
run: 1663 send-final-key 3: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((2 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1664 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1665 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031 #(tagged record (character 4 . nil)))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 401033 to 1031
run: 1666 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1031 #(tagged record (character 4 . nil)))
run: #(tagged record (character 4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 401034 to character
setm: ((2 tagged-value)): setting 401035 to 4
run: 1667 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1668 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1669 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 401064 to 0
setm: ((1 channel)): setting 401065 to 0
setm: ((1 channel)): setting 401066 to 1034
run: 1670 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((401065 integer) (raw))
sizeof: ((401065 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 401067 to 0
run: 1671 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 401067 to 1
run: 1672 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1673 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1674 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 401095 to 0
setm: ((1 channel)): setting 401096 to 0
setm: ((1 channel)): setting 401097 to 1034
run: 1675 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((401097 tagged-value-array-address) (raw))
sizeof: ((401097 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 401098 to 1034
run: 1676 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 401099 to 2
run: 1677 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 401068 to 2
run: 1678 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 401069 to t
run: 1679 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1680 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((401064 integer) (raw))
sizeof: ((401064 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 401070 to 0
run: 1681 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 401071 to nil
run: 1682 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 401036 to nil
run: 1683 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1684 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1034
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 401038 to 1034
run: 1685 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((7 integer-address))
setm: ((7 integer-address)) <= 1032
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 401039 to 1032
run: 1686 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1035 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1035
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 401040 to 1035
run: 1687 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1035 to character
setm: ((8 tagged-value-address) (deref)): setting 1036 to 4
run: 1688 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1032 to 1
run: 1689 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 401041 to 2
run: 1690 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 401042 to t
run: 1691 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1692 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1034 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1031 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1032 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1033 to 1034
schedule: done with routine
schedule: waking up read
schedule: read
run: 1693 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((4 integer-address))
setm: ((4 integer-address)) <= 1031
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101819 to 1031
run: 1694 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1034
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101820 to 1034
run: 1695 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1035 tagged-value) (raw))
sizeof: ((1035 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 4 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101821 to character
setm: ((6 tagged-value)): setting 101822 to 4
run: 1696 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1031 to 1
run: 1697 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101823 to 2
run: 1698 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101824 to t
run: 1699 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1700 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((3 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character 4 . nil)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 4 . nil))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 101725 to character
setm: ((3 tagged-value)): setting 101726 to 4
reply: #(tagged record (1 1 1034 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1034 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1031 to 1
setm: ((1 channel-address) (deref)): setting 1032 to 1
setm: ((1 channel-address) (deref)): setting 1033 to 1034
run: 1701 read-rank 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1702 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101876 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1703 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101907 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101907
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101878 to 101907
run: 1704 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 4 . nil)) character)
run: #(tagged record (character 4 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 4 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101907 to character
setm: ((1 tagged-value-address) (deref)): setting 101908 to 4
run: 1705 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 4 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101879 to character
run: 1706 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101907 type) (raw))
sizeof: ((101907 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101880 to character
run: 1707 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101881 to t
run: 1708 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1709 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101908 location) (raw))
sizeof: ((101908 location) (raw))
run: 4 => ((5 location))
setm: ((5 location)) <= 4
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101882 to 4
run: 1710 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: 4 => ((5 character))
setm: ((5 character)) <= 4
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 101727 to 4
run: 1711 read-rank 5: (((print-character)) ((2 terminal-address)) ((5 character)))
m: ((2 terminal-address))
sizeof: ((2 terminal-address))
m: ((5 character))
sizeof: ((5 character))
run: 1712 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101909 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1713 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1070 4)
run: 1070 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1070
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 101911 to 1070
run: 1714 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1070 4)
run: 4 => ((2 character))
setm: ((2 character)) <= 4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 101912 to 4
run: 1715 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 1716 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1072 => ((3 integer-address))
setm: ((3 integer-address)) <= 1072
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101913 to 1072
run: 1717 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1073 => ((4 integer-address))
setm: ((4 integer-address)) <= 1073
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101914 to 1073
run: 1718 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1071 integer) (raw))
sizeof: ((1071 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101915 to 20
run: 1719 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101916 to 0
run: 1720 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101917 to 4
run: 1721 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1074 string-address) (raw))
sizeof: ((1074 string-address) (raw))
run: 1075 => ((8 string-address))
setm: ((8 string-address)) <= 1075
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 101918 to 1075
run: 1722 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1075 string) (raw))
m: ((1075 integer) (raw))
sizeof: ((1075 integer) (raw))
sizeof: ((_ byte))
run: 1080 => ((9 byte-address))
setm: ((9 byte-address)) <= 1080
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 101919 to 1080
run: 1723 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: 4 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= 4
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1080 to 4
run: 1724 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1073 to 5
run: 1725 print-character 13: (((reply)))
reply: nil nil
run: 1726 read-rank 6: (((6 boolean)) <- ((equal)) ((5 character)) ((q literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101728 to nil
run: 1727 read-rank 7: (((jump-unless)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1728 read-rank 9: (((7 integer)) <- ((character-to-integer)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 52 => ((7 integer))
setm: ((7 integer)) <= 52
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101729 to 52
run: 1729 read-rank 10: (((8 character)) <- ((copy)) ((1 literal)))
run: 1 => ((8 character))
setm: ((8 character)) <= 1
setm: size of ((8 character)) is 1
setm: ((8 character)): setting 101730 to 1
run: 1730 read-rank 11: (((9 integer)) <- ((character-to-integer)) ((8 character)))
m: ((8 character))
sizeof: ((8 character))
run: 49 => ((9 integer))
setm: ((9 integer)) <= 49
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101731 to 49
run: 1731 read-rank 12: (((7 integer)) <- ((subtract)) ((7 integer)) ((9 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((9 integer))
sizeof: ((9 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101729 to 3
run: 1732 read-rank 13: (((10 boolean)) <- ((greater-or-equal)) ((7 integer)) ((0 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101732 to t
run: 1733 read-rank 14: (((assert)) ((10 boolean)) ((rank too low literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1734 read-rank 15: (((11 boolean)) <- ((lesser-or-equal)) ((7 integer)) ((7 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((11 boolean))
setm: ((11 boolean)) <= t
setm: size of ((11 boolean)) is 1
setm: ((11 boolean)): setting 101733 to t
run: 1735 read-rank 16: (((assert)) ((11 boolean)) ((rank too high literal)))
m: ((11 boolean))
sizeof: ((11 boolean))
run: 1736 read-rank 17: (((reply)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
reply: (((7 integer))) (((6 integer)))
reply: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101007 to 3
run: 1737 read-move 10: (((7 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101940 => ((7 move-address))
setm: ((7 move-address)) <= 101940
setm: size of ((7 move-address)) is 1
setm: ((7 move-address)): setting 101008 to 101940
run: 1738 read-move 11: (((8 integer-integer-pair-address)) <- ((get-address)) ((7 move-address) (deref)) ((0 offset)))
run: 101940 => ((8 integer-integer-pair-address))
setm: ((8 integer-integer-pair-address)) <= 101940
setm: size of ((8 integer-integer-pair-address)) is 1
setm: ((8 integer-integer-pair-address)): setting 101009 to 101940
run: 1739 read-move 12: (((9 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101940 => ((9 integer-address))
setm: ((9 integer-address)) <= 101940
setm: size of ((9 integer-address)) is 1
setm: ((9 integer-address)): setting 101010 to 101940
run: 1740 read-move 13: (((9 integer-address) (deref)) <- ((copy)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: 0 => ((9 integer-address) (deref))
setm: ((9 integer-address) (deref)) <= 0
setm: size of ((9 integer-address) (deref)) is 1
setm: ((9 integer-address) (deref)): setting 101940 to 0
run: 1741 read-move 14: (((9 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101941 => ((9 integer-address))
setm: ((9 integer-address)) <= 101941
setm: size of ((9 integer-address)) is 1
setm: ((9 integer-address)): setting 101010 to 101941
run: 1742 read-move 15: (((9 integer-address) (deref)) <- ((copy)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((9 integer-address) (deref))
setm: ((9 integer-address) (deref)) <= 1
setm: size of ((9 integer-address) (deref)) is 1
setm: ((9 integer-address) (deref)): setting 101941 to 1
run: 1743 read-move 16: (((10 integer-integer-pair-address)) <- ((get-address)) ((7 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101942 => ((10 integer-integer-pair-address))
setm: ((10 integer-integer-pair-address)) <= 101942
setm: size of ((10 integer-integer-pair-address)) is 1
setm: ((10 integer-integer-pair-address)): setting 101011 to 101942
run: 1744 read-move 17: (((9 integer-address)) <- ((get-address)) ((10 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101942 => ((9 integer-address))
setm: ((9 integer-address)) <= 101942
setm: size of ((9 integer-address)) is 1
setm: ((9 integer-address)): setting 101010 to 101942
run: 1745 read-move 18: (((9 integer-address) (deref)) <- ((copy)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((9 integer-address) (deref))
setm: ((9 integer-address) (deref)) <= 0
setm: size of ((9 integer-address) (deref)) is 1
setm: ((9 integer-address) (deref)): setting 101942 to 0
run: 1746 read-move 19: (((9 integer-address)) <- ((get-address)) ((10 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101943 => ((9 integer-address))
setm: ((9 integer-address)) <= 101943
setm: size of ((9 integer-address)) is 1
setm: ((9 integer-address)): setting 101010 to 101943
run: 1747 read-move 20: (((9 integer-address) (deref)) <- ((copy)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
run: 3 => ((9 integer-address) (deref))
setm: ((9 integer-address) (deref)) <= 3
setm: size of ((9 integer-address) (deref)) is 1
setm: ((9 integer-address) (deref)): setting 101943 to 3
run: 1748 read-move 21: (((reply)) ((7 move-address)))
m: ((7 move-address))
sizeof: ((7 move-address))
schedule: done with routine
