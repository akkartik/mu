schedule: read-rank/read-move
run: 1581 read-rank 2: (((2 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 1582 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101690 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1583 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101692 to 1031
run: 1584 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1585 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101721 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1586 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101723 to 0
setm: ((1 channel)): setting 101724 to 0
setm: ((1 channel)): setting 101725 to 1034
run: 1587 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101723 integer) (raw))
sizeof: ((101723 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101726 to 0
run: 1588 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101724 integer) (raw))
sizeof: ((101724 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101727 to 0
run: 1589 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101728 to t
run: 1590 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101693 to t
run: 1591 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1592 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((3 integer-address))
setm: ((3 integer-address)) <= 1032
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101694 to 1032
run: 1593 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/read-rank/read-move to sleep queue
schedule: send-final-key
run: 1594 send-final-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 401000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1595 send-final-key 1: (((1 character)) <- ((copy)) ((4 literal)))
run: #\4 => ((1 character))
setm: ((1 character)) <= #\4
setm: size of ((1 character)) is 1
setm: ((1 character)): setting 401002 to #\4
run: 1596 send-final-key 2: (((2 tagged-value)) <- ((save-type)) ((1 character)))
m: ((1 character))
sizeof: ((1 character))
run: #(tagged record (character #\4)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\4))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 401003 to character
setm: ((2 tagged-value)): setting 401004 to #\4
run: 1597 send-final-key 3: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((2 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1598 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1599 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031 #(tagged record (character #\4 . nil)))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 401033 to 1031
run: 1600 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1031 #(tagged record (character #\4 . nil)))
run: #(tagged record (character #\4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 401034 to character
setm: ((2 tagged-value)): setting 401035 to #\4
run: 1601 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1602 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1603 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 401064 to 0
setm: ((1 channel)): setting 401065 to 0
setm: ((1 channel)): setting 401066 to 1034
run: 1604 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((401065 integer) (raw))
sizeof: ((401065 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 401067 to 0
run: 1605 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 401067 to 1
run: 1606 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1607 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 401093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1608 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 401095 to 0
setm: ((1 channel)): setting 401096 to 0
setm: ((1 channel)): setting 401097 to 1034
run: 1609 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((401097 tagged-value-array-address) (raw))
sizeof: ((401097 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 401098 to 1034
run: 1610 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 401099 to 2
run: 1611 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 401068 to 2
run: 1612 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 401069 to t
run: 1613 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1614 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((401064 integer) (raw))
sizeof: ((401064 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 401070 to 0
run: 1615 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 401071 to nil
run: 1616 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 401036 to nil
run: 1617 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1618 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1034
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 401038 to 1034
run: 1619 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((7 integer-address))
setm: ((7 integer-address)) <= 1032
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 401039 to 1032
run: 1620 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1035 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1035
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 401040 to 1035
run: 1621 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\4 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\4 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1035 to character
setm: ((8 tagged-value-address) (deref)): setting 1036 to #\4
run: 1622 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1032 to 1
run: 1623 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 401041 to 2
run: 1624 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 401042 to t
run: 1625 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1626 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1034 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1031 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1032 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1033 to 1034
schedule: done with routine 
schedule: waking up read/read-rank/read-move
schedule: read/read-rank/read-move
run: 1627 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((4 integer-address))
setm: ((4 integer-address)) <= 1031
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101695 to 1031
run: 1628 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1034
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101696 to 1034
run: 1629 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1035 tagged-value) (raw))
sizeof: ((1035 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\4 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101697 to character
setm: ((6 tagged-value)): setting 101698 to #\4
run: 1630 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1031 to 1
run: 1631 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101699 to 2
run: 1632 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101700 to t
run: 1633 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1634 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((2 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\4 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\4 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101600 to character
setm: ((2 tagged-value)): setting 101601 to #\4
reply: #(tagged record (1 1 1034 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1034 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1031 to 1
setm: ((1 channel-address) (deref)): setting 1032 to 1
setm: ((1 channel-address) (deref)): setting 1033 to 1034
run: 1635 read-rank 3: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1636 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101752 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1637 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101783 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101783
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101754 to 101783
run: 1638 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\4 . nil)) character)
run: #(tagged record (character #\4 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\4 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101783 to character
setm: ((1 tagged-value-address) (deref)): setting 101784 to #\4
run: 1639 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\4 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101755 to character
run: 1640 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101783 type) (raw))
sizeof: ((101783 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101756 to character
run: 1641 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101757 to t
run: 1642 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1643 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101784 location) (raw))
sizeof: ((101784 location) (raw))
run: #\4 => ((5 location))
setm: ((5 location)) <= #\4
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101758 to #\4
run: 1644 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((4 character)))
reply: #\4 => ((4 character))
setm: ((4 character)) <= #\4
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101602 to #\4
run: 1645 read-rank 4: (((5 boolean)) <- ((equal)) ((4 character)) ((q literal)))
m: ((4 character))
sizeof: ((4 character))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101603 to nil
run: 1646 read-rank 5: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1647 read-rank 7: (((6 integer)) <- ((character-to-integer)) ((4 character)))
m: ((4 character))
sizeof: ((4 character))
run: 52 => ((6 integer))
setm: ((6 integer)) <= 52
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101604 to 52
run: 1648 read-rank 8: (((7 character)) <- ((copy)) ((1 literal)))
run: #\1 => ((7 character))
setm: ((7 character)) <= #\1
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 101605 to #\1
run: 1649 read-rank 9: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 49 => ((8 integer))
setm: ((8 integer)) <= 49
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101606 to 49
run: 1650 read-rank 10: (((6 integer)) <- ((subtract)) ((6 integer)) ((8 integer)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((8 integer))
sizeof: ((8 integer))
run: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 101604 to 3
run: 1651 read-rank 11: (((9 boolean)) <- ((greater-or-equal)) ((6 integer)) ((0 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101607 to t
run: 1652 read-rank 12: (((assert)) ((9 boolean)) ((rank too low literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1653 read-rank 13: (((10 boolean)) <- ((lesser-or-equal)) ((6 integer)) ((7 literal)))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101608 to t
run: 1654 read-rank 14: (((assert)) ((10 boolean)) ((rank too high literal)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1655 read-rank 15: (((reply)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
reply: (((6 integer))) (((5 integer)))
reply: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101006 to 3
run: 1656 read-move 9: (((6 move-address)) <- ((new)) ((move literal)))
sizeof: ((_ move))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101785 => ((6 move-address))
setm: ((6 move-address)) <= 101785
setm: size of ((6 move-address)) is 1
setm: ((6 move-address)): setting 101007 to 101785
run: 1657 read-move 10: (((7 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((0 offset)))
run: 101785 => ((7 integer-integer-pair-address))
setm: ((7 integer-integer-pair-address)) <= 101785
setm: size of ((7 integer-integer-pair-address)) is 1
setm: ((7 integer-integer-pair-address)): setting 101008 to 101785
run: 1658 read-move 11: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101785 => ((8 integer-address))
setm: ((8 integer-address)) <= 101785
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101785
run: 1659 read-move 12: (((8 integer-address) (deref)) <- ((copy)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 0 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 0
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101785 to 0
run: 1660 read-move 13: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101786 => ((8 integer-address))
setm: ((8 integer-address)) <= 101786
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101786
run: 1661 read-move 14: (((8 integer-address) (deref)) <- ((copy)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 1
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101786 to 1
run: 1662 read-move 15: (((9 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((1 offset)))
sizeof: ((_ integer-integer-pair))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 101787 => ((9 integer-integer-pair-address))
setm: ((9 integer-integer-pair-address)) <= 101787
setm: size of ((9 integer-integer-pair-address)) is 1
setm: ((9 integer-integer-pair-address)): setting 101010 to 101787
run: 1663 read-move 16: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((0 offset)))
run: 101787 => ((8 integer-address))
setm: ((8 integer-address)) <= 101787
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101787
run: 1664 read-move 17: (((8 integer-address) (deref)) <- ((copy)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 0
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101787 to 0
run: 1665 read-move 18: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 101788 => ((8 integer-address))
setm: ((8 integer-address)) <= 101788
setm: size of ((8 integer-address)) is 1
setm: ((8 integer-address)): setting 101009 to 101788
run: 1666 read-move 19: (((8 integer-address) (deref)) <- ((copy)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
run: 3 => ((8 integer-address) (deref))
setm: ((8 integer-address) (deref)) <= 3
setm: size of ((8 integer-address) (deref)) is 1
setm: ((8 integer-address) (deref)): setting 101788 to 3
run: 1667 read-move 20: (((reply)) ((6 move-address)))
m: ((6 move-address))
sizeof: ((6 move-address))
schedule: done with routine 
