schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 channel-address) (raw)) <- ((init-channel)) ((1 literal)))
run: 3 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1033 to 1062
run: 5 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 6 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 7 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1035 to 1063
run: 8 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1063 to 0
run: 9 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 1
run: 10 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 2
run: 11 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1064 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1064
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1037 to 1064
run: 12 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1065 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1065
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1064 to 1065
run: 13 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address) (raw)))
reply: 1062 => ((1 channel-address) (raw))
setm: ((1 channel-address) (raw)) <= 1062
setm: size of ((1 channel-address) (raw)) is 1
setm: ((1 channel-address) (raw)): setting 1 to 1062
run: 14 main 2: (((1 integer) (routine)) <- ((fork-helper)) ((read-move fn)) ((nil literal) (globals)) ((2000 literal) (limit)))
run: 1 => ((1 integer) (routine))
setm: ((1 integer) (routine)) <= 1
setm: size of ((1 integer) (routine)) is 1
setm: ((1 integer) (routine)): setting 1002 to 1
run: 15 main 3: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 16 main 4: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 17 main 5: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 18 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1070 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 19 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1072 to 1062
run: 20 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1073 to character
setm: ((2 tagged-value)): setting 1074 to a
run: 21 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 22 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1101 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 23 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1103 to 0
setm: ((1 channel)): setting 1104 to 0
setm: ((1 channel)): setting 1105 to 1065
run: 24 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1104 integer) (raw))
sizeof: ((1104 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1106 to 0
run: 25 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1106 to 1
run: 26 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 27 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1132 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 28 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1134 to 0
setm: ((1 channel)): setting 1135 to 0
setm: ((1 channel)): setting 1136 to 1065
run: 29 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1136 tagged-value-array-address) (raw))
sizeof: ((1136 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1137 to 1065
run: 30 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1138 to 2
run: 31 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1107 to 2
run: 32 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1108 to t
run: 33 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 34 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1103 integer) (raw))
sizeof: ((1103 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1109 to 0
run: 35 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1110 to nil
run: 36 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1075 to nil
run: 37 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 38 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1077 to 1065
run: 39 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1078 to 1063
run: 40 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1079 to 1066
run: 41 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to a
run: 42 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 43 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1080 to 2
run: 44 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1081 to t
run: 45 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 46 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 47 main 6: (((2 character)) <- ((copy)) ((2 literal)))
run: 2 => ((2 character))
setm: ((2 character)) <= 2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to 2
run: 48 main 7: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character 2)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character 2))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to 2
run: 49 main 8: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 50 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1163 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 51 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character 2 . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1165 to 1062
run: 52 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character 2 . nil)))
run: #(tagged record (character 2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1166 to character
setm: ((2 tagged-value)): setting 1167 to 2
run: 53 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 54 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1194 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 55 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1196 to 0
setm: ((1 channel)): setting 1197 to 1
setm: ((1 channel)): setting 1198 to 1065
run: 56 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1197 integer) (raw))
sizeof: ((1197 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 1
run: 57 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 2
run: 58 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 59 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1225 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 60 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1227 to 0
setm: ((1 channel)): setting 1228 to 1
setm: ((1 channel)): setting 1229 to 1065
run: 61 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1229 tagged-value-array-address) (raw))
sizeof: ((1229 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1230 to 1065
run: 62 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1231 to 2
run: 63 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1200 to 2
run: 64 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1201 to nil
run: 65 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 66 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1199 to 0
run: 67 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1196 integer) (raw))
sizeof: ((1196 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1202 to 0
run: 68 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1203 to t
run: 69 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1168 to t
run: 70 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 71 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1169 to 1062
run: 72 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write to sleep queue
schedule: read-move
run: 73 read-move 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 74 read-move 1: (((1 integer)) <- ((read-file)))
run: 75 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 76 read-file 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 77 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 78 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101064 to 1062
run: 79 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 80 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 81 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101095 to 0
setm: ((1 channel)): setting 101096 to 1
setm: ((1 channel)): setting 101097 to 1065
run: 82 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101095 integer) (raw))
sizeof: ((101095 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101098 to 0
run: 83 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101096 integer) (raw))
sizeof: ((101096 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101099 to 1
run: 84 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101100 to nil
run: 85 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101065 to nil
run: 86 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 87 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101067 to 1062
run: 88 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101068 to 1065
run: 89 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101069 to character
setm: ((6 tagged-value)): setting 101070 to a
run: 90 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 91 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101071 to 2
run: 92 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101072 to t
run: 93 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 94 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 101033 to character
setm: ((1 tagged-value)): setting 101034 to a
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 95 read-file 2: (((3 character)) <- ((copy)) ((a literal)))
run: a => ((3 character))
setm: ((3 character)) <= a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101035 to a
run: 96 read-file 3: (((4 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101036 to 97
run: 97 read-file 4: (((5 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 98 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101124 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 99 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101155 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101155
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101126 to 101155
run: 100 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101155 to character
setm: ((1 tagged-value-address) (deref)): setting 101156 to a
run: 101 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101127 to character
run: 102 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101155 type) (raw))
sizeof: ((101155 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101128 to character
run: 103 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101129 to t
run: 104 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 105 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101156 location) (raw))
sizeof: ((101156 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101130 to a
run: 106 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: a => ((5 character))
setm: ((5 character)) <= a
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 101037 to a
run: 107 read-file 5: (((print)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 108 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 109 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 110 print 2: (((reply)))
reply: nil nil
run: 111 read-file 6: (((6 boolean)) <- ((equal)) ((5 character)) ((q literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101038 to nil
run: 112 read-file 7: (((jump-unless)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 113 read-file 9: (((7 integer)) <- ((character-to-integer)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101039 to 97
run: 114 read-file 10: (((7 integer)) <- ((subtract)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101039 to 0
run: 115 read-file 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((0 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101040 to t
run: 116 read-file 12: (((assert)) ((8 boolean)) ((file too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 117 read-file 13: (((9 boolean)) <- ((lesser-or-equal)) ((7 integer)) ((7 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101041 to t
run: 118 read-file 14: (((assert)) ((9 boolean)) ((file too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 119 read-file 15: (((reply)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
reply: (((7 integer))) (((1 integer)))
reply: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 101002 to 0
run: 120 read-move 2: (((jump-if)) ((1 integer)) ((1 offset)))
m: ((1 integer))
sizeof: ((1 integer))
run: 121 read-move 4: (((2 integer)) <- ((read-rank)))
run: 122 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 123 read-rank 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 124 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 125 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101221 to 1062
run: 126 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 127 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101250 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 128 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1065 . nil)))
run: #(tagged record (1 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101252 to 1
setm: ((1 channel)): setting 101253 to 1
setm: ((1 channel)): setting 101254 to 1065
run: 129 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101252 integer) (raw))
sizeof: ((101252 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101255 to 1
run: 130 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101253 integer) (raw))
sizeof: ((101253 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101256 to 1
run: 131 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101257 to t
run: 132 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101222 to t
run: 133 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 134 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101223 to 1063
run: 135 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: waking up write
schedule: write
run: 136 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1170 to 1065
run: 137 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1171 to 1063
run: 138 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1172 to 1068
run: 139 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to 2
run: 140 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 141 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1173 to 2
run: 142 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1174 to nil
run: 143 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 144 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 145 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (1 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 146 main 9: (((2 character)) <- ((copy)) ((- literal)))
run: - => ((2 character))
setm: ((2 character)) <= -
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to -
run: 147 main 10: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character -)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character -))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to -
run: 148 main 11: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 149 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1256 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 150 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character - . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1258 to 1062
run: 151 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character - . nil)))
run: #(tagged record (character - . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1259 to character
setm: ((2 tagged-value)): setting 1260 to -
run: 152 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 153 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1287 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 154 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1289 to 1
setm: ((1 channel)): setting 1290 to 0
setm: ((1 channel)): setting 1291 to 1065
run: 155 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1290 integer) (raw))
sizeof: ((1290 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1292 to 0
run: 156 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1292 to 1
run: 157 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 158 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1318 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 159 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1065 . nil)))
run: #(tagged record (1 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1320 to 1
setm: ((1 channel)): setting 1321 to 0
setm: ((1 channel)): setting 1322 to 1065
run: 160 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1322 tagged-value-array-address) (raw))
sizeof: ((1322 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1323 to 1065
run: 161 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1324 to 2
run: 162 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1293 to 2
run: 163 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1294 to t
run: 164 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 165 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1289 integer) (raw))
sizeof: ((1289 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1295 to 1
run: 166 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1296 to t
run: 167 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1261 to t
run: 168 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 169 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1262 to 1062
run: 170 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write to sleep queue
schedule: waking up read
schedule: read
run: 171 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101224 to 1062
run: 172 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101225 to 1065
run: 173 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character 2 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101226 to character
setm: ((6 tagged-value)): setting 101227 to 2
run: 174 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 175 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101228 to 2
run: 176 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101229 to nil
run: 177 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 178 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 179 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character 2 . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character 2 . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 101190 to character
setm: ((1 tagged-value)): setting 101191 to 2
reply: #(tagged record (0 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 180 read-rank 2: (((3 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 181 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101281 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 182 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101312 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101312
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101283 to 101312
run: 183 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character 2 . nil)) character)
run: #(tagged record (character 2 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character 2 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101312 to character
setm: ((1 tagged-value-address) (deref)): setting 101313 to 2
run: 184 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character 2 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101284 to character
run: 185 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101312 type) (raw))
sizeof: ((101312 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101285 to character
run: 186 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101286 to t
run: 187 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 188 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101313 location) (raw))
sizeof: ((101313 location) (raw))
run: 2 => ((5 location))
setm: ((5 location)) <= 2
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101287 to 2
run: 189 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((3 character)))
reply: 2 => ((3 character))
setm: ((3 character)) <= 2
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101192 to 2
run: 190 read-rank 3: (((print)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 191 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 192 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 193 print 2: (((reply)))
reply: nil nil
run: 194 read-rank 4: (((4 boolean)) <- ((equal)) ((3 character)) ((q literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101193 to nil
run: 195 read-rank 5: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 196 read-rank 7: (((5 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 50 => ((5 integer))
setm: ((5 integer)) <= 50
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101194 to 50
run: 197 read-rank 8: (((6 character)) <- ((copy)) ((1 literal)))
run: 1 => ((6 character))
setm: ((6 character)) <= 1
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101195 to 1
run: 198 read-rank 9: (((7 integer)) <- ((character-to-integer)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 49 => ((7 integer))
setm: ((7 integer)) <= 49
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101196 to 49
run: 199 read-rank 10: (((5 integer)) <- ((subtract)) ((5 integer)) ((7 integer)))
m: ((5 integer))
sizeof: ((5 integer))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101194 to 1
run: 200 read-rank 11: (((8 boolean)) <- ((greater-or-equal)) ((5 integer)) ((0 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101197 to t
run: 201 read-rank 12: (((assert)) ((8 boolean)) ((rank too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 202 read-rank 13: (((9 boolean)) <- ((lesser-or-equal)) ((5 integer)) ((7 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101198 to t
run: 203 read-rank 14: (((assert)) ((9 boolean)) ((rank too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 204 read-rank 15: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((2 integer)))
reply: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 101003 to 1
run: 205 read-move 5: (((expect-stdin)) ((- literal)))
run: 206 expect-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 207 expect-stdin 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 208 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101376 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 209 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101378 to 1062
run: 210 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 211 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101407 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 212 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101409 to 0
setm: ((1 channel)): setting 101410 to 0
setm: ((1 channel)): setting 101411 to 1065
run: 213 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101409 integer) (raw))
sizeof: ((101409 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101412 to 0
run: 214 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101410 integer) (raw))
sizeof: ((101410 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101413 to 0
run: 215 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101414 to t
run: 216 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101379 to t
run: 217 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 218 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101380 to 1063
run: 219 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: waking up write
schedule: write
run: 220 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1263 to 1065
run: 221 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1264 to 1063
run: 222 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1066 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1066
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1265 to 1066
run: 223 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1066 to character
setm: ((8 tagged-value-address) (deref)): setting 1067 to -
run: 224 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 1
run: 225 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1266 to 2
run: 226 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1267 to t
run: 227 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 228 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (0 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 229 main 12: (((2 character)) <- ((copy)) ((a literal)))
run: a => ((2 character))
setm: ((2 character)) <= a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1003 to a
run: 230 main 13: (((3 tagged-value)) <- ((save-type)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #(tagged record (character a)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character a))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 1004 to character
setm: ((3 tagged-value)): setting 1005 to a
run: 231 main 14: (((1 channel-address) (raw) (deref)) <- ((write)) ((1 channel-address) (raw)) ((3 tagged-value)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 232 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1349 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 233 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062 #(tagged record (character a . nil)))
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1351 to 1062
run: 234 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1062 #(tagged record (character a . nil)))
run: #(tagged record (character a . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1352 to character
setm: ((2 tagged-value)): setting 1353 to a
run: 235 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 236 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1380 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 237 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1382 to 0
setm: ((1 channel)): setting 1383 to 1
setm: ((1 channel)): setting 1384 to 1065
run: 238 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1383 integer) (raw))
sizeof: ((1383 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 1
run: 239 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 2
run: 240 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 241 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1411 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 242 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1065 . nil)))
run: #(tagged record (0 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1413 to 0
setm: ((1 channel)): setting 1414 to 1
setm: ((1 channel)): setting 1415 to 1065
run: 243 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1415 tagged-value-array-address) (raw))
sizeof: ((1415 tagged-value-array-address) (raw))
run: 1065 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1065
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1416 to 1065
run: 244 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1417 to 2
run: 245 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1386 to 2
run: 246 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1387 to nil
run: 247 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 248 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1385 to 0
run: 249 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1382 integer) (raw))
sizeof: ((1382 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1388 to 0
run: 250 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1389 to t
run: 251 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1354 to t
run: 252 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 253 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((5 integer-address))
setm: ((5 integer-address)) <= 1062
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1355 to 1062
run: 254 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write to sleep queue
schedule: waking up read
schedule: read
run: 255 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101381 to 1062
run: 256 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101382 to 1065
run: 257 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1066 tagged-value) (raw))
sizeof: ((1066 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character - . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101383 to character
setm: ((6 tagged-value)): setting 101384 to -
run: 258 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 259 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101385 to 2
run: 260 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101386 to t
run: 261 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 262 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character - . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character - . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 101347 to character
setm: ((1 tagged-value)): setting 101348 to -
reply: #(tagged record (1 1 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 263 expect-stdin 2: (((3 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 264 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101438 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 265 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101469 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101469
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101440 to 101469
run: 266 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character - . nil)) character)
run: #(tagged record (character - . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character - . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101469 to character
setm: ((1 tagged-value-address) (deref)): setting 101470 to -
run: 267 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character - . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101441 to character
run: 268 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101469 type) (raw))
sizeof: ((101469 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101442 to character
run: 269 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101443 to t
run: 270 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 271 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101470 location) (raw))
sizeof: ((101470 location) (raw))
run: - => ((5 location))
setm: ((5 location)) <= -
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101444 to -
run: 272 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((3 character)))
reply: - => ((3 character))
setm: ((3 character)) <= -
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101349 to -
run: 273 expect-stdin 3: (((print)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 274 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 275 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 276 print 2: (((reply)))
reply: nil nil
run: 277 expect-stdin 4: (((4 character)) <- ((next-input)))
arg: nil 0 (-)
run: - => ((4 character))
setm: ((4 character)) <= -
setm: size of ((4 character)) is 1
setm: ((4 character)): setting 101350 to -
run: 278 expect-stdin 5: (((5 boolean)) <- ((equal)) ((3 character)) ((4 character)))
m: ((3 character))
sizeof: ((3 character))
m: ((4 character))
sizeof: ((4 character))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101351 to t
run: 279 expect-stdin 6: (((assert)) ((5 boolean)) ((expected character not found literal)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 280 read-move 6: (((3 integer)) <- ((read-file)))
run: 281 read-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101502 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 282 read-file 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 283 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101533 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 284 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101535 to 1062
run: 285 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 286 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101564 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 287 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1065 . nil)))
run: #(tagged record (1 1 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101566 to 1
setm: ((1 channel)): setting 101567 to 1
setm: ((1 channel)): setting 101568 to 1065
run: 288 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101566 integer) (raw))
sizeof: ((101566 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101569 to 1
run: 289 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101567 integer) (raw))
sizeof: ((101567 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101570 to 1
run: 290 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101571 to t
run: 291 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101536 to t
run: 292 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 293 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101537 to 1063
run: 294 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
schedule: waking up write
schedule: write
run: 295 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1065
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1356 to 1065
run: 296 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((7 integer-address))
setm: ((7 integer-address)) <= 1063
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1357 to 1063
run: 297 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1068 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1068
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1358 to 1068
run: 298 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1068 to character
setm: ((8 tagged-value-address) (deref)): setting 1069 to a
run: 299 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 2
run: 300 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1359 to 2
run: 301 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1360 to nil
run: 302 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 303 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1063 to 0
run: 304 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (raw) (deref)))
reply: #(tagged record (1 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (1 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 1
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 305 main 15: (((sleep)) ((until-routine-done literal)) ((1 integer) (routine)))
m: ((1 integer) (routine))
sizeof: ((1 integer) (routine))
schedule: pushing main to sleep queue
schedule: waking up read
schedule: read
run: 306 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 101538 to 1062
run: 307 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1064 tagged-value-array-address) (raw))
sizeof: ((1064 tagged-value-array-address) (raw))
run: 1065 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1065
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 101539 to 1065
run: 308 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1065 tagged-value-array) (raw))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1068 tagged-value) (raw))
sizeof: ((1068 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character a . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 101540 to character
setm: ((6 tagged-value)): setting 101541 to a
run: 309 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 310 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1065 integer) (raw))
sizeof: ((1065 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 101542 to 2
run: 311 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101543 to nil
run: 312 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 313 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 0
run: 314 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((1 tagged-value)) ((1 channel-address) (raw) (deref)))
reply: #(tagged record (character a . nil)) => ((1 tagged-value))
setm: ((1 tagged-value)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value)) is 2
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value)): setting 101504 to character
setm: ((1 tagged-value)): setting 101505 to a
reply: #(tagged record (0 0 1065 . nil)) => ((1 channel-address) (raw) (deref))
setm: ((1 channel-address) (raw) (deref)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel-address) (raw) (deref)) is 3
sizeof: ((1 channel-address) (raw) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (raw) (deref)): setting 1062 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1063 to 0
setm: ((1 channel-address) (raw) (deref)): setting 1064 to 1065
run: 315 read-file 2: (((3 character)) <- ((copy)) ((a literal)))
run: a => ((3 character))
setm: ((3 character)) <= a
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101506 to a
run: 316 read-file 3: (((4 integer)) <- ((character-to-integer)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101507 to 97
run: 317 read-file 4: (((5 character)) <- ((maybe-coerce)) ((1 tagged-value)) ((character literal)))
m: ((1 tagged-value))
sizeof: ((1 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 318 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101595 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 319 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 101626 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 101626
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 101597 to 101626
run: 320 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character a . nil)) character)
run: #(tagged record (character a . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character a . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 101626 to character
setm: ((1 tagged-value-address) (deref)): setting 101627 to a
run: 321 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character a . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 101598 to character
run: 322 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((101626 type) (raw))
sizeof: ((101626 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 101599 to character
run: 323 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101600 to t
run: 324 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 325 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((101627 location) (raw))
sizeof: ((101627 location) (raw))
run: a => ((5 location))
setm: ((5 location)) <= a
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 101601 to a
run: 326 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: a => ((5 character))
setm: ((5 character)) <= a
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 101508 to a
run: 327 read-file 5: (((print)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 328 print 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 329 print 1: (((jump-if)) ((2 channel-address) (raw)) ((1 offset)))
m: ((2 channel-address) (raw))
sizeof: ((2 channel-address) (raw))
run: 330 print 2: (((reply)))
reply: nil nil
run: 331 read-file 6: (((6 boolean)) <- ((equal)) ((5 character)) ((q literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101509 to nil
run: 332 read-file 7: (((jump-unless)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 333 read-file 9: (((7 integer)) <- ((character-to-integer)) ((5 character)))
m: ((5 character))
sizeof: ((5 character))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101510 to 97
run: 334 read-file 10: (((7 integer)) <- ((subtract)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101510 to 0
run: 335 read-file 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((0 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101511 to t
run: 336 read-file 12: (((assert)) ((8 boolean)) ((file too low literal)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 337 read-file 13: (((9 boolean)) <- ((lesser-or-equal)) ((7 integer)) ((7 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 101512 to t
run: 338 read-file 14: (((assert)) ((9 boolean)) ((file too high literal)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 339 read-file 15: (((reply)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
reply: (((7 integer))) (((3 integer)))
reply: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 101004 to 0
run: 340 read-move 7: (((4 integer)) <- ((read-rank)))
run: 341 read-rank 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101659 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 342 read-rank 1: (((1 tagged-value)) ((1 channel-address) (raw) (deref)) <- ((read)) ((1 channel-address) (raw)))
m: ((1 channel-address) (raw))
sizeof: ((1 channel-address) (raw))
run: 343 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101690 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 344 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 channel-address))
setm: ((1 channel-address)) <= 1062
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101692 to 1062
run: 345 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 346 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101721 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 347 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1065 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101723 to 0
setm: ((1 channel)): setting 101724 to 0
setm: ((1 channel)): setting 101725 to 1065
run: 348 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101723 integer) (raw))
sizeof: ((101723 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101726 to 0
run: 349 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101724 integer) (raw))
sizeof: ((101724 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101727 to 0
run: 350 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101728 to t
run: 351 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 101693 to t
run: 352 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 353 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 integer-address))
setm: ((3 integer-address)) <= 1063
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 101694 to 1063
run: 354 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read to sleep queue
