parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ", properties: ["
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ": "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "
  #  01234
    .b    .
    .     .
    .     .
  ", properties: ["
  #  01234
    .b    .
    .     .
    .     .
  ": "literal-string"]}
after-brace: recipe screen-in-scenario-error
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: screen-in-scenario-error
 101 run: screen:address <- assume-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:character <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:character/deref <- new character:literal, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1052
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1054
 103 run: break-unless x:address:screen, 
9999 mem: location 1054 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:character <- get x:address:screen/deref, data:offset
9999 mem: location 1054 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1054 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1055
 103 run: max:number <- length buf:address:array:character/deref
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1055 is 1036
9999 mem: storing 15 in location 1056
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1057
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 0
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 0
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 0
9999 mem: storing 1037 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1037
9999 mem: storing 0 in location 1037
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 0
9999 mem: storing 1 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 1
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 1
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 1
9999 mem: storing 1038 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1038
9999 mem: storing 0 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 1
9999 mem: storing 2 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 2
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 2
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 2
9999 mem: storing 1039 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1039
9999 mem: storing 0 in location 1039
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 2
9999 mem: storing 3 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 3
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 3
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 3
9999 mem: storing 1040 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1040
9999 mem: storing 0 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 3
9999 mem: storing 4 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 4
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 4
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 4
9999 mem: storing 1041 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1041
9999 mem: storing 0 in location 1041
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 4
9999 mem: storing 5 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 5
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 5
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 5
9999 mem: storing 1042 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1042
9999 mem: storing 0 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 5
9999 mem: storing 6 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 6
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 6
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 6
9999 mem: storing 1043 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1043
9999 mem: storing 0 in location 1043
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 6
9999 mem: storing 7 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 7
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 7
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 7
9999 mem: storing 1044 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1044
9999 mem: storing 0 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 7
9999 mem: storing 8 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 8
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 8
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 8
9999 mem: storing 1045 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1045
9999 mem: storing 0 in location 1045
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 8
9999 mem: storing 9 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 9
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 9
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 9
9999 mem: storing 1046 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1046
9999 mem: storing 0 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 9
9999 mem: storing 10 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 10
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 10
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 10
9999 mem: storing 1047 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1047
9999 mem: storing 0 in location 1047
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 10
9999 mem: storing 11 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 11
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 11
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 11
9999 mem: storing 1048 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1048
9999 mem: storing 0 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 11
9999 mem: storing 12 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 12
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 12
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 12
9999 mem: storing 1049 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1049
9999 mem: storing 0 in location 1049
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 12
9999 mem: storing 13 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 13
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 13
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 13
9999 mem: storing 1050 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1050
9999 mem: storing 0 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 13
9999 mem: storing 14 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 14
9999 mem: location 1056 is 15
9999 mem: storing 0 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 103 run: c:address:character <- index-address buf:address:array:character/deref, i:number
9999 mem: location 1055 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1057 is 14
9999 mem: location 1055 is 1036
9999 mem: location 1057 is 14
9999 mem: storing 1051 in location 1059
 103 run: c:address:character/deref <- copy [ ]
9999 mem: location 1059 is 1051
9999 mem: storing 0 in location 1051
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1057 is 14
9999 mem: storing 15 in location 1057
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1057 is 15
9999 mem: location 1056 is 15
9999 mem: storing 1 in location 1058
 103 run: break-if done?:boolean, 
9999 mem: location 1058 is 1
9999 run: jumping to instruction 14
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1054 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1054 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1060
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1060 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1054 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1054 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1060
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1060 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1054 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ]
parse: instruction: print-character
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
after-brace: recipe run1001
after-brace: print-character ...
 101 run: screen:address <- print-character screen:address, 97:literal
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1083
 102 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1085
 102 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1086
 102 run: break-unless x:address:screen, 
9999 mem: location 1085 is 1031
9999 run: jump-unless fell through
 102 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1085 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1085 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1087
 102 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1085 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1085 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1088
 102 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1085 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1085 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1089
 102 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1085 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1085 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1090
 102 run: max-row:number <- subtract height:number, 1:literal
9999 mem: location 1090 is 3
9999 mem: storing 2 in location 1091
 102 run: newline?:boolean <- equal c:character, 10:literal/newlin
9999 mem: location 1086 is 97
9999 mem: storing 0 in location 1092
 102 run: break-unless newline?:boolean, 
9999 mem: location 1092 is 0
9999 run: jumping to instruction 20
 102 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1087 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1089 is 5
9999 mem: storing 0 in location 1094
 102 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1094 is 0
9999 mem: location 1088 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1094
 102 run: buf:address:array:character <- get x:address:screen/deref, data:offset
9999 mem: location 1085 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1085 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1095
 102 run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
9999 mem: location 1095 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1036
9999 mem: location 1094 is 0
9999 mem: storing 1037 in location 1096
 102 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1086 is 97
9999 mem: storing 0 in location 1097
 102 run: break-unless backspace?:boolean, 
9999 mem: location 1097 is 0
9999 run: jumping to instruction 36
 102 run: cursor:address:character/deref <- copy c:character
9999 mem: location 1086 is 97
9999 mem: location 1096 is 1037
9999 mem: storing 97 in location 1037
 102 run: at-right?:boolean <- equal column:address:number/deref, width:number
9999 mem: location 1088 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1089 is 5
9999 mem: storing 0 in location 1099
 102 run: break-if at-right?:boolean, 
9999 mem: location 1099 is 0
9999 run: jump-if fell through
 102 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1088 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1088 is 1034
9999 mem: storing 1 in location 1034
 102 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1085 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 100 run: screen-should-contain [
  #  01234
    .b    .
    .     .
    .     .
  ]
warn: expected screen location (0, 0) to contain 98 ('b') instead of 97 ('a')

