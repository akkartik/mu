parse: instruction: copy
parse:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse: instruction: test1
parse:   ingredient: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse: instruction: next-ingredient
parse:   product: {name: "10", value: 0, type: 2-1, properties: ["10": "address":"number"]}
parse: instruction: reply
parse:   ingredient: {name: "10", value: 0, type: 2-1, properties: ["10": "address":"number", "same-as-ingredient": "0"]}
after-brace: recipe main
after-brace: copy ...
after-brace: test1 ...
after-brace: recipe test1
after-brace: next-ingredient ...
after-brace: reply ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 0
run: product 0 is 1
mem: storing 0 in location 1
run: instruction main/1
run: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- test1/1001 {name: "1", value: 1, type: 1, properties: ["1": "number"]}
run: ingredient 0 is 1
mem: location 1 is 0
run: instruction test1/0
run: {name: "10", value: 10, type: 2-1, properties: ["10": "address":"number"]} <- next-ingredient/34 
run: product 0 is 10
mem: storing 0 in location 10
run: instruction test1/1
run: reply/37 {name: "10", value: 10, type: 2-1, properties: ["10": "address":"number", "same-as-ingredient": "0"]}
run: ingredient 0 is 10
mem: location 10 is 0
run: result 0 is 0
warn: 'same-as-ingredient' result 2 must be location 1
run: product 0 is 2
mem: storing 0 in location 2
