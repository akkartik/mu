9999 parse: instruction: copy
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 parse: instruction: test1
9999 parse:   ingredient: {name: "1", properties: ["1": "number"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: instruction: next-ingredient
9999 parse:   product: {name: "10", properties: ["10": "number"]}
9999 parse: instruction: reply
9999 parse:   ingredient: {name: "10", properties: ["10": "number", "same-as-ingredient": "0"]}
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: test1 ...
9999 after-brace: recipe test1
9999 after-brace: next-ingredient ...
9999 after-brace: reply ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: 1:number <- copy 0
9999 mem: storing 0 in location 1
 101 run: 2:number <- test1 1:number
9999 mem: location 1 is 0
 102 run: 10:number <- next-ingredient 
9999 mem: storing 0 in location 10
 102 run: reply 10:number/same-as-ingredient:0
9999 mem: location 10 is 0
9999 run: result 0 is 0
error: main: 'same-as-ingredient' product from call to test1 must be 1:number rather than 2:number

9999 mem: storing 0 in location 2
