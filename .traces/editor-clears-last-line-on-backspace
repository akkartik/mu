parse: instruction: assume-screen
parse:   ingredient: {name: "10", properties: ["10": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "ab\ncd", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    left-click 2, 0  # cursor at only character in final line\n    type [«]\n  ", properties: [_: "literal-string"]}
parse: instruction: merge
parse:   ingredient: {name: "0", properties: ["0": "literal", "text": ]}
parse:   ingredient: {name: "8", properties: ["8": "literal", "backspace": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "dummy": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "dummy": ]}
parse:   product: {name: "3", properties: ["3": "event", "backspace": ]}
parse: instruction: replace-in-console
parse:   ingredient: {name: "171", properties: ["171": "literal", "«": ]}
parse:   ingredient: {name: "3", properties: ["3": "event", "backspace": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .          .\n    .abcd      .\n    .          .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-clears-last-line-on-backspace
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: merge ...
after-brace: replace-in-console ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-clears-last-line-on-backspace
 101 run: screen:address <- new-fake-screen 10:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 103 run: break-unless x:address:screen, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1120
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 0
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 1
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 2
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 3
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 4
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 5
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 6
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 7
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 8
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 9
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 10
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 11
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 12
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 13
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 14
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 15
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 16
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 17
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 18
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 19
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 20
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 21
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 22
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 23
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 24
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 25
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 26
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 27
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 28
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 29
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 30
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 31
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 32
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 33
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 34
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 35
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 36
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 37
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 38
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 39
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 40
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 41
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 42
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 43
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 44
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 45
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 46
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 47
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 48
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1118 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1120 is 49
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 103 run: break-if done?:boolean, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1117 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [ab
cd]
9999 mem: storing 1126 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1132
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1134
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1135
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1136
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1137
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1137 is 5
9999 mem: storing 4 in location 1137
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1149
9999 mem: storing 1149 in location 1139
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1136 is 0
9999 mem: location 1139 is 1149
9999 mem: storing 0 in location 1149
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 1139
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1137 is 4
9999 mem: location 1139 is 1150
9999 mem: storing 4 in location 1150
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1139
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1139 is 1151
9999 mem: storing 1 in location 1151
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1139
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1136 is 0
9999 mem: location 1139 is 1152
9999 mem: storing 0 in location 1152
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1140
schedule: new-editor/editor-clears-last-line-on-backspace
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1153
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1155
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1156
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1161
9999 mem: storing 1161 in location 1157
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1157 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1157 is 1161
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1158
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1155 is 167
9999 mem: location 1158 is 1161
9999 mem: storing 167 in location 1161
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1157 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1157 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1159
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1156 is 0
9999 mem: location 1159 is 1162
9999 mem: storing 0 in location 1162
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1157 is 1161
9999 run: result 0 is 1161
9999 mem: location 1140 is 1147
9999 mem: storing 1161 in location 1147
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1141
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1141 is 1148
9999 mem: storing 1161 in location 1148
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1134 is 1126
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1134 is 1126
9999 mem: storing 5 in location 1142
 102 run: jump-if len:number, 1:offset
9999 mem: location 1142 is 5
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1143
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1144
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 0
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1143 is 0
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 0
9999 run: address to copy is 1127
9999 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 97
9999 mem: location 1144 is 1161
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1164
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1166
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1167
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1172
9999 mem: storing 1172 in location 1168
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1168 is 1172
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1169
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1166 is 97
9999 mem: location 1169 is 1172
9999 mem: storing 97 in location 1172
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1167 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1170
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1167 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1168 is 1172
9999 mem: location 1171 is 1162
9999 mem: storing 1172 in location 1162
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1168 is 1172
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1167 is 1161
9999 mem: location 1171 is 1174
9999 mem: storing 1161 in location 1174
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1168 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1168 is 1172
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1171
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1173
9999 mem: storing 0 in location 1173
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1170 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1168 is 1172
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1161
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1175
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1177
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1177 is 1161
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1177 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1177 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1178
 103 run: reply result:address:duplex-list
9999 mem: location 1178 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 1
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1143 is 1
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 1
9999 run: address to copy is 1128
9999 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 98
9999 mem: location 1144 is 1172
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1179
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1181
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1182
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1187
9999 mem: storing 1187 in location 1183
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1183 is 1187
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1184
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1181 is 98
9999 mem: location 1184 is 1187
9999 mem: storing 98 in location 1187
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1182 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1185
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1182 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1161
9999 mem: location 1182 is 1172
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1183 is 1187
9999 mem: location 1186 is 1173
9999 mem: storing 1187 in location 1173
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1183 is 1187
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1182 is 1172
9999 mem: location 1186 is 1189
9999 mem: storing 1172 in location 1189
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1183 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1186
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1188
9999 mem: storing 0 in location 1188
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1185 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1183 is 1187
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1172
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1190
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1192
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1192 is 1172
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1192 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1192 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1193
 103 run: reply result:address:duplex-list
9999 mem: location 1193 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 1
9999 mem: storing 2 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 2
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1143 is 2
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 2
9999 run: address to copy is 1129
9999 run: its type is character
9999 mem: location 1129 is 10
9999 mem: storing 10 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 10
9999 mem: location 1144 is 1187
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1194
 103 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1196
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1197
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1202
9999 mem: storing 1202 in location 1198
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1198 is 1202
9999 run: address to copy is 1202
9999 mem: storing 1202 in location 1199
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1196 is 10
9999 mem: location 1199 is 1202
9999 mem: storing 10 in location 1202
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1197 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1197 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1200
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1197 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1172
9999 mem: location 1197 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1198 is 1202
9999 mem: location 1201 is 1188
9999 mem: storing 1202 in location 1188
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1198 is 1202
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1197 is 1187
9999 mem: location 1201 is 1204
9999 mem: storing 1187 in location 1204
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1198 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1198 is 1202
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1201
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1203
9999 mem: storing 0 in location 1203
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1200 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1198 is 1202
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1187
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1205
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1207
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1207 is 1187
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1207 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1207 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1208
 103 run: reply result:address:duplex-list
9999 mem: location 1208 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 2
9999 mem: storing 3 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 3
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1143 is 3
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 3
9999 run: address to copy is 1130
9999 run: its type is character
9999 mem: location 1130 is 99
9999 mem: storing 99 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 99
9999 mem: location 1144 is 1202
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1209
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1211
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1212
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1217
9999 mem: storing 1217 in location 1213
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1213 is 1217
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1214
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1211 is 99
9999 mem: location 1214 is 1217
9999 mem: storing 99 in location 1217
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1212 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1212 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1215
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1212 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 1212 is 1202
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1213 is 1217
9999 mem: location 1216 is 1203
9999 mem: storing 1217 in location 1203
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1213 is 1217
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1212 is 1202
9999 mem: location 1216 is 1219
9999 mem: storing 1202 in location 1219
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1213 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1213 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1216
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1218
9999 mem: storing 0 in location 1218
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1215 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1213 is 1217
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1202
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1220
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1222
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1222 is 1202
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1222 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1222 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1223
 103 run: reply result:address:duplex-list
9999 mem: location 1223 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 3
9999 mem: storing 4 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 4
9999 mem: location 1142 is 5
9999 mem: storing 0 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1134 is 1126
9999 mem: location 1126 is 5
9999 mem: location 1127 is 97
9999 mem: location 1128 is 98
9999 mem: location 1129 is 10
9999 mem: location 1130 is 99
9999 mem: location 1131 is 100
9999 mem: location 1143 is 4
9999 mem: location 1134 is 1126
9999 mem: location 1143 is 4
9999 run: address to copy is 1131
9999 run: its type is character
9999 mem: location 1131 is 100
9999 mem: storing 100 in location 1146
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1146 is 100
9999 mem: location 1144 is 1217
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1224
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1226
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1227
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1232
9999 mem: storing 1232 in location 1228
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1228 is 1232
9999 run: address to copy is 1232
9999 mem: storing 1232 in location 1229
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1226 is 100
9999 mem: location 1229 is 1232
9999 mem: storing 100 in location 1232
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1227 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1227 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1230
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1227 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1202
9999 mem: location 1227 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1228 is 1232
9999 mem: location 1231 is 1218
9999 mem: storing 1232 in location 1218
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1228 is 1232
9999 run: address to copy is 1234
9999 mem: storing 1234 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1227 is 1217
9999 mem: location 1231 is 1234
9999 mem: storing 1217 in location 1234
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1228 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1228 is 1232
9999 run: address to copy is 1233
9999 mem: storing 1233 in location 1231
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1233
9999 mem: storing 0 in location 1233
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1230 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1228 is 1232
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1144 is 1217
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1235
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1237
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1237 is 1217
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1237 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1237 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1238
 103 run: reply result:address:duplex-list
9999 mem: location 1238 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1144
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1143 is 4
9999 mem: storing 5 in location 1143
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1143 is 5
9999 mem: location 1142 is 5
9999 mem: storing 1 in location 1145
 102 run: break-if done?:boolean, 
9999 mem: location 1145 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1138 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1141
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1140 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1141 is 1148
9999 mem: storing 1161 in location 1148
 102 run: _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1135 is 1009
9999 mem: location 1138 is 1147
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1239
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1241
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1242
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1242 is 1147
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1243
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1241 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1266
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1268
 104 run: break-unless x:address:screen, 
9999 mem: location 1268 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1268 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1269
 104 run: reply height:number
9999 mem: location 1269 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1244
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1245
 103 run: hide-screen screen:address
9999 mem: location 1241 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1270
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1272
 104 run: break-unless x:address:screen, 
9999 mem: location 1272 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1272 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1246
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1246 is 1161
9999 mem: storing 1161 in location 1247
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1273
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1275
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1275 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1275 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1275 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1276
 104 run: reply result:address:duplex-list
9999 mem: location 1276 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1246
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1248
 103 run: column:number <- copy left:number
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1249
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1250
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1251
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1242 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1242 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1252
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1241 is 1009
9999 mem: location 1248 is 1
9999 mem: location 1249 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1277
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1279
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1280
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1281
 104 run: break-unless x:address:screen, 
9999 mem: location 1279 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1279 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1279 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1282
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1280 is 1
9999 mem: location 1282 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1279 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1279 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1283
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1281 is 0
9999 mem: location 1283 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1279 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1172
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 0
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1246 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1284
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1286
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1286 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1286 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1286 is 1172
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1161
9999 mem: storing 1161 in location 1287
 104 run: reply result:address:duplex-list
9999 mem: location 1287 is 1161
9999 run: result 0 is 1161
9999 mem: location 1252 is 1148
9999 mem: storing 1161 in location 1148
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1246 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 0
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1288
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1291
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 104 run: break-if color-found?:boolean, 
9999 mem: location 1293 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1292
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1295 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1294
 104 run: break-unless x:address:screen, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1296
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1297
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1298
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1299
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1300
 104 run: break-unless newline?:boolean, 
9999 mem: location 1300 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1296 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1298 is 10
9999 mem: storing 10 in location 1303
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1303 is 10
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1303
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1304
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1305
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1305 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1304 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1303 is 10
9999 mem: location 1304 is 1014
9999 mem: location 1303 is 10
9999 mem: storing 1035 in location 1307
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1307 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1307 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1308
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1307 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1307 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1309
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1291 is 97
9999 mem: location 1308 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1298 is 10
9999 mem: storing 9 in location 1310
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 104 run: break-if at-right?:boolean, 
9999 mem: location 1311 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1297 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1297 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1290 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1312
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1314
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1314 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1314 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1314 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1315
 104 run: reply result:address:duplex-list
9999 mem: location 1315 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1316
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1318
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1318 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1318 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1318 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1319
 104 run: reply result:address:duplex-list
9999 mem: location 1319 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 0
9999 mem: storing 1 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1187
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 1
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1246 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 1
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1320
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1322
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1323
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 104 run: break-if color-found?:boolean, 
9999 mem: location 1325 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1324
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1327 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1326
 104 run: break-unless x:address:screen, 
9999 mem: location 1322 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1328
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1329
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1330
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1331
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1332
 104 run: break-unless newline?:boolean, 
9999 mem: location 1332 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1328 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1330 is 10
9999 mem: storing 10 in location 1335
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1335 is 10
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1335
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1322 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1322 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1336
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1337
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1337 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1336 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1335 is 11
9999 mem: location 1336 is 1014
9999 mem: location 1335 is 11
9999 mem: storing 1037 in location 1339
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1339 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1339 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1340
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1339 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1339 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1341
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1323 is 98
9999 mem: location 1340 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1324 is 7
9999 mem: location 1341 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1330 is 10
9999 mem: storing 9 in location 1342
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1343
 104 run: break-if at-right?:boolean, 
9999 mem: location 1343 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1329 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1329 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1322 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1344
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1346
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1346 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1346 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1346 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1347
 104 run: reply result:address:duplex-list
9999 mem: location 1347 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1348
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1350
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1350 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1350 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1350 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1351
 104 run: reply result:address:duplex-list
9999 mem: location 1351 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 1
9999 mem: storing 2 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1202
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 1
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 2
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1246 is 1202
9999 run: address to copy is 1202
9999 run: its type is number
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 1
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 2
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1258
 103 run: break-unless left-of-cursor?:boolean, 
9999 mem: location 1258 is 0
9999 run: jumping to instruction 41
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1241 is 1009
9999 mem: location 1249 is 2
9999 mem: location 1245 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1352
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1354
 104 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1355
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1356
 104 run: column:number <- copy left:number
9999 mem: location 1355 is 2
9999 mem: storing 2 in location 1357
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1357 is 2
9999 mem: location 1356 is 4
9999 mem: storing 0 in location 1358
 104 run: break-if done?:boolean, 
9999 mem: location 1358 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1354 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1359
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1361
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1362
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
 105 run: break-if color-found?:boolean, 
9999 mem: location 1364 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1363
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1366 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1365
 105 run: break-unless x:address:screen, 
9999 mem: location 1361 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1361 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1367
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1361 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1368
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1361 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1369
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1361 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1370
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1362 is 32
9999 mem: storing 0 in location 1371
 105 run: break-unless newline?:boolean, 
9999 mem: location 1371 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1367 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1369 is 10
9999 mem: storing 10 in location 1374
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1374 is 10
9999 mem: location 1368 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1374
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1361 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1361 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1375
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1362 is 32
9999 mem: storing 0 in location 1376
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1376 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1375 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1374 is 12
9999 mem: location 1375 is 1014
9999 mem: location 1374 is 12
9999 mem: storing 1039 in location 1378
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1378 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1378 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1379
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1378 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1378 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1380
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1362 is 32
9999 mem: location 1379 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1363 is 7
9999 mem: location 1380 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1369 is 10
9999 mem: storing 9 in location 1381
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1368 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1382
 105 run: break-if at-right?:boolean, 
9999 mem: location 1382 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1368 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1368 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1361 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1357 is 2
9999 mem: storing 3 in location 1357
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1357 is 3
9999 mem: location 1356 is 4
9999 mem: storing 0 in location 1358
 104 run: break-if done?:boolean, 
9999 mem: location 1358 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1354 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1383
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1385
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1386
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
 105 run: break-if color-found?:boolean, 
9999 mem: location 1388 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1387
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1390 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1389
 105 run: break-unless x:address:screen, 
9999 mem: location 1385 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1385 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1385 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1391
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1385 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1385 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1392
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1385 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1385 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1393
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1385 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1385 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1394
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1386 is 32
9999 mem: storing 0 in location 1395
 105 run: break-unless newline?:boolean, 
9999 mem: location 1395 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1391 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1393 is 10
9999 mem: storing 10 in location 1398
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1398 is 10
9999 mem: location 1392 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1398
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1385 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1385 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1399
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1386 is 32
9999 mem: storing 0 in location 1400
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1400 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1399 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1398 is 13
9999 mem: location 1399 is 1014
9999 mem: location 1398 is 13
9999 mem: storing 1041 in location 1402
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1402 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1402 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1403
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1402 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1402 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1404
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1386 is 32
9999 mem: location 1403 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1387 is 7
9999 mem: location 1404 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1393 is 10
9999 mem: storing 9 in location 1405
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1392 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1406
 105 run: break-if at-right?:boolean, 
9999 mem: location 1406 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1392 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1385 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1357 is 3
9999 mem: storing 4 in location 1357
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1357 is 4
9999 mem: location 1356 is 4
9999 mem: storing 0 in location 1358
 104 run: break-if done?:boolean, 
9999 mem: location 1358 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1354 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1407
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1409
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1410
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
 105 run: break-if color-found?:boolean, 
9999 mem: location 1412 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1411
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1414 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1413
schedule: print-character/clear-line-delimited/render/new-editor/editor-clears-last-line-on-backspace
 105 run: break-unless x:address:screen, 
9999 mem: location 1409 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1415
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1416
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1417
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1418
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1410 is 32
9999 mem: storing 0 in location 1419
 105 run: break-unless newline?:boolean, 
9999 mem: location 1419 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1415 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1417 is 10
9999 mem: storing 10 in location 1422
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1422 is 10
9999 mem: location 1416 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1422
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1409 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1409 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1423
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1410 is 32
9999 mem: storing 0 in location 1424
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1424 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1423 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1422 is 14
9999 mem: location 1423 is 1014
9999 mem: location 1422 is 14
9999 mem: storing 1043 in location 1426
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1426 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1426 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1427
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1426 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1426 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1428
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1410 is 32
9999 mem: location 1427 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1411 is 7
9999 mem: location 1428 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1417 is 10
9999 mem: storing 9 in location 1429
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1416 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1429 is 9
9999 mem: storing 0 in location 1430
 105 run: break-if at-right?:boolean, 
9999 mem: location 1430 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1416 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1416 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1409 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1357 is 4
9999 mem: storing 5 in location 1357
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1357 is 5
9999 mem: location 1356 is 4
9999 mem: storing 1 in location 1358
 104 run: break-if done?:boolean, 
9999 mem: location 1358 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1248 is 1
9999 mem: storing 2 in location 1248
 103 run: column:number <- copy left:number
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1249
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1241 is 1009
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1431
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1433
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1434
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1435
 104 run: break-unless x:address:screen, 
9999 mem: location 1433 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1433 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1433 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1436
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1434 is 2
9999 mem: location 1436 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1433 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1433 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1437
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1435 is 0
9999 mem: location 1437 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1433 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1438
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1440
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1440 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1440 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1440 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1441
 104 run: reply result:address:duplex-list
9999 mem: location 1441 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1442
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1444
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1444 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1444 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1444 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1445
 104 run: reply result:address:duplex-list
9999 mem: location 1445 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1247
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 2
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1246 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 99
9999 mem: storing 99 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 0
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1446
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1448
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1449
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 104 run: break-if color-found?:boolean, 
9999 mem: location 1451 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1450
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1452
9999 mem: storing 0 in location 1453
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1453 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1452
 104 run: break-unless x:address:screen, 
9999 mem: location 1448 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1448 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1448 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1454
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1448 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1448 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1455
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1448 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1448 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1456
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1448 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1448 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1457
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1449 is 99
9999 mem: storing 0 in location 1458
 104 run: break-unless newline?:boolean, 
9999 mem: location 1458 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1454 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1456 is 10
9999 mem: storing 20 in location 1461
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1461 is 20
9999 mem: location 1455 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1461
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1448 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1448 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1462
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1449 is 99
9999 mem: storing 0 in location 1463
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1463 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1462 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1461 is 20
9999 mem: location 1462 is 1014
9999 mem: location 1461 is 20
9999 mem: storing 1055 in location 1465
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1465 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1465 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1466
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1465 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1465 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1467
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1449 is 99
9999 mem: location 1466 is 1055
9999 mem: storing 99 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1450 is 7
9999 mem: location 1467 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1456 is 10
9999 mem: storing 9 in location 1468
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1455 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1468 is 9
9999 mem: storing 0 in location 1469
 104 run: break-if at-right?:boolean, 
9999 mem: location 1469 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1455 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1455 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1448 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1470
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1472
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1472 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1472 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1472 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1473
 104 run: reply result:address:duplex-list
9999 mem: location 1473 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1474
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1476
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1476 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1476 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1476 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1477
 104 run: reply result:address:duplex-list
9999 mem: location 1477 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 0
9999 mem: storing 1 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1248 is 2
9999 mem: location 1244 is 5
9999 mem: storing 0 in location 1253
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1254
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1254 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1246 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1246 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 100
9999 mem: storing 100 in location 1256
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1257
 103 run: break-unless newline?:boolean, 
9999 mem: location 1257 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1249 is 1
9999 mem: location 1245 is 4
9999 mem: storing 0 in location 1259
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1259 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1241 is 1009
9999 mem: location 1256 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1478
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1480
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1481
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1482
9999 mem: storing 0 in location 1483
 104 run: break-if color-found?:boolean, 
9999 mem: location 1483 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1482
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1484
9999 mem: storing 0 in location 1485
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1485 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1484
 104 run: break-unless x:address:screen, 
9999 mem: location 1480 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1480 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1480 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1486
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1480 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1480 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1487
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1480 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1480 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1488
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1480 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1480 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1489
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1481 is 100
9999 mem: storing 0 in location 1490
 104 run: break-unless newline?:boolean, 
9999 mem: location 1490 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1486 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1488 is 10
9999 mem: storing 20 in location 1493
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1493 is 20
9999 mem: location 1487 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1493
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1480 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1480 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1494
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1481 is 100
9999 mem: storing 0 in location 1495
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1495 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1494 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1493 is 21
9999 mem: location 1494 is 1014
9999 mem: location 1493 is 21
9999 mem: storing 1057 in location 1497
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1497 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1497 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1498
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1497 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1497 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1499
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1481 is 100
9999 mem: location 1498 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1482 is 7
9999 mem: location 1499 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1488 is 10
9999 mem: storing 9 in location 1500
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1487 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1500 is 9
9999 mem: storing 0 in location 1501
 104 run: break-if at-right?:boolean, 
9999 mem: location 1501 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1487 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1487 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1480 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1246 is 1232
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1502
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 1504
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1504 is 1232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1504 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1504 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1505
 104 run: reply result:address:duplex-list
9999 mem: location 1505 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1246
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1247 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1506
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1508
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1508 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1508 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1508 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1509
 104 run: reply result:address:duplex-list
9999 mem: location 1509 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1247
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1249 is 1
9999 mem: storing 2 in location 1249
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1254
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1249 is 2
9999 mem: location 1251 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1260
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1254 is 0
9999 mem: location 1260 is 0
9999 mem: storing 0 in location 1261
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1248 is 2
9999 mem: location 1250 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1262
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1263
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1263 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1241 is 1009
9999 mem: location 1249 is 2
9999 mem: location 1245 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1510
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1512
 104 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1513
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1514
 104 run: column:number <- copy left:number
9999 mem: location 1513 is 2
9999 mem: storing 2 in location 1515
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1515 is 2
9999 mem: location 1514 is 4
9999 mem: storing 0 in location 1516
 104 run: break-if done?:boolean, 
9999 mem: location 1516 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1512 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1517
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1519
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1520
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1521
9999 mem: storing 0 in location 1522
 105 run: break-if color-found?:boolean, 
9999 mem: location 1522 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1521
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1523
9999 mem: storing 0 in location 1524
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1524 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1523
 105 run: break-unless x:address:screen, 
9999 mem: location 1519 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1525
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1526
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1527
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1528
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1520 is 32
9999 mem: storing 0 in location 1529
 105 run: break-unless newline?:boolean, 
9999 mem: location 1529 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1525 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1527 is 10
9999 mem: storing 20 in location 1532
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1532 is 20
9999 mem: location 1526 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1532
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1519 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1519 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1533
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1520 is 32
9999 mem: storing 0 in location 1534
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1534 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1533 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1532 is 22
9999 mem: location 1533 is 1014
9999 mem: location 1532 is 22
9999 mem: storing 1059 in location 1536
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1536 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1536 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1537
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1536 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1536 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1538
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1520 is 32
9999 mem: location 1537 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1521 is 7
9999 mem: location 1538 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1527 is 10
9999 mem: storing 9 in location 1539
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1526 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1539 is 9
9999 mem: storing 0 in location 1540
 105 run: break-if at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1526 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1526 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1519 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1515 is 2
9999 mem: storing 3 in location 1515
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1515 is 3
9999 mem: location 1514 is 4
9999 mem: storing 0 in location 1516
 104 run: break-if done?:boolean, 
9999 mem: location 1516 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1512 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1541
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1543
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1544
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1545
9999 mem: storing 0 in location 1546
 105 run: break-if color-found?:boolean, 
9999 mem: location 1546 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1545
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1547
9999 mem: storing 0 in location 1548
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1548 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1547
 105 run: break-unless x:address:screen, 
9999 mem: location 1543 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1543 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1549
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1543 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1550
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1543 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1551
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1543 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1552
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1544 is 32
9999 mem: storing 0 in location 1553
 105 run: break-unless newline?:boolean, 
9999 mem: location 1553 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1549 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1551 is 10
9999 mem: storing 20 in location 1556
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1556 is 20
9999 mem: location 1550 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1556
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1543 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1557
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1544 is 32
9999 mem: storing 0 in location 1558
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1558 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1557 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1556 is 23
9999 mem: location 1557 is 1014
9999 mem: location 1556 is 23
9999 mem: storing 1061 in location 1560
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1560 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1560 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1561
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1560 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1560 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1562
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1544 is 32
9999 mem: location 1561 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1545 is 7
9999 mem: location 1562 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1551 is 10
9999 mem: storing 9 in location 1563
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1550 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1563 is 9
9999 mem: storing 0 in location 1564
 105 run: break-if at-right?:boolean, 
9999 mem: location 1564 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1550 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1550 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1543 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1515 is 3
9999 mem: storing 4 in location 1515
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1515 is 4
9999 mem: location 1514 is 4
9999 mem: storing 0 in location 1516
 104 run: break-if done?:boolean, 
9999 mem: location 1516 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1512 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1565
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1567
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1568
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1569
9999 mem: storing 0 in location 1570
 105 run: break-if color-found?:boolean, 
9999 mem: location 1570 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1569
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1571
9999 mem: storing 0 in location 1572
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1572 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1571
 105 run: break-unless x:address:screen, 
9999 mem: location 1567 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1567 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1567 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1573
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1567 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1567 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1574
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1567 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1567 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1575
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1567 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1567 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1576
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1568 is 32
9999 mem: storing 0 in location 1577
 105 run: break-unless newline?:boolean, 
9999 mem: location 1577 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1573 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1575 is 10
9999 mem: storing 20 in location 1580
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1580 is 20
9999 mem: location 1574 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1580
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1567 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1567 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1581
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1568 is 32
9999 mem: storing 0 in location 1582
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1582 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1581 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1580 is 24
9999 mem: location 1581 is 1014
9999 mem: location 1580 is 24
9999 mem: storing 1063 in location 1584
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1584 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1584 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1585
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1584 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1584 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1586
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1568 is 32
9999 mem: location 1585 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1569 is 7
9999 mem: location 1586 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1575 is 10
9999 mem: storing 9 in location 1587
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1574 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1587 is 9
9999 mem: storing 0 in location 1588
 105 run: break-if at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1574 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1574 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1567 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1515 is 4
9999 mem: storing 5 in location 1515
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1515 is 5
9999 mem: location 1514 is 4
9999 mem: storing 1 in location 1516
 104 run: break-if done?:boolean, 
9999 mem: location 1516 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1248 is 2
9999 mem: location 1241 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1135
 102 run: reply result:address:editor-data
9999 mem: location 1138 is 1147
9999 run: result 0 is 1147
9999 mem: storing 1147 in location 2
 101 run: assume-console [
    left-click 2, 0  # cursor at only character in final line
    type [«]
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: type
parse:   ingredient: {name: "«", properties: [_: "literal-string"]}
 101 run: 3:event/backspace <- merge 0:literal/text, 8:literal/backspace, 0:literal/dummy, 0:literal/dummy
9999 mem: storing 0 in location 3
9999 mem: storing 8 in location 4
9999 mem: storing 0 in location 5
9999 mem: storing 0 in location 6
 101 run: replace-in-console 171:literal/«, 3:event/backspace
9999 mem: location 3 is 0
9999 mem: location 4 is 8
9999 mem: location 5 is 0
9999 mem: location 6 is 0
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1598
9999 mem: location 2 is 1147
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1600
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1602
 102 run: console:address <- next-ingredient 
9999 mem: storing 1598 in location 1603
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1604
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1603 is 1598
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1615
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1598 in location 1617
 103 run: break-unless x:address:console, 
9999 mem: location 1617 is 1598
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 1617 is 1598
9999 mem: location 1598 is 0
9999 mem: location 1599 is 1589
9999 mem: location 1617 is 1598
9999 run: address to copy is 1598
9999 mem: storing 1598 in location 1618
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 1617 is 1598
9999 mem: location 1598 is 0
9999 mem: location 1599 is 1589
9999 mem: location 1617 is 1598
9999 run: address to copy is 1599
9999 run: its type is address
9999 mem: location 1599 is 1589
9999 mem: storing 1589 in location 1619
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 1619 is 1589
9999 mem: location 1589 is 2
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 1619 is 1589
9999 mem: storing 2 in location 1620
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 1618 is 1598
9999 mem: location 1598 is 0
9999 mem: location 1620 is 2
9999 mem: storing 0 in location 1621
 103 run: break-unless done?:boolean, 
9999 mem: location 1621 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 1619 is 1589
9999 mem: location 1589 is 2
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 1618 is 1598
9999 mem: location 1598 is 0
9999 mem: location 1619 is 1589
9999 mem: location 1618 is 1598
9999 mem: location 1598 is 0
9999 run: address to copy is 1590
9999 run: its type is event
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: storing 2 in location 1623
9999 mem: storing 65513 in location 1624
9999 mem: storing 2 in location 1625
9999 mem: storing 0 in location 1626
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 1618 is 1598
9999 mem: location 1598 is 0
9999 mem: location 1618 is 1598
9999 mem: storing 1 in location 1598
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 1623 is 2
9999 mem: location 1624 is 65513
9999 mem: location 1625 is 2
9999 mem: location 1626 is 0
9999 mem: location 1617 is 1598
9999 run: result 0 is [2, 65513, 2, 0]
9999 run: result 1 is 1598
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1605
9999 mem: storing 65513 in location 1606
9999 mem: storing 2 in location 1607
9999 mem: storing 0 in location 1608
9999 mem: storing 1598 in location 1603
9999 mem: storing 1 in location 1609
9999 mem: storing 0 in location 1610
 102 run: loop-unless found?:boolean, 
9999 mem: location 1609 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1610 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1605 is 2
9999 mem: location 1606 is 65513
9999 mem: location 1607 is 2
9999 mem: location 1608 is 0
9999 mem: storing 1606 in location 1611
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1611 is 1606
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen:address, editor:address:editor-data, t:address:touch-event/deref
9999 mem: location 1602 is 1009
9999 mem: location 1604 is 1147
9999 mem: location 1611 is 1606
9999 mem: location 1606 is 65513
9999 mem: location 1607 is 2
9999 mem: location 1608 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1628
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1630
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1631
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1632
9999 mem: storing 2 in location 1633
9999 mem: storing 0 in location 1634
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1631 is 1147
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t:touch-event, column:offset
9999 mem: location 1632 is 65513
9999 mem: location 1633 is 2
9999 mem: location 1634 is 0
9999 run: address to copy is 1634
9999 run: its type is number
9999 mem: location 1634 is 0
9999 mem: storing 0 in location 1635
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1631 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1631 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1636
 103 run: too-far-left?:boolean <- lesser-than click-column:number, left:number
9999 mem: location 1635 is 0
9999 mem: location 1636 is 0
9999 mem: storing 0 in location 1637
 103 run: jump-unless too-far-left?:boolean, 1:offset
9999 mem: location 1637 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1631 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1631 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1638
 103 run: too-far-right?:boolean <- greater-than click-column:number, right:number
9999 mem: location 1635 is 0
9999 mem: location 1638 is 4
9999 mem: storing 0 in location 1639
 103 run: jump-unless too-far-right?:boolean, 1:offset
9999 mem: location 1639 is 0
9999 run: jumping to instruction 15
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1631 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1631 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1640
 103 run: cursor-row:address:number/deref <- get t:touch-event, row:offset
9999 mem: location 1632 is 65513
9999 mem: location 1633 is 2
9999 mem: location 1634 is 0
9999 run: address to copy is 1633
9999 run: its type is number
9999 mem: location 1633 is 2
9999 mem: location 1640 is 1151
9999 mem: storing 2 in location 1151
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1631 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1631 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1641
 103 run: cursor-column:address:number/deref <- get t:touch-event, column:offset
9999 mem: location 1632 is 65513
9999 mem: location 1633 is 2
9999 mem: location 1634 is 0
9999 run: address to copy is 1634
9999 run: its type is number
9999 mem: location 1634 is 0
9999 mem: location 1641 is 1152
9999 mem: storing 0 in location 1152
 103 run: render screen:address, editor:address:editor-data
9999 mem: location 1630 is 1009
9999 mem: location 1631 is 1147
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1642
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1644
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1645
 104 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1645 is 1147
9999 run: jumping to instruction 5
 104 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1646
 104 run: screen-height:number <- screen-height screen:address
9999 mem: location 1644 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1669
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1671
 105 run: break-unless x:address:screen, 
9999 mem: location 1671 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1671 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1671 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1672
 105 run: reply height:number
9999 mem: location 1672 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1647
 104 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1648
 104 run: hide-screen screen:address
9999 mem: location 1644 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1673
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1675
 105 run: break-unless x:address:screen, 
9999 mem: location 1675 is 1009
9999 run: jump-unless fell through
 105 run: reply x:address:screen
9999 mem: location 1675 is 1009
 104 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1649
 104 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1649 is 1161
9999 mem: storing 1161 in location 1650
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1161
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1676
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1678
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1678 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1678 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1678 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1679
 105 run: reply result:address:duplex-list
9999 mem: location 1679 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1649
 104 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1651
 104 run: column:number <- copy left:number
9999 mem: location 1646 is 0
9999 mem: storing 0 in location 1652
 104 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1653
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1654
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1645 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1161
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1645 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1655
 104 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1644 is 1009
9999 mem: location 1651 is 1
9999 mem: location 1652 is 0
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1680
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1682
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1683
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1684
 105 run: break-unless x:address:screen, 
9999 mem: location 1682 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1682 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1682 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1685
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1683 is 1
9999 mem: location 1685 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1682 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1682 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1686
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1684 is 0
9999 mem: location 1686 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1682 is 1009
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1172
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 5
9999 mem: storing 0 in location 1656
 104 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 29
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1649 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 1659
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1660
 104 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 0
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 104 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 58
 104 run: print-character screen:address, c:character
9999 mem: location 1644 is 1009
9999 mem: location 1659 is 97
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1687
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1689
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1690
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1691
9999 mem: storing 0 in location 1692
 105 run: break-if color-found?:boolean, 
9999 mem: location 1692 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1691
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1693
9999 mem: storing 0 in location 1694
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1694 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1693
 105 run: break-unless x:address:screen, 
9999 mem: location 1689 is 1009
9999 run: jump-unless fell through
schedule: print-character/render/move-cursor-in-editor/editor-event-loop/run1001/editor-clears-last-line-on-backspace
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1689 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1695
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1689 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1696
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1689 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1697
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1689 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1698
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1690 is 97
9999 mem: storing 0 in location 1699
 105 run: break-unless newline?:boolean, 
9999 mem: location 1699 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1695 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1697 is 10
9999 mem: storing 10 in location 1702
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1702 is 10
9999 mem: location 1696 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1702
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1689 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1703
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1690 is 97
9999 mem: storing 0 in location 1704
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1704 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1703 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1702 is 10
9999 mem: location 1703 is 1014
9999 mem: location 1702 is 10
9999 mem: storing 1035 in location 1706
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1706 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1706 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1707
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1706 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1706 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1708
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1690 is 97
9999 mem: location 1707 is 1035
9999 mem: storing 97 in location 1035
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1691 is 7
9999 mem: location 1708 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1697 is 10
9999 mem: storing 9 in location 1709
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1696 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1709 is 9
9999 mem: storing 0 in location 1710
 105 run: break-if at-right?:boolean, 
9999 mem: location 1710 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1696 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1696 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1689 is 1009
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1172
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1711
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1713
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1713 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1713 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1713 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1714
 105 run: reply result:address:duplex-list
9999 mem: location 1714 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1649
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1161
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1715
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1717
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1717 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1717 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 1717 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 1718
 105 run: reply result:address:duplex-list
9999 mem: location 1718 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1650
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 0
9999 mem: storing 1 in location 1652
 104 run: loop 
9999 run: jumping to instruction 19
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1187
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 5
9999 mem: storing 0 in location 1656
 104 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 29
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1649 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 1659
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1660
 104 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 1
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 104 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 58
 104 run: print-character screen:address, c:character
9999 mem: location 1644 is 1009
9999 mem: location 1659 is 98
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1719
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1721
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1722
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1723
9999 mem: storing 0 in location 1724
 105 run: break-if color-found?:boolean, 
9999 mem: location 1724 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1723
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1725
9999 mem: storing 0 in location 1726
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1726 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1725
 105 run: break-unless x:address:screen, 
9999 mem: location 1721 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1721 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1721 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1727
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1721 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1721 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1728
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1721 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1721 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1729
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1721 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1721 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1730
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1722 is 98
9999 mem: storing 0 in location 1731
 105 run: break-unless newline?:boolean, 
9999 mem: location 1731 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1727 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1729 is 10
9999 mem: storing 10 in location 1734
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1734 is 10
9999 mem: location 1728 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1734
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1721 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1721 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1735
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1722 is 98
9999 mem: storing 0 in location 1736
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1736 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1735 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1734 is 11
9999 mem: location 1735 is 1014
9999 mem: location 1734 is 11
9999 mem: storing 1037 in location 1738
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1738 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1738 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1739
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1738 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1738 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1740
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1722 is 98
9999 mem: location 1739 is 1037
9999 mem: storing 98 in location 1037
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1723 is 7
9999 mem: location 1740 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1729 is 10
9999 mem: storing 9 in location 1741
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1728 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1741 is 9
9999 mem: storing 0 in location 1742
 105 run: break-if at-right?:boolean, 
9999 mem: location 1742 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1728 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1728 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1721 is 1009
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1187
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1743
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1745
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1745 is 1187
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1745 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1745 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1746
 105 run: reply result:address:duplex-list
9999 mem: location 1746 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1649
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1172
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1747
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1749
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1749 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1749 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1749 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 1750
 105 run: reply result:address:duplex-list
9999 mem: location 1750 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1650
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 1
9999 mem: storing 2 in location 1652
 104 run: loop 
9999 run: jumping to instruction 19
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1202
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 5
9999 mem: storing 0 in location 1656
 104 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 29
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1649 is 1202
9999 run: address to copy is 1202
9999 run: its type is number
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1659
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 10
9999 mem: storing 1 in location 1660
 104 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 41
 104 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1644 is 1009
9999 mem: location 1652 is 2
9999 mem: location 1648 is 4
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1751
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1753
 105 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1754
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1755
 105 run: column:number <- copy left:number
9999 mem: location 1754 is 2
9999 mem: storing 2 in location 1756
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1756 is 2
9999 mem: location 1755 is 4
9999 mem: storing 0 in location 1757
 105 run: break-if done?:boolean, 
9999 mem: location 1757 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1753 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1758
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1760
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1761
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1762
9999 mem: storing 0 in location 1763
 106 run: break-if color-found?:boolean, 
9999 mem: location 1763 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1762
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1764
9999 mem: storing 0 in location 1765
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1765 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1764
 106 run: break-unless x:address:screen, 
9999 mem: location 1760 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1760 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1760 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1766
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1760 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1760 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1767
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1760 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1760 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1768
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1760 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1760 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1769
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1761 is 32
9999 mem: storing 0 in location 1770
 106 run: break-unless newline?:boolean, 
9999 mem: location 1770 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1766 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1768 is 10
9999 mem: storing 10 in location 1773
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1773 is 10
9999 mem: location 1767 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1773
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1760 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1760 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1774
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1761 is 32
9999 mem: storing 0 in location 1775
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1775 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1774 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1773 is 12
9999 mem: location 1774 is 1014
9999 mem: location 1773 is 12
9999 mem: storing 1039 in location 1777
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1777 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1777 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1778
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1777 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1777 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1779
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1761 is 32
9999 mem: location 1778 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1762 is 7
9999 mem: location 1779 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1768 is 10
9999 mem: storing 9 in location 1780
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1767 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1780 is 9
9999 mem: storing 0 in location 1781
 106 run: break-if at-right?:boolean, 
9999 mem: location 1781 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1767 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1767 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1760 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1756 is 2
9999 mem: storing 3 in location 1756
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1756 is 3
9999 mem: location 1755 is 4
9999 mem: storing 0 in location 1757
 105 run: break-if done?:boolean, 
9999 mem: location 1757 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1753 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1782
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1784
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1785
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1786
9999 mem: storing 0 in location 1787
 106 run: break-if color-found?:boolean, 
9999 mem: location 1787 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1786
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1788
9999 mem: storing 0 in location 1789
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1789 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1788
 106 run: break-unless x:address:screen, 
9999 mem: location 1784 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1784 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1784 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1790
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1784 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1784 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1791
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1784 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1784 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1792
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1784 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1784 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1793
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1785 is 32
9999 mem: storing 0 in location 1794
 106 run: break-unless newline?:boolean, 
9999 mem: location 1794 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1790 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1792 is 10
9999 mem: storing 10 in location 1797
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1797 is 10
9999 mem: location 1791 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1797
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1784 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1784 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1798
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1785 is 32
9999 mem: storing 0 in location 1799
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1799 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1798 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1797 is 13
9999 mem: location 1798 is 1014
9999 mem: location 1797 is 13
9999 mem: storing 1041 in location 1801
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1801 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1801 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1802
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1801 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1801 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1803
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1785 is 32
9999 mem: location 1802 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1786 is 7
9999 mem: location 1803 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1792 is 10
9999 mem: storing 9 in location 1804
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1791 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1804 is 9
9999 mem: storing 0 in location 1805
 106 run: break-if at-right?:boolean, 
9999 mem: location 1805 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1791 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1791 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1784 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1756 is 3
9999 mem: storing 4 in location 1756
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1756 is 4
9999 mem: location 1755 is 4
9999 mem: storing 0 in location 1757
 105 run: break-if done?:boolean, 
9999 mem: location 1757 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1753 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1806
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1808
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1809
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1810
9999 mem: storing 0 in location 1811
 106 run: break-if color-found?:boolean, 
9999 mem: location 1811 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1810
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1812
9999 mem: storing 0 in location 1813
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1813 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1812
 106 run: break-unless x:address:screen, 
9999 mem: location 1808 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1808 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1808 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1814
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1808 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1808 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1815
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1808 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1808 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1816
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1808 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1808 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1817
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1809 is 32
9999 mem: storing 0 in location 1818
 106 run: break-unless newline?:boolean, 
9999 mem: location 1818 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1814 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1816 is 10
9999 mem: storing 10 in location 1821
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1821 is 10
9999 mem: location 1815 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1821
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1808 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1808 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1822
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1809 is 32
9999 mem: storing 0 in location 1823
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1823 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1822 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1821 is 14
9999 mem: location 1822 is 1014
9999 mem: location 1821 is 14
9999 mem: storing 1043 in location 1825
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1825 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1825 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1826
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1825 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1825 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1827
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1809 is 32
9999 mem: location 1826 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1810 is 7
9999 mem: location 1827 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1816 is 10
9999 mem: storing 9 in location 1828
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1815 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1828 is 9
9999 mem: storing 0 in location 1829
 106 run: break-if at-right?:boolean, 
9999 mem: location 1829 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1815 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1815 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1808 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1756 is 4
9999 mem: storing 5 in location 1756
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1756 is 5
9999 mem: location 1755 is 4
9999 mem: storing 1 in location 1757
 105 run: break-if done?:boolean, 
9999 mem: location 1757 is 1
9999 run: jumping to instruction 11
 104 run: row:number <- add row:number, 1:literal
9999 mem: location 1651 is 1
9999 mem: storing 2 in location 1651
 104 run: column:number <- copy left:number
9999 mem: location 1646 is 0
9999 mem: storing 0 in location 1652
 104 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1644 is 1009
9999 mem: location 1651 is 2
9999 mem: location 1652 is 0
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1830
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1832
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1833
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1834
 105 run: break-unless x:address:screen, 
9999 mem: location 1832 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1832 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1832 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1835
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1833 is 2
9999 mem: location 1835 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1832 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1832 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1836
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1834 is 0
9999 mem: location 1836 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1832 is 1009
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1202
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1837
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1839
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1839 is 1202
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1839 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1839 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1840
 105 run: reply result:address:duplex-list
9999 mem: location 1840 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1649
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1187
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1841
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 1843
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1843 is 1187
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1843 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1843 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 1844
 105 run: reply result:address:duplex-list
9999 mem: location 1844 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1650
 104 run: loop +next-character:label
9999 run: jumping to instruction 20
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1217
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 2
9999 mem: location 1647 is 5
9999 mem: storing 0 in location 1656
 104 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 2
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 0
9999 mem: location 1654 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1 in location 1658
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 1
9999 run: jump-unless fell through
 104 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1649 is 1217
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1845
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1847
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1847 is 1217
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1847 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1847 is 1217
9999 run: address to copy is 1219
9999 run: its type is address
9999 mem: location 1219 is 1202
9999 mem: storing 1202 in location 1848
 105 run: reply result:address:duplex-list
9999 mem: location 1848 is 1202
9999 run: result 0 is 1202
9999 mem: location 1655 is 1148
9999 mem: storing 1202 in location 1148
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1649 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 99
9999 mem: storing 99 in location 1659
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1660
 104 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 0
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 104 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 58
 104 run: print-character screen:address, c:character
9999 mem: location 1644 is 1009
9999 mem: location 1659 is 99
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1849
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1851
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1852
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1853
9999 mem: storing 0 in location 1854
 105 run: break-if color-found?:boolean, 
9999 mem: location 1854 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1853
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1855
9999 mem: storing 0 in location 1856
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1856 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1855
 105 run: break-unless x:address:screen, 
9999 mem: location 1851 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1851 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1851 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1857
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1851 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1851 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1858
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1851 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1851 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1859
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1851 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1851 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1860
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1852 is 99
9999 mem: storing 0 in location 1861
 105 run: break-unless newline?:boolean, 
9999 mem: location 1861 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1857 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1859 is 10
9999 mem: storing 20 in location 1864
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1864 is 20
9999 mem: location 1858 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1864
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1851 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1851 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1865
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1852 is 99
9999 mem: storing 0 in location 1866
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1866 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1865 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1864 is 20
9999 mem: location 1865 is 1014
9999 mem: location 1864 is 20
9999 mem: storing 1055 in location 1868
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1868 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1868 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1869
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1868 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1868 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1870
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1852 is 99
9999 mem: location 1869 is 1055
9999 mem: storing 99 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1853 is 7
9999 mem: location 1870 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1859 is 10
9999 mem: storing 9 in location 1871
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1858 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1871 is 9
9999 mem: storing 0 in location 1872
 105 run: break-if at-right?:boolean, 
9999 mem: location 1872 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1858 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1858 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1851 is 1009
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1217
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1873
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1875
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1875 is 1217
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1875 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1875 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1876
 105 run: reply result:address:duplex-list
9999 mem: location 1876 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1649
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1202
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1877
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 1879
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1879 is 1202
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1879 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1879 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 1880
 105 run: reply result:address:duplex-list
9999 mem: location 1880 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1650
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 0
9999 mem: storing 1 in location 1652
 104 run: loop 
9999 run: jumping to instruction 19
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1232
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 2
9999 mem: location 1647 is 5
9999 mem: storing 0 in location 1656
 104 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 2
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1657
 104 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 1
9999 mem: location 1654 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1658
 104 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 29
 104 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1649 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 100
9999 mem: storing 100 in location 1659
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1660
 104 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 1
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 104 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 58
 104 run: print-character screen:address, c:character
9999 mem: location 1644 is 1009
9999 mem: location 1659 is 100
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1881
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1883
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1884
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1885
9999 mem: storing 0 in location 1886
 105 run: break-if color-found?:boolean, 
9999 mem: location 1886 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1885
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1887
9999 mem: storing 0 in location 1888
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1888 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1887
 105 run: break-unless x:address:screen, 
9999 mem: location 1883 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1883 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1883 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1889
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1883 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1883 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1890
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1883 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1883 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1891
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1883 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1883 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1892
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1884 is 100
9999 mem: storing 0 in location 1893
 105 run: break-unless newline?:boolean, 
9999 mem: location 1893 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1889 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1891 is 10
9999 mem: storing 20 in location 1896
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1896 is 20
9999 mem: location 1890 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1896
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1883 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1883 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1897
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1884 is 100
9999 mem: storing 0 in location 1898
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1898 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1897 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1896 is 21
9999 mem: location 1897 is 1014
9999 mem: location 1896 is 21
9999 mem: storing 1057 in location 1900
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1900 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1900 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1901
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1900 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1900 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1902
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1884 is 100
9999 mem: location 1901 is 1057
9999 mem: storing 100 in location 1057
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1885 is 7
9999 mem: location 1902 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1891 is 10
9999 mem: storing 9 in location 1903
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1890 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1903 is 9
9999 mem: storing 0 in location 1904
 105 run: break-if at-right?:boolean, 
9999 mem: location 1904 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1890 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1890 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1883 is 1009
 104 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1232
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1905
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 1907
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1907 is 1232
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1907 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1907 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1908
 105 run: reply result:address:duplex-list
9999 mem: location 1908 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1649
 104 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1217
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1909
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1911
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1911 is 1217
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1911 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1911 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 1912
 105 run: reply result:address:duplex-list
9999 mem: location 1912 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1650
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 1
9999 mem: storing 2 in location 1652
 104 run: loop 
9999 run: jumping to instruction 19
 104 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 0
9999 run: jumping to instruction 64
 104 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 2
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 1657
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 2
9999 mem: location 1654 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1663
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1657 is 1
9999 mem: location 1663 is 0
9999 mem: storing 0 in location 1664
 104 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 2
9999 mem: location 1653 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 1665
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1664 is 0
9999 mem: location 1665 is 0
9999 mem: storing 0 in location 1666
 104 run: break-unless before-cursor?:boolean, 
9999 mem: location 1666 is 0
9999 run: jumping to instruction 83
 104 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1644 is 1009
9999 mem: location 1652 is 2
9999 mem: location 1648 is 4
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1913
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1915
 105 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1916
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1917
 105 run: column:number <- copy left:number
9999 mem: location 1916 is 2
9999 mem: storing 2 in location 1918
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1918 is 2
9999 mem: location 1917 is 4
9999 mem: storing 0 in location 1919
 105 run: break-if done?:boolean, 
9999 mem: location 1919 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1915 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1920
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1922
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1923
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1924
9999 mem: storing 0 in location 1925
 106 run: break-if color-found?:boolean, 
9999 mem: location 1925 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1924
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1926
9999 mem: storing 0 in location 1927
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1927 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1926
schedule: print-character/clear-line-delimited/render/move-cursor-in-editor/editor-event-loop/run1001/editor-clears-last-line-on-backspace
 106 run: break-unless x:address:screen, 
9999 mem: location 1922 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1922 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1922 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1928
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1922 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1922 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1929
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1922 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1922 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1930
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1922 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1922 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1931
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1923 is 32
9999 mem: storing 0 in location 1932
 106 run: break-unless newline?:boolean, 
9999 mem: location 1932 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1928 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1930 is 10
9999 mem: storing 20 in location 1935
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1935 is 20
9999 mem: location 1929 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1935
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1922 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1922 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1936
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1923 is 32
9999 mem: storing 0 in location 1937
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1937 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1936 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1935 is 22
9999 mem: location 1936 is 1014
9999 mem: location 1935 is 22
9999 mem: storing 1059 in location 1939
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1939 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1939 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1940
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1939 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1939 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1941
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1923 is 32
9999 mem: location 1940 is 1059
9999 mem: storing 32 in location 1059
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1924 is 7
9999 mem: location 1941 is 1060
9999 mem: storing 7 in location 1060
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1930 is 10
9999 mem: storing 9 in location 1942
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1929 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1942 is 9
9999 mem: storing 0 in location 1943
 106 run: break-if at-right?:boolean, 
9999 mem: location 1943 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1929 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1929 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1922 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1918 is 2
9999 mem: storing 3 in location 1918
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1918 is 3
9999 mem: location 1917 is 4
9999 mem: storing 0 in location 1919
 105 run: break-if done?:boolean, 
9999 mem: location 1919 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1915 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1944
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1946
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1947
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1948
9999 mem: storing 0 in location 1949
 106 run: break-if color-found?:boolean, 
9999 mem: location 1949 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1948
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1950
9999 mem: storing 0 in location 1951
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1951 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1950
 106 run: break-unless x:address:screen, 
9999 mem: location 1946 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1946 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1946 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1952
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1946 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1946 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1953
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1946 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1946 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1954
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1946 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1946 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1955
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1947 is 32
9999 mem: storing 0 in location 1956
 106 run: break-unless newline?:boolean, 
9999 mem: location 1956 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1952 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1954 is 10
9999 mem: storing 20 in location 1959
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1959 is 20
9999 mem: location 1953 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1959
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1946 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1946 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1960
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1947 is 32
9999 mem: storing 0 in location 1961
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1961 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1960 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1959 is 23
9999 mem: location 1960 is 1014
9999 mem: location 1959 is 23
9999 mem: storing 1061 in location 1963
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1963 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1963 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1964
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1963 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1963 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1965
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1947 is 32
9999 mem: location 1964 is 1061
9999 mem: storing 32 in location 1061
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1948 is 7
9999 mem: location 1965 is 1062
9999 mem: storing 7 in location 1062
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1954 is 10
9999 mem: storing 9 in location 1966
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1953 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1966 is 9
9999 mem: storing 0 in location 1967
 106 run: break-if at-right?:boolean, 
9999 mem: location 1967 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1953 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1953 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1946 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1918 is 3
9999 mem: storing 4 in location 1918
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1918 is 4
9999 mem: location 1917 is 4
9999 mem: storing 0 in location 1919
 105 run: break-if done?:boolean, 
9999 mem: location 1919 is 0
9999 run: jump-if fell through
 105 run: print-character screen:address, 32:literal/space
9999 mem: location 1915 is 1009
 106 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1968
 106 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1970
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1971
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1972
9999 mem: storing 0 in location 1973
 106 run: break-if color-found?:boolean, 
9999 mem: location 1973 is 0
9999 run: jump-if fell through
 106 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1972
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1974
9999 mem: storing 0 in location 1975
 106 run: break-if bg-color-found?:boolean, 
9999 mem: location 1975 is 0
9999 run: jump-if fell through
 106 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1974
 106 run: break-unless x:address:screen, 
9999 mem: location 1970 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1970 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1970 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1976
 106 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1970 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1970 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1977
 106 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1970 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1970 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1978
 106 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1970 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1970 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1979
 106 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1971 is 32
9999 mem: storing 0 in location 1980
 106 run: break-unless newline?:boolean, 
9999 mem: location 1980 is 0
9999 run: jumping to instruction 30
 106 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1976 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1978 is 10
9999 mem: storing 20 in location 1983
 106 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1983 is 20
9999 mem: location 1977 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1983
 106 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1970 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1970 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1984
 106 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1971 is 32
9999 mem: storing 0 in location 1985
 106 run: break-unless backspace?:boolean, 
9999 mem: location 1985 is 0
9999 run: jumping to instruction 49
 106 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1984 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1983 is 24
9999 mem: location 1984 is 1014
9999 mem: location 1983 is 24
9999 mem: storing 1063 in location 1987
 106 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1987 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1987 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1988
 106 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1987 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1987 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1989
 106 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1971 is 32
9999 mem: location 1988 is 1063
9999 mem: storing 32 in location 1063
 106 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1972 is 7
9999 mem: location 1989 is 1064
9999 mem: storing 7 in location 1064
 106 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1978 is 10
9999 mem: storing 9 in location 1990
 106 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1977 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1990 is 9
9999 mem: storing 0 in location 1991
 106 run: break-if at-right?:boolean, 
9999 mem: location 1991 is 0
9999 run: jump-if fell through
 106 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1977 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1977 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1970 is 1009
 105 run: column:number <- add column:number, 1:literal
9999 mem: location 1918 is 4
9999 mem: storing 5 in location 1918
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1918 is 5
9999 mem: location 1917 is 4
9999 mem: storing 1 in location 1919
 105 run: break-if done?:boolean, 
9999 mem: location 1919 is 1
9999 run: jumping to instruction 11
 104 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1651 is 2
9999 mem: location 1644 is 1009
 103 run: reply 1:literal/true
 102 run: jump +continue:label
9999 run: jumping to instruction 18
 102 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1602 is 1009
9999 mem: location 1604 is 1147
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1992
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1994
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 1995
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1995 is 1147
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1996
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1994 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2019
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2021
 104 run: break-unless x:address:screen, 
9999 mem: location 2021 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2021 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2021 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2022
 104 run: reply height:number
9999 mem: location 2022 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1997
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1998
 103 run: hide-screen screen:address
9999 mem: location 1994 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 2023
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2025
 104 run: break-unless x:address:screen, 
9999 mem: location 2025 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2025 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 1999
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1999 is 1161
9999 mem: storing 1161 in location 2000
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2026
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 2028
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2028 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2028 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 2028 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 2029
 104 run: reply result:address:duplex-list
9999 mem: location 2029 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1999
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 2001
 103 run: column:number <- copy left:number
9999 mem: location 1996 is 0
9999 mem: storing 0 in location 2002
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 2003
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 2004
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1995 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1995 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 2005
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1994 is 1009
9999 mem: location 2001 is 1
9999 mem: location 2002 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2030
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2032
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2033
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2034
 104 run: break-unless x:address:screen, 
9999 mem: location 2032 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2032 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2032 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2035
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2033 is 1
9999 mem: location 2035 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2032 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2032 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2036
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2034 is 0
9999 mem: location 2036 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2032 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 1172
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2001 is 1
9999 mem: location 1997 is 5
9999 mem: storing 0 in location 2006
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 1
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1999 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 1999 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 2009
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 97
9999 mem: storing 0 in location 2010
 103 run: break-unless newline?:boolean, 
9999 mem: location 2010 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2002 is 0
9999 mem: location 1998 is 4
9999 mem: storing 0 in location 2012
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2012 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1994 is 1009
9999 mem: location 2009 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2037
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2039
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2040
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2041
9999 mem: storing 0 in location 2042
 104 run: break-if color-found?:boolean, 
9999 mem: location 2042 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2041
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2043
9999 mem: storing 0 in location 2044
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2044 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2043
 104 run: break-unless x:address:screen, 
9999 mem: location 2039 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2045
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2046
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2047
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2048
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2040 is 97
9999 mem: storing 0 in location 2049
 104 run: break-unless newline?:boolean, 
9999 mem: location 2049 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2045 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2047 is 10
9999 mem: storing 10 in location 2052
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2052 is 10
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 2052
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2039 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2039 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2053
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2040 is 97
9999 mem: storing 0 in location 2054
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2054 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2053 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2052 is 10
9999 mem: location 2053 is 1014
9999 mem: location 2052 is 10
9999 mem: storing 1035 in location 2056
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2056 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 2056 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 2057
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2056 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 2056 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 2058
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2040 is 97
9999 mem: location 2057 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2041 is 7
9999 mem: location 2058 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2047 is 10
9999 mem: storing 9 in location 2059
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2059 is 9
9999 mem: storing 0 in location 2060
 104 run: break-if at-right?:boolean, 
9999 mem: location 2060 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2046 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2046 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2039 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2061
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 2063
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2063 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2063 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 2063 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 2064
 104 run: reply result:address:duplex-list
9999 mem: location 2064 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 1999
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2000 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2065
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 2067
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2067 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2067 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 2067 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 2068
 104 run: reply result:address:duplex-list
9999 mem: location 2068 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 2000
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2002 is 0
9999 mem: storing 1 in location 2002
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 1187
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2001 is 1
9999 mem: location 1997 is 5
9999 mem: storing 0 in location 2006
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 1
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1999 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 1999 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 2009
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 98
9999 mem: storing 0 in location 2010
 103 run: break-unless newline?:boolean, 
9999 mem: location 2010 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2002 is 1
9999 mem: location 1998 is 4
9999 mem: storing 0 in location 2012
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2012 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1994 is 1009
9999 mem: location 2009 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2069
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2071
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2072
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2073
9999 mem: storing 0 in location 2074
 104 run: break-if color-found?:boolean, 
9999 mem: location 2074 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2073
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2075
9999 mem: storing 0 in location 2076
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2076 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2075
 104 run: break-unless x:address:screen, 
9999 mem: location 2071 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2071 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2071 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2077
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2071 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2071 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2078
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2071 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2071 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2079
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2071 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2071 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2080
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2072 is 98
9999 mem: storing 0 in location 2081
 104 run: break-unless newline?:boolean, 
9999 mem: location 2081 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2077 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2079 is 10
9999 mem: storing 10 in location 2084
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2084 is 10
9999 mem: location 2078 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 2084
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2071 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2071 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2085
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2072 is 98
9999 mem: storing 0 in location 2086
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2086 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2085 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2084 is 11
9999 mem: location 2085 is 1014
9999 mem: location 2084 is 11
9999 mem: storing 1037 in location 2088
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2088 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 2088 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2089
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2088 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 2088 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2090
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2072 is 98
9999 mem: location 2089 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2073 is 7
9999 mem: location 2090 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2079 is 10
9999 mem: storing 9 in location 2091
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2078 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2091 is 9
9999 mem: storing 0 in location 2092
 104 run: break-if at-right?:boolean, 
9999 mem: location 2092 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2078 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2078 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2071 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2093
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 2095
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2095 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2095 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 2095 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 2096
 104 run: reply result:address:duplex-list
9999 mem: location 2096 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 1999
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2000 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2097
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 2099
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2099 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2099 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 2099 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 2100
 104 run: reply result:address:duplex-list
9999 mem: location 2100 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 2000
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2002 is 1
9999 mem: storing 2 in location 2002
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 1202
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2001 is 1
9999 mem: location 1997 is 5
9999 mem: storing 0 in location 2006
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 1
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1999 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 1999 is 1202
9999 run: address to copy is 1202
9999 run: its type is number
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 2009
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 10
9999 mem: storing 1 in location 2010
 103 run: break-unless newline?:boolean, 
9999 mem: location 2010 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 1
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 0
9999 run: jumping to instruction 41
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1994 is 1009
9999 mem: location 2002 is 2
9999 mem: location 1998 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2101
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2103
 104 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 2104
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2105
 104 run: column:number <- copy left:number
9999 mem: location 2104 is 2
9999 mem: storing 2 in location 2106
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2106 is 2
9999 mem: location 2105 is 4
9999 mem: storing 0 in location 2107
 104 run: break-if done?:boolean, 
9999 mem: location 2107 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2103 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2108
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2110
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2111
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2112
9999 mem: storing 0 in location 2113
 105 run: break-if color-found?:boolean, 
9999 mem: location 2113 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2112
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2114
9999 mem: storing 0 in location 2115
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2115 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2114
 105 run: break-unless x:address:screen, 
9999 mem: location 2110 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2110 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2110 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2116
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2110 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2110 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2117
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2110 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2110 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2118
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2110 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2110 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2119
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2111 is 32
9999 mem: storing 0 in location 2120
 105 run: break-unless newline?:boolean, 
9999 mem: location 2120 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2116 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2118 is 10
9999 mem: storing 10 in location 2123
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2123 is 10
9999 mem: location 2117 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 2123
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2110 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2110 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2124
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2111 is 32
9999 mem: storing 0 in location 2125
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2125 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2124 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2123 is 12
9999 mem: location 2124 is 1014
9999 mem: location 2123 is 12
9999 mem: storing 1039 in location 2127
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2127 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2127 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2128
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2127 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2127 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2129
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2111 is 32
9999 mem: location 2128 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2112 is 7
9999 mem: location 2129 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2118 is 10
9999 mem: storing 9 in location 2130
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2117 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2130 is 9
9999 mem: storing 0 in location 2131
 105 run: break-if at-right?:boolean, 
9999 mem: location 2131 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2117 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2117 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2110 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2106 is 2
9999 mem: storing 3 in location 2106
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2106 is 3
9999 mem: location 2105 is 4
9999 mem: storing 0 in location 2107
 104 run: break-if done?:boolean, 
9999 mem: location 2107 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2103 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2132
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2134
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2135
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2136
9999 mem: storing 0 in location 2137
 105 run: break-if color-found?:boolean, 
9999 mem: location 2137 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2136
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2138
9999 mem: storing 0 in location 2139
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2139 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2138
 105 run: break-unless x:address:screen, 
9999 mem: location 2134 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2134 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2134 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2140
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2134 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2134 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2141
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2134 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2134 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2142
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2134 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2134 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2143
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2135 is 32
9999 mem: storing 0 in location 2144
 105 run: break-unless newline?:boolean, 
9999 mem: location 2144 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2140 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2142 is 10
9999 mem: storing 10 in location 2147
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2147 is 10
9999 mem: location 2141 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 2147
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2134 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2134 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2148
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2135 is 32
9999 mem: storing 0 in location 2149
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2149 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2148 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2147 is 13
9999 mem: location 2148 is 1014
9999 mem: location 2147 is 13
9999 mem: storing 1041 in location 2151
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2151 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2151 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2152
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2151 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2151 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2153
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2135 is 32
9999 mem: location 2152 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2136 is 7
9999 mem: location 2153 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2142 is 10
9999 mem: storing 9 in location 2154
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2141 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2154 is 9
9999 mem: storing 0 in location 2155
 105 run: break-if at-right?:boolean, 
9999 mem: location 2155 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2141 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2141 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2134 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2106 is 3
9999 mem: storing 4 in location 2106
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2106 is 4
9999 mem: location 2105 is 4
9999 mem: storing 0 in location 2107
 104 run: break-if done?:boolean, 
9999 mem: location 2107 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2103 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2156
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2158
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2159
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2160
9999 mem: storing 0 in location 2161
 105 run: break-if color-found?:boolean, 
9999 mem: location 2161 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2160
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2162
9999 mem: storing 0 in location 2163
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2163 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2162
 105 run: break-unless x:address:screen, 
9999 mem: location 2158 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2158 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2164
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2158 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2165
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2158 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2166
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2158 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2167
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2159 is 32
9999 mem: storing 0 in location 2168
 105 run: break-unless newline?:boolean, 
9999 mem: location 2168 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2164 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2166 is 10
9999 mem: storing 10 in location 2171
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2171 is 10
9999 mem: location 2165 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 2171
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2158 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2172
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2159 is 32
9999 mem: storing 0 in location 2173
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2173 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2172 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2171 is 14
9999 mem: location 2172 is 1014
9999 mem: location 2171 is 14
9999 mem: storing 1043 in location 2175
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2175 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2175 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2176
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2175 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2175 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2177
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2159 is 32
9999 mem: location 2176 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2160 is 7
9999 mem: location 2177 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2166 is 10
9999 mem: storing 9 in location 2178
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2165 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2178 is 9
9999 mem: storing 0 in location 2179
 105 run: break-if at-right?:boolean, 
9999 mem: location 2179 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2165 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2165 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2158 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2106 is 4
9999 mem: storing 5 in location 2106
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2106 is 5
9999 mem: location 2105 is 4
9999 mem: storing 1 in location 2107
 104 run: break-if done?:boolean, 
9999 mem: location 2107 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 2001 is 1
9999 mem: storing 2 in location 2001
 103 run: column:number <- copy left:number
9999 mem: location 1996 is 0
9999 mem: storing 0 in location 2002
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1994 is 1009
9999 mem: location 2001 is 2
9999 mem: location 2002 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2180
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2182
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2183
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2184
schedule: move-cursor/render/editor-event-loop/run1001/editor-clears-last-line-on-backspace
 104 run: break-unless x:address:screen, 
9999 mem: location 2182 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2182 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2182 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2185
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2183 is 2
9999 mem: location 2185 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2182 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2182 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2186
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2184 is 0
9999 mem: location 2186 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2182 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2187
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 2189
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2189 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2189 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2189 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 2190
 104 run: reply result:address:duplex-list
9999 mem: location 2190 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1999
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2000 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2191
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 2193
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2193 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2193 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 2193 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1202
9999 mem: storing 1202 in location 2194
 104 run: reply result:address:duplex-list
9999 mem: location 2194 is 1202
9999 run: result 0 is 1202
9999 mem: storing 1202 in location 2000
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2001 is 2
9999 mem: location 1997 is 5
9999 mem: storing 0 in location 2006
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 2
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2002 is 0
9999 mem: location 2004 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1 in location 2008
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2008 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1999 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2195
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2197
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2197 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2197 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2197 is 1217
9999 run: address to copy is 1219
9999 run: its type is address
9999 mem: location 1219 is 1202
9999 mem: storing 1202 in location 2198
 104 run: reply result:address:duplex-list
9999 mem: location 2198 is 1202
9999 run: result 0 is 1202
9999 mem: location 2005 is 1148
9999 mem: storing 1202 in location 1148
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1999 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 1999 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 99
9999 mem: storing 99 in location 2009
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 99
9999 mem: storing 0 in location 2010
 103 run: break-unless newline?:boolean, 
9999 mem: location 2010 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2002 is 0
9999 mem: location 1998 is 4
9999 mem: storing 0 in location 2012
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2012 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1994 is 1009
9999 mem: location 2009 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2199
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2201
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2202
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2203
9999 mem: storing 0 in location 2204
 104 run: break-if color-found?:boolean, 
9999 mem: location 2204 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2203
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2205
9999 mem: storing 0 in location 2206
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2206 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2205
 104 run: break-unless x:address:screen, 
9999 mem: location 2201 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2201 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2201 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2207
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2201 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2201 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2208
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2201 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2201 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2209
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2201 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2201 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2210
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2202 is 99
9999 mem: storing 0 in location 2211
 104 run: break-unless newline?:boolean, 
9999 mem: location 2211 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2207 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2209 is 10
9999 mem: storing 20 in location 2214
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2214 is 20
9999 mem: location 2208 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 2214
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2201 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2201 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2215
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2202 is 99
9999 mem: storing 0 in location 2216
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2216 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2215 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2214 is 20
9999 mem: location 2215 is 1014
9999 mem: location 2214 is 20
9999 mem: storing 1055 in location 2218
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2218 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 2218 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2219
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2218 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 2218 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2220
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2202 is 99
9999 mem: location 2219 is 1055
9999 mem: storing 99 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2203 is 7
9999 mem: location 2220 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2209 is 10
9999 mem: storing 9 in location 2221
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2208 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2221 is 9
9999 mem: storing 0 in location 2222
 104 run: break-if at-right?:boolean, 
9999 mem: location 2222 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2208 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2208 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2201 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2223
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2225
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2225 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2225 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2225 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2226
 104 run: reply result:address:duplex-list
9999 mem: location 2226 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 1999
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2000 is 1202
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2227
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 2229
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2229 is 1202
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2229 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2229 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 2230
 104 run: reply result:address:duplex-list
9999 mem: location 2230 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 2000
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2002 is 0
9999 mem: storing 1 in location 2002
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2001 is 2
9999 mem: location 1997 is 5
9999 mem: storing 0 in location 2006
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 2
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 2007
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2007 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 2002 is 1
9999 mem: location 2004 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 2008
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 2008 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1999 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 1999 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 100
9999 mem: storing 100 in location 2009
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2009 is 100
9999 mem: storing 0 in location 2010
 103 run: break-unless newline?:boolean, 
9999 mem: location 2010 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2002 is 1
9999 mem: location 1998 is 4
9999 mem: storing 0 in location 2012
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2012 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1994 is 1009
9999 mem: location 2009 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2231
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2233
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2234
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2235
9999 mem: storing 0 in location 2236
 104 run: break-if color-found?:boolean, 
9999 mem: location 2236 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2235
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2237
9999 mem: storing 0 in location 2238
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2238 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2237
 104 run: break-unless x:address:screen, 
9999 mem: location 2233 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2233 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2233 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2239
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2233 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2233 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2240
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2233 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2233 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2241
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2233 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2233 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2242
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2234 is 100
9999 mem: storing 0 in location 2243
 104 run: break-unless newline?:boolean, 
9999 mem: location 2243 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2239 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2241 is 10
9999 mem: storing 20 in location 2246
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2246 is 20
9999 mem: location 2240 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 2246
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2233 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2233 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2247
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2234 is 100
9999 mem: storing 0 in location 2248
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2248 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2247 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2246 is 21
9999 mem: location 2247 is 1014
9999 mem: location 2246 is 21
9999 mem: storing 1057 in location 2250
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2250 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 2250 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2251
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2250 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 2250 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2252
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2234 is 100
9999 mem: location 2251 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2235 is 7
9999 mem: location 2252 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2241 is 10
9999 mem: storing 9 in location 2253
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2240 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2253 is 9
9999 mem: storing 0 in location 2254
 104 run: break-if at-right?:boolean, 
9999 mem: location 2254 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2240 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2240 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2233 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1999 is 1232
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2255
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 2257
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2257 is 1232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2257 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 2257 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 2258
 104 run: reply result:address:duplex-list
9999 mem: location 2258 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1999
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2000 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2259
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2261
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2261 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2261 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2261 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2262
 104 run: reply result:address:duplex-list
9999 mem: location 2262 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 2000
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2002 is 1
9999 mem: storing 2 in location 2002
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1999 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 2
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 2007
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2002 is 2
9999 mem: location 2004 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 2013
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2007 is 1
9999 mem: location 2013 is 0
9999 mem: storing 0 in location 2014
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2001 is 2
9999 mem: location 2003 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2015
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2014 is 0
9999 mem: location 2015 is 0
9999 mem: storing 0 in location 2016
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 2016 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1994 is 1009
9999 mem: location 2002 is 2
9999 mem: location 1998 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2263
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2265
 104 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 2266
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2267
 104 run: column:number <- copy left:number
9999 mem: location 2266 is 2
9999 mem: storing 2 in location 2268
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2268 is 2
9999 mem: location 2267 is 4
9999 mem: storing 0 in location 2269
 104 run: break-if done?:boolean, 
9999 mem: location 2269 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2265 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2270
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2272
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2273
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2274
9999 mem: storing 0 in location 2275
 105 run: break-if color-found?:boolean, 
9999 mem: location 2275 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2274
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2276
9999 mem: storing 0 in location 2277
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2277 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2276
 105 run: break-unless x:address:screen, 
9999 mem: location 2272 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2272 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2278
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2272 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2279
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2272 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2280
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2272 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2281
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2273 is 32
9999 mem: storing 0 in location 2282
 105 run: break-unless newline?:boolean, 
9999 mem: location 2282 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2278 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2280 is 10
9999 mem: storing 20 in location 2285
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2285 is 20
9999 mem: location 2279 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 2285
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2272 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2286
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2273 is 32
9999 mem: storing 0 in location 2287
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2287 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2286 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2285 is 22
9999 mem: location 2286 is 1014
9999 mem: location 2285 is 22
9999 mem: storing 1059 in location 2289
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2289 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 2289 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2290
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2289 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 2289 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2291
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2273 is 32
9999 mem: location 2290 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2274 is 7
9999 mem: location 2291 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2280 is 10
9999 mem: storing 9 in location 2292
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2279 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2292 is 9
9999 mem: storing 0 in location 2293
 105 run: break-if at-right?:boolean, 
9999 mem: location 2293 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2279 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2279 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2272 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2268 is 2
9999 mem: storing 3 in location 2268
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2268 is 3
9999 mem: location 2267 is 4
9999 mem: storing 0 in location 2269
 104 run: break-if done?:boolean, 
9999 mem: location 2269 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2265 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2294
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2296
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2297
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2298
9999 mem: storing 0 in location 2299
 105 run: break-if color-found?:boolean, 
9999 mem: location 2299 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2298
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2300
9999 mem: storing 0 in location 2301
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2301 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2300
 105 run: break-unless x:address:screen, 
9999 mem: location 2296 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2296 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2296 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2302
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2296 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2296 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2303
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2296 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2296 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2304
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2296 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2296 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2305
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2297 is 32
9999 mem: storing 0 in location 2306
 105 run: break-unless newline?:boolean, 
9999 mem: location 2306 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2302 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2304 is 10
9999 mem: storing 20 in location 2309
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2309 is 20
9999 mem: location 2303 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 2309
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2296 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2296 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2310
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2297 is 32
9999 mem: storing 0 in location 2311
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2311 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2310 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2309 is 23
9999 mem: location 2310 is 1014
9999 mem: location 2309 is 23
9999 mem: storing 1061 in location 2313
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2313 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 2313 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2314
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2313 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 2313 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2315
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2297 is 32
9999 mem: location 2314 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2298 is 7
9999 mem: location 2315 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2304 is 10
9999 mem: storing 9 in location 2316
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2303 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2316 is 9
9999 mem: storing 0 in location 2317
 105 run: break-if at-right?:boolean, 
9999 mem: location 2317 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2303 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2303 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2296 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2268 is 3
9999 mem: storing 4 in location 2268
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2268 is 4
9999 mem: location 2267 is 4
9999 mem: storing 0 in location 2269
 104 run: break-if done?:boolean, 
9999 mem: location 2269 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2265 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2318
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2320
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2321
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2322
9999 mem: storing 0 in location 2323
 105 run: break-if color-found?:boolean, 
9999 mem: location 2323 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2322
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2324
9999 mem: storing 0 in location 2325
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2325 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2324
 105 run: break-unless x:address:screen, 
9999 mem: location 2320 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2320 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2320 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2326
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2320 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2320 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2327
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2320 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2320 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2328
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2320 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2320 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2329
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2321 is 32
9999 mem: storing 0 in location 2330
 105 run: break-unless newline?:boolean, 
9999 mem: location 2330 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2326 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2328 is 10
9999 mem: storing 20 in location 2333
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2333 is 20
9999 mem: location 2327 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 2333
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2320 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2320 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2334
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2321 is 32
9999 mem: storing 0 in location 2335
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2335 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2334 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2333 is 24
9999 mem: location 2334 is 1014
9999 mem: location 2333 is 24
9999 mem: storing 1063 in location 2337
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2337 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2337 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2338
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2337 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2337 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2339
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2321 is 32
9999 mem: location 2338 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2322 is 7
9999 mem: location 2339 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2328 is 10
9999 mem: storing 9 in location 2340
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2327 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2340 is 9
9999 mem: storing 0 in location 2341
 105 run: break-if at-right?:boolean, 
9999 mem: location 2341 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2327 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2327 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2320 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2268 is 4
9999 mem: storing 5 in location 2268
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2268 is 5
9999 mem: location 2267 is 4
9999 mem: storing 1 in location 2269
 104 run: break-if done?:boolean, 
9999 mem: location 2269 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 2001 is 2
9999 mem: location 1994 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 2 in location 1612
9999 mem: storing 1009 in location 1602
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1604 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1604 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1613
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1604 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1604 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1614
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1612 is 2
9999 mem: storing 3 in location 1612
 102 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1602 is 1009
9999 mem: location 1612 is 3
9999 mem: location 1613 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2342
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2344
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 2345
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2346
 103 run: break-unless x:address:screen, 
9999 mem: location 2344 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2344 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2344 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2347
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2345 is 3
9999 mem: location 2347 is 1011
9999 mem: storing 3 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2344 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2344 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2348
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2346 is 0
9999 mem: location 2348 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2344 is 1009
 102 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1602 is 1009
9999 mem: location 1613 is 0
9999 mem: location 1614 is 4
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2349
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2351
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 2352
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2353
 103 run: column:number <- copy left:number
9999 mem: location 2352 is 0
9999 mem: storing 0 in location 2354
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 0
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2351 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2356
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2358
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2359
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2360
9999 mem: storing 0 in location 2361
 104 run: break-if color-found?:boolean, 
9999 mem: location 2361 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2360
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2362
9999 mem: storing 0 in location 2363
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2363 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2362
 104 run: break-unless x:address:screen, 
9999 mem: location 2358 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2358 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2358 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2364
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2358 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2358 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2365
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2358 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2358 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2366
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2358 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2358 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2367
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2359 is 32
9999 mem: storing 0 in location 2368
 104 run: break-unless newline?:boolean, 
9999 mem: location 2368 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2364 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2366 is 10
9999 mem: storing 30 in location 2371
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2371 is 30
9999 mem: location 2365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 2371
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2358 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2358 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2372
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2359 is 32
9999 mem: storing 0 in location 2373
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2373 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2372 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2371 is 30
9999 mem: location 2372 is 1014
9999 mem: location 2371 is 30
9999 mem: storing 1075 in location 2375
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2375 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 2375 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 2376
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2375 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 2375 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 2377
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2359 is 32
9999 mem: location 2376 is 1075
9999 mem: storing 32 in location 1075
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2360 is 7
9999 mem: location 2377 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2366 is 10
9999 mem: storing 9 in location 2378
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2378 is 9
9999 mem: storing 0 in location 2379
 104 run: break-if at-right?:boolean, 
9999 mem: location 2379 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2365 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2358 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2354 is 0
9999 mem: storing 1 in location 2354
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 1
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2351 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2380
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2382
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2383
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2384
9999 mem: storing 0 in location 2385
 104 run: break-if color-found?:boolean, 
9999 mem: location 2385 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2384
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2386
9999 mem: storing 0 in location 2387
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2387 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2386
 104 run: break-unless x:address:screen, 
9999 mem: location 2382 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2382 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2382 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2388
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2382 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2382 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2389
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2382 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2382 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2390
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2382 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2382 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2391
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2383 is 32
9999 mem: storing 0 in location 2392
 104 run: break-unless newline?:boolean, 
9999 mem: location 2392 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2388 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2390 is 10
9999 mem: storing 30 in location 2395
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2395 is 30
9999 mem: location 2389 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 2395
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2382 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2382 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2396
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2383 is 32
9999 mem: storing 0 in location 2397
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2397 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2396 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2395 is 31
9999 mem: location 2396 is 1014
9999 mem: location 2395 is 31
9999 mem: storing 1077 in location 2399
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2399 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 2399 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 2400
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2399 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 2399 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 2401
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2383 is 32
9999 mem: location 2400 is 1077
9999 mem: storing 32 in location 1077
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2384 is 7
9999 mem: location 2401 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2390 is 10
9999 mem: storing 9 in location 2402
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2389 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2402 is 9
9999 mem: storing 0 in location 2403
 104 run: break-if at-right?:boolean, 
9999 mem: location 2403 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2389 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2389 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2382 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2354 is 1
9999 mem: storing 2 in location 2354
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 2
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2351 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2404
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2406
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2407
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2408
9999 mem: storing 0 in location 2409
 104 run: break-if color-found?:boolean, 
9999 mem: location 2409 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2408
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2410
9999 mem: storing 0 in location 2411
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2411 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2410
 104 run: break-unless x:address:screen, 
9999 mem: location 2406 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2406 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2406 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2412
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2406 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2406 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2413
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2406 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2406 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2414
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2406 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2406 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2415
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2407 is 32
9999 mem: storing 0 in location 2416
 104 run: break-unless newline?:boolean, 
9999 mem: location 2416 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2412 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2414 is 10
9999 mem: storing 30 in location 2419
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2419 is 30
9999 mem: location 2413 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 2419
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2406 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2406 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2420
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2407 is 32
9999 mem: storing 0 in location 2421
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2421 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2420 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2419 is 32
9999 mem: location 2420 is 1014
9999 mem: location 2419 is 32
9999 mem: storing 1079 in location 2423
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2423 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 2423 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 2424
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2423 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 2423 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 2425
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2407 is 32
9999 mem: location 2424 is 1079
9999 mem: storing 32 in location 1079
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2408 is 7
9999 mem: location 2425 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2414 is 10
9999 mem: storing 9 in location 2426
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2413 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2426 is 9
9999 mem: storing 0 in location 2427
 104 run: break-if at-right?:boolean, 
9999 mem: location 2427 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2413 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2413 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2406 is 1009
schedule: clear-line-delimited/editor-event-loop/run1001/editor-clears-last-line-on-backspace
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2354 is 2
9999 mem: storing 3 in location 2354
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 3
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2351 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2428
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2430
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2431
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2432
9999 mem: storing 0 in location 2433
 104 run: break-if color-found?:boolean, 
9999 mem: location 2433 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2432
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2434
9999 mem: storing 0 in location 2435
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2435 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2434
 104 run: break-unless x:address:screen, 
9999 mem: location 2430 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2430 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2430 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2436
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2430 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2430 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2437
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2430 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2430 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2438
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2430 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2430 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2439
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2431 is 32
9999 mem: storing 0 in location 2440
 104 run: break-unless newline?:boolean, 
9999 mem: location 2440 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2436 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2438 is 10
9999 mem: storing 30 in location 2443
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2443 is 30
9999 mem: location 2437 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 2443
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2430 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2430 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2444
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2431 is 32
9999 mem: storing 0 in location 2445
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2445 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2444 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2443 is 33
9999 mem: location 2444 is 1014
9999 mem: location 2443 is 33
9999 mem: storing 1081 in location 2447
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2447 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 2447 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 2448
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2447 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 2447 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 2449
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2431 is 32
9999 mem: location 2448 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2432 is 7
9999 mem: location 2449 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2438 is 10
9999 mem: storing 9 in location 2450
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2437 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2450 is 9
9999 mem: storing 0 in location 2451
 104 run: break-if at-right?:boolean, 
9999 mem: location 2451 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2437 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2437 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2430 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2354 is 3
9999 mem: storing 4 in location 2354
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 4
9999 mem: location 2353 is 4
9999 mem: storing 0 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2351 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2452
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2454
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2455
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2456
9999 mem: storing 0 in location 2457
 104 run: break-if color-found?:boolean, 
9999 mem: location 2457 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2456
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2458
9999 mem: storing 0 in location 2459
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2459 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2458
 104 run: break-unless x:address:screen, 
9999 mem: location 2454 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2454 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2454 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2460
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2454 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2454 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2461
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2454 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2454 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2462
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2454 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2454 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2463
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2455 is 32
9999 mem: storing 0 in location 2464
 104 run: break-unless newline?:boolean, 
9999 mem: location 2464 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2460 is 1011
9999 mem: location 1011 is 3
9999 mem: location 2462 is 10
9999 mem: storing 30 in location 2467
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2467 is 30
9999 mem: location 2461 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 2467
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2454 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2454 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2468
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2455 is 32
9999 mem: storing 0 in location 2469
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2469 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2468 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2467 is 34
9999 mem: location 2468 is 1014
9999 mem: location 2467 is 34
9999 mem: storing 1083 in location 2471
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2471 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 2471 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 2472
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2471 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 2471 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 2473
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2455 is 32
9999 mem: location 2472 is 1083
9999 mem: storing 32 in location 1083
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2456 is 7
9999 mem: location 2473 is 1084
9999 mem: storing 7 in location 1084
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2462 is 10
9999 mem: storing 9 in location 2474
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2461 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2474 is 9
9999 mem: storing 0 in location 2475
 104 run: break-if at-right?:boolean, 
9999 mem: location 2475 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2461 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2461 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2454 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2354 is 4
9999 mem: storing 5 in location 2354
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2354 is 5
9999 mem: location 2353 is 4
9999 mem: storing 1 in location 2355
 103 run: break-if done?:boolean, 
9999 mem: location 2355 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1603 is 1598
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 2476
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1598 in location 2478
 103 run: break-unless x:address:console, 
9999 mem: location 2478 is 1598
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2478 is 1598
9999 mem: location 1598 is 1
9999 mem: location 1599 is 1589
9999 mem: location 2478 is 1598
9999 run: address to copy is 1598
9999 mem: storing 1598 in location 2479
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2478 is 1598
9999 mem: location 1598 is 1
9999 mem: location 1599 is 1589
9999 mem: location 2478 is 1598
9999 run: address to copy is 1599
9999 run: its type is address
9999 mem: location 1599 is 1589
9999 mem: storing 1589 in location 2480
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2480 is 1589
9999 mem: location 1589 is 2
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 2480 is 1589
9999 mem: storing 2 in location 2481
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2479 is 1598
9999 mem: location 1598 is 1
9999 mem: location 2481 is 2
9999 mem: storing 0 in location 2482
 103 run: break-unless done?:boolean, 
9999 mem: location 2482 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index buf:address:array:event/deref, idx:address:number/deref
9999 mem: location 2480 is 1589
9999 mem: location 1589 is 2
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 2479 is 1598
9999 mem: location 1598 is 1
9999 mem: location 2480 is 1589
9999 mem: location 2479 is 1598
9999 mem: location 1598 is 1
9999 run: address to copy is 1594
9999 run: its type is event
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: storing 0 in location 2484
9999 mem: storing 8 in location 2485
9999 mem: storing 0 in location 2486
9999 mem: storing 0 in location 2487
 103 run: idx:address:number/deref <- add idx:address:number/deref, 1:literal
9999 mem: location 2479 is 1598
9999 mem: location 1598 is 1
9999 mem: location 2479 is 1598
9999 mem: storing 2 in location 1598
 103 run: reply result:event, x:address:console/same-as-ingredient:0, 1:literal/found, 0:literal/quit
9999 mem: location 2484 is 0
9999 mem: location 2485 is 8
9999 mem: location 2486 is 0
9999 mem: location 2487 is 0
9999 mem: location 2478 is 1598
9999 run: result 0 is [0, 8, 0, 0]
9999 run: result 1 is 1598
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1605
9999 mem: storing 8 in location 1606
9999 mem: storing 0 in location 1607
9999 mem: storing 0 in location 1608
9999 mem: storing 1598 in location 1603
9999 mem: storing 1 in location 1609
9999 mem: storing 0 in location 1610
 102 run: loop-unless found?:boolean, 
9999 mem: location 1609 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1610 is 0
9999 run: jump-if fell through
 102 run: trace [app], [next-event]
   1 app: next-event
 102 run: t:address:touch-event <- maybe-convert e:event, touch:variant
9999 mem: location 1605 is 0
9999 mem: location 1606 is 8
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: storing 0 in location 1611
 102 run: break-unless t:address:touch-event, 
9999 mem: location 1611 is 0
9999 run: jumping to instruction 15
 102 run: handle-event screen:address, console:address, editor:address:editor-data, e:event
9999 mem: location 1602 is 1009
9999 mem: location 1603 is 1598
9999 mem: location 1604 is 1147
9999 mem: location 1605 is 0
9999 mem: location 1606 is 8
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 38
9999 mem: new alloc: 2489
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2491
 103 run: console:address <- next-ingredient 
9999 mem: storing 1598 in location 2492
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 2493
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 2494
9999 mem: storing 8 in location 2495
9999 mem: storing 0 in location 2496
9999 mem: storing 0 in location 2497
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 2493 is 1147
9999 run: jumping to instruction 7
 103 run: c:address:character <- maybe-convert e:event, text:variant
9999 mem: location 2494 is 0
9999 mem: location 2495 is 8
9999 mem: location 2496 is 0
9999 mem: location 2497 is 0
9999 mem: storing 2495 in location 2498
 103 run: break-unless c:address:character, 
9999 mem: location 2498 is 2495
9999 run: jump-unless fell through
 103 run: backspace?:boolean <- equal c:address:character/deref, 8:literal/backspace
9999 mem: location 2498 is 2495
9999 mem: location 2495 is 8
9999 mem: storing 1 in location 2499
 103 run: break-unless backspace?:boolean, 
9999 mem: location 2499 is 1
9999 run: jump-unless fell through
 103 run: delete-before-cursor editor:address:editor-data
9999 mem: location 2493 is 1147
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 2528
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 2530
 104 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2530 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 2530 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 2531
 104 run: d:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2530 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1202
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 2530 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 2532
 104 run: at-start?:boolean <- equal before-cursor:address:address:duplex-list/deref, d:address:duplex-list
9999 mem: location 2531 is 1148
9999 mem: location 1148 is 1202
9999 mem: location 2532 is 1161
9999 mem: storing 0 in location 2533
 104 run: jump-unless at-start?:boolean, 1:offset
9999 mem: location 2533 is 0
9999 run: jumping to instruction 7
 104 run: prev:address:duplex-list <- prev-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 2531 is 1148
9999 mem: location 1148 is 1202
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2536
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 2538
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2538 is 1202
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2538 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2538 is 1202
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1187
9999 mem: storing 1187 in location 2539
 105 run: reply result:address:duplex-list
9999 mem: location 2539 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 2534
 104 run: remove-duplex before-cursor:address:address:duplex-list/deref
9999 mem: location 2531 is 1148
9999 mem: location 1148 is 1202
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 2540
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1202 in location 2542
 105 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2542 is 1202
9999 run: jumping to instruction 4
 105 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2542 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2542 is 1202
9999 run: address to copy is 1203
9999 run: its type is address
9999 mem: location 1203 is 1217
9999 mem: storing 1217 in location 2543
 105 run: prev-node:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 2542 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2542 is 1202
9999 run: address to copy is 1204
9999 run: its type is address
9999 mem: location 1204 is 1187
9999 mem: storing 1187 in location 2544
 105 run: x:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 2542 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1217
9999 mem: location 1204 is 1187
9999 mem: location 2542 is 1202
9999 run: address to copy is 1203
9999 mem: storing 1203 in location 2545
 105 run: x:address:address:duplex-list/deref <- copy 0:literal
9999 mem: location 2545 is 1203
9999 mem: storing 0 in location 1203
 105 run: x:address:address:duplex-list <- get-address in:address:duplex-list/deref, prev:offset
9999 mem: location 2542 is 1202
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1187
9999 mem: location 2542 is 1202
9999 run: address to copy is 1204
9999 mem: storing 1204 in location 2545
 105 run: x:address:address:duplex-list/deref <- copy 0:literal
9999 mem: location 2545 is 1204
9999 mem: storing 0 in location 1204
 105 run: break-unless next-node:address:duplex-list, 
9999 mem: location 2543 is 1217
9999 run: jump-unless fell through
 105 run: x:address:address:duplex-list <- get-address next-node:address:duplex-list/deref, prev:offset
9999 mem: location 2543 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1202
9999 mem: location 2543 is 1217
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 2545
 105 run: x:address:address:duplex-list/deref <- copy prev-node:address:duplex-list
9999 mem: location 2544 is 1187
9999 mem: location 2545 is 1219
9999 mem: storing 1187 in location 1219
 105 run: break-unless prev-node:address:duplex-list, 
9999 mem: location 2544 is 1187
9999 run: jump-unless fell through
 105 run: x:address:address:duplex-list <- get-address prev-node:address:duplex-list/deref, next:offset
9999 mem: location 2544 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1202
9999 mem: location 1189 is 1172
9999 mem: location 2544 is 1187
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 2545
 105 run: x:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 2543 is 1217
9999 mem: location 2545 is 1188
9999 mem: storing 1217 in location 1188
 105 run: reply prev-node:address:duplex-list
9999 mem: location 2544 is 1187
 104 run: before-cursor:address:address:duplex-list/deref <- copy prev:address:duplex-list
9999 mem: location 2534 is 1187
9999 mem: location 2531 is 1148
9999 mem: storing 1187 in location 1148
 104 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2530 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 2530 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 2535
 104 run: cursor-column:address:number/deref <- subtract cursor-column:address:number/deref, 1:literal
9999 mem: location 2535 is 1152
9999 mem: location 1152 is 0
9999 mem: location 2535 is 1152
9999 mem: storing -1 in location 1152
 103 run: reply 
 102 run: row:number, screen:address <- render screen:address, editor:address:editor-data
9999 mem: location 1602 is 1009
9999 mem: location 1604 is 1147
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 2546
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2548
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1147 in location 2549
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 2549 is 1147
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 2550
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 2548 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2573
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2575
 104 run: break-unless x:address:screen, 
9999 mem: location 2575 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2575 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2575 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2576
 104 run: reply height:number
9999 mem: location 2576 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 2551
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 2552
 103 run: hide-screen screen:address
9999 mem: location 2548 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 2577
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2579
 104 run: break-unless x:address:screen, 
9999 mem: location 2579 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2579 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1147
9999 run: its type is address
9999 mem: location 1147 is 1161
9999 mem: storing 1161 in location 2553
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 2553 is 1161
9999 mem: storing 1161 in location 2554
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2553 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2580
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 2582
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2582 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2582 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 2582 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 2583
 104 run: reply result:address:duplex-list
9999 mem: location 2583 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 2553
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 2555
 103 run: column:number <- copy left:number
9999 mem: location 2550 is 0
9999 mem: storing 0 in location 2556
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 2557
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 2558
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 2549 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1187
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 2
9999 mem: location 1152 is -1
9999 mem: location 2549 is 1147
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 2559
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 2548 is 1009
9999 mem: location 2555 is 1
9999 mem: location 2556 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2584
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2586
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2587
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2588
 104 run: break-unless x:address:screen, 
9999 mem: location 2586 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2586 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2586 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2589
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2587 is 1
9999 mem: location 2589 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2586 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2586 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2590
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2588 is 0
9999 mem: location 2590 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2586 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2553 is 1172
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2555 is 1
9999 mem: location 2551 is 5
9999 mem: storing 0 in location 2560
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2560 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2561
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2561 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2553 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 2553 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 97
9999 mem: storing 97 in location 2563
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2563 is 97
9999 mem: storing 0 in location 2564
 103 run: break-unless newline?:boolean, 
9999 mem: location 2564 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2556 is 0
9999 mem: location 2552 is 4
9999 mem: storing 0 in location 2566
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2566 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2548 is 1009
9999 mem: location 2563 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2591
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2593
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 2594
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2595
9999 mem: storing 0 in location 2596
 104 run: break-if color-found?:boolean, 
9999 mem: location 2596 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2595
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2597
9999 mem: storing 0 in location 2598
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2598 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2597
 104 run: break-unless x:address:screen, 
9999 mem: location 2593 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2593 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2593 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2599
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2593 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2593 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2600
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2593 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2593 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2601
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2593 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2593 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2602
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2594 is 97
9999 mem: storing 0 in location 2603
 104 run: break-unless newline?:boolean, 
9999 mem: location 2603 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2599 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2601 is 10
9999 mem: storing 10 in location 2606
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2606 is 10
9999 mem: location 2600 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 2606
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2593 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2593 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2607
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2594 is 97
9999 mem: storing 0 in location 2608
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2608 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2607 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2606 is 10
9999 mem: location 2607 is 1014
9999 mem: location 2606 is 10
9999 mem: storing 1035 in location 2610
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2610 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 2610 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 2611
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2610 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 2610 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 2612
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2594 is 97
9999 mem: location 2611 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2595 is 7
9999 mem: location 2612 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2601 is 10
9999 mem: storing 9 in location 2613
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2600 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2613 is 9
9999 mem: storing 0 in location 2614
 104 run: break-if at-right?:boolean, 
9999 mem: location 2614 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2600 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2600 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2593 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2553 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2615
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 2617
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2617 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2617 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 2617 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 2618
 104 run: reply result:address:duplex-list
9999 mem: location 2618 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 2553
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2554 is 1161
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2619
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 2621
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2621 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2621 is 1161
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1172
9999 mem: location 1163 is 0
9999 mem: location 2621 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1172
9999 mem: storing 1172 in location 2622
 104 run: reply result:address:duplex-list
9999 mem: location 2622 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 2554
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2556 is 0
9999 mem: storing 1 in location 2556
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2553 is 1187
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2555 is 1
9999 mem: location 2551 is 5
9999 mem: storing 0 in location 2560
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2560 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2561
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2561 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2553 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1217
9999 mem: location 1189 is 1172
9999 mem: location 2553 is 1187
9999 run: address to copy is 1187
9999 run: its type is number
9999 mem: location 1187 is 98
9999 mem: storing 98 in location 2563
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2563 is 98
9999 mem: storing 0 in location 2564
 103 run: break-unless newline?:boolean, 
9999 mem: location 2564 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2556 is 1
9999 mem: location 2552 is 4
9999 mem: storing 0 in location 2566
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2566 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2548 is 1009
9999 mem: location 2563 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2623
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2625
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 2626
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2627
9999 mem: storing 0 in location 2628
 104 run: break-if color-found?:boolean, 
9999 mem: location 2628 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2627
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2629
9999 mem: storing 0 in location 2630
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2630 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2629
 104 run: break-unless x:address:screen, 
9999 mem: location 2625 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2625 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2625 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2631
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2625 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2625 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2632
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2625 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2625 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2633
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2625 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2625 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2634
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2626 is 98
9999 mem: storing 0 in location 2635
 104 run: break-unless newline?:boolean, 
9999 mem: location 2635 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2631 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2633 is 10
9999 mem: storing 10 in location 2638
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2638 is 10
9999 mem: location 2632 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 2638
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2625 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2625 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2639
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2626 is 98
9999 mem: storing 0 in location 2640
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2640 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2639 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2638 is 11
9999 mem: location 2639 is 1014
9999 mem: location 2638 is 11
9999 mem: storing 1037 in location 2642
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2642 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 2642 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 2643
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2642 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 2642 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 2644
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2626 is 98
9999 mem: location 2643 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2627 is 7
9999 mem: location 2644 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2633 is 10
9999 mem: storing 9 in location 2645
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2632 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2645 is 9
9999 mem: storing 0 in location 2646
 104 run: break-if at-right?:boolean, 
9999 mem: location 2646 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2632 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2632 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2625 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2553 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2647
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 2649
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2649 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2649 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1217
9999 mem: location 1189 is 1172
9999 mem: location 2649 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1217
9999 mem: storing 1217 in location 2650
 104 run: reply result:address:duplex-list
9999 mem: location 2650 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 2553
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2554 is 1172
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2651
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 2653
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2653 is 1172
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2653 is 1172
9999 mem: location 1172 is 97
9999 mem: location 1173 is 1187
9999 mem: location 1174 is 1161
9999 mem: location 2653 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1187
9999 mem: storing 1187 in location 2654
 104 run: reply result:address:duplex-list
9999 mem: location 2654 is 1187
9999 run: result 0 is 1187
9999 mem: storing 1187 in location 2554
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2556 is 1
9999 mem: storing 2 in location 2556
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2553 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2555 is 1
9999 mem: location 2551 is 5
9999 mem: storing 0 in location 2560
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2560 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2561
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2561 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2553 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1187
9999 mem: location 2553 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 99
9999 mem: storing 99 in location 2563
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2563 is 99
9999 mem: storing 0 in location 2564
 103 run: break-unless newline?:boolean, 
9999 mem: location 2564 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2556 is 2
9999 mem: location 2552 is 4
9999 mem: storing 0 in location 2566
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2566 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2548 is 1009
9999 mem: location 2563 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2655
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2657
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2658
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2659
9999 mem: storing 0 in location 2660
 104 run: break-if color-found?:boolean, 
9999 mem: location 2660 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2659
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2661
9999 mem: storing 0 in location 2662
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2662 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2661
 104 run: break-unless x:address:screen, 
9999 mem: location 2657 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2657 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2657 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2663
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2657 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2657 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2664
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2657 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2657 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2665
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2657 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2657 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2666
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2658 is 99
9999 mem: storing 0 in location 2667
 104 run: break-unless newline?:boolean, 
9999 mem: location 2667 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2663 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2665 is 10
9999 mem: storing 10 in location 2670
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2670 is 10
9999 mem: location 2664 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 2670
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2657 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2657 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2671
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2658 is 99
9999 mem: storing 0 in location 2672
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2672 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2671 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2670 is 12
9999 mem: location 2671 is 1014
9999 mem: location 2670 is 12
9999 mem: storing 1039 in location 2674
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2674 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2674 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 2675
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2674 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 2674 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 2676
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2658 is 99
9999 mem: location 2675 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2659 is 7
9999 mem: location 2676 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2665 is 10
9999 mem: storing 9 in location 2677
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2664 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2677 is 9
9999 mem: storing 0 in location 2678
 104 run: break-if at-right?:boolean, 
9999 mem: location 2678 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2664 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2664 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2657 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2553 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2679
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2681
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2681 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2681 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1187
9999 mem: location 2681 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2682
 104 run: reply result:address:duplex-list
9999 mem: location 2682 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 2553
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2554 is 1187
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2683
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1187 in location 2685
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2685 is 1187
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2685 is 1187
9999 mem: location 1187 is 98
9999 mem: location 1188 is 1217
9999 mem: location 1189 is 1172
9999 mem: location 2685 is 1187
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1217
9999 mem: storing 1217 in location 2686
 104 run: reply result:address:duplex-list
9999 mem: location 2686 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 2554
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2556 is 2
9999 mem: storing 3 in location 2556
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2553 is 1232
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 2555 is 1
9999 mem: location 2551 is 5
9999 mem: storing 0 in location 2560
 103 run: break-if off-screen?:boolean, 
9999 mem: location 2560 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2561
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 2561 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 2553 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 2553 is 1232
9999 run: address to copy is 1232
9999 run: its type is number
9999 mem: location 1232 is 100
9999 mem: storing 100 in location 2563
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2563 is 100
9999 mem: storing 0 in location 2564
 103 run: break-unless newline?:boolean, 
9999 mem: location 2564 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 2556 is 3
9999 mem: location 2552 is 4
9999 mem: storing 0 in location 2566
 103 run: break-unless at-right?:boolean, 
9999 mem: location 2566 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 2548 is 1009
9999 mem: location 2563 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2687
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2689
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2690
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2691
9999 mem: storing 0 in location 2692
 104 run: break-if color-found?:boolean, 
9999 mem: location 2692 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2691
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2693
9999 mem: storing 0 in location 2694
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2694 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2693
 104 run: break-unless x:address:screen, 
9999 mem: location 2689 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2689 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2695
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2689 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2696
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2689 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2697
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2689 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2698
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2690 is 100
9999 mem: storing 0 in location 2699
 104 run: break-unless newline?:boolean, 
9999 mem: location 2699 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2695 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2697 is 10
9999 mem: storing 10 in location 2702
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2702 is 10
9999 mem: location 2696 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 2702
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2689 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2689 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2703
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2690 is 100
9999 mem: storing 0 in location 2704
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2704 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2703 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2702 is 13
9999 mem: location 2703 is 1014
9999 mem: location 2702 is 13
9999 mem: storing 1041 in location 2706
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2706 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2706 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2707
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2706 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 2706 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2708
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2690 is 100
9999 mem: location 2707 is 1041
9999 mem: storing 100 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2691 is 7
9999 mem: location 2708 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2697 is 10
9999 mem: storing 9 in location 2709
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2696 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2709 is 9
9999 mem: storing 0 in location 2710
 104 run: break-if at-right?:boolean, 
9999 mem: location 2710 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2696 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2696 is 1012
9999 mem: storing 4 in location 1012
schedule: print-character/render/editor-event-loop/run1001/editor-clears-last-line-on-backspace
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2689 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 2553 is 1232
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2711
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1232 in location 2713
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2713 is 1232
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2713 is 1232
9999 mem: location 1232 is 100
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1217
9999 mem: location 2713 is 1232
9999 run: address to copy is 1233
9999 run: its type is address
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 2714
 104 run: reply result:address:duplex-list
9999 mem: location 2714 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 2553
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 2554 is 1217
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 2715
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 2717
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2717 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2717 is 1217
9999 mem: location 1217 is 99
9999 mem: location 1218 is 1232
9999 mem: location 1219 is 1187
9999 mem: location 2717 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1232
9999 mem: storing 1232 in location 2718
 104 run: reply result:address:duplex-list
9999 mem: location 2718 is 1232
9999 run: result 0 is 1232
9999 mem: storing 1232 in location 2554
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2556 is 3
9999 mem: storing 4 in location 2556
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 2553 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 0 in location 2561
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 2556 is 4
9999 mem: location 2558 is 1152
9999 mem: location 1152 is -1
9999 mem: storing 0 in location 2567
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 2561 is 0
9999 mem: location 2567 is 0
9999 mem: storing 0 in location 2568
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: location 1151 is 2
9999 mem: storing 1 in location 2569
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 2568 is 0
9999 mem: location 2569 is 1
9999 mem: storing 1 in location 2570
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 2570 is 1
9999 run: jump-unless fell through
 103 run: cursor-row:address:number/deref <- copy row:number
9999 mem: location 2555 is 1
9999 mem: location 2557 is 1151
9999 mem: storing 1 in location 1151
 103 run: cursor-column:address:number/deref <- copy column:number
9999 mem: location 2556 is 4
9999 mem: location 2558 is 1152
9999 mem: storing 4 in location 1152
 103 run: too-far-right?:boolean <- greater-than cursor-column:address:number/deref, right:number
9999 mem: location 2558 is 1152
9999 mem: location 1152 is 4
9999 mem: location 2552 is 4
9999 mem: storing 0 in location 2571
 103 run: break-unless too-far-right?:boolean, 
9999 mem: location 2571 is 0
9999 run: jumping to instruction 81
 103 run: before-cursor:address:address:duplex-list/deref <- copy prev:address:duplex-list
9999 mem: location 2554 is 1232
9999 mem: location 2559 is 1148
9999 mem: storing 1232 in location 1148
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 2548 is 1009
9999 mem: location 2556 is 4
9999 mem: location 2552 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2719
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2721
 104 run: left:number <- next-ingredient 
9999 mem: storing 4 in location 2722
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2723
 104 run: column:number <- copy left:number
9999 mem: location 2722 is 4
9999 mem: storing 4 in location 2724
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2724 is 4
9999 mem: location 2723 is 4
9999 mem: storing 0 in location 2725
 104 run: break-if done?:boolean, 
9999 mem: location 2725 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2721 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2726
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2728
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2729
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2730
9999 mem: storing 0 in location 2731
 105 run: break-if color-found?:boolean, 
9999 mem: location 2731 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2730
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2732
9999 mem: storing 0 in location 2733
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2733 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2732
 105 run: break-unless x:address:screen, 
9999 mem: location 2728 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2728 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2728 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2734
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2728 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2728 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2735
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2728 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2728 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2736
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2728 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2728 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2737
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2729 is 32
9999 mem: storing 0 in location 2738
 105 run: break-unless newline?:boolean, 
9999 mem: location 2738 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2734 is 1011
9999 mem: location 1011 is 1
9999 mem: location 2736 is 10
9999 mem: storing 10 in location 2741
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2741 is 10
9999 mem: location 2735 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 2741
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2728 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2728 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2742
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2729 is 32
9999 mem: storing 0 in location 2743
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2743 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2742 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2741 is 14
9999 mem: location 2742 is 1014
9999 mem: location 2741 is 14
9999 mem: storing 1043 in location 2745
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2745 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2745 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2746
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2745 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 2745 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2747
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2729 is 32
9999 mem: location 2746 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2730 is 7
9999 mem: location 2747 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2736 is 10
9999 mem: storing 9 in location 2748
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2735 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2748 is 9
9999 mem: storing 0 in location 2749
 105 run: break-if at-right?:boolean, 
9999 mem: location 2749 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2735 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2735 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2728 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2724 is 4
9999 mem: storing 5 in location 2724
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2724 is 5
9999 mem: location 2723 is 4
9999 mem: storing 1 in location 2725
 104 run: break-if done?:boolean, 
9999 mem: location 2725 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 2555 is 1
9999 mem: location 2548 is 1009
9999 run: result 0 is 1
9999 run: result 1 is 1009
9999 mem: storing 1 in location 1612
9999 mem: storing 1009 in location 1602
 102 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1604 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1232
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1604 is 1147
9999 run: address to copy is 1149
9999 run: its type is number
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1613
 102 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1604 is 1147
9999 mem: location 1147 is 1161
9999 mem: location 1148 is 1232
9999 mem: location 1149 is 0
9999 mem: location 1150 is 4
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1604 is 1147
9999 run: address to copy is 1150
9999 run: its type is number
9999 mem: location 1150 is 4
9999 mem: storing 4 in location 1614
 102 run: row:number <- add row:number, 1:literal
9999 mem: location 1612 is 1
9999 mem: storing 2 in location 1612
 102 run: move-cursor screen:address, row:number, left:number
9999 mem: location 1602 is 1009
9999 mem: location 1612 is 2
9999 mem: location 1613 is 0
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2750
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2752
 103 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2753
 103 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2754
 103 run: break-unless x:address:screen, 
9999 mem: location 2752 is 1009
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2752 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2752 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2755
 103 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2753 is 2
9999 mem: location 2755 is 1011
9999 mem: storing 2 in location 1011
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2752 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2752 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2756
 103 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2754 is 0
9999 mem: location 2756 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2752 is 1009
 102 run: clear-line-delimited screen:address, left:number, right:number
9999 mem: location 1602 is 1009
9999 mem: location 1613 is 0
9999 mem: location 1614 is 4
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 2757
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 2759
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 2760
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2761
 103 run: column:number <- copy left:number
9999 mem: location 2760 is 0
9999 mem: storing 0 in location 2762
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 0
9999 mem: location 2761 is 4
9999 mem: storing 0 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2759 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2764
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2766
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2767
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2768
9999 mem: storing 0 in location 2769
 104 run: break-if color-found?:boolean, 
9999 mem: location 2769 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2768
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2770
9999 mem: storing 0 in location 2771
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2771 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2770
 104 run: break-unless x:address:screen, 
9999 mem: location 2766 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2766 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2766 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2772
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2766 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2766 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2773
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2766 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2766 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2774
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2766 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2766 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2775
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2767 is 32
9999 mem: storing 0 in location 2776
 104 run: break-unless newline?:boolean, 
9999 mem: location 2776 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2772 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2774 is 10
9999 mem: storing 20 in location 2779
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2779 is 20
9999 mem: location 2773 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 2779
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2766 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2766 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2780
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2767 is 32
9999 mem: storing 0 in location 2781
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2781 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2780 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2779 is 20
9999 mem: location 2780 is 1014
9999 mem: location 2779 is 20
9999 mem: storing 1055 in location 2783
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2783 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 2783 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2784
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2783 is 1055
9999 mem: location 1055 is 99
9999 mem: location 1056 is 7
9999 mem: location 2783 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2785
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2767 is 32
9999 mem: location 2784 is 1055
9999 mem: storing 32 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2768 is 7
9999 mem: location 2785 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2774 is 10
9999 mem: storing 9 in location 2786
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2773 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2786 is 9
9999 mem: storing 0 in location 2787
 104 run: break-if at-right?:boolean, 
9999 mem: location 2787 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2773 is 1012
9999 mem: location 1012 is 0
9999 mem: location 2773 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2766 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2762 is 0
9999 mem: storing 1 in location 2762
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 1
9999 mem: location 2761 is 4
9999 mem: storing 0 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2759 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2788
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2790
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2791
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2792
9999 mem: storing 0 in location 2793
 104 run: break-if color-found?:boolean, 
9999 mem: location 2793 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2792
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2794
9999 mem: storing 0 in location 2795
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2795 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2794
 104 run: break-unless x:address:screen, 
9999 mem: location 2790 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2790 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2790 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2796
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2790 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2790 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2797
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2790 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2790 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2798
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2790 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2790 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2799
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2791 is 32
9999 mem: storing 0 in location 2800
 104 run: break-unless newline?:boolean, 
9999 mem: location 2800 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2796 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2798 is 10
9999 mem: storing 20 in location 2803
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2803 is 20
9999 mem: location 2797 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 2803
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2790 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2790 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2804
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2791 is 32
9999 mem: storing 0 in location 2805
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2805 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2804 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2803 is 21
9999 mem: location 2804 is 1014
9999 mem: location 2803 is 21
9999 mem: storing 1057 in location 2807
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2807 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 2807 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2808
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2807 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 2807 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2809
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2791 is 32
9999 mem: location 2808 is 1057
9999 mem: storing 32 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2792 is 7
9999 mem: location 2809 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2798 is 10
9999 mem: storing 9 in location 2810
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2797 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2810 is 9
9999 mem: storing 0 in location 2811
 104 run: break-if at-right?:boolean, 
9999 mem: location 2811 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2797 is 1012
9999 mem: location 1012 is 1
9999 mem: location 2797 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2790 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2762 is 1
9999 mem: storing 2 in location 2762
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 2
9999 mem: location 2761 is 4
9999 mem: storing 0 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2759 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2812
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2814
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2815
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2816
9999 mem: storing 0 in location 2817
 104 run: break-if color-found?:boolean, 
9999 mem: location 2817 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2816
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2818
9999 mem: storing 0 in location 2819
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2819 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2818
 104 run: break-unless x:address:screen, 
9999 mem: location 2814 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2814 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2814 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2820
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2814 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2814 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2821
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2814 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2814 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2822
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2814 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2814 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2823
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2815 is 32
9999 mem: storing 0 in location 2824
 104 run: break-unless newline?:boolean, 
9999 mem: location 2824 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2820 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2822 is 10
9999 mem: storing 20 in location 2827
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2827 is 20
9999 mem: location 2821 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 2827
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2814 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2814 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2828
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2815 is 32
9999 mem: storing 0 in location 2829
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2829 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2828 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2827 is 22
9999 mem: location 2828 is 1014
9999 mem: location 2827 is 22
9999 mem: storing 1059 in location 2831
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2831 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 2831 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2832
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2831 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 2831 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2833
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2815 is 32
9999 mem: location 2832 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2816 is 7
9999 mem: location 2833 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2822 is 10
9999 mem: storing 9 in location 2834
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2821 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2834 is 9
9999 mem: storing 0 in location 2835
 104 run: break-if at-right?:boolean, 
9999 mem: location 2835 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2821 is 1012
9999 mem: location 1012 is 2
9999 mem: location 2821 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2814 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2762 is 2
9999 mem: storing 3 in location 2762
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 3
9999 mem: location 2761 is 4
9999 mem: storing 0 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2759 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2836
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2838
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2839
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2840
9999 mem: storing 0 in location 2841
 104 run: break-if color-found?:boolean, 
9999 mem: location 2841 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2840
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2842
9999 mem: storing 0 in location 2843
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2843 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2842
 104 run: break-unless x:address:screen, 
9999 mem: location 2838 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2838 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2838 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2844
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2838 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2838 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2845
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2838 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2838 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2846
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2838 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2838 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2847
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2839 is 32
9999 mem: storing 0 in location 2848
 104 run: break-unless newline?:boolean, 
9999 mem: location 2848 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2844 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2846 is 10
9999 mem: storing 20 in location 2851
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2851 is 20
9999 mem: location 2845 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 2851
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2838 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2838 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2852
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2839 is 32
9999 mem: storing 0 in location 2853
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2853 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2852 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2851 is 23
9999 mem: location 2852 is 1014
9999 mem: location 2851 is 23
9999 mem: storing 1061 in location 2855
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2855 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 2855 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2856
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2855 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 2855 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2857
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2839 is 32
9999 mem: location 2856 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2840 is 7
9999 mem: location 2857 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2846 is 10
9999 mem: storing 9 in location 2858
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2845 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2858 is 9
9999 mem: storing 0 in location 2859
 104 run: break-if at-right?:boolean, 
9999 mem: location 2859 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2845 is 1012
9999 mem: location 1012 is 3
9999 mem: location 2845 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2838 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2762 is 3
9999 mem: storing 4 in location 2762
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 4
9999 mem: location 2761 is 4
9999 mem: storing 0 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 2759 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 2860
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 2862
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2863
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2864
9999 mem: storing 0 in location 2865
 104 run: break-if color-found?:boolean, 
9999 mem: location 2865 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2864
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2866
9999 mem: storing 0 in location 2867
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2867 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2866
 104 run: break-unless x:address:screen, 
9999 mem: location 2862 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2862 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2862 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 2868
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2862 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2862 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 2869
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2862 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2862 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 2870
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2862 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2862 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 2871
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2863 is 32
9999 mem: storing 0 in location 2872
 104 run: break-unless newline?:boolean, 
9999 mem: location 2872 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2868 is 1011
9999 mem: location 1011 is 2
9999 mem: location 2870 is 10
9999 mem: storing 20 in location 2875
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2875 is 20
9999 mem: location 2869 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 2875
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2862 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2862 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 2876
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2863 is 32
9999 mem: storing 0 in location 2877
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2877 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2876 is 1014
9999 mem: location 1014 is 50
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 32
9999 mem: location 1076 is 7
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 2875 is 24
9999 mem: location 2876 is 1014
9999 mem: location 2875 is 24
9999 mem: storing 1063 in location 2879
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2879 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2879 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2880
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2879 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 2879 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2881
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2863 is 32
9999 mem: location 2880 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2864 is 7
9999 mem: location 2881 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2870 is 10
9999 mem: storing 9 in location 2882
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2869 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2882 is 9
9999 mem: storing 0 in location 2883
 104 run: break-if at-right?:boolean, 
9999 mem: location 2883 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2869 is 1012
9999 mem: location 1012 is 4
9999 mem: location 2869 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2862 is 1009
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 2762 is 4
9999 mem: storing 5 in location 2762
 103 run: loop 
9999 run: jumping to instruction 6
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2762 is 5
9999 mem: location 2761 is 4
9999 mem: storing 1 in location 2763
 103 run: break-if done?:boolean, 
9999 mem: location 2763 is 1
9999 run: jumping to instruction 11
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console:address
9999 mem: location 1603 is 1598
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 2884
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1598 in location 2886
 103 run: break-unless x:address:console, 
9999 mem: location 2886 is 1598
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address x:address:console/deref, index:offset
9999 mem: location 2886 is 1598
9999 mem: location 1598 is 2
9999 mem: location 1599 is 1589
9999 mem: location 2886 is 1598
9999 run: address to copy is 1598
9999 mem: storing 1598 in location 2887
 103 run: buf:address:array:event <- get x:address:console/deref, data:offset
9999 mem: location 2886 is 1598
9999 mem: location 1598 is 2
9999 mem: location 1599 is 1589
9999 mem: location 2886 is 1598
9999 run: address to copy is 1599
9999 run: its type is address
9999 mem: location 1599 is 1589
9999 mem: storing 1589 in location 2888
 103 run: max:number <- length buf:address:array:event/deref
9999 mem: location 2888 is 1589
9999 mem: location 1589 is 2
9999 mem: location 1590 is 2
9999 mem: location 1591 is 65513
9999 mem: location 1592 is 2
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1595 is 8
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 2888 is 1589
9999 mem: storing 2 in location 2889
 103 run: done?:boolean <- greater-or-equal idx:address:number/deref, max:number
9999 mem: location 2887 is 1598
9999 mem: location 1598 is 2
9999 mem: location 2889 is 2
9999 mem: storing 1 in location 2890
 103 run: break-unless done?:boolean, 
9999 mem: location 2890 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: new alloc: 2897
9999 mem: storing 2897 in location 2891
 103 run: reply dummy:address:event/deref, x:address:console/same-as-ingredient:0, 1:literal/found, 1:literal/quit
9999 mem: location 2891 is 2897
9999 mem: location 2897 is 0
9999 mem: location 2898 is 0
9999 mem: location 2899 is 0
9999 mem: location 2900 is 0
9999 mem: location 2886 is 1598
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1598
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1605
9999 mem: storing 0 in location 1606
9999 mem: storing 0 in location 1607
9999 mem: storing 0 in location 1608
9999 mem: storing 1598 in location 1603
9999 mem: storing 1 in location 1609
9999 mem: storing 1 in location 1610
 102 run: loop-unless found?:boolean, 
9999 mem: location 1609 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?:boolean, 
9999 mem: location 1610 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .abcd      .
    .          .
  ]
