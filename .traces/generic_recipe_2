9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"14": "literal"}
9993 parse:   ingredient: {"15": "literal"}
9993 parse:   product: {"10": "point"}
9992 load: after rewriting: 10:point <- merge 14, 15
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"10": "point"}
9993 parse:   product: {"11": "point"}
9992 load: after rewriting: 11:point <- foo 10:point
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: a:_t
9999 parse: header ingredient: b:_t
9999 parse: header product: result:number
9991 parse: --- defining foo
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   product: {"result": <>}
9992 load: after rewriting: result <- copy 34
9999 parse: recipe foo has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: a:_t
9999 parse: header product: result:_t
9991 parse: --- defining foo_2
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": <>}
9993 parse:   product: {"result": <>}
9992 load: after rewriting: result <- copy a
9999 parse: recipe foo_2 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9992 transform: foo ...
9991 transform: --- deduce types for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction foo
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: checking variant 1: -1
9992 transform: checking variant 2: -1
9993 transform: too few ingredients
9992 transform: checking variant 3: -1
9993 transform: mismatch: ingredient 0
9992 transform: checking variant 4: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking generic variant 3
9993 transform: too few ingredients
9992 transform: final score: -1
9992 transform: checking generic variant 4
9992 transform: final score: 100
9992 transform: matches
9992 transform: found variant to specialize: 1001 foo_2
9993 transform: switching foo to foo_3
9993 transform: compute type names: foo_3
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform: type of a is "_t"
9994 transform:     checking {"result": "_t"}: "_t"
9993 transform: type of result is "_t"
9993 transform:   instruction: default-space:address:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"array" : <"location" : <>>>>}: <"address" : <"array" : <"location" : <>>>>
9993 transform: type of default-space is <"address" : <"array" : <"location" : <>>>>
9993 transform:   instruction: a:_t <- next-ingredient 
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform:   instruction: result <- copy a
9994 transform:     checking {"a": <>}: <>
9994 transform:     deducing type to "_t"
9994 transform:     checking {"result": <>}: <>
9994 transform:     deducing type to "_t"
9993 transform: adding mapping from _t to "point"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient a:_t
9993 transform: _t => "point"
9993 transform:   after: point
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient result:_t
9993 transform: _t => "point"
9993 transform:   after: point
9993 transform: replacing in instruction 'default-space:address:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:array:location
9993 transform:   after: <address : <array : <number : <>>>>
9993 transform: replacing in instruction 'a:_t <- next-ingredient '
9993 transform: replacing in ingredient a:_t
9993 transform: _t => "point"
9993 transform:   after: point
9993 transform: replacing in instruction 'result <- copy a'
9993 transform: replacing in ingredient a
9993 transform: _t => "point"
9993 transform:   after: point
9993 transform: replacing in ingredient result
9993 transform: _t => "point"
9993 transform:   after: point
9991 transform: --- fill in reply ingredients from header for recipe foo_3
9991 transform: --- transform braces for recipe foo_3
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- deduce types for recipe foo_3
9992 transform: default-space => <address : <array : <number : <>>>>
9992 transform: a => point
9992 transform: result => point
9991 transform: --- deduce types from header for foo_3
9993 transform: type of a is point
9993 transform: type of result is point
9992 transform: instruction: default-space:address:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <array : <number : <>>>> -- {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 transform: instruction: a:_t <- next-ingredient 
9993 transform:   product: a: point -- {"a": "point"}
9992 transform: instruction: result <- copy a
9993 transform:   product: result: point -- {"result": "point"}
9992 transform: instruction: reply result:_t
9991 transform: --- resolve ambiguous calls for recipe foo_3
9991 transform: --- checking reply instructions against header for foo_3
9991 transform: --- collect surrounding spaces for recipe foo_3
9991 transform: --- transform names for recipe foo_3
9993 name: assign a 1
9993 name: assign result 3
9991 transform: --- compute instruction operations for recipe foo_3
9991 transform: --- perform checks for recipe foo_3
9991 transform: --- convert 'new' to 'allocate' for recipe foo_3
9992 new: size of "location" is 1
9992 transform: new specialization: foo_3
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe main
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe interactive
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe foo_3
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 10:point <- merge 14, 15
9999 mem: storing 14 in location 10
9999 mem: storing 15 in location 11
 102 run: 11:point <- foo_3 10:point
9999 mem: location 10 is 14
9999 mem: location 11 is 15
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1000
 103 run: a:_t <- next-ingredient 
9999 mem: storing 14 in location 1002
9999 mem: storing 15 in location 1003
 103 run: result <- copy a
9999 mem: location 1002 is 14
9999 mem: location 1003 is 15
9999 mem: storing 14 in location 1004
9999 mem: storing 15 in location 1005
 103 run: reply result:_t
9999 mem: location 1004 is 14
9999 mem: location 1005 is 15
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is [14, 15]
9999 mem: storing 14 in location 11
9999 mem: storing 15 in location 12
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
