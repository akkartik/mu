9991 parse: --- defining scenario_stash-handles-list-with-cycle
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    x:address:shared:list:number <- push 4, 0\n    y:address:address:shared:list:number <- get-address *x, next:offset\n    *y <- copy x\n    stash [foo foo], x\n  ": "literal-string"}
9992 load: after rewriting: run [
    x:address:shared:list:number <- push 4, 0
    y:address:address:shared:list:number <- get-address *x, next:offset
    *y <- copy x
    stash [foo foo], x
  ]
9993 parse: instruction: trace-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    app: foo foo 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> ...\n  ": "literal-string"}
9992 load: after rewriting: trace-should-contain [
    app: foo foo 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> ...
  ]
9999 parse: recipe scenario_stash-handles-list-with-cycle has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- deduce types for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- collect surrounding spaces for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- transform names for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- resolve ambiguous calls for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- compute instruction operations for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- transform braces for recipe scenario_stash-handles-list-with-cycle
9992 transform: run ...
9992 transform: trace-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- type-check 'call' instructions inside recipe scenario_stash-handles-list-with-cycle
9991 transform: --- type-check calls inside recipe scenario_stash-handles-list-with-cycle
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_stash-handles-list-with-cycle
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_stash-handles-list-with-cycle
 102 run: run [
    x:address:shared:list:number <- push 4, 0
    y:address:address:shared:list:number <- get-address *x, next:offset
    *y <- copy x
    stash [foo foo], x
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: push
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"4": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"x": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 load: after rewriting: x:address:shared:list:number <- push 4, 0
9993 parse: instruction: get-address
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"x": <>, "lookup": <>}
9993 parse:   ingredient: {"next": "offset"}
9993 parse:   product: {"y": <"address" : <"address" : <"shared" : <"list" : <"number" : <>>>>>>}
9992 load: after rewriting: y:address:address:shared:list:number <- get-address *x, next:offset
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9993 parse:   product: {"y": <>, "lookup": <>}
9992 load: after rewriting: *y <- copy x
9993 parse: instruction: stash
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"foo foo": "literal-string"}
9993 parse:   ingredient: {"x": <>}
9992 load: after rewriting: stash [foo foo], x
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: x => <address : <shared : <list : <number : <>>>>>
9992 transform: x <= <address : <shared : <list : <number : <>>>>>
9992 transform: y => <address : <address : <shared : <list : <number : <>>>>>>
9992 transform: x <= <address : <shared : <list : <number : <>>>>>
9992 transform: y <= <address : <address : <shared : <list : <number : <>>>>>>
9992 transform: x <= <address : <shared : <list : <number : <>>>>>
9992 transform: stash_0_1 => <address : <shared : <array : <character : <>>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: assign x 1
9993 name: element next of type list is at offset 1
9993 name: assign y 2
9993 name: assign stash_0_1 3
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction x:address:shared:list:number <- push 4, 0
9992 transform: checking variant (strict) 0: recipe push {"x": "_elem"} {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} -> {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 1: recipe push_2 {"x": "_elem"} {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 2: recipe push_3 {"x": "character"} {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe push_4 {"x": <"address" : <"shared" : <"operation" : <>>>>} {"in": <"address" : <"shared" : <"list" : <"address" : <"shared" : <"operation" : <>>>>>>>} -> {"in": <"address" : <"shared" : <"list" : <"address" : <"shared" : <"operation" : <>>>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe push_5 {"x": "character"} {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9993 transform: strict match failed: product 0
9992 transform: found variant to specialize: 235 push
9993 transform: switching push to specialized push_6
9993 transform: compute type names: push_6
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform: type of x is "_elem"
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of in is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: x:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform:   instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: result:address:shared:list:_elem <- new {(list _elem): type}
9994 transform:     checking {"(list _elem)": "type"}: "type"
9993 transform: type of (list _elem) is "type"
9994 transform:     checking {"result": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of result is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: val:address:_elem <- get-address *result, value:offset
9994 transform:     checking {"result": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"value": "offset"}: "offset"
9994 transform:     checking {"val": <"address" : <"_elem" : <>>>}: <"address" : <"_elem" : <>>>
9993 transform: type of val is <"address" : <"_elem" : <>>>
9993 transform:   instruction: *val <- copy x
9994 transform:     checking {"x": <>}: <>
9994 transform:     deducing type to "_elem"
9994 transform:     checking {"val": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"_elem" : <>>>
9993 transform:   instruction: next:address:address:shared:list:_elem <- get-address *result, next:offset
9994 transform:     checking {"result": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"next": "offset"}: "offset"
9994 transform:     checking {"next": <"address" : <"address" : <"shared" : <"list" : <"_elem" : <>>>>>>}: <"address" : <"address" : <"shared" : <"list" : <"_elem" : <>>>>>>
9993 transform: type of next is <"address" : <"address" : <"shared" : <"list" : <"_elem" : <>>>>>>
9993 transform:   instruction: *next <- copy in
9994 transform:     checking {"in": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"next": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"address" : <"shared" : <"list" : <"_elem" : <>>>>>>
9993 transform:   instruction: reply result
9994 transform:     checking {"result": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: adding mapping from _elem to "literal"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => "number"
9993 transform:   after: number
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'x:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => "number"
9993 transform:   after: number
9993 transform: replacing in instruction 'in:address:shared:list:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'result:address:shared:list:_elem <- new {(list _elem): type}'
9993 transform: replacing in ingredient {(list _elem): type}
9993 transform:   after: ?0
9993 transform: replacing in ingredient result:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: _elem => "number"
9993 transform: replacing in instruction 'val:address:_elem <- get-address *result, value:offset'
9993 transform: replacing in ingredient *result
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient value:offset
9993 transform:   after: ?0
9993 transform: replacing in ingredient val:address:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <number : <>>>
9993 transform: replacing in instruction '*val <- copy x'
9993 transform: replacing in ingredient x
9993 transform: _elem => "number"
9993 transform:   after: number
9993 transform: replacing in ingredient *val
9993 transform: _elem => "number"
9993 transform:   after: <address : <number : <>>>
9993 transform: replacing in instruction 'next:address:address:shared:list:_elem <- get-address *result, next:offset'
9993 transform: replacing in ingredient *result
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient next:offset
9993 transform:   after: ?0
9993 transform: replacing in ingredient next:address:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <address : <shared : <list : <number : <>>>>>>
9993 transform: replacing in instruction '*next <- copy in'
9993 transform: replacing in ingredient in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient *next
9993 transform: _elem => "number"
9993 transform:   after: <address : <address : <shared : <list : <number : <>>>>>>
9993 transform: replacing in instruction 'reply result'
9993 transform: replacing in ingredient result
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9992 transform: transforming new specialization: push_6
9991 transform: --- checking reply instructions against header for push_6
9991 transform: --- fill in reply ingredients from header for recipe push_6
9991 transform: --- deduce types for recipe push_6
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: x => number
9992 transform: in => <address : <shared : <list : <number : <>>>>>
9992 transform: result => <address : <shared : <list : <number : <>>>>>
9992 transform: val => <address : <number : <>>>
9992 transform: next => <address : <address : <shared : <list : <number : <>>>>>>
9991 transform: --- deduce types from header for push_6
9993 transform: type of x is number
9993 transform: type of in is <address : <shared : <list : <number : <>>>>>
9993 transform: type of in is <address : <shared : <list : <number : <>>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: x:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: x: number -- {"x": "number"}
9992 transform: instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: in: <address : <shared : <list : <number : <>>>>> -- {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: result:address:shared:list:_elem <- new {(list _elem): type}
9993 transform:   product: result: <address : <shared : <list : <number : <>>>>> -- {"result": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: val:address:_elem <- get-address *result, value:offset
9993 transform:   product: val: <address : <number : <>>> -- {"val": <"address" : <"number" : <>>>}
9992 transform: instruction: *val <- copy x
9993 transform:   product: val: <address : <number : <>>> -- {"val": <"address" : <"number" : <>>>, "lookup": <>}
9992 transform: instruction: next:address:address:shared:list:_elem <- get-address *result, next:offset
9993 transform:   product: next: <address : <address : <shared : <list : <number : <>>>>>> -- {"next": <"address" : <"address" : <"shared" : <"list" : <"number" : <>>>>>>}
9992 transform: instruction: *next <- copy in
9993 transform:   product: next: <address : <address : <shared : <list : <number : <>>>>>> -- {"next": <"address" : <"address" : <"shared" : <"list" : <"number" : <>>>>>>, "lookup": <>}
9992 transform: instruction: reply result
9991 transform: --- collect surrounding spaces for recipe push_6
9991 transform: --- transform names for recipe push_6
9993 name: assign x 1
9993 name: assign in 2
9993 name: assign result 3
9993 name: element value of type list is at offset 0
9993 name: assign val 4
9993 name: element next of type list is at offset 1
9993 name: assign next 5
9991 transform: --- resolve ambiguous calls for recipe push_6
9991 transform: --- compute instruction operations for recipe push_6
9991 transform: --- transform braces for recipe push_6
9992 transform: local-scope ...
9992 transform:  ...
9992 transform:  ...
9992 transform: new ...
9992 transform: get-address ...
9992 transform: copy ...
9992 transform: get-address ...
9992 transform: copy ...
9992 transform: reply ...
9991 transform: --- perform checks for recipe push_6
9991 transform: --- type-check 'call' instructions inside recipe push_6
9991 transform: --- type-check calls inside recipe push_6
9991 transform: --- convert 'new' to 'allocate' for recipe push_6
9992 new: size of "location" is 1
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9992 new: size of <"list" : <"number" : <>>> is 2
9991 transform: --- check that recipe push_6 sets default-space
9991 transform: --- checking reply instructions against header for push_6
9992 transform: new specialization: push_6
9992 transform: instruction 
9992 transform: checking variant (strict) 0: recipe to-text-line {"x": "_elem"} -> {"y": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 1: recipe to-text-line_2 {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: found variant to specialize: 239 to-text-line_2
9993 transform: switching to-text-line to specialized to-text-line_3
9993 transform: compute type names: to-text-line_3
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of in is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}: <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: type of result is <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: buf:address:shared:buffer <- new-buffer 80
9994 transform:     checking {"80": "literal"}: "literal"
9993 transform: type of 80 is "literal"
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform: type of buf is <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: buf <- to-buffer in, buf, 6
9994 transform:     checking {"in": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"6": "literal"}: "literal"
9993 transform: type of 6 is "literal"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: result <- buffer-to-array buf
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"result": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: adding mapping from _elem to "number"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient result:address:shared:array:character
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'in:address:shared:list:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'buf:address:shared:buffer <- new-buffer 80'
9993 transform: replacing in ingredient 80
9993 transform:   after: ?0
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'buf <- to-buffer in, buf, 6'
9993 transform: replacing in ingredient in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient 6
9993 transform:   after: ?0
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'result <- buffer-to-array buf'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient result
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9992 transform: transforming new specialization: to-text-line_3
9991 transform: --- checking reply instructions against header for to-text-line_3
9991 transform: --- fill in reply ingredients from header for recipe to-text-line_3
9991 transform: --- deduce types for recipe to-text-line_3
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: in => <address : <shared : <list : <number : <>>>>>
9992 transform: buf => <address : <shared : <buffer : <>>>>
9992 transform: result => <address : <shared : <array : <character : <>>>>>
9991 transform: --- deduce types from header for to-text-line_3
9993 transform: type of in is <address : <shared : <list : <number : <>>>>>
9993 transform: type of result is <address : <shared : <array : <character : <>>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: in: <address : <shared : <list : <number : <>>>>> -- {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: buf:address:shared:buffer <- new-buffer 80
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: buf <- to-buffer in, buf, 6
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: result <- buffer-to-array buf
9993 transform:   product: result: <address : <shared : <array : <character : <>>>>> -- {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: reply result:address:shared:array:character
9991 transform: --- collect surrounding spaces for recipe to-text-line_3
9991 transform: --- transform names for recipe to-text-line_3
9993 name: assign in 1
9993 name: assign buf 2
9993 name: assign result 3
9991 transform: --- resolve ambiguous calls for recipe to-text-line_3
9992 transform: instruction buf:address:shared:buffer <- new-buffer 80
9992 transform: checking variant (strict) 0: recipe new-buffer {"capacity": "number"} -> {"result": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction buf <- to-buffer in, buf, 6
9992 transform: checking variant (strict) 0: recipe to-buffer {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} {"buf": <"address" : <"shared" : <"buffer" : <>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: found variant to specialize: 240 to-buffer
9993 transform: switching to-buffer to specialized to-buffer_2
9993 transform: compute type names: to-buffer_2
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of in is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform: type of buf is <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: {
9993 transform:   instruction: break-if in
9994 transform:     checking {"in": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: buf <- append buf, 48/0
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"48": "literal", "0": <>}: "literal"
9993 transform: type of 48 is "literal"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: reply 
9993 transform:   instruction: }
9993 transform:   instruction: val:_elem <- get *in, value:offset
9994 transform:     checking {"in": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"value": "offset"}: "offset"
9994 transform:     checking {"val": "_elem"}: "_elem"
9993 transform: type of val is "_elem"
9993 transform:   instruction: buf <- append buf, val
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"val": <>}: <>
9994 transform:     deducing type to "_elem"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: next:address:shared:list:_elem <- rest in
9994 transform:     checking {"in": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"next": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of next is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: nextn:number <- copy next
9994 transform:     checking {"next": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"nextn": "number"}: "number"
9993 transform: type of nextn is "number"
9993 transform:   instruction: jump-if next, 1:offset
9994 transform:     checking {"next": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"1": "offset"}: "offset"
9993 transform:   instruction: reply 
9993 transform:   instruction: space:character <- copy 32/space
9994 transform:     checking {"32": "literal", "space": <>}: "literal"
9993 transform: type of 32 is "literal"
9994 transform:     checking {"space": "character"}: "character"
9993 transform: type of space is "character"
9993 transform:   instruction: buf <- append buf, space:character
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"space": "character"}: "character"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: s:address:shared:array:character <- new [-> ]
9994 transform:     checking {"-> ": "literal-string"}: "literal-string"
9993 transform: type of ->  is "literal-string"
9994 transform:     checking {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>}: <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: type of s is <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   instruction: n:number <- length *s
9994 transform:     checking {"s": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"n": "number"}: "number"
9993 transform: type of n is "number"
9993 transform:   instruction: buf <- append buf, s
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"s": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9994 transform:     checking {"remaining": "number"}: "number"
9993 transform: type of remaining is "number"
9994 transform:     checking {"optional-ingredient-found?": "boolean"}: "boolean"
9993 transform: type of optional-ingredient-found? is "boolean"
9993 transform:   instruction: {
9993 transform:   instruction: break-if optional-ingredient-found?
9994 transform:     checking {"optional-ingredient-found?": <>}: <>
9994 transform:     deducing type to "boolean"
9993 transform:   instruction: buf <- to-buffer next, buf
9994 transform:     checking {"next": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: reply 
9993 transform:   instruction: }
9993 transform:   instruction: {
9993 transform:   instruction: break-unless remaining
9994 transform:     checking {"remaining": <>}: <>
9994 transform:     deducing type to "number"
9993 transform:   instruction: remaining <- subtract remaining, 1
9994 transform:     checking {"remaining": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"1": "literal"}: "literal"
9993 transform: type of 1 is "literal"
9994 transform:     checking {"remaining": <>}: <>
9994 transform:     deducing type to "number"
9993 transform:   instruction: buf <- to-buffer next, buf, remaining
9994 transform:     checking {"next": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"remaining": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: reply 
9993 transform:   instruction: }
9993 transform:   instruction: s:address:shared:array:character <- new [...]
9994 transform:     checking {"...": "literal-string"}: "literal-string"
9993 transform: type of ... is "literal-string"
9994 transform:     checking {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>}: <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   instruction: append buf, s
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"s": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: adding mapping from _elem to "number"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'in:address:shared:list:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'buf:address:shared:buffer <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction '{'
9993 transform: replacing in instruction 'break-if in'
9993 transform: replacing in ingredient in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'buf <- append buf, 48/0'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient 48/0
9993 transform:   after: ?0
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'reply '
9993 transform: replacing in instruction '}'
9993 transform: replacing in instruction 'val:_elem <- get *in, value:offset'
9993 transform: replacing in ingredient *in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient value:offset
9993 transform:   after: ?0
9993 transform: replacing in ingredient val:_elem
9993 transform: _elem => "number"
9993 transform:   after: number
9993 transform: replacing in instruction 'buf <- append buf, val'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient val
9993 transform: _elem => "number"
9993 transform:   after: number
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'next:address:shared:list:_elem <- rest in'
9993 transform: replacing in ingredient in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient next:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'nextn:number <- copy next'
9993 transform: replacing in ingredient next
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient nextn:number
9993 transform:   after: number
9993 transform: replacing in instruction 'jump-if next, 1:offset'
9993 transform: replacing in ingredient next
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient 1:offset
9993 transform:   after: ?0
9993 transform: replacing in instruction 'reply '
9993 transform: replacing in instruction 'space:character <- copy 32/space'
9993 transform: replacing in ingredient 32/space
9993 transform:   after: ?0
9993 transform: replacing in ingredient space:character
9993 transform:   after: character
9993 transform: replacing in instruction 'buf <- append buf, space:character'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient space:character
9993 transform:   after: character
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 's:address:shared:array:character <- new [-> ]'
9993 transform: replacing in ingredient [-> ]
9993 transform:   after: ?0
9993 transform: replacing in ingredient s:address:shared:array:character
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'n:number <- length *s'
9993 transform: replacing in ingredient *s
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient n:number
9993 transform:   after: number
9993 transform: replacing in instruction 'buf <- append buf, s'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient s
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'remaining:number, optional-ingredient-found?:boolean <- next-ingredient '
9993 transform: replacing in ingredient remaining:number
9993 transform:   after: number
9993 transform: replacing in ingredient optional-ingredient-found?:boolean
9993 transform:   after: boolean
9993 transform: replacing in instruction '{'
9993 transform: replacing in instruction 'break-if optional-ingredient-found?'
9993 transform: replacing in ingredient optional-ingredient-found?
9993 transform:   after: boolean
9993 transform: replacing in instruction 'buf <- to-buffer next, buf'
9993 transform: replacing in ingredient next
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'reply '
9993 transform: replacing in instruction '}'
9993 transform: replacing in instruction '{'
9993 transform: replacing in instruction 'break-unless remaining'
9993 transform: replacing in ingredient remaining
9993 transform:   after: number
9993 transform: replacing in instruction 'remaining <- subtract remaining, 1'
9993 transform: replacing in ingredient remaining
9993 transform:   after: number
9993 transform: replacing in ingredient 1
9993 transform:   after: ?0
9993 transform: replacing in ingredient remaining
9993 transform:   after: number
9993 transform: replacing in instruction 'buf <- to-buffer next, buf, remaining'
9993 transform: replacing in ingredient next
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient remaining
9993 transform:   after: number
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'reply '
9993 transform: replacing in instruction '}'
9993 transform: replacing in instruction 's:address:shared:array:character <- new [...]'
9993 transform: replacing in ingredient [...]
9993 transform:   after: ?0
9993 transform: replacing in ingredient s:address:shared:array:character
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'append buf, s'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient s
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9992 transform: transforming new specialization: to-buffer_2
9991 transform: --- checking reply instructions against header for to-buffer_2
9991 transform: --- fill in reply ingredients from header for recipe to-buffer_2
9991 transform: --- deduce types for recipe to-buffer_2
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: in => <address : <shared : <list : <number : <>>>>>
9992 transform: buf => <address : <shared : <buffer : <>>>>
9992 transform: val => number
9992 transform: next => <address : <shared : <list : <number : <>>>>>
9992 transform: nextn => number
9992 transform: space => character
9992 transform: s => <address : <shared : <array : <character : <>>>>>
9992 transform: n => number
9992 transform: remaining => number
9992 transform: optional-ingredient-found? => boolean
9991 transform: --- deduce types from header for to-buffer_2
9993 transform: type of in is <address : <shared : <list : <number : <>>>>>
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: in: <address : <shared : <list : <number : <>>>>> -- {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: {
9992 transform: instruction: break-if in
9992 transform: instruction: buf <- append buf, 48/0
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: reply buf:address:shared:buffer
9992 transform: instruction: }
9992 transform: instruction: val:_elem <- get *in, value:offset
9993 transform:   product: val: number -- {"val": "number"}
9992 transform: instruction: buf <- append buf, val
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: next:address:shared:list:_elem <- rest in
9993 transform:   product: next: <address : <shared : <list : <number : <>>>>> -- {"next": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: nextn:number <- copy next
9993 transform:   product: nextn: number -- {"nextn": "number"}
9992 transform: instruction: jump-if next, 1:offset
9992 transform: instruction: reply buf:address:shared:buffer
9992 transform: instruction: space:character <- copy 32/space
9993 transform:   product: space: character -- {"space": "character"}
9992 transform: instruction: buf <- append buf, space:character
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: s:address:shared:array:character <- new [-> ]
9993 transform:   product: s: <address : <shared : <array : <character : <>>>>> -- {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: n:number <- length *s
9993 transform:   product: n: number -- {"n": "number"}
9992 transform: instruction: buf <- append buf, s
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9993 transform:   product: remaining: number -- {"remaining": "number"}
9993 transform:   product: optional-ingredient-found?: boolean -- {"optional-ingredient-found?": "boolean"}
9992 transform: instruction: {
9992 transform: instruction: break-if optional-ingredient-found?
9992 transform: instruction: buf <- to-buffer next, buf
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: reply buf:address:shared:buffer
9992 transform: instruction: }
9992 transform: instruction: {
9992 transform: instruction: break-unless remaining
9992 transform: instruction: remaining <- subtract remaining, 1
9993 transform:   product: remaining: number -- {"remaining": "number"}
9992 transform: instruction: buf <- to-buffer next, buf, remaining
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: reply buf:address:shared:buffer
9992 transform: instruction: }
9992 transform: instruction: s:address:shared:array:character <- new [...]
9993 transform:   product: s: <address : <shared : <array : <character : <>>>>> -- {"s": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: append buf, s
9992 transform: instruction: reply buf:address:shared:buffer
9991 transform: --- collect surrounding spaces for recipe to-buffer_2
9991 transform: --- transform names for recipe to-buffer_2
9993 name: assign in 1
9993 name: assign buf 2
9993 name: element value of type list is at offset 0
9993 name: assign val 3
9993 name: assign next 4
9993 name: assign nextn 5
9993 name: assign space 6
9993 name: assign s 7
9993 name: assign n 8
9993 name: assign remaining 9
9993 name: assign optional-ingredient-found? 10
9991 transform: --- resolve ambiguous calls for recipe to-buffer_2
9992 transform: instruction buf <- append buf, 48/0
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9993 transform: concrete-type match failed: ingredient 0
9992 transform: found variant to specialize: 207 append
9993 transform: switching append to specialized append_6
9993 transform: compute type names: append_6
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform: type of buf is <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform: type of x is "_elem"
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: x:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform:   instruction: text:address:shared:array:character <- to-text x
9994 transform:     checking {"x": <>}: <>
9994 transform:     deducing type to "_elem"
9994 transform:     checking {"text": <"address" : <"shared" : <"array" : <"character" : <>>>>>}: <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: type of text is <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   instruction: len:number <- length *text
9994 transform:     checking {"text": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"len": "number"}: "number"
9993 transform: type of len is "number"
9993 transform:   instruction: i:number <- copy 0
9994 transform:     checking {"0": "literal"}: "literal"
9993 transform: type of 0 is "literal"
9994 transform:     checking {"i": "number"}: "number"
9993 transform: type of i is "number"
9993 transform:   instruction: {
9993 transform:   instruction: done?:boolean <- greater-or-equal i, len
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"len": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"done?": "boolean"}: "boolean"
9993 transform: type of done? is "boolean"
9993 transform:   instruction: break-if done?
9994 transform:     checking {"done?": <>}: <>
9994 transform:     deducing type to "boolean"
9993 transform:   instruction: c:character <- index *text, i
9994 transform:     checking {"text": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"c": "character"}: "character"
9993 transform: type of c is "character"
9993 transform:   instruction: buf <- append buf, c
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"c": <>}: <>
9994 transform:     deducing type to "character"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: i <- add i, 1
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"1": "literal"}: "literal"
9993 transform: type of 1 is "literal"
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9993 transform:   instruction: loop 
9993 transform:   instruction: }
9993 transform: adding mapping from _elem to "literal"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => "literal"
9993 transform:   after: number
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'buf:address:shared:buffer <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'x:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => "literal"
9993 transform:   after: number
9993 transform: replacing in instruction 'text:address:shared:array:character <- to-text x'
9993 transform: replacing in ingredient x
9993 transform: _elem => "literal"
9993 transform:   after: number
9993 transform: replacing in ingredient text:address:shared:array:character
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'len:number <- length *text'
9993 transform: replacing in ingredient *text
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient len:number
9993 transform:   after: number
9993 transform: replacing in instruction 'i:number <- copy 0'
9993 transform: replacing in ingredient 0
9993 transform:   after: ?0
9993 transform: replacing in ingredient i:number
9993 transform:   after: number
9993 transform: replacing in instruction '{'
9993 transform: replacing in instruction 'done?:boolean <- greater-or-equal i, len'
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient len
9993 transform:   after: number
9993 transform: replacing in ingredient done?:boolean
9993 transform:   after: boolean
9993 transform: replacing in instruction 'break-if done?'
9993 transform: replacing in ingredient done?
9993 transform:   after: boolean
9993 transform: replacing in instruction 'c:character <- index *text, i'
9993 transform: replacing in ingredient *text
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient c:character
9993 transform:   after: character
9993 transform: replacing in instruction 'buf <- append buf, c'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient c
9993 transform:   after: character
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'i <- add i, 1'
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient 1
9993 transform:   after: ?0
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in instruction 'loop '
9993 transform: replacing in instruction '}'
9992 transform: transforming new specialization: append_6
9991 transform: --- checking reply instructions against header for append_6
9991 transform: --- fill in reply ingredients from header for recipe append_6
9991 transform: --- deduce types for recipe append_6
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: buf => <address : <shared : <buffer : <>>>>
9992 transform: x => number
9992 transform: text => <address : <shared : <array : <character : <>>>>>
9992 transform: len => number
9992 transform: i => number
9992 transform: done? => boolean
9992 transform: c => character
9991 transform: --- deduce types from header for append_6
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9993 transform: type of x is number
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: x:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: x: number -- {"x": "number"}
9992 transform: instruction: text:address:shared:array:character <- to-text x
9993 transform:   product: text: <address : <shared : <array : <character : <>>>>> -- {"text": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: len:number <- length *text
9993 transform:   product: len: number -- {"len": "number"}
9992 transform: instruction: i:number <- copy 0
9993 transform:   product: i: number -- {"i": "number"}
9992 transform: instruction: {
9992 transform: instruction: done?:boolean <- greater-or-equal i, len
9993 transform:   product: done?: boolean -- {"done?": "boolean"}
9992 transform: instruction: break-if done?
9992 transform: instruction: c:character <- index *text, i
9993 transform:   product: c: character -- {"c": "character"}
9992 transform: instruction: buf <- append buf, c
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: i <- add i, 1
9993 transform:   product: i: number -- {"i": "number"}
9992 transform: instruction: loop 
9992 transform: instruction: }
9992 transform: instruction: reply buf:address:shared:buffer
9991 transform: --- collect surrounding spaces for recipe append_6
9991 transform: --- transform names for recipe append_6
9993 name: assign buf 1
9993 name: assign x 2
9993 name: assign text 3
9993 name: assign len 4
9993 name: assign i 5
9993 name: assign done? 6
9993 name: assign c 7
9991 transform: --- resolve ambiguous calls for recipe append_6
9992 transform: instruction text:address:shared:array:character <- to-text x
9992 transform: checking variant (strict) 0: recipe to-text {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"y": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 1: recipe to-text_2 {"n": "number"} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: checking variant (strict) 2: recipe to-text_3 {"x": "boolean"} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe to-text_4 {"x": <"address" : <"_elem" : <>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe to-text_5 {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: instruction buf <- append buf, c
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9991 transform: --- compute instruction operations for recipe append_6
9991 transform: --- transform braces for recipe append_6
9993 transform: append_6: push (open, 6)
9993 transform: push (close, 13)
9992 transform: local-scope ...
9992 transform:  ...
9992 transform:  ...
9992 transform: to-text ...
9992 transform: length ...
9992 transform: copy ...
9992 transform: greater-or-equal ...
9992 transform: jump-if done?, 4:offset
9992 transform: index ...
9992 transform: append ...
9992 transform: add ...
9992 transform: jump -6:offset
9992 transform:  ...
9991 transform: --- perform checks for recipe append_6
9991 transform: --- type-check 'call' instructions inside recipe append_6
9991 transform: --- type-check calls inside recipe append_6
9991 transform: --- convert 'new' to 'allocate' for recipe append_6
9992 new: size of "location" is 1
9991 transform: --- check that recipe append_6 sets default-space
9991 transform: --- checking reply instructions against header for append_6
9992 transform: new specialization: append_6
9992 transform: instruction buf <- append buf, val
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction next:address:shared:list:_elem <- rest in
9992 transform: checking variant (strict) 0: recipe rest {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} -> {"result": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>, "contained-in": "in"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 1: recipe rest_2 {"in": <"address" : <"shared" : <"list" : <"address" : <"shared" : <"operation" : <>>>>>>>} -> {"result": <"address" : <"shared" : <"list" : <"address" : <"shared" : <"operation" : <>>>>>>>, "contained-in": "in"}
9993 transform: strict match failed: ingredient 0
9992 transform: found variant to specialize: 237 rest
9993 transform: switching rest to specialized rest_3
9993 transform: compute type names: rest_3
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of in is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"result": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>, "contained-in": "in"}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: type of result is <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>}: <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform:   instruction: result <- get *in, next:offset
9994 transform:     checking {"in": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9994 transform:     checking {"next": "offset"}: "offset"
9994 transform:     checking {"result": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"list" : <"_elem" : <>>>>>
9993 transform: adding mapping from _elem to "number"
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient result:address:shared:list:_elem/contained-in:in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'in:address:shared:list:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient in:address:shared:list:_elem
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in instruction 'result <- get *in, next:offset'
9993 transform: replacing in ingredient *in
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9993 transform: replacing in ingredient next:offset
9993 transform:   after: ?0
9993 transform: replacing in ingredient result
9993 transform: _elem => "number"
9993 transform:   after: <address : <shared : <list : <number : <>>>>>
9992 transform: transforming new specialization: rest_3
9991 transform: --- checking reply instructions against header for rest_3
9991 transform: --- fill in reply ingredients from header for recipe rest_3
9991 transform: --- deduce types for recipe rest_3
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: in => <address : <shared : <list : <number : <>>>>>
9992 transform: result => <address : <shared : <list : <number : <>>>>>
9991 transform: --- deduce types from header for rest_3
9993 transform: type of in is <address : <shared : <list : <number : <>>>>>
9993 transform: type of result is <address : <shared : <list : <number : <>>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: in: <address : <shared : <list : <number : <>>>>> -- {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: result <- get *in, next:offset
9993 transform:   product: result: <address : <shared : <list : <number : <>>>>> -- {"result": <"address" : <"shared" : <"list" : <"number" : <>>>>>}
9992 transform: instruction: reply result:address:shared:list:_elem/contained-in:in
9991 transform: --- collect surrounding spaces for recipe rest_3
9991 transform: --- transform names for recipe rest_3
9993 name: assign in 1
9993 name: element next of type list is at offset 1
9993 name: assign result 2
9991 transform: --- resolve ambiguous calls for recipe rest_3
9991 transform: --- compute instruction operations for recipe rest_3
9991 transform: --- transform braces for recipe rest_3
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe rest_3
9991 transform: --- type-check 'call' instructions inside recipe rest_3
9991 transform: --- type-check calls inside recipe rest_3
9991 transform: --- convert 'new' to 'allocate' for recipe rest_3
9992 new: size of "location" is 1
9991 transform: --- check that recipe rest_3 sets default-space
9991 transform: --- checking reply instructions against header for rest_3
9992 transform: new specialization: rest_3
9992 transform: instruction buf <- append buf, space:character
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: instruction buf <- append buf, s
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9993 transform: concrete-type match failed: ingredient 0
9992 transform: found variant to specialize: 207 append
9993 transform: switching append to specialized append_7
9993 transform: compute type names: append_7
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform: type of buf is <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform: type of x is "_elem"
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9994 transform:     checking {"location": "type"}: "type"
9993 transform: type of location is "type"
9994 transform:     checking {"number-of-locals": "literal"}: "literal"
9993 transform: type of number-of-locals is "literal"
9994 transform:     checking {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}: <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform: type of default-space is <"address" : <"shared" : <"array" : <"location" : <>>>>>
9993 transform:   instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9994 transform:     checking {"buf": <"address" : <"shared" : <"buffer" : <>>>>}: <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: x:_elem <- next-ingredient-without-typechecking 
9994 transform:     checking {"x": "_elem"}: "_elem"
9993 transform:   instruction: text:address:shared:array:character <- to-text x
9994 transform:     checking {"x": <>}: <>
9994 transform:     deducing type to "_elem"
9994 transform:     checking {"text": <"address" : <"shared" : <"array" : <"character" : <>>>>>}: <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: type of text is <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   instruction: len:number <- length *text
9994 transform:     checking {"text": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"len": "number"}: "number"
9993 transform: type of len is "number"
9993 transform:   instruction: i:number <- copy 0
9994 transform:     checking {"0": "literal"}: "literal"
9993 transform: type of 0 is "literal"
9994 transform:     checking {"i": "number"}: "number"
9993 transform: type of i is "number"
9993 transform:   instruction: {
9993 transform:   instruction: done?:boolean <- greater-or-equal i, len
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"len": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"done?": "boolean"}: "boolean"
9993 transform: type of done? is "boolean"
9993 transform:   instruction: break-if done?
9994 transform:     checking {"done?": <>}: <>
9994 transform:     deducing type to "boolean"
9993 transform:   instruction: c:character <- index *text, i
9994 transform:     checking {"text": <>, "lookup": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"c": "character"}: "character"
9993 transform: type of c is "character"
9993 transform:   instruction: buf <- append buf, c
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9994 transform:     checking {"c": <>}: <>
9994 transform:     deducing type to "character"
9994 transform:     checking {"buf": <>}: <>
9994 transform:     deducing type to <"address" : <"shared" : <"buffer" : <>>>>
9993 transform:   instruction: i <- add i, 1
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9994 transform:     checking {"1": "literal"}: "literal"
9993 transform: type of 1 is "literal"
9994 transform:     checking {"i": <>}: <>
9994 transform:     deducing type to "number"
9993 transform:   instruction: loop 
9993 transform:   instruction: }
9993 transform: adding mapping from _elem to <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform: replacing in recipe header ingredients
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in recipe header products
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'default-space:address:shared:array:location <- new location:type, number-of-locals:literal'
9993 transform: replacing in ingredient location:type
9993 transform:   after: ?0
9993 transform: replacing in ingredient number-of-locals:literal
9993 transform:   after: ?0
9993 transform: replacing in ingredient default-space:address:shared:array:location
9993 transform:   after: <address : <shared : <array : <number : <>>>>>
9993 transform: replacing in instruction 'buf:address:shared:buffer <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient buf:address:shared:buffer
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'x:_elem <- next-ingredient-without-typechecking '
9993 transform: replacing in ingredient x:_elem
9993 transform: _elem => <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'text:address:shared:array:character <- to-text x'
9993 transform: replacing in ingredient x
9993 transform: _elem => <"address" : <"shared" : <"array" : <"character" : <>>>>>
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient text:address:shared:array:character
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in instruction 'len:number <- length *text'
9993 transform: replacing in ingredient *text
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient len:number
9993 transform:   after: number
9993 transform: replacing in instruction 'i:number <- copy 0'
9993 transform: replacing in ingredient 0
9993 transform:   after: ?0
9993 transform: replacing in ingredient i:number
9993 transform:   after: number
9993 transform: replacing in instruction '{'
9993 transform: replacing in instruction 'done?:boolean <- greater-or-equal i, len'
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient len
9993 transform:   after: number
9993 transform: replacing in ingredient done?:boolean
9993 transform:   after: boolean
9993 transform: replacing in instruction 'break-if done?'
9993 transform: replacing in ingredient done?
9993 transform:   after: boolean
9993 transform: replacing in instruction 'c:character <- index *text, i'
9993 transform: replacing in ingredient *text
9993 transform:   after: <address : <shared : <array : <character : <>>>>>
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient c:character
9993 transform:   after: character
9993 transform: replacing in instruction 'buf <- append buf, c'
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in ingredient c
9993 transform:   after: character
9993 transform: replacing in ingredient buf
9993 transform:   after: <address : <shared : <buffer : <>>>>
9993 transform: replacing in instruction 'i <- add i, 1'
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in ingredient 1
9993 transform:   after: ?0
9993 transform: replacing in ingredient i
9993 transform:   after: number
9993 transform: replacing in instruction 'loop '
9993 transform: replacing in instruction '}'
9992 transform: transforming new specialization: append_7
9991 transform: --- checking reply instructions against header for append_7
9991 transform: --- fill in reply ingredients from header for recipe append_7
9991 transform: --- deduce types for recipe append_7
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: buf => <address : <shared : <buffer : <>>>>
9992 transform: x => <address : <shared : <array : <character : <>>>>>
9992 transform: text => <address : <shared : <array : <character : <>>>>>
9992 transform: len => number
9992 transform: i => number
9992 transform: done? => boolean
9992 transform: c => character
9991 transform: --- deduce types from header for append_7
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9993 transform: type of x is <address : <shared : <array : <character : <>>>>>
9993 transform: type of buf is <address : <shared : <buffer : <>>>>
9992 transform: instruction: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 transform:   product: default-space: <address : <shared : <array : <number : <>>>>> -- {"default-space": <"address" : <"shared" : <"array" : <"location" : <>>>>>}
9992 transform: instruction: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: x:_elem <- next-ingredient-without-typechecking 
9993 transform:   product: x: <address : <shared : <array : <character : <>>>>> -- {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: text:address:shared:array:character <- to-text x
9993 transform:   product: text: <address : <shared : <array : <character : <>>>>> -- {"text": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: instruction: len:number <- length *text
9993 transform:   product: len: number -- {"len": "number"}
9992 transform: instruction: i:number <- copy 0
9993 transform:   product: i: number -- {"i": "number"}
9992 transform: instruction: {
9992 transform: instruction: done?:boolean <- greater-or-equal i, len
9993 transform:   product: done?: boolean -- {"done?": "boolean"}
9992 transform: instruction: break-if done?
9992 transform: instruction: c:character <- index *text, i
9993 transform:   product: c: character -- {"c": "character"}
9992 transform: instruction: buf <- append buf, c
9993 transform:   product: buf: <address : <shared : <buffer : <>>>> -- {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction: i <- add i, 1
9993 transform:   product: i: number -- {"i": "number"}
9992 transform: instruction: loop 
9992 transform: instruction: }
9992 transform: instruction: reply buf:address:shared:buffer
9991 transform: --- collect surrounding spaces for recipe append_7
9991 transform: --- transform names for recipe append_7
9993 name: assign buf 1
9993 name: assign x 2
9993 name: assign text 3
9993 name: assign len 4
9993 name: assign i 5
9993 name: assign done? 6
9993 name: assign c 7
9991 transform: --- resolve ambiguous calls for recipe append_7
9992 transform: instruction text:address:shared:array:character <- to-text x
9992 transform: checking variant (strict) 0: recipe to-text {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"y": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 transform: checking variant (strict) 1: recipe to-text_2 {"n": "number"} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 2: recipe to-text_3 {"x": "boolean"} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe to-text_4 {"x": <"address" : <"_elem" : <>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe to-text_5 {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: instruction buf <- append buf, c
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 8: recipe append_7 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9991 transform: --- compute instruction operations for recipe append_7
9991 transform: --- transform braces for recipe append_7
9993 transform: append_7: push (open, 6)
9993 transform: push (close, 13)
9992 transform: local-scope ...
9992 transform:  ...
9992 transform:  ...
9992 transform: to-text ...
9992 transform: length ...
9992 transform: copy ...
9992 transform: greater-or-equal ...
9992 transform: jump-if done?, 4:offset
9992 transform: index ...
9992 transform: append ...
9992 transform: add ...
9992 transform: jump -6:offset
9992 transform:  ...
9991 transform: --- perform checks for recipe append_7
9991 transform: --- type-check 'call' instructions inside recipe append_7
9991 transform: --- type-check calls inside recipe append_7
9991 transform: --- convert 'new' to 'allocate' for recipe append_7
9992 new: size of "location" is 1
9991 transform: --- check that recipe append_7 sets default-space
9991 transform: --- checking reply instructions against header for append_7
9992 transform: new specialization: append_7
9992 transform: instruction buf <- to-buffer next, buf
9992 transform: checking variant (strict) 0: recipe to-buffer {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} {"buf": <"address" : <"shared" : <"buffer" : <>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 2: recipe to-buffer_2 {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>} {"buf": <"address" : <"shared" : <"buffer" : <>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction buf <- to-buffer next, buf, remaining
9992 transform: checking variant (strict) 0: recipe to-buffer {"in": <"address" : <"shared" : <"list" : <"_elem" : <>>>>>} {"buf": <"address" : <"shared" : <"buffer" : <>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 2: recipe to-buffer_2 {"in": <"address" : <"shared" : <"list" : <"number" : <>>>>>} {"buf": <"address" : <"shared" : <"buffer" : <>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9992 transform: instruction append buf, s
9992 transform: checking variant (strict) 0: recipe append {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "_elem"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 1: recipe append_2 {"in": <"address" : <"shared" : <"buffer" : <>>>>} {"c": "character"} -> {"in": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 2: recipe append_3 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 3: recipe append_4 {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"_elem" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 4: recipe append_5 {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>} {"new": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>, "contained-in": "in"} -> {"in": <"address" : <"shared" : <"duplex-list" : <"character" : <>>>>>}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 7: recipe append_6 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": "number"} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9993 transform: strict match failed: ingredient 1
9992 transform: checking variant (strict) 8: recipe append_7 {"buf": <"address" : <"shared" : <"buffer" : <>>>>} {"x": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"buf": <"address" : <"shared" : <"buffer" : <>>>>}
9991 transform: --- compute instruction operations for recipe to-buffer_2
9991 transform: --- transform braces for recipe to-buffer_2
9993 transform: to-buffer_2: push (open, 3)
9993 transform: push (close, 7)
9993 transform: to-buffer_2: push (open, 20)
9993 transform: push (close, 24)
9993 transform: to-buffer_2: push (open, 25)
9993 transform: push (close, 30)
9992 transform: local-scope ...
9992 transform:  ...
9992 transform:  ...
9992 transform: jump-if in, 2:offset
9992 transform: append ...
9992 transform: reply ...
9992 transform: get ...
9992 transform: append ...
9992 transform: rest ...
9992 transform: copy ...
9992 transform: reply-unless ...
9992 transform:  ...
9992 transform: copy ...
9992 transform: append ...
9992 transform: new ...
9992 transform: length ...
9992 transform: append ...
9992 transform: next-ingredient ...
9992 transform: jump-if optional-ingredient-found?, 2:offset
9992 transform: to-buffer ...
9992 transform: reply ...
9992 transform: jump-unless remaining, 3:offset
9992 transform: subtract ...
9992 transform: to-buffer ...
9992 transform: reply ...
9992 transform: new ...
9992 transform: append ...
9992 transform:  ...
9991 transform: --- perform checks for recipe to-buffer_2
9991 transform: --- type-check 'call' instructions inside recipe to-buffer_2
9991 transform: --- type-check calls inside recipe to-buffer_2
9991 transform: --- convert 'new' to 'allocate' for recipe to-buffer_2
9992 new: size of "location" is 1
9991 transform: --- check that recipe to-buffer_2 sets default-space
9991 transform: --- checking reply instructions against header for to-buffer_2
9992 transform: new specialization: to-buffer_2
9992 transform: instruction result <- buffer-to-array buf
9992 transform: checking variant (strict) 0: recipe buffer-to-array {"in": <"address" : <"shared" : <"buffer" : <>>>>} -> {"result": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9991 transform: --- compute instruction operations for recipe to-text-line_3
9991 transform: --- transform braces for recipe to-text-line_3
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: new-buffer ...
9992 transform: to-buffer ...
9992 transform: buffer-to-array ...
9992 transform:  ...
9991 transform: --- perform checks for recipe to-text-line_3
9991 transform: --- type-check 'call' instructions inside recipe to-text-line_3
9991 transform: --- type-check calls inside recipe to-text-line_3
9991 transform: --- convert 'new' to 'allocate' for recipe to-text-line_3
9992 new: size of "location" is 1
9991 transform: --- check that recipe to-text-line_3 sets default-space
9991 transform: --- checking reply instructions against header for to-text-line_3
9992 transform: new specialization: to-text-line_3
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: push ...
9992 transform: get-address ...
9992 transform: copy ...
9992 transform:  ...
9992 transform: stash ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: x:address:shared:list:number <- push_6 4, 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1003
 104 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1004
 104 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1006
 104 run: *val <- copy x
9999 mem: location 1003 is 4
9999 mem: location 1006 is 1009
9999 mem: storing 4 in location 1009
 104 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 0
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1007
 104 run: *next <- copy in
9999 mem: location 1004 is 0
9999 mem: location 1007 is 1010
9999 mem: storing 0 in location 1010
 104 run: reply result
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: y:address:address:shared:list:number <- get-address *x, next:offset
9999 mem: location 1 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 0
9999 mem: location 1 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 2
 103 run: *y <- copy x
9999 mem: location 1 is 1008
9999 mem: location 2 is 1010
9999 mem: storing 1008 in location 1010
9999 mem: incrementing refcount of 1008: 2 -> 3
 103 run: stash_0_1:address:shared:array:character <- to-text-line_3 x
9999 mem: location 1 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1011
9999 mem: storing 4 in location 1012
 104 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1014
9999 mem: incrementing refcount of 1008: 3 -> 4
 104 run: buf:address:shared:buffer <- new-buffer 80
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1017
9999 mem: storing 5 in location 1018
 105 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 1020
 105 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1024
9999 mem: storing 1024 in location 1021
9999 mem: incrementing refcount of 1024: 0 -> 1
 105 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1021 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1022
 105 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1025
9999 mem: storing 0 in location 1025
 105 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1021 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1023
 105 run: *s <- new character:type, capacity
9999 mem: location 1020 is 80
9999 mem: array size is 80
9999 mem: allocating size 82
9999 mem: new alloc: 1027
9999 mem: storing 80 in location 1028
9999 mem: location 1023 is 1026
9999 mem: storing 1027 in location 1026
9999 mem: incrementing refcount of 1027: 0 -> 1
 105 run: reply result
9999 mem: location 1021 is 1024
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1024
9999 mem: storing 1024 in location 1015
9999 mem: incrementing refcount of 1024: 1 -> 2
 104 run: buf <- to-buffer_2 in, buf, 6
9999 mem: location 1014 is 1008
9999 mem: location 1015 is 1024
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1109
9999 mem: storing 11 in location 1110
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1112
9999 mem: incrementing refcount of 1008: 4 -> 5
 105 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1113
9999 mem: incrementing refcount of 1024: 2 -> 3
 105 run: jump-if in, 
9999 mem: location 1112 is 1008
9998 run: jumping to instruction 7
 105 run: val:_elem <- get *in, value:offset
9999 mem: location 1112 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1112 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1114
 105 run: buf <- append_6 buf, val
9999 mem: location 1113 is 1024
9999 mem: location 1114 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1122
9999 mem: storing 8 in location 1123
 106 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 3 -> 4
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 106 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1132
9999 mem: storing 17 in location 1133
 107 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 107 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 107 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 107 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 107 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 107 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 108 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 108 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1151
9999 mem: storing 1151 in location 1021
9999 mem: incrementing refcount of 1151: 0 -> 1
 108 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1021 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1022
 108 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1152
9999 mem: storing 0 in location 1152
 108 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1021 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1023
 108 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1154
9999 mem: storing 30 in location 1155
9999 mem: location 1023 is 1153
9999 mem: storing 1154 in location 1153
9999 mem: incrementing refcount of 1154: 0 -> 1
 108 run: reply result
9999 mem: location 1021 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1151
9999 mem: storing 1151 in location 1139
9999 mem: incrementing refcount of 1151: 1 -> 2
 107 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 107 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 107 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 107 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 107 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 107 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1151
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1186
9999 mem: storing 9 in location 1187
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1189
9999 mem: incrementing refcount of 1151: 2 -> 3
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1154
9999 mem: location 1189 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1151
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1003
9999 mem: incrementing refcount of 1151: 3 -> 4
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1154
9999 mem: location 1003 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1154
9999 mem: location 1003 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1153 is 1154
9999 mem: storing 1154 in location 1005
9999 mem: incrementing refcount of 1154: 1 -> 2
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1154
9999 mem: skipping refcount at 1154
9999 mem: storing 30 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1154
9999 mem: location 1189 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1153 is 1154
9999 mem: storing 1154 in location 1195
9999 mem: incrementing refcount of 1154: 2 -> 3
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1191 is 1152
9999 mem: location 1152 is 0
9999 mem: storing 1156 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1156
9999 mem: storing 52 in location 1156
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1152
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1152
9999 mem: storing 1 in location 1152
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1151
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 4 -> 3
9999 mem: storing 1151 in location 1139
9999 mem: incrementing refcount of 1151: 3 -> 4
 107 run: jump 
9998 run: jumping to instruction 17
 107 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 107 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 107 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 107 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1154
9999 mem: location 1139 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1145
 107 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1154
9999 mem: location 1139 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1153 is 1154
9999 mem: storing 1154 in location 1146
9999 mem: incrementing refcount of 1154: 3 -> 4
 107 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1197
9999 mem: storing 1 in location 1198
9999 mem: storing 1197 in location 1136
9999 mem: incrementing refcount of 1197: 0 -> 1
 107 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 107 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 107 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 107 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 107 run: src:character <- index *buf, i
9999 mem: location 1146 is 1154
9999 mem: skipping refcount at 1154
9998 run: base address is 1155
9999 mem: location 1147 is 0
9998 run: address to copy is 1156
9998 run: its type is character
9999 mem: location 1156 is 52
9999 mem: storing 52 in location 1149
 107 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1148 is 0
9999 mem: storing 1199 in location 1150
 107 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1199
9999 mem: storing 52 in location 1199
 107 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 107 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 107 run: jump 
9998 run: jumping to instruction 35
 107 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 107 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 107 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1197
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: storing 1197 in location 1127
9999 mem: incrementing refcount of 1197: 1 -> 2
 106 run: len:number <- length *text
9999 mem: location 1127 is 1197
9999 mem: skipping refcount at 1197
9999 mem: storing 1 in location 1128
 106 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: c:character <- index *text, i
9999 mem: location 1127 is 1197
9999 mem: skipping refcount at 1197
9998 run: base address is 1198
9999 mem: location 1129 is 0
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 52
9999 mem: storing 52 in location 1131
 106 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 4 -> 5
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 107 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 107 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 107 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 107 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 5 -> 6
 108 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 0
9999 mem: storing 0 in location 1004
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 1 -> 2
 108 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 108 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 108 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 107 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 0
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 2 -> 3
 107 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 0
9999 mem: storing 1029 in location 1196
 107 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1029
9999 mem: storing 52 in location 1029
 107 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1191 is 1025
9999 mem: storing 1 in location 1025
 107 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 6 -> 5
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 5 -> 6
 106 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 106 run: jump 
9998 run: jumping to instruction 7
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 106 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 6 -> 5
9999 mem: storing 1024 in location 1113
9999 mem: incrementing refcount of 1024: 5 -> 6
 105 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1112 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1200
9999 mem: storing 3 in location 1201
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 5 -> 6
 106 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 6 -> 7
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1115
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: nextn:number <- copy next
9999 mem: location 1115 is 1008
9999 mem: storing 1008 in location 1116
 105 run: jump-if next, 1:offset
9999 mem: location 1115 is 1008
9998 run: jumping to instruction 14
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1117
 105 run: buf <- append_2 buf, space:character
9999 mem: location 1113 is 1024
9999 mem: location 1117 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 106 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 6 -> 7
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 106 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 1
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 106 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 106 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 106 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 7 -> 8
 107 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 1
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 1
9999 mem: storing 1 in location 1004
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 1
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 3 -> 4
 107 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 107 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 1
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 107 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 106 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 106 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 1
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 4 -> 5
 106 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 1
9999 mem: storing 1030 in location 1196
 106 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1030
9999 mem: storing 32 in location 1030
 106 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 1
9999 mem: location 1191 is 1025
9999 mem: storing 2 in location 1025
 106 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 8 -> 7
9999 mem: storing 1024 in location 1113
9999 mem: incrementing refcount of 1024: 7 -> 8
 105 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1205 in location 1118
9999 mem: incrementing refcount of 1205: 0 -> 1
 105 run: n:number <- length *s
9999 mem: location 1118 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 3 in location 1119
 105 run: buf <- append_7 buf, s
9999 mem: location 1113 is 1024
9999 mem: location 1118 is 1205
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 8 -> 9
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1126
9999 mem: incrementing refcount of 1205: 1 -> 2
 106 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 mem: new alloc: 1210
9999 mem: storing 2 in location 1211
 107 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1213
9999 mem: incrementing refcount of 1205: 2 -> 3
 107 run: reply x
9999 mem: location 1213 is 1205
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1127
9999 mem: incrementing refcount of 1205: 3 -> 4
 106 run: len:number <- length *text
9999 mem: location 1127 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 3 in location 1128
 106 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: c:character <- index *text, i
9999 mem: location 1127 is 1205
9999 mem: skipping refcount at 1205
9998 run: base address is 1206
9999 mem: location 1129 is 0
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 45
9999 mem: storing 45 in location 1131
 106 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 9 -> 10
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 107 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 2
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 107 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 107 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 107 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 10 -> 11
 108 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 2
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 2
9999 mem: storing 2 in location 1004
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 2
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 5 -> 6
 108 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 108 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 2
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 108 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 107 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 2
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 6 -> 7
 107 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 2
9999 mem: storing 1031 in location 1196
 107 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1031
9999 mem: storing 45 in location 1031
 107 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 2
9999 mem: location 1191 is 1025
9999 mem: storing 3 in location 1025
 107 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 11 -> 10
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 10 -> 11
 106 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 106 run: jump 
9998 run: jumping to instruction 7
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: c:character <- index *text, i
9999 mem: location 1127 is 1205
9999 mem: skipping refcount at 1205
9998 run: base address is 1206
9999 mem: location 1129 is 1
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 62
9999 mem: storing 62 in location 1131
 106 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 11 -> 12
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 107 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 3
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 107 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 107 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 107 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 12 -> 13
 108 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 3
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 3
9999 mem: storing 3 in location 1004
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 3
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 7 -> 8
 108 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 108 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 3
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 108 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 107 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 3
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 8 -> 9
 107 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 3
9999 mem: storing 1032 in location 1196
 107 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1032
9999 mem: storing 62 in location 1032
 107 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 3
9999 mem: location 1191 is 1025
9999 mem: storing 4 in location 1025
 107 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 13 -> 12
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 12 -> 13
 106 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 106 run: jump 
9998 run: jumping to instruction 7
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 106 run: c:character <- index *text, i
9999 mem: location 1127 is 1205
9999 mem: skipping refcount at 1205
9998 run: base address is 1206
9999 mem: location 1129 is 2
9998 run: address to copy is 1209
9998 run: its type is character
9999 mem: location 1209 is 32
9999 mem: storing 32 in location 1131
 106 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 13 -> 14
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 107 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 4
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 107 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 107 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 107 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 14 -> 15
 108 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 4
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 4
9999 mem: storing 4 in location 1004
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 4
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 9 -> 10
 108 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 108 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 4
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 108 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 107 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 4
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 10 -> 11
 107 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 4
9999 mem: storing 1033 in location 1196
 107 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1033
9999 mem: storing 32 in location 1033
 107 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 4
9999 mem: location 1191 is 1025
9999 mem: storing 5 in location 1025
 107 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 15 -> 14
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 14 -> 15
 106 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 106 run: jump 
9998 run: jumping to instruction 7
 106 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 106 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 106 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 15 -> 14
9999 mem: storing 1024 in location 1113
9999 mem: incrementing refcount of 1024: 14 -> 15
 105 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 6 in location 1120
9999 mem: storing 1 in location 1121
 105 run: jump-if optional-ingredient-found?, 
9999 mem: location 1121 is 1
9998 run: jumping to instruction 24
 105 run: jump-unless remaining, 
9999 mem: location 1120 is 6
9998 run: jump-unless fell through
 105 run: remaining <- subtract remaining, 1
9999 mem: location 1120 is 6
9999 mem: storing 5 in location 1120
 105 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1115 is 1008
9999 mem: location 1113 is 1024
9999 mem: location 1120 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1214
9999 mem: storing 11 in location 1215
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1217
9999 mem: incrementing refcount of 1008: 8 -> 9
 106 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1218
9999 mem: incrementing refcount of 1024: 15 -> 16
 106 run: jump-if in, 
9999 mem: location 1217 is 1008
9998 run: jumping to instruction 7
 106 run: val:_elem <- get *in, value:offset
9999 mem: location 1217 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1217 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1219
 106 run: buf <- append_6 buf, val
9999 mem: location 1218 is 1024
9999 mem: location 1219 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 16 -> 17
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 107 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 108 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 108 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 108 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 108 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 108 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 108 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 109 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 109 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1227
9999 mem: storing 1227 in location 1021
9999 mem: incrementing refcount of 1227: 0 -> 1
 109 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1021 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9999 mem: storing 1228 in location 1022
 109 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1228
9999 mem: storing 0 in location 1228
 109 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1021 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1023
 109 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1230
9999 mem: storing 30 in location 1231
9999 mem: location 1023 is 1229
9999 mem: storing 1230 in location 1229
9999 mem: incrementing refcount of 1230: 0 -> 1
 109 run: reply result
9999 mem: location 1021 is 1227
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1227
9999 mem: storing 1227 in location 1139
9999 mem: incrementing refcount of 1227: 1 -> 2
 108 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 108 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 108 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 108 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 108 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 108 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1227
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1189
9999 mem: incrementing refcount of 1227: 2 -> 3
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1230
9999 mem: location 1189 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9999 mem: storing 1228 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1227
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1003
9999 mem: incrementing refcount of 1227: 3 -> 4
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1230
9999 mem: location 1003 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is number
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1230
9999 mem: location 1003 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1229 is 1230
9999 mem: storing 1230 in location 1005
9999 mem: incrementing refcount of 1230: 1 -> 2
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1230
9999 mem: skipping refcount at 1230
9999 mem: storing 30 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1230
9999 mem: location 1189 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1229 is 1230
9999 mem: storing 1230 in location 1195
9999 mem: incrementing refcount of 1230: 2 -> 3
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1191 is 1228
9999 mem: location 1228 is 0
9999 mem: storing 1232 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1232
9999 mem: storing 52 in location 1232
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1228
9999 mem: location 1228 is 0
9999 mem: location 1191 is 1228
9999 mem: storing 1 in location 1228
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1227
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1227: 4 -> 3
9999 mem: storing 1227 in location 1139
9999 mem: incrementing refcount of 1227: 3 -> 4
 108 run: jump 
9998 run: jumping to instruction 17
 108 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 108 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 108 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 108 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 1
9999 mem: location 1229 is 1230
9999 mem: location 1139 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is number
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1145
 108 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 1
9999 mem: location 1229 is 1230
9999 mem: location 1139 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1229 is 1230
9999 mem: storing 1230 in location 1146
9999 mem: incrementing refcount of 1230: 3 -> 4
 108 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1262
9999 mem: storing 1 in location 1263
9999 mem: storing 1262 in location 1136
9999 mem: incrementing refcount of 1262: 0 -> 1
 108 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 108 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 108 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 108 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 108 run: src:character <- index *buf, i
9999 mem: location 1146 is 1230
9999 mem: skipping refcount at 1230
9998 run: base address is 1231
9999 mem: location 1147 is 0
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 52
9999 mem: storing 52 in location 1149
 108 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1148 is 0
9999 mem: storing 1264 in location 1150
 108 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1264
9999 mem: storing 52 in location 1264
 108 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 108 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 108 run: jump 
9998 run: jumping to instruction 35
 108 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 108 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 108 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1262
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1262
9999 mem: storing 1262 in location 1127
9999 mem: incrementing refcount of 1262: 1 -> 2
 107 run: len:number <- length *text
9999 mem: location 1127 is 1262
9999 mem: skipping refcount at 1262
9999 mem: storing 1 in location 1128
 107 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 107 run: c:character <- index *text, i
9999 mem: location 1127 is 1262
9999 mem: skipping refcount at 1262
9998 run: base address is 1263
9999 mem: location 1129 is 0
9998 run: address to copy is 1264
9998 run: its type is character
9999 mem: location 1264 is 52
9999 mem: storing 52 in location 1131
 107 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 17 -> 18
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 5
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 18 -> 19
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 5
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 5
9999 mem: storing 5 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 5
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 11 -> 12
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 5
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 5
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 12 -> 13
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 5
9999 mem: storing 1034 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1034
9999 mem: storing 52 in location 1034
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 5
9999 mem: location 1191 is 1025
9999 mem: storing 6 in location 1025
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 19 -> 18
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 18 -> 19
 107 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 107 run: jump 
9998 run: jumping to instruction 7
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 107 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 19 -> 18
9999 mem: storing 1024 in location 1218
9999 mem: incrementing refcount of 1024: 18 -> 19
 106 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1217 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 9 -> 10
 107 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 10 -> 11
 107 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: nextn:number <- copy next
9999 mem: location 1220 is 1008
9999 mem: storing 1008 in location 1221
 106 run: jump-if next, 1:offset
9999 mem: location 1220 is 1008
9998 run: jumping to instruction 14
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1222
 106 run: buf <- append_2 buf, space:character
9999 mem: location 1218 is 1024
9999 mem: location 1222 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 107 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 19 -> 20
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 107 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 6
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 107 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 107 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 107 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 20 -> 21
 108 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 6
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 6
9999 mem: storing 6 in location 1004
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 6
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 13 -> 14
 108 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 108 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 6
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 108 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 107 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 107 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 6
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 14 -> 15
 107 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 6
9999 mem: storing 1035 in location 1196
 107 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1035
9999 mem: storing 32 in location 1035
 107 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 6
9999 mem: location 1191 is 1025
9999 mem: storing 7 in location 1025
 107 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 21 -> 20
9999 mem: storing 1024 in location 1218
9999 mem: incrementing refcount of 1024: 20 -> 21
 106 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1265 in location 1223
9999 mem: incrementing refcount of 1265: 0 -> 1
 106 run: n:number <- length *s
9999 mem: location 1223 is 1265
9999 mem: skipping refcount at 1265
9999 mem: storing 3 in location 1224
 106 run: buf <- append_7 buf, s
9999 mem: location 1218 is 1024
9999 mem: location 1223 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 21 -> 22
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1126
9999 mem: incrementing refcount of 1265: 1 -> 2
 107 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1265
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 108 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1213
9999 mem: incrementing refcount of 1265: 2 -> 3
 108 run: reply x
9999 mem: location 1213 is 1265
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1265
9999 mem: storing 1265 in location 1127
9999 mem: incrementing refcount of 1265: 3 -> 4
 107 run: len:number <- length *text
9999 mem: location 1127 is 1265
9999 mem: skipping refcount at 1265
9999 mem: storing 3 in location 1128
 107 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 107 run: c:character <- index *text, i
9999 mem: location 1127 is 1265
9999 mem: skipping refcount at 1265
9998 run: base address is 1266
9999 mem: location 1129 is 0
9998 run: address to copy is 1267
9998 run: its type is character
9999 mem: location 1267 is 45
9999 mem: storing 45 in location 1131
 107 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 22 -> 23
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 7
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 23 -> 24
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 7
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 7
9999 mem: storing 7 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 7
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 15 -> 16
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 7
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 7
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 16 -> 17
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 7
9999 mem: storing 1036 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1036
9999 mem: storing 45 in location 1036
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 7
9999 mem: location 1191 is 1025
9999 mem: storing 8 in location 1025
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 24 -> 23
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 23 -> 24
 107 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 107 run: jump 
9998 run: jumping to instruction 7
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
9990 schedule: append_7/to-buffer_2/to-buffer_2/to-text-line_3/run_1001/scenario_stash-handles-list-with-cycle
 107 run: c:character <- index *text, i
9999 mem: location 1127 is 1265
9999 mem: skipping refcount at 1265
9998 run: base address is 1266
9999 mem: location 1129 is 1
9998 run: address to copy is 1268
9998 run: its type is character
9999 mem: location 1268 is 62
9999 mem: storing 62 in location 1131
 107 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 24 -> 25
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 8
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 25 -> 26
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 8
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 8
9999 mem: storing 8 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 8
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 17 -> 18
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 8
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 8
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 18 -> 19
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 8
9999 mem: storing 1037 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1037
9999 mem: storing 62 in location 1037
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 8
9999 mem: location 1191 is 1025
9999 mem: storing 9 in location 1025
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 26 -> 25
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 25 -> 26
 107 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 107 run: jump 
9998 run: jumping to instruction 7
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 107 run: c:character <- index *text, i
9999 mem: location 1127 is 1265
9999 mem: skipping refcount at 1265
9998 run: base address is 1266
9999 mem: location 1129 is 2
9998 run: address to copy is 1269
9998 run: its type is character
9999 mem: location 1269 is 32
9999 mem: storing 32 in location 1131
 107 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 26 -> 27
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 9
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 27 -> 28
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 9
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 9
9999 mem: storing 9 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 9
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 19 -> 20
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 9
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 9
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 20 -> 21
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 9
9999 mem: storing 1038 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1038
9999 mem: storing 32 in location 1038
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 9
9999 mem: location 1191 is 1025
9999 mem: storing 10 in location 1025
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 28 -> 27
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 27 -> 28
 107 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 107 run: jump 
9998 run: jumping to instruction 7
 107 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 107 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 107 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 28 -> 27
9999 mem: storing 1024 in location 1218
9999 mem: incrementing refcount of 1024: 27 -> 28
 106 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 5 in location 1225
9999 mem: storing 1 in location 1226
 106 run: jump-if optional-ingredient-found?, 
9999 mem: location 1226 is 1
9998 run: jumping to instruction 24
 106 run: jump-unless remaining, 
9999 mem: location 1225 is 5
9998 run: jump-unless fell through
 106 run: remaining <- subtract remaining, 1
9999 mem: location 1225 is 5
9999 mem: storing 4 in location 1225
 106 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1220 is 1008
9999 mem: location 1218 is 1024
9999 mem: location 1225 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1270
9999 mem: storing 11 in location 1271
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1273
9999 mem: incrementing refcount of 1008: 12 -> 13
 107 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1274
9999 mem: incrementing refcount of 1024: 28 -> 29
 107 run: jump-if in, 
9999 mem: location 1273 is 1008
9998 run: jumping to instruction 7
 107 run: val:_elem <- get *in, value:offset
9999 mem: location 1273 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1273 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1275
 107 run: buf <- append_6 buf, val
9999 mem: location 1274 is 1024
9999 mem: location 1275 is 4
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 29 -> 30
 108 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 108 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 109 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 109 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 109 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 109 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 109 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 109 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 110 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 110 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1283
9999 mem: storing 1283 in location 1021
9999 mem: incrementing refcount of 1283: 0 -> 1
 110 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1021 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1284
9999 mem: storing 1284 in location 1022
 110 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1284
9999 mem: storing 0 in location 1284
 110 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1021 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1285
9999 mem: storing 1285 in location 1023
 110 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1286
9999 mem: storing 30 in location 1287
9999 mem: location 1023 is 1285
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 0 -> 1
 110 run: reply result
9999 mem: location 1021 is 1283
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1283
9999 mem: storing 1283 in location 1139
9999 mem: incrementing refcount of 1283: 1 -> 2
 109 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 109 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 109 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 109 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 109 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 109 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1283
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1283 in location 1189
9999 mem: incrementing refcount of 1283: 2 -> 3
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1286
9999 mem: location 1189 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1284
9999 mem: storing 1284 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1283
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1283 in location 1003
9999 mem: incrementing refcount of 1283: 3 -> 4
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1286
9999 mem: location 1003 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1284
9998 run: its type is number
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1286
9999 mem: location 1003 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1285
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1285 is 1286
9999 mem: storing 1286 in location 1005
9999 mem: incrementing refcount of 1286: 1 -> 2
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1286
9999 mem: skipping refcount at 1286
9999 mem: storing 30 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1286
9999 mem: location 1189 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1285
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1285 is 1286
9999 mem: storing 1286 in location 1195
9999 mem: incrementing refcount of 1286: 2 -> 3
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1191 is 1284
9999 mem: location 1284 is 0
9999 mem: storing 1288 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1288
9999 mem: storing 52 in location 1288
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1284
9999 mem: location 1284 is 0
9999 mem: location 1191 is 1284
9999 mem: storing 1 in location 1284
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1283
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1283
9999 mem: decrementing refcount of 1283: 4 -> 3
9999 mem: storing 1283 in location 1139
9999 mem: incrementing refcount of 1283: 3 -> 4
 109 run: jump 
9998 run: jumping to instruction 17
 109 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 109 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 109 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 109 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 1
9999 mem: location 1285 is 1286
9999 mem: location 1139 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1284
9998 run: its type is number
9999 mem: location 1284 is 1
9999 mem: storing 1 in location 1145
 109 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1283
9999 mem: skipping refcount at 1283
9999 mem: location 1284 is 1
9999 mem: location 1285 is 1286
9999 mem: location 1139 is 1283
9999 mem: skipping refcount at 1283
9998 run: address to copy is 1285
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1285 is 1286
9999 mem: storing 1286 in location 1146
9999 mem: incrementing refcount of 1286: 3 -> 4
 109 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1318
9999 mem: storing 1 in location 1319
9999 mem: storing 1318 in location 1136
9999 mem: incrementing refcount of 1318: 0 -> 1
 109 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 109 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 109 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 109 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 109 run: src:character <- index *buf, i
9999 mem: location 1146 is 1286
9999 mem: skipping refcount at 1286
9998 run: base address is 1287
9999 mem: location 1147 is 0
9998 run: address to copy is 1288
9998 run: its type is character
9999 mem: location 1288 is 52
9999 mem: storing 52 in location 1149
 109 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1148 is 0
9999 mem: storing 1320 in location 1150
 109 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1320
9999 mem: storing 52 in location 1320
 109 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 109 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 109 run: jump 
9998 run: jumping to instruction 35
 109 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 109 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 109 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1318
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1318
9999 mem: storing 1318 in location 1127
9999 mem: incrementing refcount of 1318: 1 -> 2
 108 run: len:number <- length *text
9999 mem: location 1127 is 1318
9999 mem: skipping refcount at 1318
9999 mem: storing 1 in location 1128
 108 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 108 run: c:character <- index *text, i
9999 mem: location 1127 is 1318
9999 mem: skipping refcount at 1318
9998 run: base address is 1319
9999 mem: location 1129 is 0
9998 run: address to copy is 1320
9998 run: its type is character
9999 mem: location 1320 is 52
9999 mem: storing 52 in location 1131
 108 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 30 -> 31
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 10
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 31 -> 32
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 10
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 10
9999 mem: storing 10 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 10
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 21 -> 22
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 10
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 10
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 22 -> 23
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 10
9999 mem: storing 1039 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1039
9999 mem: storing 52 in location 1039
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 10
9999 mem: location 1191 is 1025
9999 mem: storing 11 in location 1025
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 32 -> 31
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 31 -> 32
 108 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 108 run: jump 
9998 run: jumping to instruction 7
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 108 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 32 -> 31
9999 mem: storing 1024 in location 1274
9999 mem: incrementing refcount of 1024: 31 -> 32
 107 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1273 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 13 -> 14
 108 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 14 -> 15
 108 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 15 -> 16
 107 run: nextn:number <- copy next
9999 mem: location 1276 is 1008
9999 mem: storing 1008 in location 1277
 107 run: jump-if next, 1:offset
9999 mem: location 1276 is 1008
9998 run: jumping to instruction 14
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1278
 107 run: buf <- append_2 buf, space:character
9999 mem: location 1274 is 1024
9999 mem: location 1278 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 108 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 32 -> 33
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 108 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 11
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 108 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 108 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 108 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 33 -> 34
 109 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 11
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 11
9999 mem: storing 11 in location 1004
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 11
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 23 -> 24
 109 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 109 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 11
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 109 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 108 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 108 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 11
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 24 -> 25
 108 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 11
9999 mem: storing 1040 in location 1196
 108 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1040
9999 mem: storing 32 in location 1040
 108 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 11
9999 mem: location 1191 is 1025
9999 mem: storing 12 in location 1025
 108 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 34 -> 33
9999 mem: storing 1024 in location 1274
9999 mem: incrementing refcount of 1024: 33 -> 34
 107 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1321 in location 1279
9999 mem: incrementing refcount of 1321: 0 -> 1
 107 run: n:number <- length *s
9999 mem: location 1279 is 1321
9999 mem: skipping refcount at 1321
9999 mem: storing 3 in location 1280
 107 run: buf <- append_7 buf, s
9999 mem: location 1274 is 1024
9999 mem: location 1279 is 1321
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 108 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 34 -> 35
 108 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1321 in location 1126
9999 mem: incrementing refcount of 1321: 1 -> 2
 108 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1321
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 109 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1321 in location 1213
9999 mem: incrementing refcount of 1321: 2 -> 3
 109 run: reply x
9999 mem: location 1213 is 1321
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1321
9999 mem: storing 1321 in location 1127
9999 mem: incrementing refcount of 1321: 3 -> 4
 108 run: len:number <- length *text
9999 mem: location 1127 is 1321
9999 mem: skipping refcount at 1321
9999 mem: storing 3 in location 1128
 108 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 108 run: c:character <- index *text, i
9999 mem: location 1127 is 1321
9999 mem: skipping refcount at 1321
9998 run: base address is 1322
9999 mem: location 1129 is 0
9998 run: address to copy is 1323
9998 run: its type is character
9999 mem: location 1323 is 45
9999 mem: storing 45 in location 1131
 108 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 35 -> 36
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 12
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 36 -> 37
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 12
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 12
9999 mem: storing 12 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 12
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 25 -> 26
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 12
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 12
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 26 -> 27
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 12
9999 mem: storing 1041 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1041
9999 mem: storing 45 in location 1041
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 12
9999 mem: location 1191 is 1025
9999 mem: storing 13 in location 1025
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 37 -> 36
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 36 -> 37
 108 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 108 run: jump 
9998 run: jumping to instruction 7
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 108 run: c:character <- index *text, i
9999 mem: location 1127 is 1321
9999 mem: skipping refcount at 1321
9998 run: base address is 1322
9999 mem: location 1129 is 1
9998 run: address to copy is 1324
9998 run: its type is character
9999 mem: location 1324 is 62
9999 mem: storing 62 in location 1131
 108 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 37 -> 38
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 13
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 38 -> 39
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 13
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 13
9999 mem: storing 13 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 13
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 27 -> 28
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 13
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 13
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 28 -> 29
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 13
9999 mem: storing 1042 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1042
9999 mem: storing 62 in location 1042
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 13
9999 mem: location 1191 is 1025
9999 mem: storing 14 in location 1025
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 39 -> 38
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 38 -> 39
 108 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 108 run: jump 
9998 run: jumping to instruction 7
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 108 run: c:character <- index *text, i
9999 mem: location 1127 is 1321
9999 mem: skipping refcount at 1321
9998 run: base address is 1322
9999 mem: location 1129 is 2
9998 run: address to copy is 1325
9998 run: its type is character
9999 mem: location 1325 is 32
9999 mem: storing 32 in location 1131
 108 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 39 -> 40
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 14
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 40 -> 41
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 14
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 14
9999 mem: storing 14 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 14
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 29 -> 30
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 14
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 14
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 30 -> 31
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 14
9999 mem: storing 1043 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1043
9999 mem: storing 32 in location 1043
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 14
9999 mem: location 1191 is 1025
9999 mem: storing 15 in location 1025
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 41 -> 40
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 40 -> 41
 108 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 108 run: jump 
9998 run: jumping to instruction 7
 108 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 108 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 108 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 41 -> 40
9999 mem: storing 1024 in location 1274
9999 mem: incrementing refcount of 1024: 40 -> 41
 107 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 4 in location 1281
9999 mem: storing 1 in location 1282
 107 run: jump-if optional-ingredient-found?, 
9999 mem: location 1282 is 1
9998 run: jumping to instruction 24
 107 run: jump-unless remaining, 
9999 mem: location 1281 is 4
9998 run: jump-unless fell through
 107 run: remaining <- subtract remaining, 1
9999 mem: location 1281 is 4
9999 mem: storing 3 in location 1281
 107 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1276 is 1008
9999 mem: location 1274 is 1024
9999 mem: location 1281 is 3
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1326
9999 mem: storing 11 in location 1327
 108 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 16 -> 17
 108 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1330
9999 mem: incrementing refcount of 1024: 41 -> 42
 108 run: jump-if in, 
9999 mem: location 1329 is 1008
9998 run: jumping to instruction 7
 108 run: val:_elem <- get *in, value:offset
9999 mem: location 1329 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1329 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1331
 108 run: buf <- append_6 buf, val
9999 mem: location 1330 is 1024
9999 mem: location 1331 is 4
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 109 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 42 -> 43
 109 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 109 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 110 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 110 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 110 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 110 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 110 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 110 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 111 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 111 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1339
9999 mem: storing 1339 in location 1021
9999 mem: incrementing refcount of 1339: 0 -> 1
 111 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: location 1021 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1340
9999 mem: storing 1340 in location 1022
 111 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1340
9999 mem: storing 0 in location 1340
 111 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: location 1021 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1341
9999 mem: storing 1341 in location 1023
 111 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1342
9999 mem: storing 30 in location 1343
9999 mem: location 1023 is 1341
9999 mem: storing 1342 in location 1341
9999 mem: incrementing refcount of 1342: 0 -> 1
 111 run: reply result
9999 mem: location 1021 is 1339
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1339
9999 mem: storing 1339 in location 1139
9999 mem: incrementing refcount of 1339: 1 -> 2
 110 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 110 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 110 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 110 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 110 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 110 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1339
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1339 in location 1189
9999 mem: incrementing refcount of 1339: 2 -> 3
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 1342
9999 mem: location 1189 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1340
9999 mem: storing 1340 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1339
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1339 in location 1003
9999 mem: incrementing refcount of 1339: 3 -> 4
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 1342
9999 mem: location 1003 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1340
9998 run: its type is number
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 1342
9999 mem: location 1003 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1341
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1341 is 1342
9999 mem: storing 1342 in location 1005
9999 mem: incrementing refcount of 1342: 1 -> 2
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1342
9999 mem: skipping refcount at 1342
9999 mem: storing 30 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 0
9999 mem: location 1341 is 1342
9999 mem: location 1189 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1341
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1341 is 1342
9999 mem: storing 1342 in location 1195
9999 mem: incrementing refcount of 1342: 2 -> 3
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1191 is 1340
9999 mem: location 1340 is 0
9999 mem: storing 1344 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1344
9999 mem: storing 52 in location 1344
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1340
9999 mem: location 1340 is 0
9999 mem: location 1191 is 1340
9999 mem: storing 1 in location 1340
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1339
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1339
9999 mem: decrementing refcount of 1339: 4 -> 3
9999 mem: storing 1339 in location 1139
9999 mem: incrementing refcount of 1339: 3 -> 4
 110 run: jump 
9998 run: jumping to instruction 17
 110 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 110 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 110 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 110 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 1
9999 mem: location 1341 is 1342
9999 mem: location 1139 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1340
9998 run: its type is number
9999 mem: location 1340 is 1
9999 mem: storing 1 in location 1145
 110 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1339
9999 mem: skipping refcount at 1339
9999 mem: location 1340 is 1
9999 mem: location 1341 is 1342
9999 mem: location 1139 is 1339
9999 mem: skipping refcount at 1339
9998 run: address to copy is 1341
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1341 is 1342
9999 mem: storing 1342 in location 1146
9999 mem: incrementing refcount of 1342: 3 -> 4
 110 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1374
9999 mem: storing 1 in location 1375
9999 mem: storing 1374 in location 1136
9999 mem: incrementing refcount of 1374: 0 -> 1
 110 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 110 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 110 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 110 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 110 run: src:character <- index *buf, i
9999 mem: location 1146 is 1342
9999 mem: skipping refcount at 1342
9998 run: base address is 1343
9999 mem: location 1147 is 0
9998 run: address to copy is 1344
9998 run: its type is character
9999 mem: location 1344 is 52
9999 mem: storing 52 in location 1149
 110 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1374
9999 mem: skipping refcount at 1374
9999 mem: location 1148 is 0
9999 mem: storing 1376 in location 1150
 110 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1376
9999 mem: storing 52 in location 1376
 110 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 110 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 110 run: jump 
9998 run: jumping to instruction 35
 110 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 110 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 110 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1374
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1374
9999 mem: storing 1374 in location 1127
9999 mem: incrementing refcount of 1374: 1 -> 2
 109 run: len:number <- length *text
9999 mem: location 1127 is 1374
9999 mem: skipping refcount at 1374
9999 mem: storing 1 in location 1128
 109 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 109 run: c:character <- index *text, i
9999 mem: location 1127 is 1374
9999 mem: skipping refcount at 1374
9998 run: base address is 1375
9999 mem: location 1129 is 0
9998 run: address to copy is 1376
9998 run: its type is character
9999 mem: location 1376 is 52
9999 mem: storing 52 in location 1131
 109 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 43 -> 44
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 15
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 44 -> 45
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 15
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 15
9999 mem: storing 15 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 15
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 31 -> 32
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 15
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 15
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 32 -> 33
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 15
9999 mem: storing 1044 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1044
9999 mem: storing 52 in location 1044
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 15
9999 mem: location 1191 is 1025
9999 mem: storing 16 in location 1025
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 45 -> 44
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 44 -> 45
 109 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 109 run: jump 
9998 run: jumping to instruction 7
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 109 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 45 -> 44
9999 mem: storing 1024 in location 1330
9999 mem: incrementing refcount of 1024: 44 -> 45
 108 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 17 -> 18
 109 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 18 -> 19
 109 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
9999 mem: incrementing refcount of 1008: 19 -> 20
 108 run: nextn:number <- copy next
9999 mem: location 1332 is 1008
9999 mem: storing 1008 in location 1333
 108 run: jump-if next, 1:offset
9999 mem: location 1332 is 1008
9998 run: jumping to instruction 14
 108 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1334
 108 run: buf <- append_2 buf, space:character
9999 mem: location 1330 is 1024
9999 mem: location 1334 is 32
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 109 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 45 -> 46
 109 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 109 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 16
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 109 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 109 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 109 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 46 -> 47
 110 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 16
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 16
9999 mem: storing 16 in location 1004
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 16
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 33 -> 34
 110 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 110 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 16
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 110 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 109 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 109 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 16
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 34 -> 35
 109 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 16
9999 mem: storing 1045 in location 1196
 109 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1045
9999 mem: storing 32 in location 1045
 109 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 16
9999 mem: location 1191 is 1025
9999 mem: storing 17 in location 1025
 109 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 47 -> 46
9999 mem: storing 1024 in location 1330
9999 mem: incrementing refcount of 1024: 46 -> 47
 108 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1377 in location 1335
9999 mem: incrementing refcount of 1377: 0 -> 1
9990 schedule: to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-text-line_3/run_1001/scenario_stash-handles-list-with-cycle
 108 run: n:number <- length *s
9999 mem: location 1335 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1336
 108 run: buf <- append_7 buf, s
9999 mem: location 1330 is 1024
9999 mem: location 1335 is 1377
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 109 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 47 -> 48
 109 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1377 in location 1126
9999 mem: incrementing refcount of 1377: 1 -> 2
 109 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1377
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 110 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1377 in location 1213
9999 mem: incrementing refcount of 1377: 2 -> 3
 110 run: reply x
9999 mem: location 1213 is 1377
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1377
9999 mem: storing 1377 in location 1127
9999 mem: incrementing refcount of 1377: 3 -> 4
 109 run: len:number <- length *text
9999 mem: location 1127 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1128
 109 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 109 run: c:character <- index *text, i
9999 mem: location 1127 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1129 is 0
9998 run: address to copy is 1379
9998 run: its type is character
9999 mem: location 1379 is 45
9999 mem: storing 45 in location 1131
 109 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 48 -> 49
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 17
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 49 -> 50
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 17
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 17
9999 mem: storing 17 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 17
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 35 -> 36
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 17
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 17
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 36 -> 37
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 17
9999 mem: storing 1046 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1046
9999 mem: storing 45 in location 1046
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 17
9999 mem: location 1191 is 1025
9999 mem: storing 18 in location 1025
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 50 -> 49
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 49 -> 50
 109 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 109 run: jump 
9998 run: jumping to instruction 7
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 109 run: c:character <- index *text, i
9999 mem: location 1127 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1129 is 1
9998 run: address to copy is 1380
9998 run: its type is character
9999 mem: location 1380 is 62
9999 mem: storing 62 in location 1131
 109 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 50 -> 51
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 18
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 51 -> 52
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 18
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 18
9999 mem: storing 18 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 18
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 37 -> 38
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 18
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 18
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 38 -> 39
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 18
9999 mem: storing 1047 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1047
9999 mem: storing 62 in location 1047
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 18
9999 mem: location 1191 is 1025
9999 mem: storing 19 in location 1025
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 52 -> 51
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 51 -> 52
 109 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 109 run: jump 
9998 run: jumping to instruction 7
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 109 run: c:character <- index *text, i
9999 mem: location 1127 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1129 is 2
9998 run: address to copy is 1381
9998 run: its type is character
9999 mem: location 1381 is 32
9999 mem: storing 32 in location 1131
 109 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 52 -> 53
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 19
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 53 -> 54
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 19
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 19
9999 mem: storing 19 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 19
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 39 -> 40
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 19
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 19
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 40 -> 41
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 19
9999 mem: storing 1048 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1048
9999 mem: storing 32 in location 1048
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 19
9999 mem: location 1191 is 1025
9999 mem: storing 20 in location 1025
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 54 -> 53
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 53 -> 54
 109 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 109 run: jump 
9998 run: jumping to instruction 7
 109 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 109 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 109 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 54 -> 53
9999 mem: storing 1024 in location 1330
9999 mem: incrementing refcount of 1024: 53 -> 54
 108 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 3 in location 1337
9999 mem: storing 1 in location 1338
 108 run: jump-if optional-ingredient-found?, 
9999 mem: location 1338 is 1
9998 run: jumping to instruction 24
 108 run: jump-unless remaining, 
9999 mem: location 1337 is 3
9998 run: jump-unless fell through
 108 run: remaining <- subtract remaining, 1
9999 mem: location 1337 is 3
9999 mem: storing 2 in location 1337
 108 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1332 is 1008
9999 mem: location 1330 is 1024
9999 mem: location 1337 is 2
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1382
9999 mem: storing 11 in location 1383
 109 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1385
9999 mem: incrementing refcount of 1008: 20 -> 21
 109 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1386
9999 mem: incrementing refcount of 1024: 54 -> 55
 109 run: jump-if in, 
9999 mem: location 1385 is 1008
9998 run: jumping to instruction 7
 109 run: val:_elem <- get *in, value:offset
9999 mem: location 1385 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1385 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1387
 109 run: buf <- append_6 buf, val
9999 mem: location 1386 is 1024
9999 mem: location 1387 is 4
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 110 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 55 -> 56
 110 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 110 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 111 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 111 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 111 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 111 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 111 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 111 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 112 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 112 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1395
9999 mem: storing 1395 in location 1021
9999 mem: incrementing refcount of 1395: 0 -> 1
 112 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1021 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9999 mem: storing 1396 in location 1022
 112 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1396
9999 mem: storing 0 in location 1396
 112 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1021 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1397
9999 mem: storing 1397 in location 1023
 112 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1398
9999 mem: storing 30 in location 1399
9999 mem: location 1023 is 1397
9999 mem: storing 1398 in location 1397
9999 mem: incrementing refcount of 1398: 0 -> 1
 112 run: reply result
9999 mem: location 1021 is 1395
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1395
9999 mem: storing 1395 in location 1139
9999 mem: incrementing refcount of 1395: 1 -> 2
 111 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 111 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 111 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 111 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 111 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 111 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1395
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1395 in location 1189
9999 mem: incrementing refcount of 1395: 2 -> 3
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 1398
9999 mem: location 1189 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9999 mem: storing 1396 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1395
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1395 in location 1003
9999 mem: incrementing refcount of 1395: 3 -> 4
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 1398
9999 mem: location 1003 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9998 run: its type is number
9999 mem: location 1396 is 0
9999 mem: storing 0 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 1398
9999 mem: location 1003 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1397
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1397 is 1398
9999 mem: storing 1398 in location 1005
9999 mem: incrementing refcount of 1398: 1 -> 2
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1398
9999 mem: skipping refcount at 1398
9999 mem: storing 30 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 0
9999 mem: location 1397 is 1398
9999 mem: location 1189 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1397
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1397 is 1398
9999 mem: storing 1398 in location 1195
9999 mem: incrementing refcount of 1398: 2 -> 3
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1191 is 1396
9999 mem: location 1396 is 0
9999 mem: storing 1400 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1400
9999 mem: storing 52 in location 1400
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1396
9999 mem: location 1396 is 0
9999 mem: location 1191 is 1396
9999 mem: storing 1 in location 1396
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1395
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1395
9999 mem: decrementing refcount of 1395: 4 -> 3
9999 mem: storing 1395 in location 1139
9999 mem: incrementing refcount of 1395: 3 -> 4
 111 run: jump 
9998 run: jumping to instruction 17
 111 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 111 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 111 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 111 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 1
9999 mem: location 1397 is 1398
9999 mem: location 1139 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9998 run: its type is number
9999 mem: location 1396 is 1
9999 mem: storing 1 in location 1145
 111 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1395
9999 mem: skipping refcount at 1395
9999 mem: location 1396 is 1
9999 mem: location 1397 is 1398
9999 mem: location 1139 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1397
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1397 is 1398
9999 mem: storing 1398 in location 1146
9999 mem: incrementing refcount of 1398: 3 -> 4
 111 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1430
9999 mem: storing 1 in location 1431
9999 mem: storing 1430 in location 1136
9999 mem: incrementing refcount of 1430: 0 -> 1
 111 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 111 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 111 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 111 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 111 run: src:character <- index *buf, i
9999 mem: location 1146 is 1398
9999 mem: skipping refcount at 1398
9998 run: base address is 1399
9999 mem: location 1147 is 0
9998 run: address to copy is 1400
9998 run: its type is character
9999 mem: location 1400 is 52
9999 mem: storing 52 in location 1149
 111 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1148 is 0
9999 mem: storing 1432 in location 1150
 111 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1432
9999 mem: storing 52 in location 1432
 111 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 111 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 111 run: jump 
9998 run: jumping to instruction 35
 111 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 111 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 111 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1430
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1430
9999 mem: storing 1430 in location 1127
9999 mem: incrementing refcount of 1430: 1 -> 2
 110 run: len:number <- length *text
9999 mem: location 1127 is 1430
9999 mem: skipping refcount at 1430
9999 mem: storing 1 in location 1128
 110 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 110 run: c:character <- index *text, i
9999 mem: location 1127 is 1430
9999 mem: skipping refcount at 1430
9998 run: base address is 1431
9999 mem: location 1129 is 0
9998 run: address to copy is 1432
9998 run: its type is character
9999 mem: location 1432 is 52
9999 mem: storing 52 in location 1131
 110 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 56 -> 57
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 20
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 57 -> 58
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 20
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 20
9999 mem: storing 20 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 20
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 41 -> 42
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 20
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 20
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 42 -> 43
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 20
9999 mem: storing 1049 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1049
9999 mem: storing 52 in location 1049
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 20
9999 mem: location 1191 is 1025
9999 mem: storing 21 in location 1025
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 58 -> 57
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 57 -> 58
 110 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 110 run: jump 
9998 run: jumping to instruction 7
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 110 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 58 -> 57
9999 mem: storing 1024 in location 1386
9999 mem: incrementing refcount of 1024: 57 -> 58
 109 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1385 is 1008
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 110 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 21 -> 22
 110 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 22 -> 23
 110 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1388
9999 mem: incrementing refcount of 1008: 23 -> 24
 109 run: nextn:number <- copy next
9999 mem: location 1388 is 1008
9999 mem: storing 1008 in location 1389
 109 run: jump-if next, 1:offset
9999 mem: location 1388 is 1008
9998 run: jumping to instruction 14
 109 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1390
 109 run: buf <- append_2 buf, space:character
9999 mem: location 1386 is 1024
9999 mem: location 1390 is 32
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 110 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 58 -> 59
 110 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 110 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 21
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 110 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 110 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 110 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 59 -> 60
 111 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 21
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 21
9999 mem: storing 21 in location 1004
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 21
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 43 -> 44
 111 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 111 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 21
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 111 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 110 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 110 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 21
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 44 -> 45
 110 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 21
9999 mem: storing 1050 in location 1196
 110 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1050
9999 mem: storing 32 in location 1050
 110 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 21
9999 mem: location 1191 is 1025
9999 mem: storing 22 in location 1025
 110 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 60 -> 59
9999 mem: storing 1024 in location 1386
9999 mem: incrementing refcount of 1024: 59 -> 60
 109 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1433 in location 1391
9999 mem: incrementing refcount of 1433: 0 -> 1
 109 run: n:number <- length *s
9999 mem: location 1391 is 1433
9999 mem: skipping refcount at 1433
9999 mem: storing 3 in location 1392
 109 run: buf <- append_7 buf, s
9999 mem: location 1386 is 1024
9999 mem: location 1391 is 1433
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 110 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 60 -> 61
 110 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1126
9999 mem: incrementing refcount of 1433: 1 -> 2
 110 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1433
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 111 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1213
9999 mem: incrementing refcount of 1433: 2 -> 3
 111 run: reply x
9999 mem: location 1213 is 1433
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1433
9999 mem: storing 1433 in location 1127
9999 mem: incrementing refcount of 1433: 3 -> 4
 110 run: len:number <- length *text
9999 mem: location 1127 is 1433
9999 mem: skipping refcount at 1433
9999 mem: storing 3 in location 1128
 110 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 110 run: c:character <- index *text, i
9999 mem: location 1127 is 1433
9999 mem: skipping refcount at 1433
9998 run: base address is 1434
9999 mem: location 1129 is 0
9998 run: address to copy is 1435
9998 run: its type is character
9999 mem: location 1435 is 45
9999 mem: storing 45 in location 1131
 110 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 61 -> 62
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 22
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 62 -> 63
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 22
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 22
9999 mem: storing 22 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 22
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 45 -> 46
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 22
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 22
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 46 -> 47
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 22
9999 mem: storing 1051 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1051
9999 mem: storing 45 in location 1051
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 22
9999 mem: location 1191 is 1025
9999 mem: storing 23 in location 1025
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 63 -> 62
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 62 -> 63
 110 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 110 run: jump 
9998 run: jumping to instruction 7
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 110 run: c:character <- index *text, i
9999 mem: location 1127 is 1433
9999 mem: skipping refcount at 1433
9998 run: base address is 1434
9999 mem: location 1129 is 1
9998 run: address to copy is 1436
9998 run: its type is character
9999 mem: location 1436 is 62
9999 mem: storing 62 in location 1131
 110 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 63 -> 64
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 23
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 64 -> 65
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 23
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 23
9999 mem: storing 23 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 23
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 47 -> 48
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 23
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 23
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 48 -> 49
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 23
9999 mem: storing 1052 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1052
9999 mem: storing 62 in location 1052
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 23
9999 mem: location 1191 is 1025
9999 mem: storing 24 in location 1025
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 65 -> 64
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 64 -> 65
 110 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 110 run: jump 
9998 run: jumping to instruction 7
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 110 run: c:character <- index *text, i
9999 mem: location 1127 is 1433
9999 mem: skipping refcount at 1433
9998 run: base address is 1434
9999 mem: location 1129 is 2
9998 run: address to copy is 1437
9998 run: its type is character
9999 mem: location 1437 is 32
9999 mem: storing 32 in location 1131
 110 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 65 -> 66
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 24
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 66 -> 67
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 24
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 24
9999 mem: storing 24 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 24
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 49 -> 50
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 24
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 24
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 50 -> 51
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 24
9999 mem: storing 1053 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1053
9999 mem: storing 32 in location 1053
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 24
9999 mem: location 1191 is 1025
9999 mem: storing 25 in location 1025
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 67 -> 66
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 66 -> 67
 110 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 110 run: jump 
9998 run: jumping to instruction 7
 110 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 110 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 110 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 67 -> 66
9999 mem: storing 1024 in location 1386
9999 mem: incrementing refcount of 1024: 66 -> 67
 109 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 2 in location 1393
9999 mem: storing 1 in location 1394
 109 run: jump-if optional-ingredient-found?, 
9999 mem: location 1394 is 1
9998 run: jumping to instruction 24
 109 run: jump-unless remaining, 
9999 mem: location 1393 is 2
9998 run: jump-unless fell through
 109 run: remaining <- subtract remaining, 1
9999 mem: location 1393 is 2
9999 mem: storing 1 in location 1393
 109 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1388 is 1008
9999 mem: location 1386 is 1024
9999 mem: location 1393 is 1
9999 trace: incrementing callstack depth to 9
 110 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1438
9999 mem: storing 11 in location 1439
 110 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1441
9999 mem: incrementing refcount of 1008: 24 -> 25
 110 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1442
9999 mem: incrementing refcount of 1024: 67 -> 68
 110 run: jump-if in, 
9999 mem: location 1441 is 1008
9998 run: jumping to instruction 7
 110 run: val:_elem <- get *in, value:offset
9999 mem: location 1441 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1441 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1443
 110 run: buf <- append_6 buf, val
9999 mem: location 1442 is 1024
9999 mem: location 1443 is 4
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 111 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 68 -> 69
 111 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 111 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 112 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 112 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 112 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 112 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 112 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 112 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 113 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 113 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1451
9999 mem: storing 1451 in location 1021
9999 mem: incrementing refcount of 1451: 0 -> 1
 113 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1021 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9999 mem: storing 1452 in location 1022
 113 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1452
9999 mem: storing 0 in location 1452
 113 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1021 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1453
9999 mem: storing 1453 in location 1023
 113 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1454
9999 mem: storing 30 in location 1455
9999 mem: location 1023 is 1453
9999 mem: storing 1454 in location 1453
9999 mem: incrementing refcount of 1454: 0 -> 1
 113 run: reply result
9999 mem: location 1021 is 1451
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1451
9999 mem: storing 1451 in location 1139
9999 mem: incrementing refcount of 1451: 1 -> 2
 112 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 112 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 112 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 112 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 112 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 112 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1451
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1189
9999 mem: incrementing refcount of 1451: 2 -> 3
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1454
9999 mem: location 1189 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9999 mem: storing 1452 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1451
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1003
9999 mem: incrementing refcount of 1451: 3 -> 4
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1454
9999 mem: location 1003 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is number
9999 mem: location 1452 is 0
9999 mem: storing 0 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1454
9999 mem: location 1003 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1453 is 1454
9999 mem: storing 1454 in location 1005
9999 mem: incrementing refcount of 1454: 1 -> 2
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1454
9999 mem: skipping refcount at 1454
9999 mem: storing 30 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1454
9999 mem: location 1189 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1453 is 1454
9999 mem: storing 1454 in location 1195
9999 mem: incrementing refcount of 1454: 2 -> 3
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1191 is 1452
9999 mem: location 1452 is 0
9999 mem: storing 1456 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1456
9999 mem: storing 52 in location 1456
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1452
9999 mem: location 1452 is 0
9999 mem: location 1191 is 1452
9999 mem: storing 1 in location 1452
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1451
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1451
9999 mem: decrementing refcount of 1451: 4 -> 3
9999 mem: storing 1451 in location 1139
9999 mem: incrementing refcount of 1451: 3 -> 4
 112 run: jump 
9998 run: jumping to instruction 17
 112 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 112 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 112 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 112 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1
9999 mem: location 1453 is 1454
9999 mem: location 1139 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is number
9999 mem: location 1452 is 1
9999 mem: storing 1 in location 1145
 112 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1
9999 mem: location 1453 is 1454
9999 mem: location 1139 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1453 is 1454
9999 mem: storing 1454 in location 1146
9999 mem: incrementing refcount of 1454: 3 -> 4
 112 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1486
9999 mem: storing 1 in location 1487
9999 mem: storing 1486 in location 1136
9999 mem: incrementing refcount of 1486: 0 -> 1
 112 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 112 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 112 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 112 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 112 run: src:character <- index *buf, i
9999 mem: location 1146 is 1454
9999 mem: skipping refcount at 1454
9998 run: base address is 1455
9999 mem: location 1147 is 0
9998 run: address to copy is 1456
9998 run: its type is character
9999 mem: location 1456 is 52
9999 mem: storing 52 in location 1149
 112 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1486
9999 mem: skipping refcount at 1486
9999 mem: location 1148 is 0
9999 mem: storing 1488 in location 1150
 112 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1488
9999 mem: storing 52 in location 1488
 112 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 112 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 112 run: jump 
9998 run: jumping to instruction 35
 112 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 112 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 112 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1486
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1486
9999 mem: storing 1486 in location 1127
9999 mem: incrementing refcount of 1486: 1 -> 2
 111 run: len:number <- length *text
9999 mem: location 1127 is 1486
9999 mem: skipping refcount at 1486
9999 mem: storing 1 in location 1128
 111 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 111 run: c:character <- index *text, i
9999 mem: location 1127 is 1486
9999 mem: skipping refcount at 1486
9998 run: base address is 1487
9999 mem: location 1129 is 0
9998 run: address to copy is 1488
9998 run: its type is character
9999 mem: location 1488 is 52
9999 mem: storing 52 in location 1131
 111 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 69 -> 70
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 25
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 70 -> 71
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 25
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 25
9999 mem: storing 25 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 25
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 51 -> 52
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 25
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 25
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 52 -> 53
9990 schedule: append_2/append_6/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-text-line_3/run_1001/scenario_stash-handles-list-with-cycle
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 25
9999 mem: storing 1054 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1054
9999 mem: storing 52 in location 1054
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 25
9999 mem: location 1191 is 1025
9999 mem: storing 26 in location 1025
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 71 -> 70
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 70 -> 71
 111 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 111 run: jump 
9998 run: jumping to instruction 7
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 111 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 71 -> 70
9999 mem: storing 1024 in location 1442
9999 mem: incrementing refcount of 1024: 70 -> 71
 110 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1441 is 1008
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 111 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 25 -> 26
 111 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 26 -> 27
 111 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1444
9999 mem: incrementing refcount of 1008: 27 -> 28
 110 run: nextn:number <- copy next
9999 mem: location 1444 is 1008
9999 mem: storing 1008 in location 1445
 110 run: jump-if next, 1:offset
9999 mem: location 1444 is 1008
9998 run: jumping to instruction 14
 110 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1446
 110 run: buf <- append_2 buf, space:character
9999 mem: location 1442 is 1024
9999 mem: location 1446 is 32
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 111 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 71 -> 72
 111 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 111 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 26
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 111 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 111 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 111 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 72 -> 73
 112 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 26
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 26
9999 mem: storing 26 in location 1004
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 26
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 53 -> 54
 112 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 112 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 26
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 112 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 111 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 111 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 26
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 54 -> 55
 111 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 26
9999 mem: storing 1055 in location 1196
 111 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1055
9999 mem: storing 32 in location 1055
 111 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 26
9999 mem: location 1191 is 1025
9999 mem: storing 27 in location 1025
 111 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 73 -> 72
9999 mem: storing 1024 in location 1442
9999 mem: incrementing refcount of 1024: 72 -> 73
 110 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1489 in location 1447
9999 mem: incrementing refcount of 1489: 0 -> 1
 110 run: n:number <- length *s
9999 mem: location 1447 is 1489
9999 mem: skipping refcount at 1489
9999 mem: storing 3 in location 1448
 110 run: buf <- append_7 buf, s
9999 mem: location 1442 is 1024
9999 mem: location 1447 is 1489
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 111 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 73 -> 74
 111 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1489 in location 1126
9999 mem: incrementing refcount of 1489: 1 -> 2
 111 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1489
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 112 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1489 in location 1213
9999 mem: incrementing refcount of 1489: 2 -> 3
 112 run: reply x
9999 mem: location 1213 is 1489
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1489
9999 mem: storing 1489 in location 1127
9999 mem: incrementing refcount of 1489: 3 -> 4
 111 run: len:number <- length *text
9999 mem: location 1127 is 1489
9999 mem: skipping refcount at 1489
9999 mem: storing 3 in location 1128
 111 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 111 run: c:character <- index *text, i
9999 mem: location 1127 is 1489
9999 mem: skipping refcount at 1489
9998 run: base address is 1490
9999 mem: location 1129 is 0
9998 run: address to copy is 1491
9998 run: its type is character
9999 mem: location 1491 is 45
9999 mem: storing 45 in location 1131
 111 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 74 -> 75
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 27
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 75 -> 76
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 27
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 27
9999 mem: storing 27 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 27
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 55 -> 56
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 27
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 27
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 56 -> 57
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 27
9999 mem: storing 1056 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1056
9999 mem: storing 45 in location 1056
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 27
9999 mem: location 1191 is 1025
9999 mem: storing 28 in location 1025
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 76 -> 75
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 75 -> 76
 111 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 111 run: jump 
9998 run: jumping to instruction 7
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 111 run: c:character <- index *text, i
9999 mem: location 1127 is 1489
9999 mem: skipping refcount at 1489
9998 run: base address is 1490
9999 mem: location 1129 is 1
9998 run: address to copy is 1492
9998 run: its type is character
9999 mem: location 1492 is 62
9999 mem: storing 62 in location 1131
 111 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 76 -> 77
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 28
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 77 -> 78
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 28
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 28
9999 mem: storing 28 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 28
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 57 -> 58
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 28
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 28
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 58 -> 59
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 28
9999 mem: storing 1057 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1057
9999 mem: storing 62 in location 1057
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 28
9999 mem: location 1191 is 1025
9999 mem: storing 29 in location 1025
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 78 -> 77
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 77 -> 78
 111 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 111 run: jump 
9998 run: jumping to instruction 7
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 111 run: c:character <- index *text, i
9999 mem: location 1127 is 1489
9999 mem: skipping refcount at 1489
9998 run: base address is 1490
9999 mem: location 1129 is 2
9998 run: address to copy is 1493
9998 run: its type is character
9999 mem: location 1493 is 32
9999 mem: storing 32 in location 1131
 111 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 78 -> 79
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 29
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 79 -> 80
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 29
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 29
9999 mem: storing 29 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 29
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 59 -> 60
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 29
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 29
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 60 -> 61
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 29
9999 mem: storing 1058 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1058
9999 mem: storing 32 in location 1058
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 29
9999 mem: location 1191 is 1025
9999 mem: storing 30 in location 1025
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 80 -> 79
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 79 -> 80
 111 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 111 run: jump 
9998 run: jumping to instruction 7
 111 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 111 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 111 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 80 -> 79
9999 mem: storing 1024 in location 1442
9999 mem: incrementing refcount of 1024: 79 -> 80
 110 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 1 in location 1449
9999 mem: storing 1 in location 1450
 110 run: jump-if optional-ingredient-found?, 
9999 mem: location 1450 is 1
9998 run: jumping to instruction 24
 110 run: jump-unless remaining, 
9999 mem: location 1449 is 1
9998 run: jump-unless fell through
 110 run: remaining <- subtract remaining, 1
9999 mem: location 1449 is 1
9999 mem: storing 0 in location 1449
 110 run: buf <- to-buffer_2 next, buf, remaining
9999 mem: location 1444 is 1008
9999 mem: location 1442 is 1024
9999 mem: location 1449 is 0
9999 trace: incrementing callstack depth to 10
 111 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1494
9999 mem: storing 11 in location 1495
 111 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 28 -> 29
 111 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1498
9999 mem: incrementing refcount of 1024: 80 -> 81
 111 run: jump-if in, 
9999 mem: location 1497 is 1008
9998 run: jumping to instruction 7
 111 run: val:_elem <- get *in, value:offset
9999 mem: location 1497 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1497 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1499
 111 run: buf <- append_6 buf, val
9999 mem: location 1498 is 1024
9999 mem: location 1499 is 4
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 112 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 81 -> 82
 112 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1126
 112 run: text:address:shared:array:character <- to-text_2 x
9999 mem: location 1126 is 4
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 113 run: n:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1135
 113 run: jump-if n, 
9999 mem: location 1135 is 4
9998 run: jumping to instruction 6
 113 run: negate-result:boolean <- copy 0
9999 mem: storing 0 in location 1137
 113 run: negative?:boolean <- lesser-than n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1138
 113 run: jump-unless negative?, 
9999 mem: location 1138 is 0
9998 run: jumping to instruction 13
 113 run: tmp:address:shared:buffer <- new-buffer 30
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 114 run: capacity:number <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1020
 114 run: result <- new buffer:type
9999 mem: allocating size 3
9999 mem: new alloc: 1507
9999 mem: storing 1507 in location 1021
9999 mem: incrementing refcount of 1507: 0 -> 1
 114 run: len:address:number <- get-address *result, length:offset
9999 mem: location 1021 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1021 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1508
9999 mem: storing 1508 in location 1022
 114 run: *len:address:number <- copy 0
9999 mem: location 1022 is 1508
9999 mem: storing 0 in location 1508
 114 run: s:address:address:shared:array:character <- get-address *result, data:offset
9999 mem: location 1021 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1021 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9999 mem: storing 1509 in location 1023
 114 run: *s <- new character:type, capacity
9999 mem: location 1020 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1510
9999 mem: storing 30 in location 1511
9999 mem: location 1023 is 1509
9999 mem: storing 1510 in location 1509
9999 mem: incrementing refcount of 1510: 0 -> 1
 114 run: reply result
9999 mem: location 1021 is 1507
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 1507
9999 mem: storing 1507 in location 1139
9999 mem: incrementing refcount of 1507: 1 -> 2
 113 run: digit-base:number <- copy 48
9999 mem: storing 48 in location 1140
 113 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1141
 113 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 113 run: n, digit:number <- divide-with-remainder n, 10
9999 mem: location 1135 is 4
9999 mem: storing 0 in location 1135
9999 mem: storing 4 in location 1142
 113 run: c:character <- add digit-base, digit
9999 mem: location 1140 is 48
9999 mem: location 1142 is 4
9999 mem: storing 52 in location 1143
 113 run: tmp:address:shared:buffer <- append_2 tmp, c
9999 mem: location 1139 is 1507
9999 mem: location 1143 is 52
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1507 in location 1189
9999 mem: incrementing refcount of 1507: 2 -> 3
 114 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 114 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 1510
9999 mem: location 1189 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1508
9999 mem: storing 1508 in location 1191
 114 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 114 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 114 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1507
9999 trace: incrementing callstack depth to 14
 115 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 115 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1507 in location 1003
9999 mem: incrementing refcount of 1507: 3 -> 4
 115 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 1510
9999 mem: location 1003 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1508
9998 run: its type is number
9999 mem: location 1508 is 0
9999 mem: storing 0 in location 1004
 115 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 1510
9999 mem: location 1003 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1509 is 1510
9999 mem: storing 1510 in location 1005
9999 mem: incrementing refcount of 1510: 1 -> 2
 115 run: capacity:number <- length *s
9999 mem: location 1005 is 1510
9999 mem: skipping refcount at 1510
9999 mem: storing 30 in location 1006
 115 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 115 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 14
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 114 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 1510
9999 mem: location 1189 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1509 is 1510
9999 mem: storing 1510 in location 1195
9999 mem: incrementing refcount of 1510: 2 -> 3
 114 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1510
9999 mem: skipping refcount at 1510
9999 mem: location 1191 is 1508
9999 mem: location 1508 is 0
9999 mem: storing 1512 in location 1196
 114 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1512
9999 mem: storing 52 in location 1512
 114 run: *len <- add *len, 1
9999 mem: location 1191 is 1508
9999 mem: location 1508 is 0
9999 mem: location 1191 is 1508
9999 mem: storing 1 in location 1508
 114 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1507
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 1507
9999 mem: decrementing refcount of 1507: 4 -> 3
9999 mem: storing 1507 in location 1139
9999 mem: incrementing refcount of 1507: 3 -> 4
 113 run: jump 
9998 run: jumping to instruction 17
 113 run: done?:boolean <- equal n, 0
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1141
 113 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 23
 113 run: jump-unless negate-result:boolean, 
9999 mem: location 1137 is 0
9998 run: jumping to instruction 28
 113 run: len:number <- get *tmp, length:offset
9999 mem: location 1139 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 1
9999 mem: location 1509 is 1510
9999 mem: location 1139 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1508
9998 run: its type is number
9999 mem: location 1508 is 1
9999 mem: storing 1 in location 1145
 113 run: buf:address:shared:array:character <- get *tmp, data:offset
9999 mem: location 1139 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 1
9999 mem: location 1509 is 1510
9999 mem: location 1139 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1509 is 1510
9999 mem: storing 1510 in location 1146
9999 mem: incrementing refcount of 1510: 3 -> 4
 113 run: result <- new character:type, len
9999 mem: location 1145 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 1542
9999 mem: storing 1 in location 1543
9999 mem: storing 1542 in location 1136
9999 mem: incrementing refcount of 1542: 0 -> 1
 113 run: i:number <- subtract len, 1
9999 mem: location 1145 is 1
9999 mem: storing 0 in location 1147
 113 run: j:number <- copy 0
9999 mem: storing 0 in location 1148
 113 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1141
 113 run: jump-if done?, 
9999 mem: location 1141 is 0
9998 run: jump-if fell through
 113 run: src:character <- index *buf, i
9999 mem: location 1146 is 1510
9999 mem: skipping refcount at 1510
9998 run: base address is 1511
9999 mem: location 1147 is 0
9998 run: address to copy is 1512
9998 run: its type is character
9999 mem: location 1512 is 52
9999 mem: storing 52 in location 1149
 113 run: dest:address:character <- index-address *result, j
9999 mem: location 1136 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1148 is 0
9999 mem: storing 1544 in location 1150
 113 run: *dest <- copy src
9999 mem: location 1149 is 52
9999 mem: location 1150 is 1544
9999 mem: storing 52 in location 1544
 113 run: i <- subtract i, 1
9999 mem: location 1147 is 0
9999 mem: storing -1 in location 1147
 113 run: j <- add j, 1
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 113 run: jump 
9998 run: jumping to instruction 35
 113 run: done?:boolean <- lesser-than i, 0
9999 mem: location 1147 is -1
9999 mem: storing 1 in location 1141
 113 run: jump-if done?, 
9999 mem: location 1141 is 1
9998 run: jumping to instruction 43
 113 run: reply result:address:shared:array:character
9999 mem: location 1136 is 1542
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1542
9999 mem: storing 1542 in location 1127
9999 mem: incrementing refcount of 1542: 1 -> 2
 112 run: len:number <- length *text
9999 mem: location 1127 is 1542
9999 mem: skipping refcount at 1542
9999 mem: storing 1 in location 1128
 112 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1542
9999 mem: skipping refcount at 1542
9998 run: base address is 1543
9999 mem: location 1129 is 0
9998 run: address to copy is 1544
9998 run: its type is character
9999 mem: location 1544 is 52
9999 mem: storing 52 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 52
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 82 -> 83
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 30
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 52
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 83 -> 84
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 30
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 30
9999 mem: storing 30 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 30
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 61 -> 62
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 30
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 30
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 62 -> 63
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 30
9999 mem: storing 1059 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 52
9999 mem: location 1196 is 1059
9999 mem: storing 52 in location 1059
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 30
9999 mem: location 1191 is 1025
9999 mem: storing 31 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 84 -> 83
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 83 -> 84
 112 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 112 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 84 -> 83
9999 mem: storing 1024 in location 1498
9999 mem: incrementing refcount of 1024: 83 -> 84
 111 run: next:address:shared:list:_elem <- rest_3 in
9999 mem: location 1497 is 1008
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 112 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1203
9999 mem: incrementing refcount of 1008: 29 -> 30
 112 run: result <- get *in, next:offset
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: checking size of type ingredient

9999 type: type deduced to be number$
9999 mem: location 1009 is 4
9999 mem: location 1010 is 1008
9999 mem: location 1203 is 1008
9999 mem: skipping refcount at 1008
9999 type: type deduced to be number$
9998 run: address to copy is 1010
9998 run: its type is <address : <shared : <list : <number : <>>>>>
9999 mem: location 1010 is 1008
9999 mem: storing 1008 in location 1204
9999 mem: incrementing refcount of 1008: 30 -> 31
 112 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1204 is 1008
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1500
9999 mem: incrementing refcount of 1008: 31 -> 32
 111 run: nextn:number <- copy next
9999 mem: location 1500 is 1008
9999 mem: storing 1008 in location 1501
 111 run: jump-if next, 1:offset
9999 mem: location 1500 is 1008
9998 run: jumping to instruction 14
 111 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1502
 111 run: buf <- append_2 buf, space:character
9999 mem: location 1498 is 1024
9999 mem: location 1502 is 32
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 112 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 84 -> 85
 112 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 112 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 31
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 112 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 112 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 112 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 85 -> 86
 113 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 31
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 31
9999 mem: storing 31 in location 1004
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 31
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 63 -> 64
 113 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 113 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 31
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 113 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 112 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 112 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 31
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 64 -> 65
 112 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 31
9999 mem: storing 1060 in location 1196
 112 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1060
9999 mem: storing 32 in location 1060
 112 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 31
9999 mem: location 1191 is 1025
9999 mem: storing 32 in location 1025
 112 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 86 -> 85
9999 mem: storing 1024 in location 1498
9999 mem: incrementing refcount of 1024: 85 -> 86
 111 run: s:address:shared:array:character <- new [-> ]
9999 mem: storing 1545 in location 1503
9999 mem: incrementing refcount of 1545: 0 -> 1
 111 run: n:number <- length *s
9999 mem: location 1503 is 1545
9999 mem: skipping refcount at 1545
9999 mem: storing 3 in location 1504
 111 run: buf <- append_7 buf, s
9999 mem: location 1498 is 1024
9999 mem: location 1503 is 1545
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 112 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 86 -> 87
 112 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1545 in location 1126
9999 mem: incrementing refcount of 1545: 1 -> 2
 112 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1545
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 113 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1545 in location 1213
9999 mem: incrementing refcount of 1545: 2 -> 3
 113 run: reply x
9999 mem: location 1213 is 1545
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1545
9999 mem: storing 1545 in location 1127
9999 mem: incrementing refcount of 1545: 3 -> 4
 112 run: len:number <- length *text
9999 mem: location 1127 is 1545
9999 mem: skipping refcount at 1545
9999 mem: storing 3 in location 1128
 112 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1545
9999 mem: skipping refcount at 1545
9998 run: base address is 1546
9999 mem: location 1129 is 0
9998 run: address to copy is 1547
9998 run: its type is character
9999 mem: location 1547 is 45
9999 mem: storing 45 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 45
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 87 -> 88
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 32
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 45
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 88 -> 89
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 32
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 32
9999 mem: storing 32 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 32
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 65 -> 66
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 32
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 32
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 66 -> 67
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 32
9999 mem: storing 1061 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 45
9999 mem: location 1196 is 1061
9999 mem: storing 45 in location 1061
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 32
9999 mem: location 1191 is 1025
9999 mem: storing 33 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 89 -> 88
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 88 -> 89
 112 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1545
9999 mem: skipping refcount at 1545
9998 run: base address is 1546
9999 mem: location 1129 is 1
9998 run: address to copy is 1548
9998 run: its type is character
9999 mem: location 1548 is 62
9999 mem: storing 62 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 62
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 89 -> 90
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 62 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 33
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 62
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 90 -> 91
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 33
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 33
9999 mem: storing 33 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 33
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 67 -> 68
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 33
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 33
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 68 -> 69
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 33
9999 mem: storing 1062 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 62
9999 mem: location 1196 is 1062
9999 mem: storing 62 in location 1062
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 33
9999 mem: location 1191 is 1025
9999 mem: storing 34 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 91 -> 90
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 90 -> 91
 112 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1545
9999 mem: skipping refcount at 1545
9998 run: base address is 1546
9999 mem: location 1129 is 2
9998 run: address to copy is 1549
9998 run: its type is character
9999 mem: location 1549 is 32
9999 mem: storing 32 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 32
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 91 -> 92
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 34
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 32
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 92 -> 93
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 34
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 34
9999 mem: storing 34 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 34
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 69 -> 70
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 34
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 34
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 70 -> 71
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 34
9999 mem: storing 1063 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 32
9999 mem: location 1196 is 1063
9999 mem: storing 32 in location 1063
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 34
9999 mem: location 1191 is 1025
9999 mem: storing 35 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 93 -> 92
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 92 -> 93
 112 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 112 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 11
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 93 -> 92
9999 mem: storing 1024 in location 1498
9999 mem: incrementing refcount of 1024: 92 -> 93
 111 run: remaining:number, optional-ingredient-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1505
9999 mem: storing 1 in location 1506
 111 run: jump-if optional-ingredient-found?, 
9999 mem: location 1506 is 1
9998 run: jumping to instruction 24
 111 run: jump-unless remaining, 
9999 mem: location 1505 is 0
9998 run: jumping to instruction 30
 111 run: s:address:shared:array:character <- new [...]
9999 mem: decrementing refcount of 1545: 4 -> 3
9999 mem: storing 1550 in location 1503
9999 mem: incrementing refcount of 1550: 0 -> 1
 111 run: append_7 buf, s
9999 mem: location 1498 is 1024
9999 mem: location 1503 is 1550
9999 trace: incrementing callstack depth to 11
 112 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 112 run: buf:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 93 -> 94
 112 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1550 in location 1126
9999 mem: incrementing refcount of 1550: 1 -> 2
 112 run: text:address:shared:array:character <- to-text x
9999 mem: location 1126 is 1550
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
 113 run: x:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1550 in location 1213
9999 mem: incrementing refcount of 1550: 2 -> 3
 113 run: reply x
9999 mem: location 1213 is 1550
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1550
9999 mem: storing 1550 in location 1127
9999 mem: incrementing refcount of 1550: 3 -> 4
 112 run: len:number <- length *text
9999 mem: location 1127 is 1550
9999 mem: skipping refcount at 1550
9999 mem: storing 3 in location 1128
 112 run: i:number <- copy 0
9999 mem: storing 0 in location 1129
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 0
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1550
9999 mem: skipping refcount at 1550
9998 run: base address is 1551
9999 mem: location 1129 is 0
9998 run: address to copy is 1552
9998 run: its type is character
9999 mem: location 1552 is 46
9999 mem: storing 46 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 46
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 94 -> 95
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 46 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 35
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 46
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 95 -> 96
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 35
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 35
9999 mem: storing 35 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 35
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 71 -> 72
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 35
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 35
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 72 -> 73
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 35
9999 mem: storing 1064 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 46
9999 mem: location 1196 is 1064
9999 mem: storing 46 in location 1064
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 35
9999 mem: location 1191 is 1025
9999 mem: storing 36 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 96 -> 95
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 95 -> 96
 112 run: i <- add i, 1
9999 mem: location 1129 is 0
9999 mem: storing 1 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 1
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1550
9999 mem: skipping refcount at 1550
9998 run: base address is 1551
9999 mem: location 1129 is 1
9998 run: address to copy is 1553
9998 run: its type is character
9999 mem: location 1553 is 46
9999 mem: storing 46 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 46
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 96 -> 97
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 46 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 36
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 46
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 97 -> 98
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 36
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 36
9999 mem: storing 36 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 36
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 73 -> 74
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 36
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 36
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 74 -> 75
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 36
9999 mem: storing 1065 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 46
9999 mem: location 1196 is 1065
9999 mem: storing 46 in location 1065
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 36
9999 mem: location 1191 is 1025
9999 mem: storing 37 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 98 -> 97
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 97 -> 98
 112 run: i <- add i, 1
9999 mem: location 1129 is 1
9999 mem: storing 2 in location 1129
9990 schedule: append_7/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-buffer_2/to-text-line_3/run_1001/scenario_stash-handles-list-with-cycle
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 2
9999 mem: location 1128 is 3
9999 mem: storing 0 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 112 run: c:character <- index *text, i
9999 mem: location 1127 is 1550
9999 mem: skipping refcount at 1550
9998 run: base address is 1551
9999 mem: location 1129 is 2
9998 run: address to copy is 1554
9998 run: its type is character
9999 mem: location 1554 is 46
9999 mem: storing 46 in location 1131
 112 run: buf <- append_2 buf, c
9999 mem: location 1125 is 1024
9999 mem: location 1131 is 46
9999 trace: incrementing callstack depth to 12
 113 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 113 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 98 -> 99
 113 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 46 in location 1190
 113 run: len:address:number <- get-address *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 37
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1191
 113 run: backspace?:boolean <- equal c, 8/backspace
9999 mem: location 1190 is 46
9999 mem: storing 0 in location 1192
 113 run: jump-unless backspace?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 12
 113 run: full?:boolean <- buffer-full? in
9999 mem: location 1189 is 1024
9999 trace: incrementing callstack depth to 13
 114 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 114 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1003
9999 mem: incrementing refcount of 1024: 99 -> 100
 114 run: len:number <- get *in, length:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 37
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 37
9999 mem: storing 37 in location 1004
 114 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 37
9999 mem: location 1026 is 1027
9999 mem: location 1003 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1005
9999 mem: incrementing refcount of 1027: 75 -> 76
 114 run: capacity:number <- length *s
9999 mem: location 1005 is 1027
9999 mem: skipping refcount at 1027
9999 mem: storing 80 in location 1006
 114 run: result <- greater-or-equal len, capacity
9999 mem: location 1004 is 37
9999 mem: location 1006 is 80
9999 mem: storing 0 in location 1007
 114 run: reply result:boolean
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 13
9998 run: result 0 is 0
9999 mem: storing 0 in location 1194
 113 run: jump-unless full?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 17
 113 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 37
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1195
9999 mem: incrementing refcount of 1027: 76 -> 77
 113 run: dest:address:character <- index-address *s, *len
9999 mem: location 1195 is 1027
9999 mem: skipping refcount at 1027
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 37
9999 mem: storing 1066 in location 1196
 113 run: *dest <- copy c
9999 mem: location 1190 is 46
9999 mem: location 1196 is 1066
9999 mem: storing 46 in location 1066
 113 run: *len <- add *len, 1
9999 mem: location 1191 is 1025
9999 mem: location 1025 is 37
9999 mem: location 1191 is 1025
9999 mem: storing 38 in location 1025
 113 run: reply in:address:shared:buffer
9999 mem: location 1189 is 1024
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 12
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1125
9999 mem: incrementing refcount of 1024: 99 -> 100
 112 run: i <- add i, 1
9999 mem: location 1129 is 2
9999 mem: storing 3 in location 1129
 112 run: jump 
9998 run: jumping to instruction 7
 112 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1129 is 3
9999 mem: location 1128 is 3
9999 mem: storing 1 in location 1130
 112 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 13
 112 run: reply buf:address:shared:buffer
9999 mem: location 1125 is 1024
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 11
 111 run: reply buf:address:shared:buffer
9999 mem: location 1498 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 10
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1442
9999 mem: incrementing refcount of 1024: 99 -> 100
 110 run: reply buf:address:shared:buffer
9999 mem: location 1442 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 9
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1386
9999 mem: incrementing refcount of 1024: 99 -> 100
 109 run: reply buf:address:shared:buffer
9999 mem: location 1386 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1330
9999 mem: incrementing refcount of 1024: 99 -> 100
 108 run: reply buf:address:shared:buffer
9999 mem: location 1330 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1274
9999 mem: incrementing refcount of 1024: 99 -> 100
 107 run: reply buf:address:shared:buffer
9999 mem: location 1274 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1218
9999 mem: incrementing refcount of 1024: 99 -> 100
 106 run: reply buf:address:shared:buffer
9999 mem: location 1218 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1113
9999 mem: incrementing refcount of 1024: 99 -> 100
 105 run: reply buf:address:shared:buffer
9999 mem: location 1113 is 1024
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1024
9999 mem: decrementing refcount of 1024: 100 -> 99
9999 mem: storing 1024 in location 1015
9999 mem: incrementing refcount of 1024: 99 -> 100
 104 run: result <- buffer-to-array buf
9999 mem: location 1015 is 1024
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
 105 run: in:address:shared:buffer <- next-ingredient-without-typechecking 
9999 mem: storing 1024 in location 1189
9999 mem: incrementing refcount of 1024: 100 -> 101
 105 run: jump-if in, 
9999 mem: location 1189 is 1024
9998 run: jumping to instruction 5
 105 run: len:number <- get *in, length:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 38
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1025
9998 run: its type is number
9999 mem: location 1025 is 38
9999 mem: storing 38 in location 1190
 105 run: s:address:shared:array:character <- get *in, data:offset
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9999 mem: location 1025 is 38
9999 mem: location 1026 is 1027
9999 mem: location 1189 is 1024
9999 mem: skipping refcount at 1024
9998 run: address to copy is 1026
9998 run: its type is <address : <shared : <array : <character : <>>>>>
9999 mem: location 1026 is 1027
9999 mem: storing 1027 in location 1191
9999 mem: incrementing refcount of 1027: 77 -> 78
 105 run: result <- new character:type, len
9999 mem: location 1190 is 38
9999 mem: array size is 38
9999 mem: allocating size 40
9999 mem: new alloc: 1555
9999 mem: storing 38 in location 1556
9999 mem: storing 1555 in location 1192
9999 mem: incrementing refcount of 1555: 0 -> 1
 105 run: i:number <- copy 0
9999 mem: storing 0 in location 1193
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 0
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 0
9998 run: address to copy is 1029
9998 run: its type is character
9999 mem: location 1029 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 0
9999 mem: storing 1557 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1557
9999 mem: storing 52 in location 1557
 105 run: i <- add i, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 1
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 1
9998 run: address to copy is 1030
9998 run: its type is character
9999 mem: location 1030 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 1
9999 mem: storing 1558 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1558
9999 mem: storing 32 in location 1558
 105 run: i <- add i, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 2
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 2
9998 run: address to copy is 1031
9998 run: its type is character
9999 mem: location 1031 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 2
9999 mem: storing 1559 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1559
9999 mem: storing 45 in location 1559
 105 run: i <- add i, 1
9999 mem: location 1193 is 2
9999 mem: storing 3 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 3
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 3
9998 run: address to copy is 1032
9998 run: its type is character
9999 mem: location 1032 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 3
9999 mem: storing 1560 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1560
9999 mem: storing 62 in location 1560
 105 run: i <- add i, 1
9999 mem: location 1193 is 3
9999 mem: storing 4 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 4
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 4
9998 run: address to copy is 1033
9998 run: its type is character
9999 mem: location 1033 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 4
9999 mem: storing 1561 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1561
9999 mem: storing 32 in location 1561
 105 run: i <- add i, 1
9999 mem: location 1193 is 4
9999 mem: storing 5 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 5
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 5
9998 run: address to copy is 1034
9998 run: its type is character
9999 mem: location 1034 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 5
9999 mem: storing 1562 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1562
9999 mem: storing 52 in location 1562
 105 run: i <- add i, 1
9999 mem: location 1193 is 5
9999 mem: storing 6 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 6
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 6
9998 run: address to copy is 1035
9998 run: its type is character
9999 mem: location 1035 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 6
9999 mem: storing 1563 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1563
9999 mem: storing 32 in location 1563
 105 run: i <- add i, 1
9999 mem: location 1193 is 6
9999 mem: storing 7 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 7
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 7
9998 run: address to copy is 1036
9998 run: its type is character
9999 mem: location 1036 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 7
9999 mem: storing 1564 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1564
9999 mem: storing 45 in location 1564
 105 run: i <- add i, 1
9999 mem: location 1193 is 7
9999 mem: storing 8 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 8
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 8
9998 run: address to copy is 1037
9998 run: its type is character
9999 mem: location 1037 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 8
9999 mem: storing 1565 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1565
9999 mem: storing 62 in location 1565
 105 run: i <- add i, 1
9999 mem: location 1193 is 8
9999 mem: storing 9 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 9
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 9
9998 run: address to copy is 1038
9998 run: its type is character
9999 mem: location 1038 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 9
9999 mem: storing 1566 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1566
9999 mem: storing 32 in location 1566
 105 run: i <- add i, 1
9999 mem: location 1193 is 9
9999 mem: storing 10 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 10
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 10
9998 run: address to copy is 1039
9998 run: its type is character
9999 mem: location 1039 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 10
9999 mem: storing 1567 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1567
9999 mem: storing 52 in location 1567
 105 run: i <- add i, 1
9999 mem: location 1193 is 10
9999 mem: storing 11 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 11
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 11
9998 run: address to copy is 1040
9998 run: its type is character
9999 mem: location 1040 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 11
9999 mem: storing 1568 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1568
9999 mem: storing 32 in location 1568
 105 run: i <- add i, 1
9999 mem: location 1193 is 11
9999 mem: storing 12 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 12
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 12
9998 run: address to copy is 1041
9998 run: its type is character
9999 mem: location 1041 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 12
9999 mem: storing 1569 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1569
9999 mem: storing 45 in location 1569
 105 run: i <- add i, 1
9999 mem: location 1193 is 12
9999 mem: storing 13 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 13
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 13
9998 run: address to copy is 1042
9998 run: its type is character
9999 mem: location 1042 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 13
9999 mem: storing 1570 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1570
9999 mem: storing 62 in location 1570
 105 run: i <- add i, 1
9999 mem: location 1193 is 13
9999 mem: storing 14 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 14
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 14
9998 run: address to copy is 1043
9998 run: its type is character
9999 mem: location 1043 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 14
9999 mem: storing 1571 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1571
9999 mem: storing 32 in location 1571
 105 run: i <- add i, 1
9999 mem: location 1193 is 14
9999 mem: storing 15 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 15
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 15
9998 run: address to copy is 1044
9998 run: its type is character
9999 mem: location 1044 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 15
9999 mem: storing 1572 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1572
9999 mem: storing 52 in location 1572
 105 run: i <- add i, 1
9999 mem: location 1193 is 15
9999 mem: storing 16 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 16
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 16
9998 run: address to copy is 1045
9998 run: its type is character
9999 mem: location 1045 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 16
9999 mem: storing 1573 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1573
9999 mem: storing 32 in location 1573
 105 run: i <- add i, 1
9999 mem: location 1193 is 16
9999 mem: storing 17 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 17
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 17
9998 run: address to copy is 1046
9998 run: its type is character
9999 mem: location 1046 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 17
9999 mem: storing 1574 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1574
9999 mem: storing 45 in location 1574
 105 run: i <- add i, 1
9999 mem: location 1193 is 17
9999 mem: storing 18 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 18
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 18
9998 run: address to copy is 1047
9998 run: its type is character
9999 mem: location 1047 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 18
9999 mem: storing 1575 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1575
9999 mem: storing 62 in location 1575
 105 run: i <- add i, 1
9999 mem: location 1193 is 18
9999 mem: storing 19 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 19
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 19
9998 run: address to copy is 1048
9998 run: its type is character
9999 mem: location 1048 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 19
9999 mem: storing 1576 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1576
9999 mem: storing 32 in location 1576
 105 run: i <- add i, 1
9999 mem: location 1193 is 19
9999 mem: storing 20 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 20
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 20
9998 run: address to copy is 1049
9998 run: its type is character
9999 mem: location 1049 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 20
9999 mem: storing 1577 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1577
9999 mem: storing 52 in location 1577
 105 run: i <- add i, 1
9999 mem: location 1193 is 20
9999 mem: storing 21 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 21
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 21
9998 run: address to copy is 1050
9998 run: its type is character
9999 mem: location 1050 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 21
9999 mem: storing 1578 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1578
9999 mem: storing 32 in location 1578
 105 run: i <- add i, 1
9999 mem: location 1193 is 21
9999 mem: storing 22 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 22
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 22
9998 run: address to copy is 1051
9998 run: its type is character
9999 mem: location 1051 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 22
9999 mem: storing 1579 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1579
9999 mem: storing 45 in location 1579
 105 run: i <- add i, 1
9999 mem: location 1193 is 22
9999 mem: storing 23 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 23
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 23
9998 run: address to copy is 1052
9998 run: its type is character
9999 mem: location 1052 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 23
9999 mem: storing 1580 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1580
9999 mem: storing 62 in location 1580
 105 run: i <- add i, 1
9999 mem: location 1193 is 23
9999 mem: storing 24 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 24
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 24
9998 run: address to copy is 1053
9998 run: its type is character
9999 mem: location 1053 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 24
9999 mem: storing 1581 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1581
9999 mem: storing 32 in location 1581
 105 run: i <- add i, 1
9999 mem: location 1193 is 24
9999 mem: storing 25 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 25
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 25
9998 run: address to copy is 1054
9998 run: its type is character
9999 mem: location 1054 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 25
9999 mem: storing 1582 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1582
9999 mem: storing 52 in location 1582
 105 run: i <- add i, 1
9999 mem: location 1193 is 25
9999 mem: storing 26 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 26
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 26
9998 run: address to copy is 1055
9998 run: its type is character
9999 mem: location 1055 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 26
9999 mem: storing 1583 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1583
9999 mem: storing 32 in location 1583
 105 run: i <- add i, 1
9999 mem: location 1193 is 26
9999 mem: storing 27 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 27
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 27
9998 run: address to copy is 1056
9998 run: its type is character
9999 mem: location 1056 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 27
9999 mem: storing 1584 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1584
9999 mem: storing 45 in location 1584
 105 run: i <- add i, 1
9999 mem: location 1193 is 27
9999 mem: storing 28 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 28
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 28
9998 run: address to copy is 1057
9998 run: its type is character
9999 mem: location 1057 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 28
9999 mem: storing 1585 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1585
9999 mem: storing 62 in location 1585
 105 run: i <- add i, 1
9999 mem: location 1193 is 28
9999 mem: storing 29 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 29
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 29
9998 run: address to copy is 1058
9998 run: its type is character
9999 mem: location 1058 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 29
9999 mem: storing 1586 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1586
9999 mem: storing 32 in location 1586
 105 run: i <- add i, 1
9999 mem: location 1193 is 29
9999 mem: storing 30 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 30
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 30
9998 run: address to copy is 1059
9998 run: its type is character
9999 mem: location 1059 is 52
9999 mem: storing 52 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 30
9999 mem: storing 1587 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 52
9999 mem: location 1196 is 1587
9999 mem: storing 52 in location 1587
 105 run: i <- add i, 1
9999 mem: location 1193 is 30
9999 mem: storing 31 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 31
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 31
9998 run: address to copy is 1060
9998 run: its type is character
9999 mem: location 1060 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 31
9999 mem: storing 1588 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1588
9999 mem: storing 32 in location 1588
 105 run: i <- add i, 1
9999 mem: location 1193 is 31
9999 mem: storing 32 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 32
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 32
9998 run: address to copy is 1061
9998 run: its type is character
9999 mem: location 1061 is 45
9999 mem: storing 45 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 32
9999 mem: storing 1589 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 45
9999 mem: location 1196 is 1589
9999 mem: storing 45 in location 1589
 105 run: i <- add i, 1
9999 mem: location 1193 is 32
9999 mem: storing 33 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 33
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 33
9998 run: address to copy is 1062
9998 run: its type is character
9999 mem: location 1062 is 62
9999 mem: storing 62 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 33
9999 mem: storing 1590 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 62
9999 mem: location 1196 is 1590
9999 mem: storing 62 in location 1590
 105 run: i <- add i, 1
9999 mem: location 1193 is 33
9999 mem: storing 34 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 34
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 34
9998 run: address to copy is 1063
9998 run: its type is character
9999 mem: location 1063 is 32
9999 mem: storing 32 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 34
9999 mem: storing 1591 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 32
9999 mem: location 1196 is 1591
9999 mem: storing 32 in location 1591
 105 run: i <- add i, 1
9999 mem: location 1193 is 34
9999 mem: storing 35 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 35
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 35
9998 run: address to copy is 1064
9998 run: its type is character
9999 mem: location 1064 is 46
9999 mem: storing 46 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 35
9999 mem: storing 1592 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 46
9999 mem: location 1196 is 1592
9999 mem: storing 46 in location 1592
 105 run: i <- add i, 1
9999 mem: location 1193 is 35
9999 mem: storing 36 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 36
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 36
9998 run: address to copy is 1065
9998 run: its type is character
9999 mem: location 1065 is 46
9999 mem: storing 46 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 36
9999 mem: storing 1593 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 46
9999 mem: location 1196 is 1593
9999 mem: storing 46 in location 1593
 105 run: i <- add i, 1
9999 mem: location 1193 is 36
9999 mem: storing 37 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 37
9999 mem: location 1190 is 38
9999 mem: storing 0 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 0
9998 run: jump-if fell through
 105 run: src:character <- index *s, i
9999 mem: location 1191 is 1027
9999 mem: skipping refcount at 1027
9998 run: base address is 1028
9999 mem: location 1193 is 37
9998 run: address to copy is 1066
9998 run: its type is character
9999 mem: location 1066 is 46
9999 mem: storing 46 in location 1195
 105 run: dest:address:character <- index-address *result, i
9999 mem: location 1192 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1193 is 37
9999 mem: storing 1594 in location 1196
 105 run: *dest <- copy src
9999 mem: location 1195 is 46
9999 mem: location 1196 is 1594
9999 mem: storing 46 in location 1594
 105 run: i <- add i, 1
9999 mem: location 1193 is 37
9999 mem: storing 38 in location 1193
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal i, len
9999 mem: location 1193 is 38
9999 mem: location 1190 is 38
9999 mem: storing 1 in location 1194
 105 run: jump-if done?, 
9999 mem: location 1194 is 1
9998 run: jumping to instruction 18
 105 run: reply result:address:shared:array:character
9999 mem: location 1192 is 1555
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 1016
9999 mem: incrementing refcount of 1555: 1 -> 2
 104 run: reply result:address:shared:array:character
9999 mem: location 1016 is 1555
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 3
9999 mem: incrementing refcount of 1555: 2 -> 3
 103 run: stash [foo foo], stash_0_1:address:shared:array:character
9999 mem: location 3 is 1555
   2 app: foo foo 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> ... 
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: trace-should-contain [
    app: foo foo 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> 4 -> ...
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
