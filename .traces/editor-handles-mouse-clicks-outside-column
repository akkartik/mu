 101 run: assume-console [
    # click on right half of screen
    left-click 3, 8
  ]
parse: instruction: left-click
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   ingredient: {name: "8", properties: ["8": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1276
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
schedule: editor-event-loop/run1001/scenario-editor-handles-mouse-clicks-outside-column
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1245
 102 run: console:address <- next-ingredient 
9999 mem: storing 1276 in location 1246
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1246 is 1276
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1278
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1276 in location 1280
 103 run: break-unless x, 
9999 mem: location 1280 is 1276
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1280 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1271
9999 mem: location 1280 is 1276
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1281
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1280 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1271
9999 mem: location 1280 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1271
9999 mem: storing 1271 in location 1282
 103 run: max:number <- length *buf
9999 mem: location 1282 is 1271
9999 mem: storing 1 in location 1283
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1281 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1283 is 1
9999 mem: storing 0 in location 1284
 103 run: break-unless done?, 
9999 mem: location 1284 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1282 is 1271
9999 mem: location 1281 is 1276
9999 mem: location 1276 is 0
9999 run: address to copy is 1272
9999 run: its type is event
9999 mem: location 1272 is 2
9999 mem: location 1273 is 65513
9999 mem: location 1274 is 3
9999 mem: location 1275 is 8
9999 mem: storing 2 in location 1286
9999 mem: storing 65513 in location 1287
9999 mem: storing 3 in location 1288
9999 mem: storing 8 in location 1289
 103 run: *idx <- add *idx, 1
9999 mem: location 1281 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1281 is 1276
9999 mem: storing 1 in location 1276
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1286 is 2
9999 mem: location 1287 is 65513
9999 mem: location 1288 is 3
9999 mem: location 1289 is 8
9999 mem: location 1280 is 1276
9999 run: result 0 is [2, 65513, 3, 8]
9999 run: result 1 is 1276
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1248
9999 mem: storing 65513 in location 1249
9999 mem: storing 3 in location 1250
9999 mem: storing 8 in location 1251
9999 mem: storing 1276 in location 1246
9999 mem: storing 1 in location 1252
9999 mem: storing 0 in location 1253
 102 run: loop-unless found?, 
9999 mem: location 1252 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1248 is 2
9999 mem: location 1249 is 65513
9999 mem: location 1250 is 3
9999 mem: location 1251 is 8
9999 mem: storing 1249 in location 1254
 102 run: break-unless t, 
9999 mem: location 1254 is 1249
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1245 is 1009
9999 mem: location 1247 is 1115
9999 mem: location 1254 is 1249
9999 mem: location 1249 is 65513
9999 mem: location 1250 is 3
9999 mem: location 1251 is 8
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1291
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1293
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1294
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1295
9999 mem: storing 3 in location 1296
9999 mem: storing 8 in location 1297
 103 run: jump-if editor, 1:offset
9999 mem: location 1294 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1295 is 65513
9999 mem: location 1296 is 3
9999 mem: location 1297 is 8
9999 run: address to copy is 1297
9999 run: its type is number
9999 mem: location 1297 is 8
9999 mem: storing 8 in location 1298
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1294 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1294 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1299
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1298 is 8
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1300
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1300 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1294 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1294 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 4
9999 mem: storing 4 in location 1301
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1298 is 8
9999 mem: location 1301 is 4
9999 mem: storing 1 in location 1302
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1302 is 1
9999 run: jump-unless fell through
 103 run: reply 0/false
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1246 is 1276
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1276 in location 1280
 103 run: break-unless x, 
9999 mem: location 1280 is 1276
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1280 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1271
9999 mem: location 1280 is 1276
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1281
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1280 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1271
9999 mem: location 1280 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1271
9999 mem: storing 1271 in location 1282
 103 run: max:number <- length *buf
9999 mem: location 1282 is 1271
9999 mem: storing 1 in location 1283
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1281 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 103 run: break-unless done?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1156 in location 1285
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1285 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1280 is 1276
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1276
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 1276 in location 1246
9999 mem: storing 1 in location 1252
9999 mem: storing 1 in location 1253
 102 run: loop-unless found?, 
9999 mem: location 1252 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
 100 run: screen-should-contain [
    .          .
    .abc       .
    .┈┈┈┈┈     .
    .          .
  ]
 100 run: memory-should-contain [
    3 <- 1  # no change to cursor row
    4 <- 0  # ..or column
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
