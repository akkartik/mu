c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((s string-address)) <- ((new)) fooa
line2) -- nil
c{0: 2 (((k keyboard-address)) <- ((init-keyboard)) ((s string-address))) -- nil
c{0: 3 (((stdin channel-address)) <- ((init-channel)) ((1 literal))) -- nil
c{0: 4 (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address))) -- nil
c{0: 5 (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal))) -- nil
c{0: 6 (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address))) -- nil
c{0: 7 (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) -- nil
c{0: 8 (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) -- nil
c{0: 9 (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address))) -- nil
c{0: 10 (((sleep)) ((until-routine-done literal)) ((r integer) (routine))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((s string-address)) <- ((new)) fooa
line2)
c{1: 2 ✓ (((k keyboard-address)) <- ((init-keyboard)) ((s string-address)))
c{1: 3 ✓ (((stdin channel-address)) <- ((init-channel)) ((1 literal)))
c{1: 4 ✓ (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address)))
c{1: 5 ✓ (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal)))
c{1: 6 ✓ (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address)))
c{1: 7 ✓ (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
c{1: 8 ✓ (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset)))
c{1: 9 ✓ (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address)))
c{1: 10 ✓ (((sleep)) ((until-routine-done literal)) ((r integer) (routine)))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((s string-address)) <- ((new)) fooa
line2) nil nil
cn0: checking arg fooa
line2
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 1
cn0: (((k keyboard-address)) <- ((init-keyboard)) ((s string-address))) ((s 1)) nil
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: checking oarg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: location for oarg ((k keyboard-address)): 2
cn0: (((stdin channel-address)) <- ((init-channel)) ((1 literal))) ((k 2) (s 1)) nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 3
cn0: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address))) ((k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((send-keys-to-stdin fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal))) ((k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: location for oarg ((buffered-stdin channel-address)): 4
cn0: (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address))) ((buffered-stdin 4) (k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((buffer-lines fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking arg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: checking oarg ((r integer) (routine))
maybe-add: ((r integer) (routine))
cn0: location for oarg ((r integer) (routine)): 5
cn0: (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) ((buffered-stdin 4) (k 2) (r 5) (s 1) (stdin 3)) nil
cn0: checking arg ((20 literal))
cn0: checking arg ((10 literal))
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 6
cn0: (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) ((buffered-stdin 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) nil
cn0: field-access data in screenterminal-addressderef of type terminal
cn0: new field; computing location
cn0: field location 4
cn0: checking arg ((screen terminal-address) (deref))
maybe-add: ((screen terminal-address) (deref))
cn0: checking arg ((data offset))
cn0: checking oarg ((5 string-address) (raw))
maybe-add: ((5 string-address) (raw))
cn0: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address))) ((buffered-stdin 4) (data 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) ((data t))
cn0: checking arg ((send-prints-to-stdout fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: (((sleep)) ((until-routine-done literal)) ((r integer) (routine))) ((buffered-stdin 4) (data 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) ((data t))
cn0: checking arg ((until-routine-done literal))
cn0: checking arg ((r integer) (routine))
maybe-add: ((r integer) (routine))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 string-address)) <- ((new)) fooa
line2)
cn1: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
cn1: (((3 channel-address)) <- ((init-channel)) ((1 literal)))
cn1: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((2 keyboard-address)) ((3 channel-address)))
cn1: (((4 channel-address)) <- ((init-channel)) ((1 literal)))
cn1: (((5 integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((3 channel-address)) ((4 channel-address)))
cn1: (((6 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
cn1: (((5 string-address) (raw)) <- ((get)) ((6 terminal-address) (deref)) ((4 offset)))
cn1: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((6 terminal-address)) ((4 channel-address)))
cn1: (((sleep)) ((until-routine-done literal)) ((5 integer) (routine)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 string-address)) <- ((new)) fooa
line2)
run: main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1002 <= 1031
run: main 2: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-keyboard/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-keyboard/main 0: 1043 => ((default-space space-address))
run: init-keyboard/main 1: (((1 keyboard-address)) <- ((new)) ((keyboard literal)))
run: init-keyboard/main 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 1045 <= 1074
run: init-keyboard/main 2: (((2 string-address-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((1 offset)))
run: init-keyboard/main 2: 1075 => ((2 string-address-address))
mem: ((2 string-address-address)): 1046 <= 1075
run: init-keyboard/main 3: (((2 string-address-address) (deref)) <- ((next-input)))
arg: nil 0 (1031)
run: init-keyboard/main 3: 1031 => ((2 string-address-address) (deref))
mem: ((2 string-address-address) (deref)): 1075 <= 1031
run: init-keyboard/main 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: init-keyboard/main 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 1047 <= 1074
run: init-keyboard/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-keyboard/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 0
run: init-keyboard/main 6: (((reply)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: main 2: 1074 => ((2 keyboard-address))
mem: ((2 keyboard-address)): 1003 <= 1074
run: main 3: (((3 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1076 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 1078 <= 1107
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1107 => ((2 integer-address))
mem: ((2 integer-address)): 1079 <= 1107
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1107 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 1080 <= 1108
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1108 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1081 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1081 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1109 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1082 <= 1109
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1110 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1109 <= 1110
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: main 3: 1107 => ((3 channel-address))
mem: ((3 channel-address)): 1004 <= 1107
run: main 4: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((2 keyboard-address)) ((3 channel-address)))
mem: ((2 keyboard-address)) => 1074
mem: ((3 channel-address)) => 1107
run: main 5: (((4 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1115 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 1117 <= 1146
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1146 => ((2 integer-address))
mem: ((2 integer-address)): 1118 <= 1146
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1146 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 1119 <= 1147
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1147 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1120 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1120 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1148 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1121 <= 1148
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1149 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1148 <= 1149
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1146
run: main 5: 1146 => ((4 channel-address))
mem: ((4 channel-address)): 1005 <= 1146
run: main 6: (((5 integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((3 channel-address)) ((4 channel-address)))
mem: ((3 channel-address)) => 1107
mem: ((4 channel-address)) => 1146
run: main 6: 2 => ((5 integer) (routine))
mem: ((5 integer) (routine)): 1006 <= 2
run: main 7: (((6 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 1154 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 1156 <= 1185
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 1186 => ((2 integer-address))
mem: ((2 integer-address)): 1157 <= 1186
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1186 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 1185 => ((3 integer-address))
mem: ((3 integer-address)): 1158 <= 1185
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1185 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 1187 => ((4 integer-address))
mem: ((4 integer-address)): 1159 <= 1187
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1187 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 1188 => ((5 integer-address))
mem: ((5 integer-address)): 1160 <= 1188
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 1188 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 1161 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 1189 => ((7 string-address-address))
mem: ((7 string-address-address)): 1162 <= 1189
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 1190 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1189 <= 1190
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1185
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 1391 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185)
run: clear-screen/init-fake-terminal/main 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 1393 <= 1185
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1185
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: clear-screen/init-fake-terminal/main 3: 1190 => ((2 string-address))
mem: ((2 string-address)): 1394 <= 1190
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 1395 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1396 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1191 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1191
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1191 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1396 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1192 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1192
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1192 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1396 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1193 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1193
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1193 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1396 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1194 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1194
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1194 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1396 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1195 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1195
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1195 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1396 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1196 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1196
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1196 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1396 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1197 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1197
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1197 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1396 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1198 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1198
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1198 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1396 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1199 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1199
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1199 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 1396 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1200 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1200
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1200 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 1396 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1201 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1201
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1201 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 1396 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1202 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1202
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1202 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 1396 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1203 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1203
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1203 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 1396 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1204 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1204
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1204 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 1396 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1205 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1205
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1205 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 1396 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1206 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1206
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1206 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 1396 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1207 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1207
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1207 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 1396 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1208 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1208
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1208 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 1396 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1209 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1209
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1209 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 1396 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1210 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1210
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1210 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 1396 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1211 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1211
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1211 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 1396 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1212 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1212
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1212 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 1396 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1213 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1213
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1213 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 1396 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1214 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1214
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1214 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 1396 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1215 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1215
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1215 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 1396 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1216 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1216
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1216 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 1396 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1217 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1217
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1217 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 1396 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1218 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1218
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1218 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 1396 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1219 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1219
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1219 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 1396 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1220 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1220
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1220 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 1396 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1221 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1221
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1221 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 1396 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1222 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1222
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1222 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 1396 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1223 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1223
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1223 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 1396 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1224 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1224
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1224 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 1396 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1225 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1225
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1225 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 1396 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1226 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1226
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1226 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 1396 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1227 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1227
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1227 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 1396 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1228 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1228
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1228 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 1396 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1229 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1229
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1229 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 1396 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1230 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1230
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1230 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 1396 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1231 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1231
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1231 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 1396 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1232 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1232
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1232 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 1396 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1233 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1233
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1233 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 1396 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1234 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1234
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1234 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 1396 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1235 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1235
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1235 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 1396 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1236 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1236
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1236 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 1396 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1237 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1237
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1237 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 1396 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1238 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1238
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1238 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 1396 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1239 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1239
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1239 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 1396 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1240 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1240
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1240 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 1396 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1241 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1241
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1241 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 1396 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1242 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1242
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1242 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 1396 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1243 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1243
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1243 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 1396 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1244 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1244
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1244 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 1396 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1245 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1245
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1245 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 1396 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1246 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1246
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1246 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 1396 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1247 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1247
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1247 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 1396 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1248 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1248
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1248 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 1396 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1249 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1249
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1249 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 1396 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1250 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1250
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1250 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 1396 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1251 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1251
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1251 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 1396 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1252 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1252
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1252 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 1396 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1253 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1253
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1253 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 1396 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1254 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1254
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1254 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 1396 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1255 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1255
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1255 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 1396 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1256 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1256
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1256 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 1396 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1257 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1257
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1257 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 1396 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1258 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1258
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1258 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 1396 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1259 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1259
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1259 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 1396 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1260 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1260
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1260 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 1396 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1261 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1261
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1261 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 1396 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1262 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1262
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1262 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 1396 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1263 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1263
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1263 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 1396 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1264 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1264
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1264 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 1396 <= 74
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: send-keys-to-stdin
run: send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: send-keys-to-stdin 0: 101000 => ((default-space space-address))
run: send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074 1107)
run: send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101002 <= 1074
run: send-keys-to-stdin 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1074 1107)
run: send-keys-to-stdin 2: 1107 => ((2 channel-address))
mem: ((2 channel-address)): 101003 <= 1107
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101031 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101033 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101034 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101035 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101036 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101037 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 0
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101038 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1032 byte) (raw)) => f
run: read-key/send-keys-to-stdin 10: #\f => ((7 character))
mem: ((7 character)): 101039 <= #\f
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 0
run: read-key/send-keys-to-stdin 11: 1 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 1
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => f
run: send-keys-to-stdin 3: #\f => ((3 character))
mem: ((3 character)): 101004 <= #\f
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => f
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => f
run: send-keys-to-stdin 5: #(tagged record (character #\f)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\f
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character f . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101062 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\f . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101064 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\f . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\f . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101065 <= character
mem: ((2 tagged-value)): 101066 <= #\f
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101093 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101095 <= 0
mem: ((1 channel)): 101096 <= 0
mem: ((1 channel)): 101097 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101096 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101098 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101098 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101124 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101126 <= 0
mem: ((1 channel)): 101127 <= 0
mem: ((1 channel)): 101128 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101128 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101129 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101130 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101099 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101100 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101095 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101101 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: nil => ((8 boolean))
mem: ((8 boolean)): 101102 <= nil
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => nil
run: write/send-keys-to-stdin 3: nil => ((4 boolean))
mem: ((4 boolean)): 101067 <= nil
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101069 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101070 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101071 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character f . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\f . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\f
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101072 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101073 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => f
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101155 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101157 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101158 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101159 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101160 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101161 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 1
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101162 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1033 byte) (raw)) => o
run: read-key/send-keys-to-stdin 10: #\o => ((7 character))
mem: ((7 character)): 101163 <= #\o
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 1
run: read-key/send-keys-to-stdin 11: 2 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 2
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => o
run: send-keys-to-stdin 3: #\o => ((3 character))
mem: ((3 character)): 101004 <= #\o
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: #(tagged record (character #\o)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\o
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101186 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101188 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101189 <= character
mem: ((2 tagged-value)): 101190 <= #\o
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101217 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101219 <= 0
mem: ((1 channel)): 101220 <= 1
mem: ((1 channel)): 101221 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101220 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101222 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101222 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101248 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101250 <= 0
mem: ((1 channel)): 101251 <= 1
mem: ((1 channel)): 101252 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101252 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101253 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101254 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101223 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101224 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101222 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101219 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101225 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101226 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101191 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101192 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: buffer-lines
run: buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-lines 0: 201000 => ((default-space space-address))
run: buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 1146)
run: buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201002 <= 1107
run: buffer-lines 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1107 1146)
run: buffer-lines 2: 1146 => ((2 channel-address))
mem: ((2 channel-address)): 201003 <= 1146
run: buffer-lines 3: (((3 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/buffer-lines 0: 201031 => ((default-space space-address))
run: init-buffer/buffer-lines 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201033 <= 201062
run: init-buffer/buffer-lines 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/buffer-lines 2: 201062 => ((2 integer-address))
mem: ((2 integer-address)): 201034 <= 201062
run: init-buffer/buffer-lines 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/buffer-lines 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 201062 <= 0
run: init-buffer/buffer-lines 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/buffer-lines 4: 201063 => ((3 string-address-address))
mem: ((3 string-address-address)): 201035 <= 201063
run: init-buffer/buffer-lines 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/buffer-lines 5: 30 => ((4 integer))
mem: ((4 integer)): 201036 <= 30
run: init-buffer/buffer-lines 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/buffer-lines 6: 201064 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 201063 <= 201064
run: init-buffer/buffer-lines 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-lines 3: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201095 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201097 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201126 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201128 <= 0
mem: ((1 channel)): 201129 <= 1
mem: ((1 channel)): 201130 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201128 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 201131 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201129 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201132 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: nil => ((6 boolean))
mem: ((6 boolean)): 201133 <= nil
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => nil
run: read/buffer-lines 2: nil => ((2 boolean))
mem: ((2 boolean)): 201098 <= nil
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201100 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201101 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character f . nil))
run: read/buffer-lines 8: #(tagged record (character #\f . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201102 <= character
mem: ((6 tagged-value)): 201103 <= #\f
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201104 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 201105 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character f . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\f . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\f
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character f . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201157 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201188 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201159 <= 201188
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\f . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201188 <= character
mem: ((1 tagged-value-address) (deref)): 201189 <= #\f
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201160 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201188 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201161 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201162 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201189 location) (raw)) => f
run: maybe-coerce/buffer-lines 8: #\f => ((5 location))
mem: ((5 location)): 201163 <= #\f
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => f
mem: ((4 boolean)) => t
run: buffer-lines 5: #\f => ((6 character))
mem: ((6 character)): 201007 <= #\f
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => f
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => f
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => f
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201190 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\f)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201192 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\f)
run: append/buffer-lines 2: #\f => ((2 character))
mem: ((2 character)): 201193 <= #\f
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201221 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201223 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 0
run: buffer-full?/append/buffer-lines 2: 0 => ((2 integer))
mem: ((2 integer)): 201224 <= 0
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201225 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201226 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201227 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201194 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201195 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201196 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201065 => ((6 byte-address))
mem: ((6 byte-address)): 201197 <= 201065
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: append/buffer-lines 9: #\f => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201065 <= #\f
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/buffer-lines 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 1
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => f
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => f
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201252 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201254 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201283 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201285 <= 1
mem: ((1 channel)): 201286 <= 1
mem: ((1 channel)): 201287 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201285 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 201288 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201286 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201289 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201290 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201255 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 201256 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1265 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1265
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1265 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 1396 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1266 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1266
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1266 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 1396 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1267 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1267
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1267 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 1396 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1268 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1268
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1268 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 1396 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1269 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1269
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1269 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 1396 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1270 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1270
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1270 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 1396 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1271 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1271
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1271 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 1396 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1272 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1272
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1272 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 1396 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1273 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1273
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1273 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 1396 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1274 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1274
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1274 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 1396 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1275 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1275
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1275 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 1396 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1276 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1276
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1276 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 1396 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1277 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1277
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1277 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 1396 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1278 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1278
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1278 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 1396 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1279 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1279
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1279 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 1396 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1280 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1280
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1280 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 1396 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1281 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1281
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1281 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 1396 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1282 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1282
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1282 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 1396 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1283 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1283
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1283 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 1396 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1284 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1284
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1284 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 1396 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1285 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1285
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1285 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 1396 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1286 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1286
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1286 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 1396 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1287 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1287
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1287 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 1396 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1288 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1288
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1288 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 1396 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1289 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1289
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1289 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 1396 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1290 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1290
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1290 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 1396 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1291 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1291
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1291 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 1396 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1292 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1292
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1292 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 1396 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1293 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1293
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1293 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 1396 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1294 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1294
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1294 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 1396 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1295 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1295
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1295 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 1396 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1296 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1296
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1296 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 1396 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1297 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1297
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1297 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 1396 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1298 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1298
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1298 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 1396 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1299 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1299
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1299 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 1396 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1300 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1300
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1300 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 1396 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1301 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1301
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1301 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 1396 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1302 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1302
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1302 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 1396 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1303 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1303
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1303 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 1396 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1304 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1304
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1304 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 1396 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1305 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1305
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1305 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 1396 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1306 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1306
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1306 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 1396 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1307 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1307
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1307 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 1396 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1308 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1308
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1308 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 1396 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1309 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1309
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1309 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 1396 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1310 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1310
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1310 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 1396 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1311 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1311
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1311 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 1396 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1312 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1312
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1312 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 1396 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1313 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1313
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1313 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 1396 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1314 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1314
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1314 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 1396 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1315 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1315
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1315 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 1396 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1316 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1316
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1316 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 1396 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1317 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1317
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1317 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 1396 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1318 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1318
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1318 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 1396 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1319 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1319
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1319 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 1396 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1320 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1320
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1320 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 1396 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1321 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1321
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1321 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 1396 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1322 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1322
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1322 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 1396 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1323 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1323
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1323 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 1396 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1324 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1324
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1324 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 1396 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1325 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1325
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1325 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 1396 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1326 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1326
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1326 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 1396 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1327 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1327
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1327 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 1396 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1328 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1328
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1328 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 1396 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1329 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1329
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1329 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 1396 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1330 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1330
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1330 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 1396 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1331 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1331
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1331 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 1396 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1332 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1332
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1332 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 1396 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1333 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1333
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1333 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 1396 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1334 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1334
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1334 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 1396 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1335 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1335
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1335 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 1396 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1336 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1336
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1336 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 1396 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1337 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1337
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1337 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 1396 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1338 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1338
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1338 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 1396 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1339 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1339
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1339 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 1396 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1340 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1340
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1340 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 1396 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1341 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1341
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1341 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 1396 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1342 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1342
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1342 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 1396 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1343 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1343
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1343 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 1396 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1344 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1344
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1344 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 1396 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1345 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1345
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1345 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 1396 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1346 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1346
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1346 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 1396 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1347 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1347
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1347 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 1396 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101193 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101194 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101195 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\o
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101196 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101197 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => o
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101279 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101281 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101282 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101283 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101284 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101285 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 2
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101286 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1034 byte) (raw)) => o
run: read-key/send-keys-to-stdin 10: #\o => ((7 character))
mem: ((7 character)): 101287 <= #\o
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 2
run: read-key/send-keys-to-stdin 11: 3 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 3
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => o
run: send-keys-to-stdin 3: #\o => ((3 character))
mem: ((3 character)): 101004 <= #\o
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: #(tagged record (character #\o)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\o
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101310 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101312 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101313 <= character
mem: ((2 tagged-value)): 101314 <= #\o
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101341 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101343 <= 1
mem: ((1 channel)): 101344 <= 0
mem: ((1 channel)): 101345 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101344 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101346 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101346 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101372 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101374 <= 1
mem: ((1 channel)): 101375 <= 0
mem: ((1 channel)): 101376 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101376 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101377 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101378 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101347 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101348 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101343 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 101349 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101350 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101315 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101316 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1348 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1348
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1348 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 1396 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1349 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1349
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1349 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 1396 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1350 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1350
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1350 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 1396 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1351 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1351
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1351 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 1396 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1352 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1352
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1352 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 1396 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1353 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1353
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1353 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 1396 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1354 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1354
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1354 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 1396 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1355 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1355
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1355 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 1396 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1356 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1356
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1356 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 1396 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1357 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1357
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1357 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 1396 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1358 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1358
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1358 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 1396 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1359 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1359
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1359 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 1396 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1360 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1360
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1360 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 1396 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1361 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1361
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1361 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 1396 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1362 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1362
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1362 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 1396 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1363 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1363
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1363 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 1396 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1364 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1364
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1364 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 1396 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1365 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1365
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1365 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 1396 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1366 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1366
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1366 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 1396 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1367 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1367
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1367 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 1396 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1368 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1368
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1368 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 1396 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1369 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1369
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1369 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 1396 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1370 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1370
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1370 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 1396 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1371 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1371
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1371 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 1396 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1372 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1372
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1372 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 1396 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1373 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1373
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1373 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 1396 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1374 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1374
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1374 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 1396 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1375 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1375
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1375 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 1396 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1376 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1376
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1376 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 1396 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1377 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1377
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1377 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 1396 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1378 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1378
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1378 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 1396 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1379 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1379
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1379 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 1396 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1380 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1380
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1380 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 1396 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1381 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1381
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1381 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 1396 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1382 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1382
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1382 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 1396 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1383 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1383
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1383 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 1396 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1384 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1384
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1384 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 1396 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1385 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1385
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1385 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 1396 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1386 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1386
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1386 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 1396 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1387 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1387
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1387 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 1396 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1388 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1388
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1388 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 1396 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1389 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1389
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1389 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 1396 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1397 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1390 => ((1 byte-address))
mem: ((1 byte-address)): 1393 <= 1390
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1390 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 1396 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1397 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1185
run: main 7: 1185 => ((6 terminal-address))
mem: ((6 terminal-address)): 1007 <= 1185
run: main 8: (((5 string-address) (raw)) <- ((get)) ((6 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: main 8: 1190 => ((5 string-address) (raw))
mem: ((5 string-address) (raw)): 5 <= 1190
run: main 9: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((6 terminal-address)) ((4 channel-address)))
mem: ((6 terminal-address)) => 1185
mem: ((4 channel-address)) => 1146
run: main 10: (((sleep)) ((until-routine-done literal)) ((5 integer) (routine)))
mem: ((5 integer) (routine)) => 2
schedule: pushing main to sleep queue
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201257 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201258 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/buffer-lines 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201259 <= character
mem: ((6 tagged-value)): 201260 <= #\o
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201261 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 201262 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\o . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\o
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201314 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201345 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201316 <= 201345
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201345 <= character
mem: ((1 tagged-value-address) (deref)): 201346 <= #\o
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201317 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201345 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201318 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201319 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201346 location) (raw)) => o
run: maybe-coerce/buffer-lines 8: #\o => ((5 location))
mem: ((5 location)): 201320 <= #\o
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: buffer-lines 5: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => o
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => o
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201347 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201349 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: append/buffer-lines 2: #\o => ((2 character))
mem: ((2 character)): 201350 <= #\o
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201378 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201380 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 1
run: buffer-full?/append/buffer-lines 2: 1 => ((2 integer))
mem: ((2 integer)): 201381 <= 1
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201382 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201383 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201384 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201351 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201352 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201353 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201066 => ((6 byte-address))
mem: ((6 byte-address)): 201354 <= 201066
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: append/buffer-lines 9: #\o => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201066 <= #\o
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/buffer-lines 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 2
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => o
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => o
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201409 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201411 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201440 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201442 <= 0
mem: ((1 channel)): 201443 <= 0
mem: ((1 channel)): 201444 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201442 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 201445 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201443 integer) (raw)) => 0
run: empty?/read/buffer-lines 3: 0 => ((5 integer))
mem: ((5 integer)): 201446 <= 0
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201447 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201412 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 201413 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: send-prints-to-stdout
run: send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: send-prints-to-stdout 0: 301000 => ((default-space space-address))
run: send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185 1146)
run: send-prints-to-stdout 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 301002 <= 1185
run: send-prints-to-stdout 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1185 1146)
run: send-prints-to-stdout 2: 1146 => ((2 channel-address))
mem: ((2 channel-address)): 301003 <= 1146
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1146
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301031 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146)
run: read/send-prints-to-stdout 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 301033 <= 1146
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1149 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301062 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1149 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (0 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 301064 <= 0
mem: ((1 channel)): 301065 <= 0
mem: ((1 channel)): 301066 <= 1149
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301064 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 2: 0 => ((4 integer))
mem: ((4 integer)): 301067 <= 0
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301065 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 3: 0 => ((5 integer))
mem: ((5 integer)): 301068 <= 0
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301069 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301034 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 301035 <= 1147
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101317 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101318 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101319 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\o
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101320 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101321 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => o
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101403 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101405 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101406 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101407 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101408 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101409 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 3
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101410 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 3
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1035 byte) (raw)) => a
run: read-key/send-keys-to-stdin 10: #\a => ((7 character))
mem: ((7 character)): 101411 <= #\a
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 3
run: read-key/send-keys-to-stdin 11: 4 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 4
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => a
run: send-keys-to-stdin 3: #\a => ((3 character))
mem: ((3 character)): 101004 <= #\a
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => a
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => a
run: send-keys-to-stdin 5: #(tagged record (character #\a)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\a
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character a . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101434 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\a . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101436 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\a . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\a . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101437 <= character
mem: ((2 tagged-value)): 101438 <= #\a
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101465 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101467 <= 0
mem: ((1 channel)): 101468 <= 1
mem: ((1 channel)): 101469 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101468 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101470 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101470 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101496 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101498 <= 0
mem: ((1 channel)): 101499 <= 1
mem: ((1 channel)): 101500 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101500 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101501 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101502 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101471 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101472 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101470 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101467 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101473 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101474 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101439 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101440 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201414 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201415 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/buffer-lines 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201416 <= character
mem: ((6 tagged-value)): 201417 <= #\o
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201418 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 201419 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\o . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\o
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201471 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201502 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201473 <= 201502
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201502 <= character
mem: ((1 tagged-value-address) (deref)): 201503 <= #\o
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201474 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201502 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201475 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201476 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201503 location) (raw)) => o
run: maybe-coerce/buffer-lines 8: #\o => ((5 location))
mem: ((5 location)): 201477 <= #\o
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: buffer-lines 5: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => o
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => o
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201504 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201506 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: append/buffer-lines 2: #\o => ((2 character))
mem: ((2 character)): 201507 <= #\o
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201535 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201537 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 2
run: buffer-full?/append/buffer-lines 2: 2 => ((2 integer))
mem: ((2 integer)): 201538 <= 2
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201539 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201540 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 2
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201541 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201508 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201509 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201510 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 2
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201067 => ((6 byte-address))
mem: ((6 byte-address)): 201511 <= 201067
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: append/buffer-lines 9: #\o => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201067 <= #\o
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 2
run: append/buffer-lines 10: 3 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 3
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => o
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => o
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201566 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201568 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201597 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201599 <= 1
mem: ((1 channel)): 201600 <= 1
mem: ((1 channel)): 201601 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201599 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 201602 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201600 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201603 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201604 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201569 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 201570 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101441 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101442 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101443 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character a . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\a . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\a
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101444 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101445 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => a
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101527 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101529 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101530 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101531 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101532 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101533 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 4
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101534 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 4
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1036 byte) (raw)) => 
run: read-key/send-keys-to-stdin 10: #\backspace => ((7 character))
mem: ((7 character)): 101535 <= #\backspace
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 4
run: read-key/send-keys-to-stdin 11: 5 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 5
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => 
run: send-keys-to-stdin 3: #\backspace => ((3 character))
mem: ((3 character)): 101004 <= #\backspace
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => 
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => 
run: send-keys-to-stdin 5: #(tagged record (character #\backspace)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\backspace
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character  . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101558 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\backspace . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101560 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\backspace . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\backspace . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101561 <= character
mem: ((2 tagged-value)): 101562 <= #\backspace
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101589 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101591 <= 1
mem: ((1 channel)): 101592 <= 0
mem: ((1 channel)): 101593 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101592 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101594 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101594 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101620 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101622 <= 1
mem: ((1 channel)): 101623 <= 0
mem: ((1 channel)): 101624 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101624 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101625 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101626 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101595 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101596 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101591 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 101597 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101598 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101563 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101564 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201571 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201572 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character a . nil))
run: read/buffer-lines 8: #(tagged record (character #\a . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201573 <= character
mem: ((6 tagged-value)): 201574 <= #\a
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201575 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 201576 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character a . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\a . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\a
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character a . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201628 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201659 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201630 <= 201659
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\a . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\a . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201659 <= character
mem: ((1 tagged-value-address) (deref)): 201660 <= #\a
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\a . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201631 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201659 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201632 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201633 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201660 location) (raw)) => a
run: maybe-coerce/buffer-lines 8: #\a => ((5 location))
mem: ((5 location)): 201634 <= #\a
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => a
mem: ((4 boolean)) => t
run: buffer-lines 5: #\a => ((6 character))
mem: ((6 character)): 201007 <= #\a
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => a
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => a
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => a
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201661 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\a)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201663 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\a)
run: append/buffer-lines 2: #\a => ((2 character))
mem: ((2 character)): 201664 <= #\a
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201692 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201694 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 3
run: buffer-full?/append/buffer-lines 2: 3 => ((2 integer))
mem: ((2 integer)): 201695 <= 3
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201696 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201697 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201698 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201665 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201666 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201667 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201068 => ((6 byte-address))
mem: ((6 byte-address)): 201668 <= 201068
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => a
run: append/buffer-lines 9: #\a => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201068 <= #\a
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/buffer-lines 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 4
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => a
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => a
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201723 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201725 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201754 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201756 <= 0
mem: ((1 channel)): 201757 <= 0
mem: ((1 channel)): 201758 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201756 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 201759 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201757 integer) (raw)) => 0
run: empty?/read/buffer-lines 3: 0 => ((5 integer))
mem: ((5 integer)): 201760 <= 0
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201761 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201726 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 201727 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101565 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101566 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101567 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character  . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\backspace . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\backspace
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101568 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101569 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => 
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101651 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101653 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101654 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101655 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101656 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101657 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 5
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101658 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 5
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1037 byte) (raw)) => 

run: read-key/send-keys-to-stdin 10: #\newline => ((7 character))
mem: ((7 character)): 101659 <= #\newline
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 5
run: read-key/send-keys-to-stdin 11: 6 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 6
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => 

run: send-keys-to-stdin 3: #\newline => ((3 character))
mem: ((3 character)): 101004 <= #\newline
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => 

run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => 

run: send-keys-to-stdin 5: #(tagged record (character #\newline)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\newline
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character 
 . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101682 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\newline . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101684 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\newline . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101685 <= character
mem: ((2 tagged-value)): 101686 <= #\newline
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101713 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101715 <= 0
mem: ((1 channel)): 101716 <= 1
mem: ((1 channel)): 101717 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101716 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101718 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101718 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101744 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101746 <= 0
mem: ((1 channel)): 101747 <= 1
mem: ((1 channel)): 101748 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101748 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101749 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101750 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101719 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101720 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101718 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101715 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101721 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101722 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101687 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101688 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201728 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201729 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character  . nil))
run: read/buffer-lines 8: #(tagged record (character #\backspace . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201730 <= character
mem: ((6 tagged-value)): 201731 <= #\backspace
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201732 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 201733 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character  . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\backspace . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\backspace
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character  . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201785 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201816 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201787 <= 201816
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\backspace . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\backspace . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201816 <= character
mem: ((1 tagged-value-address) (deref)): 201817 <= #\backspace
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\backspace . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201788 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201816 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201789 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201790 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201817 location) (raw)) => 
run: maybe-coerce/buffer-lines 8: #\backspace => ((5 location))
mem: ((5 location)): 201791 <= #\backspace
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => 
mem: ((4 boolean)) => t
run: buffer-lines 5: #\backspace => ((6 character))
mem: ((6 character)): 201007 <= #\backspace
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => 
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => 
run: buffer-lines 7: t => ((7 boolean))
mem: ((7 boolean)): 201008 <= t
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => t
run: buffer-lines 9: (((8 integer-address)) <- ((get-address)) ((3 buffer-address) (deref)) ((0 offset)))
run: buffer-lines 9: 201062 => ((8 integer-address))
mem: ((8 integer-address)): 201009 <= 201062
run: buffer-lines 10: (((9 boolean)) <- ((lesser-or-equal)) ((8 integer-address) (deref)) ((0 literal)))
mem: ((8 integer-address) (deref)) => 4
run: buffer-lines 10: nil => ((9 boolean))
mem: ((9 boolean)): 201010 <= nil
run: buffer-lines 11: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: buffer-lines 12: (((8 integer-address) (deref)) <- ((subtract)) ((8 integer-address) (deref)) ((1 literal)))
mem: ((8 integer-address) (deref)) => 4
run: buffer-lines 12: 3 => ((8 integer-address) (deref))
mem: ((8 integer-address) (deref)): 201062 <= 3
run: buffer-lines 13: (((jump)) ((-10 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201818 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 201820 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201849 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 201851 <= 1
mem: ((1 channel)): 201852 <= 1
mem: ((1 channel)): 201853 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201851 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 201854 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201852 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201855 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201856 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201821 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 201822 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101689 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101690 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101691 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character 
 . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\newline . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\newline
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101692 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101693 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => 

run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101775 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101777 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101778 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101779 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101780 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101781 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 6
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101782 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 6
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1038 byte) (raw)) => l
run: read-key/send-keys-to-stdin 10: #\l => ((7 character))
mem: ((7 character)): 101783 <= #\l
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 6
run: read-key/send-keys-to-stdin 11: 7 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 7
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => l
run: send-keys-to-stdin 3: #\l => ((3 character))
mem: ((3 character)): 101004 <= #\l
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => l
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => l
run: send-keys-to-stdin 5: #(tagged record (character #\l)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\l
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character l . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101806 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\l . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101808 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\l . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\l . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101809 <= character
mem: ((2 tagged-value)): 101810 <= #\l
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101837 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101839 <= 1
mem: ((1 channel)): 101840 <= 0
mem: ((1 channel)): 101841 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101840 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101842 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101842 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101868 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101870 <= 1
mem: ((1 channel)): 101871 <= 0
mem: ((1 channel)): 101872 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101872 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101873 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101874 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101843 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101844 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101839 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 101845 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101846 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101811 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101812 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 201823 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201824 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character 
 . nil))
run: read/buffer-lines 8: #(tagged record (character #\newline . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201825 <= character
mem: ((6 tagged-value)): 201826 <= #\newline
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201827 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 201828 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character 
 . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\newline . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\newline
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character 
 . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201880 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201911 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201882 <= 201911
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\newline . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\newline . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201911 <= character
mem: ((1 tagged-value-address) (deref)): 201912 <= #\newline
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\newline . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201883 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201911 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201884 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201885 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201912 location) (raw)) => 

run: maybe-coerce/buffer-lines 8: #\newline => ((5 location))
mem: ((5 location)): 201886 <= #\newline
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => 

mem: ((4 boolean)) => t
run: buffer-lines 5: #\newline => ((6 character))
mem: ((6 character)): 201007 <= #\newline
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => 

run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => 

run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => 

run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201913 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\newline)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201915 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\newline)
run: append/buffer-lines 2: #\newline => ((2 character))
mem: ((2 character)): 201916 <= #\newline
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201944 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201946 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 3
run: buffer-full?/append/buffer-lines 2: 3 => ((2 integer))
mem: ((2 integer)): 201947 <= 3
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201948 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201949 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201950 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201917 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201918 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201919 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201068 => ((6 byte-address))
mem: ((6 byte-address)): 201920 <= 201068
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 

run: append/buffer-lines 9: #\newline => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201068 <= #\newline
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/buffer-lines 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 4
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => 

run: buffer-lines 15: t => ((10 boolean))
mem: ((10 boolean)): 201011 <= t
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => t
run: buffer-lines 20: (((12 integer)) <- ((copy)) ((0 literal)))
run: buffer-lines 20: 0 => ((12 integer))
mem: ((12 integer)): 201013 <= 0
run: buffer-lines 21: (((13 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-lines 21: 201064 => ((13 string-address))
mem: ((13 string-address)): 201014 <= 201064
run: buffer-lines 22: (((14 integer)) <- ((get)) ((3 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 4
run: buffer-lines 22: 4 => ((14 integer))
mem: ((14 integer)): 201015 <= 4
run: buffer-lines 23: (((15 boolean)) <- ((greater-or-equal)) ((12 integer)) ((14 integer)))
mem: ((12 integer)) => 0
mem: ((14 integer)) => 4
run: buffer-lines 23: nil => ((15 boolean))
mem: ((15 boolean)): 201016 <= nil
run: buffer-lines 24: (((jump-if)) ((15 boolean)) ((5 offset)))
mem: ((15 boolean)) => nil
run: buffer-lines 25: (((6 character)) <- ((index)) ((13 string-address) (deref)) ((12 integer)))
mem: ((12 integer)) => 0
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
mem: ((201065 byte) (raw)) => f
run: buffer-lines 25: #\f => ((6 character))
mem: ((6 character)): 201007 <= #\f
run: buffer-lines 26: (((16 tagged-value)) <- ((save-type)) ((6 character)))
mem: ((6 character)) => f
run: buffer-lines 26: #(tagged record (character #\f)) => ((16 tagged-value))
mem: ((16 tagged-value)): 201017 <= character
mem: ((16 tagged-value)): 201018 <= #\f
run: buffer-lines 27: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((16 tagged-value)))
mem: ((2 channel-address)) => 1146
mem: ((16 tagged-value)) => #(tagged record (character f . nil))
run: write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/buffer-lines 0: 201975 => ((default-space space-address))
run: write/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146 #(tagged record (character #\f . nil)))
run: write/buffer-lines 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 201977 <= 1146
run: write/buffer-lines 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1146 #(tagged record (character #\f . nil)))
run: write/buffer-lines 2: #(tagged record (character #\f . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 201978 <= character
mem: ((2 tagged-value)): 201979 <= #\f
run: write/buffer-lines 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1149 . nil))
run: full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/buffer-lines 0: 202006 => ((default-space space-address))
run: full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1149 . nil)))
run: full?/write/buffer-lines 1: #(tagged record (0 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202008 <= 0
mem: ((1 channel)): 202009 <= 0
mem: ((1 channel)): 202010 <= 1149
run: full?/write/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202009 integer) (raw)) => 0
run: full?/write/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 202011 <= 0
run: full?/write/buffer-lines 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/buffer-lines 3: 1 => ((4 integer))
mem: ((4 integer)): 202011 <= 1
run: full?/write/buffer-lines 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 0 1149 . nil))
run: capacity/full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/buffer-lines 0: 202037 => ((default-space space-address))
run: capacity/full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1149 . nil)))
run: capacity/full?/write/buffer-lines 1: #(tagged record (0 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202039 <= 0
mem: ((1 channel)): 202040 <= 0
mem: ((1 channel)): 202041 <= 1149
run: capacity/full?/write/buffer-lines 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((202041 tagged-value-array-address) (raw)) => 1149
run: capacity/full?/write/buffer-lines 2: 1149 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 202042 <= 1149
run: capacity/full?/write/buffer-lines 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: capacity/full?/write/buffer-lines 3: 2 => ((5 integer))
mem: ((5 integer)): 202043 <= 2
run: capacity/full?/write/buffer-lines 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 4: 2 => ((5 integer))
mem: ((5 integer)): 202012 <= 2
run: full?/write/buffer-lines 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 5: t => ((6 boolean))
mem: ((6 boolean)): 202013 <= t
run: full?/write/buffer-lines 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/buffer-lines 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202008 integer) (raw)) => 0
run: full?/write/buffer-lines 8: 0 => ((7 integer))
mem: ((7 integer)): 202014 <= 0
run: full?/write/buffer-lines 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 1
run: full?/write/buffer-lines 9: nil => ((8 boolean))
mem: ((8 boolean)): 202015 <= nil
run: full?/write/buffer-lines 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => nil
run: write/buffer-lines 3: nil => ((4 boolean))
mem: ((4 boolean)): 201980 <= nil
run: write/buffer-lines 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: write/buffer-lines 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: write/buffer-lines 7: 1149 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 201982 <= 1149
run: write/buffer-lines 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/buffer-lines 8: 1147 => ((7 integer-address))
mem: ((7 integer-address)): 201983 <= 1147
run: write/buffer-lines 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 9: 1150 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 201984 <= 1150
run: write/buffer-lines 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character f . nil))
run: write/buffer-lines 10: #(tagged record (character #\f . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1150 <= character
mem: ((8 tagged-value-address) (deref)): 1151 <= #\f
run: write/buffer-lines 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/buffer-lines 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 1
run: write/buffer-lines 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 12: 2 => ((9 integer))
mem: ((9 integer)): 201985 <= 2
run: write/buffer-lines 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/buffer-lines 13: t => ((10 boolean))
mem: ((10 boolean)): 201986 <= t
run: write/buffer-lines 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/buffer-lines 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1149 . nil))
run: buffer-lines 27: #(tagged record (0 1 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 0
mem: ((2 channel-address) (deref)): 1147 <= 1
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: buffer-lines 28: (((12 integer)) <- ((add)) ((12 integer)) ((1 literal)))
mem: ((12 integer)) => 0
run: buffer-lines 28: 1 => ((12 integer))
mem: ((12 integer)): 201013 <= 1
run: buffer-lines 29: (((jump)) ((-7 offset)))
run: buffer-lines 23: (((15 boolean)) <- ((greater-or-equal)) ((12 integer)) ((14 integer)))
mem: ((12 integer)) => 1
mem: ((14 integer)) => 4
run: buffer-lines 23: nil => ((15 boolean))
mem: ((15 boolean)): 201016 <= nil
run: buffer-lines 24: (((jump-if)) ((15 boolean)) ((5 offset)))
mem: ((15 boolean)) => nil
run: buffer-lines 25: (((6 character)) <- ((index)) ((13 string-address) (deref)) ((12 integer)))
mem: ((12 integer)) => 1
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
mem: ((201066 byte) (raw)) => o
run: buffer-lines 25: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 26: (((16 tagged-value)) <- ((save-type)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 26: #(tagged record (character #\o)) => ((16 tagged-value))
mem: ((16 tagged-value)): 201017 <= character
mem: ((16 tagged-value)): 201018 <= #\o
run: buffer-lines 27: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((16 tagged-value)))
mem: ((2 channel-address)) => 1146
mem: ((16 tagged-value)) => #(tagged record (character o . nil))
run: write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/buffer-lines 0: 202068 => ((default-space space-address))
run: write/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146 #(tagged record (character #\o . nil)))
run: write/buffer-lines 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 202070 <= 1146
run: write/buffer-lines 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1146 #(tagged record (character #\o . nil)))
run: write/buffer-lines 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 202071 <= character
mem: ((2 tagged-value)): 202072 <= #\o
run: write/buffer-lines 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1149 . nil))
run: full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/buffer-lines 0: 202099 => ((default-space space-address))
run: full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1149 . nil)))
run: full?/write/buffer-lines 1: #(tagged record (0 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202101 <= 0
mem: ((1 channel)): 202102 <= 1
mem: ((1 channel)): 202103 <= 1149
run: full?/write/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202102 integer) (raw)) => 1
run: full?/write/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 202104 <= 1
run: full?/write/buffer-lines 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/buffer-lines 3: 2 => ((4 integer))
mem: ((4 integer)): 202104 <= 2
run: full?/write/buffer-lines 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1149 . nil))
run: capacity/full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/buffer-lines 0: 202130 => ((default-space space-address))
run: capacity/full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1149 . nil)))
run: capacity/full?/write/buffer-lines 1: #(tagged record (0 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202132 <= 0
mem: ((1 channel)): 202133 <= 1
mem: ((1 channel)): 202134 <= 1149
run: capacity/full?/write/buffer-lines 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((202134 tagged-value-array-address) (raw)) => 1149
run: capacity/full?/write/buffer-lines 2: 1149 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 202135 <= 1149
run: capacity/full?/write/buffer-lines 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: capacity/full?/write/buffer-lines 3: 2 => ((5 integer))
mem: ((5 integer)): 202136 <= 2
run: capacity/full?/write/buffer-lines 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 4: 2 => ((5 integer))
mem: ((5 integer)): 202105 <= 2
run: full?/write/buffer-lines 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 5: nil => ((6 boolean))
mem: ((6 boolean)): 202106 <= nil
run: full?/write/buffer-lines 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/buffer-lines 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/buffer-lines 7: 0 => ((4 integer))
mem: ((4 integer)): 202104 <= 0
run: full?/write/buffer-lines 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202101 integer) (raw)) => 0
run: full?/write/buffer-lines 8: 0 => ((7 integer))
mem: ((7 integer)): 202107 <= 0
run: full?/write/buffer-lines 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/buffer-lines 9: t => ((8 boolean))
mem: ((8 boolean)): 202108 <= t
run: full?/write/buffer-lines 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/buffer-lines 3: t => ((4 boolean))
mem: ((4 boolean)): 202073 <= t
run: write/buffer-lines 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/buffer-lines 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/buffer-lines 5: 1146 => ((5 integer-address))
mem: ((5 integer-address)): 202074 <= 1146
run: write/buffer-lines 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/buffer-lines to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: waking up write/send-keys-to-stdin
schedule: read/send-prints-to-stdout
run: read/send-prints-to-stdout 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/send-prints-to-stdout 6: 1146 => ((4 integer-address))
mem: ((4 integer-address)): 301036 <= 1146
run: read/send-prints-to-stdout 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: read/send-prints-to-stdout 7: 1149 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 301037 <= 1149
run: read/send-prints-to-stdout 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
mem: ((1150 tagged-value) (raw)) => #(tagged record (character f . nil))
run: read/send-prints-to-stdout 8: #(tagged record (character #\f . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 301038 <= character
mem: ((6 tagged-value)): 301039 <= #\f
run: read/send-prints-to-stdout 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/send-prints-to-stdout 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 1
run: read/send-prints-to-stdout 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: read/send-prints-to-stdout 10: 2 => ((8 integer))
mem: ((8 integer)): 301040 <= 2
run: read/send-prints-to-stdout 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/send-prints-to-stdout 11: t => ((9 boolean))
mem: ((9 boolean)): 301041 <= t
run: read/send-prints-to-stdout 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/send-prints-to-stdout 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character f . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1149 . nil))
run: send-prints-to-stdout 3: #(tagged record (character #\f . nil)) => ((3 tagged-value))
mem: ((3 tagged-value)): 301004 <= character
mem: ((3 tagged-value)): 301005 <= #\f
run: send-prints-to-stdout 3: #(tagged record (1 1 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 1
mem: ((2 channel-address) (deref)): 1147 <= 1
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
mem: ((3 tagged-value)) => #(tagged record (character f . nil))
run: maybe-coerce/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/send-prints-to-stdout 0: 301093 => ((default-space space-address))
run: maybe-coerce/send-prints-to-stdout 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/send-prints-to-stdout 1: 301124 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 301095 <= 301124
run: maybe-coerce/send-prints-to-stdout 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/send-prints-to-stdout 2: #(tagged record (character #\f . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 301124 <= character
mem: ((1 tagged-value-address) (deref)): 301125 <= #\f
run: maybe-coerce/send-prints-to-stdout 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/send-prints-to-stdout 3: character => ((2 type))
mem: ((2 type)): 301096 <= character
run: maybe-coerce/send-prints-to-stdout 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((301124 type) (raw)) => character
run: maybe-coerce/send-prints-to-stdout 4: character => ((3 type))
mem: ((3 type)): 301097 <= character
run: maybe-coerce/send-prints-to-stdout 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/send-prints-to-stdout 5: t => ((4 boolean))
mem: ((4 boolean)): 301098 <= t
run: maybe-coerce/send-prints-to-stdout 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/send-prints-to-stdout 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((301125 location) (raw)) => f
run: maybe-coerce/send-prints-to-stdout 8: #\f => ((5 location))
mem: ((5 location)): 301099 <= #\f
run: maybe-coerce/send-prints-to-stdout 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => f
mem: ((4 boolean)) => t
run: send-prints-to-stdout 4: #\f => ((5 character))
mem: ((5 character)): 301006 <= #\f
run: send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
mem: ((5 character)) => f
run: send-prints-to-stdout 5: nil => ((6 boolean))
mem: ((6 boolean)): 301007 <= nil
run: send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
mem: ((6 boolean)) => nil
run: send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
mem: ((1 terminal-address)) => 1185
mem: ((5 character)) => f
run: print-character/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/send-prints-to-stdout 0: 301126 => ((default-space space-address))
run: print-character/send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185 #\f)
run: print-character/send-prints-to-stdout 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 301128 <= 1185
run: print-character/send-prints-to-stdout 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1185 #\f)
run: print-character/send-prints-to-stdout 2: #\f => ((2 character))
mem: ((2 character)): 301129 <= #\f
run: print-character/send-prints-to-stdout 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1185 #\f)
run: print-character/send-prints-to-stdout 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 301130 <= nil
run: print-character/send-prints-to-stdout 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1185 #\f)
run: print-character/send-prints-to-stdout 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 301131 <= nil
run: print-character/send-prints-to-stdout 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1185
run: print-character/send-prints-to-stdout 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/send-prints-to-stdout 6: 1187 => ((5 integer-address))
mem: ((5 integer-address)): 301132 <= 1187
run: print-character/send-prints-to-stdout 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/send-prints-to-stdout 7: 1188 => ((6 integer-address))
mem: ((6 integer-address)): 301133 <= 1188
run: print-character/send-prints-to-stdout 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1186 integer) (raw)) => 20
run: print-character/send-prints-to-stdout 8: 20 => ((7 integer))
mem: ((7 integer)): 301134 <= 20
run: print-character/send-prints-to-stdout 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/send-prints-to-stdout 9: 0 => ((8 integer))
mem: ((8 integer)): 301135 <= 0
run: print-character/send-prints-to-stdout 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 0
run: print-character/send-prints-to-stdout 10: 0 => ((9 integer))
mem: ((9 integer)): 301136 <= 0
run: print-character/send-prints-to-stdout 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: print-character/send-prints-to-stdout 11: 1190 => ((10 string-address))
mem: ((10 string-address)): 301137 <= 1190
run: print-character/send-prints-to-stdout 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: print-character/send-prints-to-stdout 12: 1191 => ((11 byte-address))
mem: ((11 byte-address)): 301138 <= 1191
run: print-character/send-prints-to-stdout 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: print-character/send-prints-to-stdout 13: #\f => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1191 <= #\f
run: print-character/send-prints-to-stdout 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/send-prints-to-stdout 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1188 <= 1
run: print-character/send-prints-to-stdout 15: (((reply)))
run: send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1146
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301157 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146)
run: read/send-prints-to-stdout 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 301159 <= 1146
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1149 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301188 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1149 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (1 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 301190 <= 1
mem: ((1 channel)): 301191 <= 1
mem: ((1 channel)): 301192 <= 1149
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301190 integer) (raw)) => 1
run: empty?/read/send-prints-to-stdout 2: 1 => ((4 integer))
mem: ((4 integer)): 301193 <= 1
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301191 integer) (raw)) => 1
run: empty?/read/send-prints-to-stdout 3: 1 => ((5 integer))
mem: ((5 integer)): 301194 <= 1
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301195 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301160 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 301161 <= 1147
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-lines
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101813 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101814 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101815 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character l . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\l . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\l
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101816 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101817 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => l
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101899 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101901 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101902 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 101903 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101904 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 101905 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 7
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101906 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 7
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1039 byte) (raw)) => i
run: read-key/send-keys-to-stdin 10: #\i => ((7 character))
mem: ((7 character)): 101907 <= #\i
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 7
run: read-key/send-keys-to-stdin 11: 8 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 8
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => i
run: send-keys-to-stdin 3: #\i => ((3 character))
mem: ((3 character)): 101004 <= #\i
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => i
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => i
run: send-keys-to-stdin 5: #(tagged record (character #\i)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\i
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character i . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101930 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\i . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 101932 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\i . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\i . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101933 <= character
mem: ((2 tagged-value)): 101934 <= #\i
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101961 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101963 <= 0
mem: ((1 channel)): 101964 <= 1
mem: ((1 channel)): 101965 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101964 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101966 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101966 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101992 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 101994 <= 0
mem: ((1 channel)): 101995 <= 1
mem: ((1 channel)): 101996 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101996 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101997 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101998 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101967 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101968 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101966 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101963 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101969 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101970 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101935 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 101936 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: write/buffer-lines
run: write/buffer-lines 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: write/buffer-lines 7: 1149 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 202075 <= 1149
run: write/buffer-lines 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/buffer-lines 8: 1147 => ((7 integer-address))
mem: ((7 integer-address)): 202076 <= 1147
run: write/buffer-lines 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 9: 1152 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 202077 <= 1152
run: write/buffer-lines 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/buffer-lines 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1152 <= character
mem: ((8 tagged-value-address) (deref)): 1153 <= #\o
run: write/buffer-lines 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/buffer-lines 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 2
run: write/buffer-lines 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 12: 2 => ((9 integer))
mem: ((9 integer)): 202078 <= 2
run: write/buffer-lines 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/buffer-lines 13: nil => ((10 boolean))
mem: ((10 boolean)): 202079 <= nil
run: write/buffer-lines 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/buffer-lines 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/buffer-lines 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 0
run: write/buffer-lines 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1149 . nil))
run: buffer-lines 27: #(tagged record (1 0 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 1
mem: ((2 channel-address) (deref)): 1147 <= 0
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: buffer-lines 28: (((12 integer)) <- ((add)) ((12 integer)) ((1 literal)))
mem: ((12 integer)) => 1
run: buffer-lines 28: 2 => ((12 integer))
mem: ((12 integer)): 201013 <= 2
run: buffer-lines 29: (((jump)) ((-7 offset)))
run: buffer-lines 23: (((15 boolean)) <- ((greater-or-equal)) ((12 integer)) ((14 integer)))
mem: ((12 integer)) => 2
mem: ((14 integer)) => 4
run: buffer-lines 23: nil => ((15 boolean))
mem: ((15 boolean)): 201016 <= nil
run: buffer-lines 24: (((jump-if)) ((15 boolean)) ((5 offset)))
mem: ((15 boolean)) => nil
run: buffer-lines 25: (((6 character)) <- ((index)) ((13 string-address) (deref)) ((12 integer)))
mem: ((12 integer)) => 2
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
mem: ((201067 byte) (raw)) => o
run: buffer-lines 25: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 26: (((16 tagged-value)) <- ((save-type)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 26: #(tagged record (character #\o)) => ((16 tagged-value))
mem: ((16 tagged-value)): 201017 <= character
mem: ((16 tagged-value)): 201018 <= #\o
run: buffer-lines 27: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((16 tagged-value)))
mem: ((2 channel-address)) => 1146
mem: ((16 tagged-value)) => #(tagged record (character o . nil))
run: write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/buffer-lines 0: 202161 => ((default-space space-address))
run: write/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146 #(tagged record (character #\o . nil)))
run: write/buffer-lines 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 202163 <= 1146
run: write/buffer-lines 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1146 #(tagged record (character #\o . nil)))
run: write/buffer-lines 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 202164 <= character
mem: ((2 tagged-value)): 202165 <= #\o
run: write/buffer-lines 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1149 . nil))
run: full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/buffer-lines 0: 202192 => ((default-space space-address))
run: full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1149 . nil)))
run: full?/write/buffer-lines 1: #(tagged record (1 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202194 <= 1
mem: ((1 channel)): 202195 <= 0
mem: ((1 channel)): 202196 <= 1149
run: full?/write/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202195 integer) (raw)) => 0
run: full?/write/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 202197 <= 0
run: full?/write/buffer-lines 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/buffer-lines 3: 1 => ((4 integer))
mem: ((4 integer)): 202197 <= 1
run: full?/write/buffer-lines 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1149 . nil))
run: capacity/full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/buffer-lines 0: 202223 => ((default-space space-address))
run: capacity/full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1149 . nil)))
run: capacity/full?/write/buffer-lines 1: #(tagged record (1 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202225 <= 1
mem: ((1 channel)): 202226 <= 0
mem: ((1 channel)): 202227 <= 1149
run: capacity/full?/write/buffer-lines 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((202227 tagged-value-array-address) (raw)) => 1149
run: capacity/full?/write/buffer-lines 2: 1149 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 202228 <= 1149
run: capacity/full?/write/buffer-lines 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: capacity/full?/write/buffer-lines 3: 2 => ((5 integer))
mem: ((5 integer)): 202229 <= 2
run: capacity/full?/write/buffer-lines 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 4: 2 => ((5 integer))
mem: ((5 integer)): 202198 <= 2
run: full?/write/buffer-lines 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 5: t => ((6 boolean))
mem: ((6 boolean)): 202199 <= t
run: full?/write/buffer-lines 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/buffer-lines 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202194 integer) (raw)) => 1
run: full?/write/buffer-lines 8: 1 => ((7 integer))
mem: ((7 integer)): 202200 <= 1
run: full?/write/buffer-lines 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/buffer-lines 9: t => ((8 boolean))
mem: ((8 boolean)): 202201 <= t
run: full?/write/buffer-lines 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/buffer-lines 3: t => ((4 boolean))
mem: ((4 boolean)): 202166 <= t
run: write/buffer-lines 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/buffer-lines 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/buffer-lines 5: 1146 => ((5 integer-address))
mem: ((5 integer-address)): 202167 <= 1146
run: write/buffer-lines 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/buffer-lines to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: read/send-prints-to-stdout
run: read/send-prints-to-stdout 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/send-prints-to-stdout 6: 1146 => ((4 integer-address))
mem: ((4 integer-address)): 301162 <= 1146
run: read/send-prints-to-stdout 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: read/send-prints-to-stdout 7: 1149 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 301163 <= 1149
run: read/send-prints-to-stdout 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
mem: ((1152 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/send-prints-to-stdout 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 301164 <= character
mem: ((6 tagged-value)): 301165 <= #\o
run: read/send-prints-to-stdout 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/send-prints-to-stdout 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 2
run: read/send-prints-to-stdout 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: read/send-prints-to-stdout 10: 2 => ((8 integer))
mem: ((8 integer)): 301166 <= 2
run: read/send-prints-to-stdout 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/send-prints-to-stdout 11: nil => ((9 boolean))
mem: ((9 boolean)): 301167 <= nil
run: read/send-prints-to-stdout 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/send-prints-to-stdout 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/send-prints-to-stdout 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 0
run: read/send-prints-to-stdout 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1149 . nil))
run: send-prints-to-stdout 3: #(tagged record (character #\o . nil)) => ((3 tagged-value))
mem: ((3 tagged-value)): 301004 <= character
mem: ((3 tagged-value)): 301005 <= #\o
run: send-prints-to-stdout 3: #(tagged record (0 0 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 0
mem: ((2 channel-address) (deref)): 1147 <= 0
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
mem: ((3 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/send-prints-to-stdout 0: 301219 => ((default-space space-address))
run: maybe-coerce/send-prints-to-stdout 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/send-prints-to-stdout 1: 301250 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 301221 <= 301250
run: maybe-coerce/send-prints-to-stdout 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/send-prints-to-stdout 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 301250 <= character
mem: ((1 tagged-value-address) (deref)): 301251 <= #\o
run: maybe-coerce/send-prints-to-stdout 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/send-prints-to-stdout 3: character => ((2 type))
mem: ((2 type)): 301222 <= character
run: maybe-coerce/send-prints-to-stdout 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((301250 type) (raw)) => character
run: maybe-coerce/send-prints-to-stdout 4: character => ((3 type))
mem: ((3 type)): 301223 <= character
run: maybe-coerce/send-prints-to-stdout 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/send-prints-to-stdout 5: t => ((4 boolean))
mem: ((4 boolean)): 301224 <= t
run: maybe-coerce/send-prints-to-stdout 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/send-prints-to-stdout 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((301251 location) (raw)) => o
run: maybe-coerce/send-prints-to-stdout 8: #\o => ((5 location))
mem: ((5 location)): 301225 <= #\o
run: maybe-coerce/send-prints-to-stdout 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: send-prints-to-stdout 4: #\o => ((5 character))
mem: ((5 character)): 301006 <= #\o
run: send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
mem: ((5 character)) => o
run: send-prints-to-stdout 5: nil => ((6 boolean))
mem: ((6 boolean)): 301007 <= nil
run: send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
mem: ((6 boolean)) => nil
run: send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
mem: ((1 terminal-address)) => 1185
mem: ((5 character)) => o
run: print-character/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/send-prints-to-stdout 0: 301252 => ((default-space space-address))
run: print-character/send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185 #\o)
run: print-character/send-prints-to-stdout 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 301254 <= 1185
run: print-character/send-prints-to-stdout 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1185 #\o)
run: print-character/send-prints-to-stdout 2: #\o => ((2 character))
mem: ((2 character)): 301255 <= #\o
run: print-character/send-prints-to-stdout 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1185 #\o)
run: print-character/send-prints-to-stdout 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 301256 <= nil
run: print-character/send-prints-to-stdout 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1185 #\o)
run: print-character/send-prints-to-stdout 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 301257 <= nil
run: print-character/send-prints-to-stdout 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1185
run: print-character/send-prints-to-stdout 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/send-prints-to-stdout 6: 1187 => ((5 integer-address))
mem: ((5 integer-address)): 301258 <= 1187
run: print-character/send-prints-to-stdout 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/send-prints-to-stdout 7: 1188 => ((6 integer-address))
mem: ((6 integer-address)): 301259 <= 1188
run: print-character/send-prints-to-stdout 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1186 integer) (raw)) => 20
run: print-character/send-prints-to-stdout 8: 20 => ((7 integer))
mem: ((7 integer)): 301260 <= 20
run: print-character/send-prints-to-stdout 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/send-prints-to-stdout 9: 0 => ((8 integer))
mem: ((8 integer)): 301261 <= 0
run: print-character/send-prints-to-stdout 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 1
run: print-character/send-prints-to-stdout 10: 1 => ((9 integer))
mem: ((9 integer)): 301262 <= 1
run: print-character/send-prints-to-stdout 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: print-character/send-prints-to-stdout 11: 1190 => ((10 string-address))
mem: ((10 string-address)): 301263 <= 1190
run: print-character/send-prints-to-stdout 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 1
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: print-character/send-prints-to-stdout 12: 1192 => ((11 byte-address))
mem: ((11 byte-address)): 301264 <= 1192
run: print-character/send-prints-to-stdout 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: print-character/send-prints-to-stdout 13: #\o => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1192 <= #\o
run: print-character/send-prints-to-stdout 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/send-prints-to-stdout 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1188 <= 2
run: print-character/send-prints-to-stdout 15: (((reply)))
run: send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1146
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301283 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146)
run: read/send-prints-to-stdout 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 301285 <= 1146
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1149 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301314 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1149 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (0 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 301316 <= 0
mem: ((1 channel)): 301317 <= 0
mem: ((1 channel)): 301318 <= 1149
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301316 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 2: 0 => ((4 integer))
mem: ((4 integer)): 301319 <= 0
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301317 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 3: 0 => ((5 integer))
mem: ((5 integer)): 301320 <= 0
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301321 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301286 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 301287 <= 1147
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-lines
schedule: write/buffer-lines
run: write/buffer-lines 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: write/buffer-lines 7: 1149 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 202168 <= 1149
run: write/buffer-lines 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/buffer-lines 8: 1147 => ((7 integer-address))
mem: ((7 integer-address)): 202169 <= 1147
run: write/buffer-lines 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 9: 1150 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 202170 <= 1150
run: write/buffer-lines 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/buffer-lines 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1150 <= character
mem: ((8 tagged-value-address) (deref)): 1151 <= #\o
run: write/buffer-lines 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/buffer-lines 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 1
run: write/buffer-lines 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 12: 2 => ((9 integer))
mem: ((9 integer)): 202171 <= 2
run: write/buffer-lines 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/buffer-lines 13: t => ((10 boolean))
mem: ((10 boolean)): 202172 <= t
run: write/buffer-lines 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/buffer-lines 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1149 . nil))
run: buffer-lines 27: #(tagged record (0 1 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 0
mem: ((2 channel-address) (deref)): 1147 <= 1
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: buffer-lines 28: (((12 integer)) <- ((add)) ((12 integer)) ((1 literal)))
mem: ((12 integer)) => 2
run: buffer-lines 28: 3 => ((12 integer))
mem: ((12 integer)): 201013 <= 3
run: buffer-lines 29: (((jump)) ((-7 offset)))
run: buffer-lines 23: (((15 boolean)) <- ((greater-or-equal)) ((12 integer)) ((14 integer)))
mem: ((12 integer)) => 3
mem: ((14 integer)) => 4
run: buffer-lines 23: nil => ((15 boolean))
mem: ((15 boolean)): 201016 <= nil
run: buffer-lines 24: (((jump-if)) ((15 boolean)) ((5 offset)))
mem: ((15 boolean)) => nil
run: buffer-lines 25: (((6 character)) <- ((index)) ((13 string-address) (deref)) ((12 integer)))
mem: ((12 integer)) => 3
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
mem: ((201068 byte) (raw)) => 

run: buffer-lines 25: #\newline => ((6 character))
mem: ((6 character)): 201007 <= #\newline
run: buffer-lines 26: (((16 tagged-value)) <- ((save-type)) ((6 character)))
mem: ((6 character)) => 

run: buffer-lines 26: #(tagged record (character #\newline)) => ((16 tagged-value))
mem: ((16 tagged-value)): 201017 <= character
mem: ((16 tagged-value)): 201018 <= #\newline
run: buffer-lines 27: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((16 tagged-value)))
mem: ((2 channel-address)) => 1146
mem: ((16 tagged-value)) => #(tagged record (character 
 . nil))
run: write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/buffer-lines 0: 202254 => ((default-space space-address))
run: write/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146 #(tagged record (character #\newline . nil)))
run: write/buffer-lines 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 202256 <= 1146
run: write/buffer-lines 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1146 #(tagged record (character #\newline . nil)))
run: write/buffer-lines 2: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 202257 <= character
mem: ((2 tagged-value)): 202258 <= #\newline
run: write/buffer-lines 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1149 . nil))
run: full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/buffer-lines 0: 202285 => ((default-space space-address))
run: full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1149 . nil)))
run: full?/write/buffer-lines 1: #(tagged record (0 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202287 <= 0
mem: ((1 channel)): 202288 <= 1
mem: ((1 channel)): 202289 <= 1149
run: full?/write/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202288 integer) (raw)) => 1
run: full?/write/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 202290 <= 1
run: full?/write/buffer-lines 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/buffer-lines 3: 2 => ((4 integer))
mem: ((4 integer)): 202290 <= 2
run: full?/write/buffer-lines 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1149 . nil))
run: capacity/full?/write/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/buffer-lines 0: 202316 => ((default-space space-address))
run: capacity/full?/write/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1149 . nil)))
run: capacity/full?/write/buffer-lines 1: #(tagged record (0 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 202318 <= 0
mem: ((1 channel)): 202319 <= 1
mem: ((1 channel)): 202320 <= 1149
run: capacity/full?/write/buffer-lines 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((202320 tagged-value-array-address) (raw)) => 1149
run: capacity/full?/write/buffer-lines 2: 1149 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 202321 <= 1149
run: capacity/full?/write/buffer-lines 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: capacity/full?/write/buffer-lines 3: 2 => ((5 integer))
mem: ((5 integer)): 202322 <= 2
run: capacity/full?/write/buffer-lines 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 4: 2 => ((5 integer))
mem: ((5 integer)): 202291 <= 2
run: full?/write/buffer-lines 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/buffer-lines 5: nil => ((6 boolean))
mem: ((6 boolean)): 202292 <= nil
run: full?/write/buffer-lines 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/buffer-lines 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/buffer-lines 7: 0 => ((4 integer))
mem: ((4 integer)): 202290 <= 0
run: full?/write/buffer-lines 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202287 integer) (raw)) => 0
run: full?/write/buffer-lines 8: 0 => ((7 integer))
mem: ((7 integer)): 202293 <= 0
run: full?/write/buffer-lines 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/buffer-lines 9: t => ((8 boolean))
mem: ((8 boolean)): 202294 <= t
run: full?/write/buffer-lines 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/buffer-lines 3: t => ((4 boolean))
mem: ((4 boolean)): 202259 <= t
run: write/buffer-lines 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/buffer-lines 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/buffer-lines 5: 1146 => ((5 integer-address))
mem: ((5 integer-address)): 202260 <= 1146
run: write/buffer-lines 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/buffer-lines to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: read/send-prints-to-stdout
run: read/send-prints-to-stdout 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/send-prints-to-stdout 6: 1146 => ((4 integer-address))
mem: ((4 integer-address)): 301288 <= 1146
run: read/send-prints-to-stdout 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: read/send-prints-to-stdout 7: 1149 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 301289 <= 1149
run: read/send-prints-to-stdout 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
mem: ((1150 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/send-prints-to-stdout 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 301290 <= character
mem: ((6 tagged-value)): 301291 <= #\o
run: read/send-prints-to-stdout 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/send-prints-to-stdout 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 1
run: read/send-prints-to-stdout 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: read/send-prints-to-stdout 10: 2 => ((8 integer))
mem: ((8 integer)): 301292 <= 2
run: read/send-prints-to-stdout 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/send-prints-to-stdout 11: t => ((9 boolean))
mem: ((9 boolean)): 301293 <= t
run: read/send-prints-to-stdout 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/send-prints-to-stdout 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1149 . nil))
run: send-prints-to-stdout 3: #(tagged record (character #\o . nil)) => ((3 tagged-value))
mem: ((3 tagged-value)): 301004 <= character
mem: ((3 tagged-value)): 301005 <= #\o
run: send-prints-to-stdout 3: #(tagged record (1 1 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 1
mem: ((2 channel-address) (deref)): 1147 <= 1
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
mem: ((3 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/send-prints-to-stdout 0: 301345 => ((default-space space-address))
run: maybe-coerce/send-prints-to-stdout 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/send-prints-to-stdout 1: 301376 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 301347 <= 301376
run: maybe-coerce/send-prints-to-stdout 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/send-prints-to-stdout 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 301376 <= character
mem: ((1 tagged-value-address) (deref)): 301377 <= #\o
run: maybe-coerce/send-prints-to-stdout 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/send-prints-to-stdout 3: character => ((2 type))
mem: ((2 type)): 301348 <= character
run: maybe-coerce/send-prints-to-stdout 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((301376 type) (raw)) => character
run: maybe-coerce/send-prints-to-stdout 4: character => ((3 type))
mem: ((3 type)): 301349 <= character
run: maybe-coerce/send-prints-to-stdout 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/send-prints-to-stdout 5: t => ((4 boolean))
mem: ((4 boolean)): 301350 <= t
run: maybe-coerce/send-prints-to-stdout 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/send-prints-to-stdout 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((301377 location) (raw)) => o
run: maybe-coerce/send-prints-to-stdout 8: #\o => ((5 location))
mem: ((5 location)): 301351 <= #\o
run: maybe-coerce/send-prints-to-stdout 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: send-prints-to-stdout 4: #\o => ((5 character))
mem: ((5 character)): 301006 <= #\o
run: send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
mem: ((5 character)) => o
run: send-prints-to-stdout 5: nil => ((6 boolean))
mem: ((6 boolean)): 301007 <= nil
run: send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
mem: ((6 boolean)) => nil
run: send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
mem: ((1 terminal-address)) => 1185
mem: ((5 character)) => o
run: print-character/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/send-prints-to-stdout 0: 301378 => ((default-space space-address))
run: print-character/send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185 #\o)
run: print-character/send-prints-to-stdout 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 301380 <= 1185
run: print-character/send-prints-to-stdout 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1185 #\o)
run: print-character/send-prints-to-stdout 2: #\o => ((2 character))
mem: ((2 character)): 301381 <= #\o
run: print-character/send-prints-to-stdout 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1185 #\o)
run: print-character/send-prints-to-stdout 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 301382 <= nil
run: print-character/send-prints-to-stdout 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1185 #\o)
run: print-character/send-prints-to-stdout 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 301383 <= nil
run: print-character/send-prints-to-stdout 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1185
run: print-character/send-prints-to-stdout 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/send-prints-to-stdout 6: 1187 => ((5 integer-address))
mem: ((5 integer-address)): 301384 <= 1187
run: print-character/send-prints-to-stdout 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/send-prints-to-stdout 7: 1188 => ((6 integer-address))
mem: ((6 integer-address)): 301385 <= 1188
run: print-character/send-prints-to-stdout 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1186 integer) (raw)) => 20
run: print-character/send-prints-to-stdout 8: 20 => ((7 integer))
mem: ((7 integer)): 301386 <= 20
run: print-character/send-prints-to-stdout 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/send-prints-to-stdout 9: 0 => ((8 integer))
mem: ((8 integer)): 301387 <= 0
run: print-character/send-prints-to-stdout 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 2
run: print-character/send-prints-to-stdout 10: 2 => ((9 integer))
mem: ((9 integer)): 301388 <= 2
run: print-character/send-prints-to-stdout 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: print-character/send-prints-to-stdout 11: 1190 => ((10 string-address))
mem: ((10 string-address)): 301389 <= 1190
run: print-character/send-prints-to-stdout 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 2
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: print-character/send-prints-to-stdout 12: 1193 => ((11 byte-address))
mem: ((11 byte-address)): 301390 <= 1193
run: print-character/send-prints-to-stdout 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: print-character/send-prints-to-stdout 13: #\o => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1193 <= #\o
run: print-character/send-prints-to-stdout 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/send-prints-to-stdout 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1188 <= 3
run: print-character/send-prints-to-stdout 15: (((reply)))
run: send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1146
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301409 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146)
run: read/send-prints-to-stdout 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 301411 <= 1146
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1149 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301440 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1149 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (1 1 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 301442 <= 1
mem: ((1 channel)): 301443 <= 1
mem: ((1 channel)): 301444 <= 1149
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301442 integer) (raw)) => 1
run: empty?/read/send-prints-to-stdout 2: 1 => ((4 integer))
mem: ((4 integer)): 301445 <= 1
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301443 integer) (raw)) => 1
run: empty?/read/send-prints-to-stdout 3: 1 => ((5 integer))
mem: ((5 integer)): 301446 <= 1
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301447 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301412 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 301413 <= 1147
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-lines
schedule: write/buffer-lines
run: write/buffer-lines 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: write/buffer-lines 7: 1149 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 202261 <= 1149
run: write/buffer-lines 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/buffer-lines 8: 1147 => ((7 integer-address))
mem: ((7 integer-address)): 202262 <= 1147
run: write/buffer-lines 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 9: 1152 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 202263 <= 1152
run: write/buffer-lines 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character 
 . nil))
run: write/buffer-lines 10: #(tagged record (character #\newline . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1152 <= character
mem: ((8 tagged-value-address) (deref)): 1153 <= #\newline
run: write/buffer-lines 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/buffer-lines 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 2
run: write/buffer-lines 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: write/buffer-lines 12: 2 => ((9 integer))
mem: ((9 integer)): 202264 <= 2
run: write/buffer-lines 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/buffer-lines 13: nil => ((10 boolean))
mem: ((10 boolean)): 202265 <= nil
run: write/buffer-lines 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/buffer-lines 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/buffer-lines 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1147 <= 0
run: write/buffer-lines 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1149 . nil))
run: buffer-lines 27: #(tagged record (1 0 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 1
mem: ((2 channel-address) (deref)): 1147 <= 0
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: buffer-lines 28: (((12 integer)) <- ((add)) ((12 integer)) ((1 literal)))
mem: ((12 integer)) => 3
run: buffer-lines 28: 4 => ((12 integer))
mem: ((12 integer)): 201013 <= 4
run: buffer-lines 29: (((jump)) ((-7 offset)))
run: buffer-lines 23: (((15 boolean)) <- ((greater-or-equal)) ((12 integer)) ((14 integer)))
mem: ((12 integer)) => 4
mem: ((14 integer)) => 4
run: buffer-lines 23: t => ((15 boolean))
mem: ((15 boolean)): 201016 <= t
run: buffer-lines 24: (((jump-if)) ((15 boolean)) ((5 offset)))
mem: ((15 boolean)) => t
run: buffer-lines 30: (((jump)) ((-28 offset)))
run: buffer-lines 3: (((3 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/buffer-lines 0: 202347 => ((default-space space-address))
run: init-buffer/buffer-lines 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202349 <= 202378
run: init-buffer/buffer-lines 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/buffer-lines 2: 202378 => ((2 integer-address))
mem: ((2 integer-address)): 202350 <= 202378
run: init-buffer/buffer-lines 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/buffer-lines 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 202378 <= 0
run: init-buffer/buffer-lines 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/buffer-lines 4: 202379 => ((3 string-address-address))
mem: ((3 string-address-address)): 202351 <= 202379
run: init-buffer/buffer-lines 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/buffer-lines 5: 30 => ((4 integer))
mem: ((4 integer)): 202352 <= 30
run: init-buffer/buffer-lines 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/buffer-lines 6: 202380 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 202379 <= 202380
run: init-buffer/buffer-lines 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-lines 3: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 202411 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 202413 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 202442 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 202444 <= 0
mem: ((1 channel)): 202445 <= 1
mem: ((1 channel)): 202446 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202444 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 202447 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202445 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 202448 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: nil => ((6 boolean))
mem: ((6 boolean)): 202449 <= nil
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => nil
run: read/buffer-lines 2: nil => ((2 boolean))
mem: ((2 boolean)): 202414 <= nil
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 202416 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 202417 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character l . nil))
run: read/buffer-lines 8: #(tagged record (character #\l . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 202418 <= character
mem: ((6 tagged-value)): 202419 <= #\l
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 202420 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 202421 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character l . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\l . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\l
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character l . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 202473 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 202504 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 202475 <= 202504
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\l . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\l . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 202504 <= character
mem: ((1 tagged-value-address) (deref)): 202505 <= #\l
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\l . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 202476 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((202504 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 202477 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 202478 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((202505 location) (raw)) => l
run: maybe-coerce/buffer-lines 8: #\l => ((5 location))
mem: ((5 location)): 202479 <= #\l
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => l
mem: ((4 boolean)) => t
run: buffer-lines 5: #\l => ((6 character))
mem: ((6 character)): 201007 <= #\l
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => l
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => l
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) => l
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 202506 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\l)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202508 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\l)
run: append/buffer-lines 2: #\l => ((2 character))
mem: ((2 character)): 202509 <= #\l
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 202537 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202539 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 0
run: buffer-full?/append/buffer-lines 2: 0 => ((2 integer))
mem: ((2 integer)): 202540 <= 0
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 202541 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 202542 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 202543 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 202510 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 202511 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 202512 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202381 => ((6 byte-address))
mem: ((6 byte-address)): 202513 <= 202381
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => l
run: append/buffer-lines 9: #\l => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202381 <= #\l
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/buffer-lines 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 1
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => l
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => l
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 202568 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 202570 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 202599 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 202601 <= 1
mem: ((1 channel)): 202602 <= 1
mem: ((1 channel)): 202603 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202601 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 202604 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202602 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 202605 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 202606 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 202571 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 202572 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: waking up write/send-keys-to-stdin
schedule: read/send-prints-to-stdout
run: read/send-prints-to-stdout 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/send-prints-to-stdout 6: 1146 => ((4 integer-address))
mem: ((4 integer-address)): 301414 <= 1146
run: read/send-prints-to-stdout 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1148 tagged-value-array-address) (raw)) => 1149
run: read/send-prints-to-stdout 7: 1149 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 301415 <= 1149
run: read/send-prints-to-stdout 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1149 tagged-value-array) (raw))
mem: ((1149 integer) (raw)) => 2
mem: ((1152 tagged-value) (raw)) => #(tagged record (character 
 . nil))
run: read/send-prints-to-stdout 8: #(tagged record (character #\newline . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 301416 <= character
mem: ((6 tagged-value)): 301417 <= #\newline
run: read/send-prints-to-stdout 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/send-prints-to-stdout 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 2
run: read/send-prints-to-stdout 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1149 integer) (raw)) => 2
run: read/send-prints-to-stdout 10: 2 => ((8 integer))
mem: ((8 integer)): 301418 <= 2
run: read/send-prints-to-stdout 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/send-prints-to-stdout 11: nil => ((9 boolean))
mem: ((9 boolean)): 301419 <= nil
run: read/send-prints-to-stdout 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/send-prints-to-stdout 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/send-prints-to-stdout 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1146 <= 0
run: read/send-prints-to-stdout 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character 
 . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1149 . nil))
run: send-prints-to-stdout 3: #(tagged record (character #\newline . nil)) => ((3 tagged-value))
mem: ((3 tagged-value)): 301004 <= character
mem: ((3 tagged-value)): 301005 <= #\newline
run: send-prints-to-stdout 3: #(tagged record (0 0 1149 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1146 <= 0
mem: ((2 channel-address) (deref)): 1147 <= 0
mem: ((2 channel-address) (deref)): 1148 <= 1149
run: send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
mem: ((3 tagged-value)) => #(tagged record (character 
 . nil))
run: maybe-coerce/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/send-prints-to-stdout 0: 301471 => ((default-space space-address))
run: maybe-coerce/send-prints-to-stdout 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/send-prints-to-stdout 1: 301502 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 301473 <= 301502
run: maybe-coerce/send-prints-to-stdout 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\newline . nil)) character)
run: maybe-coerce/send-prints-to-stdout 2: #(tagged record (character #\newline . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 301502 <= character
mem: ((1 tagged-value-address) (deref)): 301503 <= #\newline
run: maybe-coerce/send-prints-to-stdout 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\newline . nil)) character)
run: maybe-coerce/send-prints-to-stdout 3: character => ((2 type))
mem: ((2 type)): 301474 <= character
run: maybe-coerce/send-prints-to-stdout 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((301502 type) (raw)) => character
run: maybe-coerce/send-prints-to-stdout 4: character => ((3 type))
mem: ((3 type)): 301475 <= character
run: maybe-coerce/send-prints-to-stdout 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/send-prints-to-stdout 5: t => ((4 boolean))
mem: ((4 boolean)): 301476 <= t
run: maybe-coerce/send-prints-to-stdout 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/send-prints-to-stdout 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((301503 location) (raw)) => 

run: maybe-coerce/send-prints-to-stdout 8: #\newline => ((5 location))
mem: ((5 location)): 301477 <= #\newline
run: maybe-coerce/send-prints-to-stdout 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => 

mem: ((4 boolean)) => t
run: send-prints-to-stdout 4: #\newline => ((5 character))
mem: ((5 character)): 301006 <= #\newline
run: send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
mem: ((5 character)) => 

run: send-prints-to-stdout 5: nil => ((6 boolean))
mem: ((6 boolean)): 301007 <= nil
run: send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
mem: ((6 boolean)) => nil
run: send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
mem: ((1 terminal-address)) => 1185
mem: ((5 character)) => 

run: print-character/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/send-prints-to-stdout 0: 301504 => ((default-space space-address))
run: print-character/send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1185 #\newline)
run: print-character/send-prints-to-stdout 1: 1185 => ((1 terminal-address))
mem: ((1 terminal-address)): 301506 <= 1185
run: print-character/send-prints-to-stdout 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1185 #\newline)
run: print-character/send-prints-to-stdout 2: #\newline => ((2 character))
mem: ((2 character)): 301507 <= #\newline
run: print-character/send-prints-to-stdout 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1185 #\newline)
run: print-character/send-prints-to-stdout 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 301508 <= nil
run: print-character/send-prints-to-stdout 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1185 #\newline)
run: print-character/send-prints-to-stdout 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 301509 <= nil
run: print-character/send-prints-to-stdout 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1185
run: print-character/send-prints-to-stdout 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/send-prints-to-stdout 6: 1187 => ((5 integer-address))
mem: ((5 integer-address)): 301510 <= 1187
run: print-character/send-prints-to-stdout 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/send-prints-to-stdout 7: 1188 => ((6 integer-address))
mem: ((6 integer-address)): 301511 <= 1188
run: print-character/send-prints-to-stdout 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1186 integer) (raw)) => 20
run: print-character/send-prints-to-stdout 8: 20 => ((7 integer))
mem: ((7 integer)): 301512 <= 20
run: print-character/send-prints-to-stdout 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/send-prints-to-stdout 9: 0 => ((8 integer))
mem: ((8 integer)): 301513 <= 0
run: print-character/send-prints-to-stdout 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 3
run: print-character/send-prints-to-stdout 10: 3 => ((9 integer))
mem: ((9 integer)): 301514 <= 3
run: print-character/send-prints-to-stdout 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1189 string-address) (raw)) => 1190
run: print-character/send-prints-to-stdout 11: 1190 => ((10 string-address))
mem: ((10 string-address)): 301515 <= 1190
run: print-character/send-prints-to-stdout 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 3
array-len: ((1190 string) (raw))
mem: ((1190 integer) (raw)) => 200
run: print-character/send-prints-to-stdout 12: 1194 => ((11 byte-address))
mem: ((11 byte-address)): 301516 <= 1194
run: print-character/send-prints-to-stdout 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 

run: print-character/send-prints-to-stdout 13: #\newline => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1194 <= #\newline
run: print-character/send-prints-to-stdout 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/send-prints-to-stdout 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1188 <= 4
run: print-character/send-prints-to-stdout 15: (((reply)))
run: send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1146
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301535 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1146)
run: read/send-prints-to-stdout 1: 1146 => ((1 channel-address))
mem: ((1 channel-address)): 301537 <= 1146
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1149 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301566 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1149 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (0 0 1149 . nil)) => ((1 channel))
mem: ((1 channel)): 301568 <= 0
mem: ((1 channel)): 301569 <= 0
mem: ((1 channel)): 301570 <= 1149
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301568 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 2: 0 => ((4 integer))
mem: ((4 integer)): 301571 <= 0
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301569 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 3: 0 => ((5 integer))
mem: ((5 integer)): 301572 <= 0
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301573 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301538 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1147 => ((3 integer-address))
mem: ((3 integer-address)): 301539 <= 1147
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101937 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 101938 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101939 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character i . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\i . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\i
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101940 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101941 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => i
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 102023 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 102025 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 102026 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 102027 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 102028 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 102029 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 8
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 102030 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 8
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1040 byte) (raw)) => n
run: read-key/send-keys-to-stdin 10: #\n => ((7 character))
mem: ((7 character)): 102031 <= #\n
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 8
run: read-key/send-keys-to-stdin 11: 9 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 9
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => n
run: send-keys-to-stdin 3: #\n => ((3 character))
mem: ((3 character)): 101004 <= #\n
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => n
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => n
run: send-keys-to-stdin 5: #(tagged record (character #\n)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\n
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character n . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 102054 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\n . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 102056 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\n . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\n . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 102057 <= character
mem: ((2 tagged-value)): 102058 <= #\n
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 102085 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102087 <= 1
mem: ((1 channel)): 102088 <= 0
mem: ((1 channel)): 102089 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((102088 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 102090 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 102090 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 102116 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102118 <= 1
mem: ((1 channel)): 102119 <= 0
mem: ((1 channel)): 102120 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((102120 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 102121 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 102122 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 102091 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 102092 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((102087 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 102093 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 102094 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 102059 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 102060 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 202573 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 202574 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character i . nil))
run: read/buffer-lines 8: #(tagged record (character #\i . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 202575 <= character
mem: ((6 tagged-value)): 202576 <= #\i
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 202577 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 202578 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character i . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\i . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\i
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character i . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 202630 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 202661 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 202632 <= 202661
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\i . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\i . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 202661 <= character
mem: ((1 tagged-value-address) (deref)): 202662 <= #\i
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\i . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 202633 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((202661 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 202634 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 202635 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((202662 location) (raw)) => i
run: maybe-coerce/buffer-lines 8: #\i => ((5 location))
mem: ((5 location)): 202636 <= #\i
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => i
mem: ((4 boolean)) => t
run: buffer-lines 5: #\i => ((6 character))
mem: ((6 character)): 201007 <= #\i
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => i
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => i
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) => i
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 202663 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\i)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202665 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\i)
run: append/buffer-lines 2: #\i => ((2 character))
mem: ((2 character)): 202666 <= #\i
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 202694 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202696 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 1
run: buffer-full?/append/buffer-lines 2: 1 => ((2 integer))
mem: ((2 integer)): 202697 <= 1
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 202698 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 202699 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 202700 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 202667 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 202668 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 202669 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202382 => ((6 byte-address))
mem: ((6 byte-address)): 202670 <= 202382
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => i
run: append/buffer-lines 9: #\i => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202382 <= #\i
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/buffer-lines 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 2
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => i
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => i
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 202725 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 202727 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 202756 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 202758 <= 0
mem: ((1 channel)): 202759 <= 0
mem: ((1 channel)): 202760 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202758 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 202761 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202759 integer) (raw)) => 0
run: empty?/read/buffer-lines 3: 0 => ((5 integer))
mem: ((5 integer)): 202762 <= 0
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 202763 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 202728 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 202729 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 102061 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 102062 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 102063 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character n . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\n . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\n
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 102064 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 102065 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => n
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 102147 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 102149 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 102150 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 102151 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 102152 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 102153 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 9
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 102154 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 9
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1041 byte) (raw)) => e
run: read-key/send-keys-to-stdin 10: #\e => ((7 character))
mem: ((7 character)): 102155 <= #\e
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 9
run: read-key/send-keys-to-stdin 11: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 10
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => e
run: send-keys-to-stdin 3: #\e => ((3 character))
mem: ((3 character)): 101004 <= #\e
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => e
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => e
run: send-keys-to-stdin 5: #(tagged record (character #\e)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\e
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character e . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 102178 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\e . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 102180 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\e . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\e . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 102181 <= character
mem: ((2 tagged-value)): 102182 <= #\e
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 102209 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102211 <= 0
mem: ((1 channel)): 102212 <= 1
mem: ((1 channel)): 102213 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((102212 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 102214 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 102214 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 102240 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102242 <= 0
mem: ((1 channel)): 102243 <= 1
mem: ((1 channel)): 102244 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((102244 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 102245 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 102246 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 102215 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 102216 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 102214 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((102211 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 102217 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 102218 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 102183 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 102184 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 202730 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 202731 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character n . nil))
run: read/buffer-lines 8: #(tagged record (character #\n . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 202732 <= character
mem: ((6 tagged-value)): 202733 <= #\n
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 202734 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 202735 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character n . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\n . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\n
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character n . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 202787 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 202818 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 202789 <= 202818
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\n . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\n . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 202818 <= character
mem: ((1 tagged-value-address) (deref)): 202819 <= #\n
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\n . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 202790 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((202818 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 202791 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 202792 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((202819 location) (raw)) => n
run: maybe-coerce/buffer-lines 8: #\n => ((5 location))
mem: ((5 location)): 202793 <= #\n
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => n
mem: ((4 boolean)) => t
run: buffer-lines 5: #\n => ((6 character))
mem: ((6 character)): 201007 <= #\n
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => n
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => n
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) => n
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 202820 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\n)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202822 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\n)
run: append/buffer-lines 2: #\n => ((2 character))
mem: ((2 character)): 202823 <= #\n
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 202851 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202853 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 2
run: buffer-full?/append/buffer-lines 2: 2 => ((2 integer))
mem: ((2 integer)): 202854 <= 2
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 202855 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 202856 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 2
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 202857 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 202824 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 202825 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 202826 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 2
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202383 => ((6 byte-address))
mem: ((6 byte-address)): 202827 <= 202383
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: append/buffer-lines 9: #\n => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202383 <= #\n
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 2
run: append/buffer-lines 10: 3 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 3
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => n
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => n
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 202882 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 202884 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 202913 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 202915 <= 1
mem: ((1 channel)): 202916 <= 1
mem: ((1 channel)): 202917 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((202915 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 202918 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((202916 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 202919 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 202920 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 202885 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 202886 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 102185 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 102186 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 102187 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character e . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\e . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\e
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 102188 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 102189 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => e
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 102271 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 102273 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 102274 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 102275 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 102276 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 102277 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 10
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 102278 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 10
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 11
mem: ((1042 byte) (raw)) => 2
run: read-key/send-keys-to-stdin 10: #\2 => ((7 character))
mem: ((7 character)): 102279 <= #\2
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 10
run: read-key/send-keys-to-stdin 11: 11 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1074 <= 11
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => 2
run: send-keys-to-stdin 3: #\2 => ((3 character))
mem: ((3 character)): 101004 <= #\2
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => 2
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => 2
run: send-keys-to-stdin 5: #(tagged record (character #\2)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\2
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character 2 . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 102302 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\2 . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 102304 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\2 . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\2 . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 102305 <= character
mem: ((2 tagged-value)): 102306 <= #\2
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 102333 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102335 <= 1
mem: ((1 channel)): 102336 <= 0
mem: ((1 channel)): 102337 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((102336 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 102338 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 102338 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 102364 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102366 <= 1
mem: ((1 channel)): 102367 <= 0
mem: ((1 channel)): 102368 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((102368 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 102369 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 102370 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 102339 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 102340 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((102335 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 102341 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 102342 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 102307 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 102308 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 202887 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 202888 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character e . nil))
run: read/buffer-lines 8: #(tagged record (character #\e . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 202889 <= character
mem: ((6 tagged-value)): 202890 <= #\e
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 202891 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 202892 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character e . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\e . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\e
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character e . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 202944 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 202975 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 202946 <= 202975
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\e . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\e . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 202975 <= character
mem: ((1 tagged-value-address) (deref)): 202976 <= #\e
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\e . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 202947 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((202975 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 202948 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 202949 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((202976 location) (raw)) => e
run: maybe-coerce/buffer-lines 8: #\e => ((5 location))
mem: ((5 location)): 202950 <= #\e
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => e
mem: ((4 boolean)) => t
run: buffer-lines 5: #\e => ((6 character))
mem: ((6 character)): 201007 <= #\e
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => e
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => e
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) => e
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 202977 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\e)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 202979 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\e)
run: append/buffer-lines 2: #\e => ((2 character))
mem: ((2 character)): 202980 <= #\e
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 203008 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 203010 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 3
run: buffer-full?/append/buffer-lines 2: 3 => ((2 integer))
mem: ((2 integer)): 203011 <= 3
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 203012 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 203013 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 203014 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 202981 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 202982 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 202983 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202384 => ((6 byte-address))
mem: ((6 byte-address)): 202984 <= 202384
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => e
run: append/buffer-lines 9: #\e => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202384 <= #\e
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/buffer-lines 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 4
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => e
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => e
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 203039 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 203041 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 203070 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 0 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 203072 <= 0
mem: ((1 channel)): 203073 <= 0
mem: ((1 channel)): 203074 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((203072 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 203075 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((203073 integer) (raw)) => 0
run: empty?/read/buffer-lines 3: 0 => ((5 integer))
mem: ((5 integer)): 203076 <= 0
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 203077 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 203042 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 203043 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 102309 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 102310 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1111 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 102311 <= 1111
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character 2 . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\2 . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1111 <= character
mem: ((8 tagged-value-address) (deref)): 1112 <= #\2
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 102312 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 102313 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 0
mem: ((2 channel-address) (deref)): 1108 <= 1
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => 2
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 102395 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1074)
run: read-key/send-keys-to-stdin 1: 1074 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 102397 <= 1074
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1074)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 102398 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1074
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1074 => ((3 integer-address))
mem: ((3 integer-address)): 102399 <= 1074
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1075 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 102400 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 11
run: read-key/send-keys-to-stdin 6: 11 => ((5 integer))
mem: ((5 integer)): 102401 <= 11
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 11
mem: ((5 integer)) => 11
run: read-key/send-keys-to-stdin 7: t => ((6 boolean))
mem: ((6 boolean)): 102402 <= t
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: read-key/send-keys-to-stdin 9: (((reply)) ((  literal)))
run: send-keys-to-stdin 3: #\nul => ((3 character))
mem: ((3 character)): 101004 <= #\nul
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 5: #(tagged record (character #\nul)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\nul
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1107
mem: ((4 tagged-value)) => #(tagged record (character   . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 102426 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107 #(tagged record (character #\nul . nil)))
run: write/send-keys-to-stdin 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 102428 <= 1107
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1107 #(tagged record (character #\nul . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\nul . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 102429 <= character
mem: ((2 tagged-value)): 102430 <= #\nul
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1110 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 102457 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102459 <= 0
mem: ((1 channel)): 102460 <= 1
mem: ((1 channel)): 102461 <= 1110
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((102460 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 102462 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 102462 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1110 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 102488 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1110 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 102490 <= 0
mem: ((1 channel)): 102491 <= 1
mem: ((1 channel)): 102492 <= 1110
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((102492 tagged-value-array-address) (raw)) => 1110
run: capacity/full?/write/send-keys-to-stdin 2: 1110 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 102493 <= 1110
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 102494 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 102463 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 102464 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 102462 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((102459 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 102465 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 102466 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 102431 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1107 => ((5 integer-address))
mem: ((5 integer-address)): 102432 <= 1107
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 203044 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 203045 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1111 tagged-value) (raw)) => #(tagged record (character 2 . nil))
run: read/buffer-lines 8: #(tagged record (character #\2 . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 203046 <= character
mem: ((6 tagged-value)): 203047 <= #\2
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 203048 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 203049 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character 2 . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\2 . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\2
run: buffer-lines 4: #(tagged record (1 1 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 1
mem: ((1 channel-address) (deref)): 1108 <= 1
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character 2 . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 203101 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 203132 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 203103 <= 203132
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\2 . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\2 . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 203132 <= character
mem: ((1 tagged-value-address) (deref)): 203133 <= #\2
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\2 . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 203104 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((203132 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 203105 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 203106 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((203133 location) (raw)) => 2
run: maybe-coerce/buffer-lines 8: #\2 => ((5 location))
mem: ((5 location)): 203107 <= #\2
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => 2
mem: ((4 boolean)) => t
run: buffer-lines 5: #\2 => ((6 character))
mem: ((6 character)): 201007 <= #\2
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => 2
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => 2
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) => 2
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 203134 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\2)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 203136 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\2)
run: append/buffer-lines 2: #\2 => ((2 character))
mem: ((2 character)): 203137 <= #\2
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 203165 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 203167 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 4
run: buffer-full?/append/buffer-lines 2: 4 => ((2 integer))
mem: ((2 integer)): 203168 <= 4
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 203169 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 203170 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 4
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 203171 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 203138 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 203139 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 203140 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 4
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202385 => ((6 byte-address))
mem: ((6 byte-address)): 203141 <= 202385
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/buffer-lines 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202385 <= #\2
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 4
run: append/buffer-lines 10: 5 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 5
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => 2
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => 2
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1107
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 203196 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1107)
run: read/buffer-lines 1: 1107 => ((1 channel-address))
mem: ((1 channel-address)): 203198 <= 1107
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1110 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 203227 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1110 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1110 . nil)) => ((1 channel))
mem: ((1 channel)): 203229 <= 1
mem: ((1 channel)): 203230 <= 1
mem: ((1 channel)): 203231 <= 1110
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((203229 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 203232 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((203230 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 203233 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 203234 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 203199 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1108 => ((3 integer-address))
mem: ((3 integer-address)): 203200 <= 1108
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: write/send-keys-to-stdin 7: 1110 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 102433 <= 1110
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 102434 <= 1108
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1113 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 102435 <= 1113
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character   . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\nul . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1113 <= character
mem: ((8 tagged-value-address) (deref)): 1114 <= #\nul
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 102436 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 102437 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1110 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1110 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1107 <= 1
mem: ((2 channel-address) (deref)): 1108 <= 0
mem: ((2 channel-address) (deref)): 1109 <= 1110
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 7: t => ((6 boolean))
mem: ((6 boolean)): 101007 <= t
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
schedule: done with routine nil
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1107 => ((4 integer-address))
mem: ((4 integer-address)): 203201 <= 1107
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1109 tagged-value-array-address) (raw)) => 1110
run: read/buffer-lines 7: 1110 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 203202 <= 1110
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1110 tagged-value-array) (raw))
mem: ((1110 integer) (raw)) => 2
mem: ((1113 tagged-value) (raw)) => #(tagged record (character   . nil))
run: read/buffer-lines 8: #(tagged record (character #\nul . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 203203 <= character
mem: ((6 tagged-value)): 203204 <= #\nul
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1110 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 203205 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 203206 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1107 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character   . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1110 . nil))
run: buffer-lines 4: #(tagged record (character #\nul . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\nul
run: buffer-lines 4: #(tagged record (0 0 1110 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1107 <= 0
mem: ((1 channel-address) (deref)): 1108 <= 0
mem: ((1 channel-address) (deref)): 1109 <= 1110
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character   . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 203258 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 203289 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 203260 <= 203289
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\nul . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\nul . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 203289 <= character
mem: ((1 tagged-value-address) (deref)): 203290 <= #\nul
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\nul . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 203261 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((203289 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 203262 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 203263 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((203290 location) (raw)) =>  
run: maybe-coerce/buffer-lines 8: #\nul => ((5 location))
mem: ((5 location)): 203264 <= #\nul
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) =>  
mem: ((4 boolean)) => t
run: buffer-lines 5: #\nul => ((6 character))
mem: ((6 character)): 201007 <= #\nul
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) =>  
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) =>  
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 202378
mem: ((6 character)) =>  
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 203291 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378 #\nul)
run: append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 203293 <= 202378
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (202378 #\nul)
run: append/buffer-lines 2: #\nul => ((2 character))
mem: ((2 character)): 203294 <= #\nul
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 202378
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 203322 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (202378)
run: buffer-full?/append/buffer-lines 1: 202378 => ((1 buffer-address))
mem: ((1 buffer-address)): 203324 <= 202378
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((202378 integer) (raw)) => 5
run: buffer-full?/append/buffer-lines 2: 5 => ((2 integer))
mem: ((2 integer)): 203325 <= 5
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: buffer-full?/append/buffer-lines 3: 202380 => ((3 string-address))
mem: ((3 string-address)): 203326 <= 202380
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((202380 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 203327 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 5
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 203328 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 203295 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 202378 => ((4 integer-address))
mem: ((4 integer-address)): 203296 <= 202378
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((202379 string-address) (raw)) => 202380
run: append/buffer-lines 7: 202380 => ((5 string-address))
mem: ((5 string-address)): 203297 <= 202380
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 5
array-len: ((202380 string) (raw))
mem: ((202380 integer) (raw)) => 30
run: append/buffer-lines 8: 202386 => ((6 byte-address))
mem: ((6 byte-address)): 203298 <= 202386
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: append/buffer-lines 9: #\nul => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 202386 <= #\nul
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 5
run: append/buffer-lines 10: 6 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 202378 <= 6
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 202378
run: buffer-lines 14: 202378 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 202378
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) =>  
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) =>  
run: buffer-lines 17: t => ((11 boolean))
mem: ((11 boolean)): 201012 <= t
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => t
schedule: done with routine nil
schedule: waking up main
schedule: main
schedule: done with routine nil
schedule: just helpers left; stopping everything
