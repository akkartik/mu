 102 run: assume-console [
    left-click 2, 3
    press up-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 2, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1284
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1286
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1288
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1284 in location 1289
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1290
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1291
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1292
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1288 is 1009
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1201
 105 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 105 run: *row <- copy new-row
9999 mem: location 1200 is 1
9999 mem: location 1202 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 105 run: *column <- copy new-column
9999 mem: location 1201 is 0
9999 mem: location 1203 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1288
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1289 is 1284
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1284 in location 1249
 105 run: jump-unless x, 
9999 mem: location 1249 is 1284
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1284
9999 mem: storing 1284 in location 1250
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1285
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1285 is 1275
9999 mem: storing 1275 in location 1251
 105 run: max:number <- length *buf
9999 mem: location 1251 is 1275
9999 mem: storing 2 in location 1252
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 0
9999 mem: location 1252 is 2
9999 mem: storing 0 in location 1253
 105 run: jump-unless done?, 
9999 mem: location 1253 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1251 is 1275
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 0
9998 run: address to copy is 1276
9998 run: its type is event
9999 mem: location 1276 is 2
9999 mem: location 1277 is 65513
9999 mem: location 1278 is 2
9999 mem: location 1279 is 3
9999 mem: storing 2 in location 1255
9999 mem: storing 65513 in location 1256
9999 mem: storing 2 in location 1257
9999 mem: storing 3 in location 1258
 105 run: *idx <- add *idx, 1
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 0
9999 mem: location 1250 is 1284
9999 mem: storing 1 in location 1284
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1255 is 2
9999 mem: location 1256 is 65513
9999 mem: location 1257 is 2
9999 mem: location 1258 is 3
9999 mem: location 1249 is 1284
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 3]
9998 run: result 1 is 1284
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1293
9999 mem: storing 65513 in location 1294
9999 mem: storing 2 in location 1295
9999 mem: storing 3 in location 1296
9999 mem: storing 1284 in location 1289
9999 mem: storing 1 in location 1297
9999 mem: storing 0 in location 1298
 104 run: jump-unless found?, 
9999 mem: location 1297 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1298 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1293 is 2
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 2
9999 mem: location 1296 is 3
9999 mem: storing 1294 in location 1299
 104 run: jump-unless t, 
9999 mem: location 1299 is 1294
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1288 is 1009
9999 mem: location 1290 is 1115
9999 mem: location 1299 is 1294
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 2
9999 mem: location 1296 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1301
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1303
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1304
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1305
9999 mem: storing 2 in location 1306
9999 mem: storing 3 in location 1307
 105 run: jump-if editor, 1:offset
9999 mem: location 1304 is 1115
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1305 is 65513
9999 mem: location 1306 is 2
9999 mem: location 1307 is 3
9998 run: address to copy is 1306
9998 run: its type is number
9999 mem: location 1306 is 2
9999 mem: storing 2 in location 1308
 105 run: jump-if click-row, 1:offset
9999 mem: location 1308 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1305 is 65513
9999 mem: location 1306 is 2
9999 mem: location 1307 is 3
9998 run: address to copy is 1307
9998 run: its type is number
9999 mem: location 1307 is 3
9999 mem: storing 3 in location 1309
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1310
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1309 is 3
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1311
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1311 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1312
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1309 is 3
9999 mem: location 1312 is 9
9999 mem: storing 0 in location 1313
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1313 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1314
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1315
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1316
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1303 is 1009
9999 mem: location 1304 is 1115
9999 mem: location 1308 is 2
9999 mem: location 1309 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1172
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1173
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1174
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 3 in location 1175
 106 run: jump-if editor, 1:offset
9999 mem: location 1173 is 1115
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1176
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1177
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1172 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 107 run: jump-unless sc, 
9999 mem: location 1159 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1160
 107 run: reply height
9999 mem: location 1160 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1178
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1179
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1179 is 1151
9999 mem: storing 1151 in location 1180
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1179 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1151
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1154
9999 mem: location 1153 is 0
9999 mem: location 1159 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1154
9999 mem: storing 1154 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1179
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1181
 106 run: column:number <- copy left
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1182
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1183
 106 run: *cursor-row <- copy target-row
9999 mem: location 1174 is 2
9999 mem: location 1183 is 1121
9999 mem: storing 2 in location 1121
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1184
 106 run: *cursor-column <- copy target-column
9999 mem: location 1175 is 3
9999 mem: location 1184 is 1122
9999 mem: storing 3 in location 1122
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1173 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1173 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1185
 106 run: jump-unless curr, 
9999 mem: location 1179 is 1154
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1181 is 1
9999 mem: location 1178 is 5
9999 mem: storing 0 in location 1186
 106 run: jump-if off-screen?, 
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 1
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1187
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1187 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1179 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1179 is 1154
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 10
9999 mem: storing 10 in location 1189
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1189 is 10
9999 mem: storing 1 in location 1190
 106 run: jump-unless newline?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 1
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1187
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1187 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1181 is 1
9999 mem: storing 2 in location 1181
 106 run: column <- copy left
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1182
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1179 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1159 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1161
9999 mem: storing 1161 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1161
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1179
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1180 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1151
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1154
9999 mem: location 1153 is 0
9999 mem: location 1159 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1154
9999 mem: storing 1154 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1180
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1179 is 1161
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1181 is 2
9999 mem: location 1178 is 5
9999 mem: storing 0 in location 1186
 106 run: jump-if off-screen?, 
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1187
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1187 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1182 is 0
9999 mem: location 1184 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1188
 106 run: jump-unless at-cursor?, 
9999 mem: location 1188 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1179 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1179 is 1161
9998 run: address to copy is 1161
9998 run: its type is character
9999 mem: location 1161 is 100
9999 mem: storing 100 in location 1189
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1189 is 100
9999 mem: storing 0 in location 1190
 106 run: jump-unless newline?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1182 is 0
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1192
 106 run: jump-unless at-right?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1179 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1159 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1179
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-adjusts-column-at-empty-line
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1180 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1159 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1161
9999 mem: storing 1161 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1161
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1180
 106 run: column <- add column, 1
9999 mem: location 1182 is 0
9999 mem: storing 1 in location 1182
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1179 is 1164
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1181 is 2
9999 mem: location 1178 is 5
9999 mem: storing 0 in location 1186
 106 run: jump-if off-screen?, 
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1187
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1187 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1182 is 1
9999 mem: location 1184 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1188
 106 run: jump-unless at-cursor?, 
9999 mem: location 1188 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1179 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1179 is 1164
9998 run: address to copy is 1164
9998 run: its type is character
9999 mem: location 1164 is 101
9999 mem: storing 101 in location 1189
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1189 is 101
9999 mem: storing 0 in location 1190
 106 run: jump-unless newline?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1182 is 1
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1192
 106 run: jump-unless at-right?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1179 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1159 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1179
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1180 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1159 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1180
 106 run: column <- add column, 1
9999 mem: location 1182 is 1
9999 mem: storing 2 in location 1182
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1179 is 1167
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1181 is 2
9999 mem: location 1178 is 5
9999 mem: storing 0 in location 1186
 106 run: jump-if off-screen?, 
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1187
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1187 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1182 is 2
9999 mem: location 1184 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1188
 106 run: jump-unless at-cursor?, 
9999 mem: location 1188 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1179 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1179 is 1167
9998 run: address to copy is 1167
9998 run: its type is character
9999 mem: location 1167 is 102
9999 mem: storing 102 in location 1189
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1189 is 102
9999 mem: storing 0 in location 1190
 106 run: jump-unless newline?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1182 is 2
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1192
 106 run: jump-unless at-right?, 
9999 mem: location 1192 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1179 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1159 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1179
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1180 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1159 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1180
 106 run: column <- add column, 1
9999 mem: location 1182 is 2
9999 mem: storing 3 in location 1182
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1179 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1187
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1182 is 3
9999 mem: location 1184 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 1 in location 1193
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1187 is 1
9999 mem: location 1193 is 1
9999 mem: storing 1 in location 1194
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1195
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1194 is 1
9999 mem: location 1195 is 0
9999 mem: storing 1 in location 1196
 106 run: jump-unless before-cursor?, 
9999 mem: location 1196 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1181 is 2
9999 mem: location 1183 is 1121
9999 mem: storing 2 in location 1121
 106 run: *cursor-column <- copy column
9999 mem: location 1182 is 3
9999 mem: location 1184 is 1122
9999 mem: storing 3 in location 1122
 106 run: *before-cursor <- copy prev
9999 mem: location 1180 is 1167
9999 mem: location 1185 is 1118
9999 mem: storing 1167 in location 1118
 106 run: reply editor:address:editor-data
9999 mem: location 1173 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1304
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1317
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1318
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1319
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1304 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1304 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1320
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1317 is 0
9998 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1204 in location 1322
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1314 is 1
9999 mem: location 1315 is 0
9999 mem: location 1316 is 1151
9999 mem: location 1318 is 2
9999 mem: location 1319 is 3
9999 mem: location 1320 is 1151
9999 mem: location 1317 is 0
9999 mem: location 1322 is 1204
9999 mem: location 1322 is 1204
9999 mem: storing 1 in location 1204
9999 mem: storing 1 in location 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 1151 in location 1207
9999 mem: storing 2 in location 1208
9999 mem: storing 3 in location 1209
9999 mem: storing 1151 in location 1210
9999 mem: storing 0 in location 1211
 105 run: editor <- add-operation editor, op
9999 mem: location 1304 is 1115
9999 mem: location 1322 is 1204
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1217
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1204 in location 1218
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1219
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1218 is 1204
9999 mem: location 1219 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1204 in location 1199
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1200
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1329
9999 mem: storing 1329 in location 1201
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1201 is 1329
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1201 is 1329
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1202
 107 run: *val <- copy x
9999 mem: location 1199 is 1204
9999 mem: location 1202 is 1329
9999 mem: storing 1204 in location 1329
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1201 is 1329
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1329 is 1204
9999 mem: location 1330 is 0
9999 mem: location 1201 is 1329
9999 type: type deduced to be address$
9998 run: address to copy is 1330
9999 mem: storing 1330 in location 1203
 107 run: *next <- copy in
9999 mem: location 1200 is 0
9999 mem: location 1203 is 1330
9999 mem: storing 0 in location 1330
 107 run: reply result
9999 mem: location 1201 is 1329
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1329
9999 mem: location 1219 is 1124
9999 mem: storing 1329 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1220
 106 run: *redo <- copy 0
9999 mem: location 1220 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1217 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1304
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1291
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1292
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1288 is 1009
9999 mem: location 1291 is 2
9999 mem: location 1292 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1200
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1201
 105 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 105 run: *row <- copy new-row
9999 mem: location 1200 is 2
9999 mem: location 1202 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 105 run: *column <- copy new-column
9999 mem: location 1201 is 3
9999 mem: location 1203 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1288
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1289 is 1284
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1284 in location 1249
 105 run: jump-unless x, 
9999 mem: location 1249 is 1284
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 1
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1284
9999 mem: storing 1284 in location 1250
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 1
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1285
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1285 is 1275
9999 mem: storing 1275 in location 1251
 105 run: max:number <- length *buf
9999 mem: location 1251 is 1275
9999 mem: storing 2 in location 1252
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 1
9999 mem: location 1252 is 2
9999 mem: storing 0 in location 1253
 105 run: jump-unless done?, 
9999 mem: location 1253 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1251 is 1275
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 1
9998 run: address to copy is 1280
9998 run: its type is event
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65517
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 1 in location 1255
9999 mem: storing 65517 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 105 run: *idx <- add *idx, 1
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 1
9999 mem: location 1250 is 1284
9999 mem: storing 2 in location 1284
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1255 is 1
9999 mem: location 1256 is 65517
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1249 is 1284
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1284
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1293
9999 mem: storing 65517 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 1284 in location 1289
9999 mem: storing 1 in location 1297
9999 mem: storing 0 in location 1298
 104 run: jump-unless found?, 
9999 mem: location 1297 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1298 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1293 is 1
9999 mem: location 1294 is 65517
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1299
 104 run: jump-unless t, 
9999 mem: location 1299 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1288 is 1009
9999 mem: location 1290 is 1115
9999 mem: location 1293 is 1
9999 mem: location 1294 is 65517
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1331
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1333
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1334
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1335
9999 mem: storing 65517 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if editor, 1:offset
9999 mem: location 1334 is 1115
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1333 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 106 run: jump-unless sc, 
9999 mem: location 1159 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1160
 106 run: reply width
9999 mem: location 1160 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1340
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1159
 106 run: jump-unless sc, 
9999 mem: location 1159 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1159 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1160
 106 run: reply height
9999 mem: location 1160 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1341
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1342
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1343
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1344
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1345
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1346
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1345 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1347
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1346 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1348
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65517
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1349
 105 run: jump-unless c, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65517
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 1336 in location 1403
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1403 is 1336
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 0 in location 1366
 105 run: jump-unless page-up?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 0 in location 1382
 105 run: jump-unless page-down?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 0 in location 1389
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 0 in location 1390
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 0 in location 1404
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1404 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1403 is 1336
9999 mem: location 1336 is 65517
9999 mem: storing 1 in location 1405
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1369
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1370
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1371
 105 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1334 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1417
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1419
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1419 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1419 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1420
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1419 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1419 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1421
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1419 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1419 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1422
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1419 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1419 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1423
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1419 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1419 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1424
 106 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1420 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1425
 106 run: jump-if already-at-top?, 
9999 mem: location 1425 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1422 is 1118
9999 mem: location 1118 is 1167
9999 mem: storing 1167 in location 1426
 106 run: old:address:duplex-list:character <- copy curr
9999 mem: location 1426 is 1167
9999 mem: storing 1167 in location 1427
 106 run: c2:character <- get *curr, value:offset
9999 mem: location 1426 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1426 is 1167
9998 run: address to copy is 1167
9998 run: its type is character
9999 mem: location 1167 is 102
9999 mem: storing 102 in location 1428
 106 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1428 is 102
9999 mem: storing 0 in location 1429
 106 run: jump-if at-newline?, 
9999 mem: location 1429 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- before-previous-line curr, editor
9999 mem: location 1426 is 1167
9999 mem: location 1419 is 1115
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1438
 107 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1167 in location 1440
 107 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1441
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1440 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1440 is 1167
9998 run: address to copy is 1167
9998 run: its type is character
9999 mem: location 1167 is 102
9999 mem: storing 102 in location 1442
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1443
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1444
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1444 is 9
9999 mem: location 1443 is 0
9999 mem: storing 9 in location 1445
 107 run: sentinel:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1115
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1115 is 1151
9999 mem: storing 1151 in location 1446
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1440 is 1167
9999 mem: location 1446 is 1151
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 108 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1167 in location 1145
 108 run: start:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1151 in location 1146
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1147
 108 run: jump-if curr, 1:offset
9999 mem: location 1145 is 1167
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1167
9999 mem: location 1146 is 1151
9999 mem: storing 0 in location 1148
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1148 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1145 is 1167
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1159
 109 run: jump-if in, 1:offset
9999 mem: location 1159 is 1167
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1159 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1169 is 1164
9999 mem: storing 1164 in location 1160
 109 run: reply result
9999 mem: location 1160 is 1164
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1145
 108 run: jump-unless curr, 
9999 mem: location 1145 is 1164
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1164
9999 mem: location 1146 is 1151
9999 mem: storing 0 in location 1148
 108 run: jump-if at-start?, 
9999 mem: location 1148 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1145 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1145 is 1164
9998 run: address to copy is 1164
9998 run: its type is character
9999 mem: location 1164 is 101
9999 mem: storing 101 in location 1149
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1149 is 101
9999 mem: storing 0 in location 1150
 108 run: jump-if at-newline?, 
9999 mem: location 1150 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1147
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1145 is 1164
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1159
 109 run: jump-if in, 1:offset
9999 mem: location 1159 is 1164
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1159 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1166
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1166 is 1161
9999 mem: storing 1161 in location 1160
 109 run: reply result
9999 mem: location 1160 is 1161
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1145
 108 run: jump-unless curr, 
9999 mem: location 1145 is 1161
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1161
9999 mem: location 1146 is 1151
9999 mem: storing 0 in location 1148
 108 run: jump-if at-start?, 
9999 mem: location 1148 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1145 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1145 is 1161
9998 run: address to copy is 1161
9998 run: its type is character
9999 mem: location 1161 is 100
9999 mem: storing 100 in location 1149
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1149 is 100
9999 mem: storing 0 in location 1150
 108 run: jump-if at-newline?, 
9999 mem: location 1150 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1145 is 1161
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1159
 109 run: jump-if in, 1:offset
9999 mem: location 1159 is 1161
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1159 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1154
9999 mem: storing 1154 in location 1160
 109 run: reply result
9999 mem: location 1160 is 1154
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1145
 108 run: jump-unless curr, 
9999 mem: location 1145 is 1154
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1154
9999 mem: location 1146 is 1151
9999 mem: storing 0 in location 1148
 108 run: jump-if at-start?, 
9999 mem: location 1148 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1145 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1145 is 1154
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 10
9999 mem: storing 10 in location 1149
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1149 is 10
9999 mem: storing 1 in location 1150
 108 run: jump-if at-newline?, 
9999 mem: location 1150 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1147 is 2
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9999 mem: storing 2 in location 1447
 107 run: jump-if len, 
9999 mem: location 1447 is 2
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1447 is 2
9999 mem: location 1445 is 9
9999 mem: storing 2 in location 1449
 107 run: jump-if max, 
9999 mem: location 1449 is 2
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1449 is 2
9999 mem: storing 3 in location 1449
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1450
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1450 is 0
9999 mem: location 1449 is 3
9999 mem: storing 0 in location 1451
 107 run: jump-if done?, 
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1440 is 1167
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1159
 108 run: jump-if in, 1:offset
9999 mem: location 1159 is 1167
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 102
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1159 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1169 is 1164
9999 mem: storing 1164 in location 1160
 108 run: reply result
9999 mem: location 1160 is 1164
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1448
 107 run: jump-unless prev, 
9999 mem: location 1448 is 1164
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1448 is 1164
9999 mem: storing 1164 in location 1440
 107 run: count <- add count, 1
9999 mem: location 1450 is 0
9999 mem: storing 1 in location 1450
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1450 is 1
9999 mem: location 1449 is 3
9999 mem: storing 0 in location 1451
 107 run: jump-if done?, 
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1440 is 1164
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1159
 108 run: jump-if in, 1:offset
9999 mem: location 1159 is 1164
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 101
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1159 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1166
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1166 is 1161
9999 mem: storing 1161 in location 1160
 108 run: reply result
9999 mem: location 1160 is 1161
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1448
 107 run: jump-unless prev, 
9999 mem: location 1448 is 1161
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1448 is 1161
9999 mem: storing 1161 in location 1440
 107 run: count <- add count, 1
9999 mem: location 1450 is 1
9999 mem: storing 2 in location 1450
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1450 is 2
9999 mem: location 1449 is 3
9999 mem: storing 0 in location 1451
 107 run: jump-if done?, 
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1440 is 1161
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1159
 108 run: jump-if in, 1:offset
9999 mem: location 1159 is 1161
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 100
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1154
9999 mem: location 1159 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1154
9999 mem: storing 1154 in location 1160
 108 run: reply result
9999 mem: location 1160 is 1154
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1448
 107 run: jump-unless prev, 
9999 mem: location 1448 is 1154
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1448 is 1154
9999 mem: storing 1154 in location 1440
 107 run: count <- add count, 1
9999 mem: location 1450 is 2
9999 mem: storing 3 in location 1450
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1450 is 3
9999 mem: location 1449 is 3
9999 mem: storing 1 in location 1451
 107 run: jump-if done?, 
9999 mem: location 1451 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1440 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1426
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1426 is 1154
9999 mem: location 1427 is 1167
9999 mem: storing 0 in location 1430
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1431
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1430 is 0
9998 run: jumping to instruction 21
 106 run: old <- copy curr
9999 mem: location 1426 is 1154
9999 mem: storing 1154 in location 1427
 106 run: curr <- before-previous-line curr, editor
9999 mem: location 1426 is 1154
9999 mem: location 1419 is 1115
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
 107 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1154 in location 1440
 107 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1441
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1440 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1440 is 1154
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 10
9999 mem: storing 10 in location 1442
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1443
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1444
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1444 is 9
9999 mem: location 1443 is 0
9999 mem: storing 9 in location 1445
 107 run: sentinel:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1441 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1441 is 1115
9998 run: address to copy is 1115
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1115 is 1151
9999 mem: storing 1151 in location 1446
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1440 is 1154
9999 mem: location 1446 is 1151
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 108 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1154 in location 1145
 108 run: start:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1151 in location 1146
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1147
 108 run: jump-if curr, 1:offset
9999 mem: location 1145 is 1154
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1154
9999 mem: location 1146 is 1151
9999 mem: storing 0 in location 1148
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1148 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1145 is 1154
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1159
 109 run: jump-if in, 1:offset
9999 mem: location 1159 is 1154
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1159 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1151
9999 mem: storing 1151 in location 1160
 109 run: reply result
9999 mem: location 1160 is 1151
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1151
9999 mem: storing 1151 in location 1145
 108 run: jump-unless curr, 
9999 mem: location 1145 is 1151
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1145 is 1151
9999 mem: location 1146 is 1151
9999 mem: storing 1 in location 1148
 108 run: jump-if at-start?, 
9999 mem: location 1148 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1147 is 0
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1447
 107 run: jump-if len, 
9999 mem: location 1447 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1440 is 1154
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1159
 108 run: jump-if in, 1:offset
9999 mem: location 1159 is 1154
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1159 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1159 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1151
9999 mem: storing 1151 in location 1160
 108 run: reply result
9999 mem: location 1160 is 1151
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1151
9999 mem: storing 1151 in location 1448
 107 run: jump-if prev, 1:offset
9999 mem: location 1448 is 1151
9998 run: jumping to instruction 14
 107 run: reply prev
9999 mem: location 1448 is 1151
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1151
9999 mem: storing 1151 in location 1426
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1426 is 1151
9999 mem: location 1427 is 1154
9999 mem: storing 0 in location 1430
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1431
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1430 is 0
9998 run: jumping to instruction 29
 106 run: *before-cursor <- copy curr
9999 mem: location 1426 is 1151
9999 mem: location 1422 is 1118
9999 mem: storing 1151 in location 1118
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1420 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1420 is 1121
9999 mem: storing 1 in location 1121
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1421 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1432
 106 run: *cursor-column <- copy left
9999 mem: location 1423 is 0
9999 mem: location 1421 is 1122
9999 mem: storing 0 in location 1122
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1421 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1432 is 3
9999 mem: storing 0 in location 1433
 106 run: jump-if done?, 
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- next-duplex_2 *before-cursor
9999 mem: location 1422 is 1118
9999 mem: location 1118 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1159
 107 run: jump-if in, 1:offset
9999 mem: location 1159 is 1151
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1159 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1154
9999 mem: location 1153 is 0
9999 mem: location 1159 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1154
9999 mem: storing 1154 in location 1160
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1160 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1426
 106 run: jump-unless curr, 
9999 mem: location 1426 is 1154
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1426 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1426 is 1154
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 10
9999 mem: storing 10 in location 1434
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1434 is 10
9999 mem: storing 1 in location 1429
 106 run: jump-if at-newline?, 
9999 mem: location 1429 is 1
9998 run: jumping to instruction 45
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1431
 106 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1419 is 1115
9999 mem: location 1431 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9998 run: result 1 is 0
9999 mem: storing 1115 in location 1334
9999 mem: storing 0 in location 1339
 105 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1372
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1373
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1374
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1375
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1372 is 3
9998 run: jump-unless fell through
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1353
 105 run: jump-unless *undo, 
9999 mem: location 1353 is 1124
9999 mem: location 1124 is 1329
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1353 is 1124
9999 mem: location 1124 is 1329
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1329 in location 1159
 106 run: result <- get *in, value:offset
9999 mem: location 1159 is 1329
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1329 is 1204
9999 mem: location 1330 is 0
9999 mem: location 1159 is 1329
9998 run: address to copy is 1329
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1329 is 1204
9999 mem: storing 1204 in location 1160
 106 run: reply result:_elem
9999 mem: location 1160 is 1204
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1352
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1352 is 1204
9999 mem: location 1204 is 1
9999 mem: location 1205 is 1
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1151
9999 mem: location 1208 is 2
9999 mem: location 1209 is 3
9999 mem: location 1210 is 1151
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1352 is 1204
9999 mem: storing 1205 in location 1358
 105 run: jump-unless move, 
9999 mem: location 1358 is 1205
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1358 is 1205
9999 mem: location 1205 is 1
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1151
9999 mem: location 1208 is 2
9999 mem: location 1209 is 3
9999 mem: location 1210 is 1151
9999 mem: location 1211 is 0
9999 mem: location 1358 is 1205
9998 run: address to copy is 1211
9998 run: its type is number
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1376
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1372 is 3
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1377
 105 run: jump-unless coalesce?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 666
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1452
9999 mem: storing 1452 in location 1352
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1369 is 2
9999 mem: location 1370 is 3
9999 mem: location 1371 is 1151
9999 mem: location 1373 is 1
9999 mem: location 1374 is 0
9999 mem: location 1375 is 1151
9999 mem: location 1372 is 3
9999 mem: location 1352 is 1452
9999 mem: location 1352 is 1452
9999 mem: storing 1 in location 1452
9999 mem: storing 2 in location 1453
9999 mem: storing 3 in location 1454
9999 mem: storing 1151 in location 1455
9999 mem: storing 1 in location 1456
9999 mem: storing 0 in location 1457
9999 mem: storing 1151 in location 1458
9999 mem: storing 3 in location 1459
 105 run: editor <- add-operation editor, op
9999 mem: location 1334 is 1115
9999 mem: location 1352 is 1452
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1217
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1452 in location 1218
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1329
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1219
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1218 is 1452
9999 mem: location 1219 is 1124
9999 mem: location 1124 is 1329
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1452 in location 1199
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1329 in location 1200
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1463
9999 mem: storing 1463 in location 1201
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1201 is 1463
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1463 is 0
9999 mem: location 1464 is 0
9999 mem: location 1201 is 1463
9998 run: address to copy is 1463
9999 mem: storing 1463 in location 1202
 107 run: *val <- copy x
9999 mem: location 1199 is 1452
9999 mem: location 1202 is 1463
9999 mem: storing 1452 in location 1463
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1201 is 1463
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1463 is 1452
9999 mem: location 1464 is 0
9999 mem: location 1201 is 1463
9999 type: type deduced to be address$
9998 run: address to copy is 1464
9999 mem: storing 1464 in location 1203
 107 run: *next <- copy in
9999 mem: location 1200 is 1329
9999 mem: location 1203 is 1464
9999 mem: storing 1329 in location 1464
 107 run: reply result
9999 mem: location 1201 is 1463
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1463
9999 mem: location 1219 is 1124
9999 mem: storing 1463 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1220
 106 run: *redo <- copy 0
9999 mem: location 1220 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1217 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1334
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1333 is 1009
9999 mem: location 1334 is 1115
9999 mem: location 1339 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1115
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1288
9999 mem: storing 1115 in location 1290
9999 mem: storing 0 in location 1300
 104 run: jump-unless go-render?, 
9999 mem: location 1300 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1291
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1292
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1288 is 1009
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1201
 105 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 105 run: *row <- copy new-row
9999 mem: location 1200 is 1
9999 mem: location 1202 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 105 run: *column <- copy new-column
9999 mem: location 1201 is 0
9999 mem: location 1203 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1288
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1289 is 1284
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1284 in location 1249
 105 run: jump-unless x, 
9999 mem: location 1249 is 1284
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 2
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1284
9999 mem: storing 1284 in location 1250
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1249 is 1284
9999 mem: location 1284 is 2
9999 mem: location 1285 is 1275
9999 mem: location 1249 is 1284
9998 run: address to copy is 1285
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1285 is 1275
9999 mem: storing 1275 in location 1251
 105 run: max:number <- length *buf
9999 mem: location 1251 is 1275
9999 mem: storing 2 in location 1252
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1250 is 1284
9999 mem: location 1284 is 2
9999 mem: location 1252 is 2
9999 mem: storing 1 in location 1253
 105 run: jump-unless done?, 
9999 mem: location 1253 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1157 in location 1254
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1254 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1249 is 1284
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1284
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 1284 in location 1289
9999 mem: storing 1 in location 1297
9999 mem: storing 1 in location 1298
 104 run: jump-unless found?, 
9999 mem: location 1297 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1298 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
9990 schedule: scenario-editor-adjusts-column-at-empty-line
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- perform checks for recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1470
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1288
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1470 in location 1289
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1290
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1291
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1292
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1288 is 1009
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1201
 105 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 105 run: *row <- copy new-row
9999 mem: location 1200 is 1
9999 mem: location 1202 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 105 run: *column <- copy new-column
9999 mem: location 1201 is 0
9999 mem: location 1203 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1288
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1289 is 1470
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1470 in location 1249
 105 run: jump-unless x, 
9999 mem: location 1249 is 1470
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1249 is 1470
9999 mem: location 1470 is 0
9999 mem: location 1471 is 1465
9999 mem: location 1249 is 1470
9998 run: address to copy is 1470
9999 mem: storing 1470 in location 1250
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1249 is 1470
9999 mem: location 1470 is 0
9999 mem: location 1471 is 1465
9999 mem: location 1249 is 1470
9998 run: address to copy is 1471
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1471 is 1465
9999 mem: storing 1465 in location 1251
 105 run: max:number <- length *buf
9999 mem: location 1251 is 1465
9999 mem: storing 1 in location 1252
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1250 is 1470
9999 mem: location 1470 is 0
9999 mem: location 1252 is 1
9999 mem: storing 0 in location 1253
 105 run: jump-unless done?, 
9999 mem: location 1253 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1251 is 1465
9999 mem: location 1250 is 1470
9999 mem: location 1470 is 0
9998 run: address to copy is 1466
9998 run: its type is event
9999 mem: location 1466 is 0
9999 mem: location 1467 is 48
9999 mem: location 1468 is 0
9999 mem: location 1469 is 0
9999 mem: storing 0 in location 1255
9999 mem: storing 48 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 105 run: *idx <- add *idx, 1
9999 mem: location 1250 is 1470
9999 mem: location 1470 is 0
9999 mem: location 1250 is 1470
9999 mem: storing 1 in location 1470
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1255 is 0
9999 mem: location 1256 is 48
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1249 is 1470
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1470
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1293
9999 mem: storing 48 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 1470 in location 1289
9999 mem: storing 1 in location 1297
9999 mem: storing 0 in location 1298
 104 run: jump-unless found?, 
9999 mem: location 1297 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1298 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1293 is 0
9999 mem: location 1294 is 48
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1299
 104 run: jump-unless t, 
9999 mem: location 1299 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1288 is 1009
9999 mem: location 1290 is 1115
9999 mem: location 1293 is 0
9999 mem: location 1294 is 48
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1333
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1334
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1335
9999 mem: storing 48 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if editor, 1:offset
9999 mem: location 1334 is 1115
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1333 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1472
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1474
 106 run: jump-unless sc, 
9999 mem: location 1474 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1474 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1474 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1475
 106 run: reply width
9999 mem: location 1475 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1340
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1474
 106 run: jump-unless sc, 
9999 mem: location 1474 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1474 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1474 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1475
 106 run: reply height
9999 mem: location 1475 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1341
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1342
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1343
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1344
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1345
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1346
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1345 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1347
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1346 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1348
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 1336 in location 1349
 105 run: jump-unless c, 
9999 mem: location 1349 is 1336
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1350
 105 run: jump-unless redo?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1361
 105 run: jump-unless undo?, 
9999 mem: location 1361 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1366
 105 run: jump-unless page-up?, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1382
 105 run: jump-unless page-down?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1383
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1388
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1388 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1389
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1389 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1390
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1391
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1395
 105 run: jump-unless tab?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 0 in location 1399
 105 run: jump-unless newline?, 
9999 mem: location 1399 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: storing 1 in location 1402
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1339
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1402 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1384
 105 run: cursor-before:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1344 is 1118
9999 mem: location 1118 is 1151
9999 mem: storing 1151 in location 1396
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1334 is 1115
9999 mem: location 1349 is 1336
9999 mem: location 1336 is 48
9999 mem: location 1333 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: new alloc: 1476
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1478
 106 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1479
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1480
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1478 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1151
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1478 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1481
 106 run: insert-duplex_2 c, *before-cursor
9999 mem: location 1479 is 48
9999 mem: location 1481 is 1118
9999 mem: location 1118 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 48 in location 1145
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1146
 107 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1508
9999 mem: storing 1508 in location 1147
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1147 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1147 is 1508
9998 run: address to copy is 1508
9999 mem: storing 1508 in location 1148
 107 run: *val <- copy x
9999 mem: location 1145 is 48
9999 mem: location 1148 is 1508
9999 mem: storing 48 in location 1508
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1146 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1154
9999 mem: location 1153 is 0
9999 mem: location 1146 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1154
9999 mem: storing 1154 in location 1149
 107 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1146 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1154
9999 mem: location 1153 is 0
9999 mem: location 1146 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1150
 107 run: *y <- copy new-node
9999 mem: location 1147 is 1508
9999 mem: location 1150 is 1152
9999 mem: storing 1508 in location 1152
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1147 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1147 is 1508
9999 type: type deduced to be character$
9998 run: address to copy is 1510
9999 mem: storing 1510 in location 1150
 107 run: *y <- copy in
9999 mem: location 1146 is 1151
9999 mem: location 1150 is 1510
9999 mem: storing 1151 in location 1510
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1147 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 0
9999 mem: location 1510 is 1151
9999 mem: location 1147 is 1508
9999 type: type deduced to be character$
9998 run: address to copy is 1509
9999 mem: storing 1509 in location 1150
 107 run: *y <- copy next-node
9999 mem: location 1149 is 1154
9999 mem: location 1150 is 1509
9999 mem: storing 1154 in location 1509
 107 run: jump-if next-node, 1:offset
9999 mem: location 1149 is 1154
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1149 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1151
9999 mem: location 1149 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1150
 107 run: *y <- copy new-node
9999 mem: location 1147 is 1508
9999 mem: location 1150 is 1156
9999 mem: storing 1508 in location 1156
 107 run: reply new-node
9999 mem: location 1147 is 1508
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next-duplex_2 *before-cursor
9999 mem: location 1481 is 1118
9999 mem: location 1118 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1474
 107 run: jump-if in, 1:offset
9999 mem: location 1474 is 1151
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1474 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1508
9999 mem: location 1153 is 0
9999 mem: location 1474 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1508
9999 mem: storing 1508 in location 1475
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1475 is 1508
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1508
9999 mem: location 1481 is 1118
9999 mem: storing 1508 in location 1118
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1478 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1478 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1482
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1478 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1478 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1483
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1478 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1478 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1484
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1478 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1478 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1485
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1482 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1486
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1483 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1487
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1480 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1474
 107 run: jump-unless sc, 
9999 mem: location 1474 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1474 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1474 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1475
 107 run: reply width
9999 mem: location 1475 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1488
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1480 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1474
 107 run: jump-unless sc, 
9999 mem: location 1474 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1474 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1474 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1475
 107 run: reply height
9999 mem: location 1475 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1489
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1485 is 9
9999 mem: storing 8 in location 1490
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1483 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1490 is 8
9999 mem: storing 0 in location 1491
 106 run: jump-unless at-wrap?, 
9999 mem: location 1491 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1483 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1483 is 1122
9999 mem: storing 1 in location 1122
 106 run: next:address:duplex-list:character <- next-duplex_2 *before-cursor
9999 mem: location 1481 is 1118
9999 mem: location 1118 is 1508
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1508 in location 1474
 107 run: jump-if in, 1:offset
9999 mem: location 1474 is 1508
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1474 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1154
9999 mem: location 1510 is 1151
9999 mem: location 1474 is 1508
9999 type: type deduced to be character$
9998 run: address to copy is 1509
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1509 is 1154
9999 mem: storing 1154 in location 1475
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1475 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1498
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1498 is 1154
9999 mem: storing 0 in location 1499
 106 run: jump-unless at-end?, 
9999 mem: location 1499 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1498 is 1154
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1483 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1502
 106 run: jump-if at-right?, 
9999 mem: location 1502 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1481 is 1118
9999 mem: location 1118 is 1508
9999 mem: storing 1508 in location 1504
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1480 is 1009
9999 mem: location 1486 is 1
9999 mem: location 1487 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1201
 107 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 107 run: *row <- copy new-row
9999 mem: location 1200 is 1
9999 mem: location 1202 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 107 run: *column <- copy new-column
9999 mem: location 1201 is 0
9999 mem: location 1203 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1487 is 0
9999 mem: storing 0 in location 1505
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1497
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1505 is 0
9999 mem: location 1485 is 9
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1502 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1504 is 1508
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1504 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1154
9999 mem: location 1510 is 1151
9999 mem: location 1504 is 1508
9998 run: address to copy is 1508
9998 run: its type is character
9999 mem: location 1508 is 48
9999 mem: storing 48 in location 1506
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1506 is 48
9999 mem: storing 0 in location 1507
 106 run: jump-if at-newline?, 
9999 mem: location 1507 is 0
9998 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1480 is 1009
9999 mem: location 1506 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1223
 107 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1224
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
 107 run: jump-if color-found?, 
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1225
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
 107 run: jump-if bg-color-found?, 
9999 mem: location 1228 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1227
 107 run: trace 90, [print-character], c
9999 mem: location 1224 is 48
  90 print-character: 48 
 107 run: jump-unless sc, 
9999 mem: location 1223 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1223 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1229
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1223 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1230
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1223 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1231
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1231 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1232
 107 run: jump-if legal?, 1:offset
9999 mem: location 1232 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1231 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1232
 107 run: jump-if legal?, 1:offset
9999 mem: location 1232 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1223 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1233
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1233 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1232
 107 run: jump-if legal?, 1:offset
9999 mem: location 1232 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1233 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1229 is 10
9999 mem: storing 1 in location 1232
 107 run: jump-if legal?, 1:offset
9999 mem: location 1232 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1224 is 48
9999 mem: storing 0 in location 1234
 107 run: jump-unless newline?, 
9999 mem: location 1234 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1231 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1237
 107 run: index <- add index, *column
9999 mem: location 1237 is 10
9999 mem: location 1233 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1237
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1223 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1223 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1238
 107 run: len:number <- length *buf
9999 mem: location 1238 is 1014
9999 mem: storing 50 in location 1239
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1224 is 48
9999 mem: storing 0 in location 1240
 107 run: jump-unless backspace?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1238 is 1014
9999 mem: location 1237 is 10
9999 mem: storing 1035 in location 1242
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1242 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1242 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1243
 107 run: *cursor-contents <- copy c
9999 mem: location 1224 is 48
9999 mem: location 1243 is 1035
9999 mem: storing 48 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1242 is 1035
9999 mem: location 1035 is 48
9999 mem: location 1036 is 7
9999 mem: location 1242 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1244
 107 run: *cursor-color <- copy color
9999 mem: location 1225 is 7
9999 mem: location 1244 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1229 is 10
9999 mem: storing 9 in location 1245
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1233 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1245 is 9
9999 mem: storing 0 in location 1246
 107 run: jump-if at-right?, 
9999 mem: location 1246 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1233 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1223 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1505 is 0
9999 mem: storing 1 in location 1505
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1504 is 1508
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1508 in location 1474
 107 run: jump-if in, 1:offset
9999 mem: location 1474 is 1508
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1474 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1154
9999 mem: location 1510 is 1151
9999 mem: location 1474 is 1508
9999 type: type deduced to be character$
9998 run: address to copy is 1509
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1509 is 1154
9999 mem: storing 1154 in location 1475
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1475 is 1154
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1504
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1497
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1505 is 1
9999 mem: location 1485 is 9
9999 mem: storing 0 in location 1502
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1502 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1504 is 1154
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1504 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 10
9999 mem: location 1155 is 1161
9999 mem: location 1156 is 1508
9999 mem: location 1504 is 1154
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 10
9999 mem: storing 10 in location 1506
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1506 is 10
9999 mem: storing 1 in location 1507
 106 run: jump-if at-newline?, 
9999 mem: location 1507 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1497
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean
9999 mem: location 1478 is 1115
9999 mem: location 1480 is 1009
9999 mem: location 1497 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9998 run: result 1 is 1009
9998 run: result 2 is 0
9999 mem: storing 1115 in location 1334
9999 mem: storing 1009 in location 1333
9999 mem: storing 0 in location 1339
 105 run: top-after:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1151
9999 mem: storing 1151 in location 1386
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1334 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1334 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1353
 105 run: jump-unless *undo, 
9999 mem: location 1353 is 1124
9999 mem: location 1124 is 1463
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1353 is 1124
9999 mem: location 1124 is 1463
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1463 in location 1474
 106 run: result <- get *in, value:offset
9999 mem: location 1474 is 1463
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1463 is 1452
9999 mem: location 1464 is 1329
9999 mem: location 1474 is 1463
9998 run: address to copy is 1463
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1463 is 1452
9999 mem: storing 1452 in location 1475
 106 run: reply result:_elem
9999 mem: location 1475 is 1452
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1452
9999 mem: storing 1452 in location 1352
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1352 is 1452
9999 mem: location 1452 is 1
9999 mem: location 1453 is 2
9999 mem: location 1454 is 3
9999 mem: location 1455 is 1151
9999 mem: location 1456 is 1
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1151
9999 mem: location 1459 is 3
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1462 is 0
9999 mem: location 1352 is 1452
9999 mem: storing 0 in location 1359
 105 run: jump-unless typing, 
9999 mem: location 1359 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:duplex-list:character <- next-duplex_2 cursor-before
9999 mem: location 1396 is 1151
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1151 in location 1474
 106 run: jump-if in, 1:offset
9999 mem: location 1474 is 1151
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1474 is 1151
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1151 is 167
9999 mem: location 1152 is 1508
9999 mem: location 1153 is 0
9999 mem: location 1474 is 1151
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1152 is 1508
9999 mem: storing 1508 in location 1475
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1475 is 1508
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1508
9999 mem: storing 1508 in location 1360
 105 run: insert-to:address:duplex-list:character <- next-duplex_2 insert-from
9999 mem: location 1360 is 1508
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1508 in location 1474
 106 run: jump-if in, 1:offset
9999 mem: location 1474 is 1508
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1474 is 1508
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1154
9999 mem: location 1510 is 1151
9999 mem: location 1474 is 1508
9999 type: type deduced to be character$
9998 run: address to copy is 1509
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1509 is 1154
9999 mem: storing 1154 in location 1475
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1475 is 1154
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 1398
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1511
9999 mem: storing 1511 in location 1352
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1347 is 1
9999 mem: location 1348 is 0
9999 mem: location 1384 is 1151
9999 mem: location 1345 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1346 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1386 is 1151
9999 mem: location 1360 is 1508
9999 mem: location 1398 is 1154
9999 mem: location 1352 is 1511
9999 mem: location 1352 is 1511
9999 mem: storing 0 in location 1511
9999 mem: storing 1 in location 1512
9999 mem: storing 0 in location 1513
9999 mem: storing 1151 in location 1514
9999 mem: storing 1 in location 1515
9999 mem: storing 1 in location 1516
9999 mem: storing 1151 in location 1517
9999 mem: storing 1508 in location 1518
9999 mem: storing 1154 in location 1519
9999 mem: storing 1 in location 1520
 105 run: editor <- add-operation editor, op
9999 mem: location 1334 is 1115
9999 mem: location 1352 is 1511
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1217
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1511 in location 1218
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1463
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1219
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1218 is 1511
9999 mem: location 1219 is 1124
9999 mem: location 1124 is 1463
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1511 in location 1199
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1463 in location 1200
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1522
9999 mem: storing 1522 in location 1201
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1201 is 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1522 is 0
9999 mem: location 1523 is 0
9999 mem: location 1201 is 1522
9998 run: address to copy is 1522
9999 mem: storing 1522 in location 1202
 107 run: *val <- copy x
9999 mem: location 1199 is 1511
9999 mem: location 1202 is 1522
9999 mem: storing 1511 in location 1522
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1201 is 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1522 is 1511
9999 mem: location 1523 is 0
9999 mem: location 1201 is 1522
9999 type: type deduced to be address$
9998 run: address to copy is 1523
9999 mem: storing 1523 in location 1203
 107 run: *next <- copy in
9999 mem: location 1200 is 1463
9999 mem: location 1203 is 1523
9999 mem: storing 1463 in location 1523
 107 run: reply result
9999 mem: location 1201 is 1522
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1522
9999 mem: location 1219 is 1124
9999 mem: storing 1522 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1217 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1522
9999 mem: location 1125 is 0
9999 mem: location 1217 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1220
 106 run: *redo <- copy 0
9999 mem: location 1220 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1217 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1334
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1333 is 1009
9999 mem: location 1334 is 1115
9999 mem: location 1339 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1115
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1288
9999 mem: storing 1115 in location 1290
9999 mem: storing 0 in location 1300
 104 run: jump-unless go-render?, 
9999 mem: location 1300 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1522
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1291
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1290 is 1115
9999 mem: location 1115 is 1151
9999 mem: location 1116 is 1151
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1508
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1522
9999 mem: location 1125 is 0
9999 mem: location 1290 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1292
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1288 is 1009
9999 mem: location 1291 is 1
9999 mem: location 1292 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1199
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1200
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1201
 105 run: jump-unless sc, 
9999 mem: location 1199 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1202
 105 run: *row <- copy new-row
9999 mem: location 1200 is 1
9999 mem: location 1202 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1199 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1203
 105 run: *column <- copy new-column
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1199 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1288
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1289 is 1470
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1470 in location 1249
 105 run: jump-unless x, 
9999 mem: location 1249 is 1470
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1249 is 1470
9999 mem: location 1470 is 1
9999 mem: location 1471 is 1465
9999 mem: location 1249 is 1470
9998 run: address to copy is 1470
9999 mem: storing 1470 in location 1250
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1249 is 1470
9999 mem: location 1470 is 1
9999 mem: location 1471 is 1465
9999 mem: location 1249 is 1470
9998 run: address to copy is 1471
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1471 is 1465
9999 mem: storing 1465 in location 1251
 105 run: max:number <- length *buf
9999 mem: location 1251 is 1465
9999 mem: storing 1 in location 1252
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1250 is 1470
9999 mem: location 1470 is 1
9999 mem: location 1252 is 1
9999 mem: storing 1 in location 1253
 105 run: jump-unless done?, 
9999 mem: location 1253 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1472 in location 1254
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1254 is 1472
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1249 is 1470
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1470
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 1470 in location 1289
9999 mem: storing 1 in location 1297
9999 mem: storing 1 in location 1298
 104 run: jump-unless found?, 
9999 mem: location 1297 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1298 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .0         .
    .def       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
