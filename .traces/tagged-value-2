schedule: main
run: main 0: (((1 type)) <- ((copy)) ((integer-address literal)))
run: main 0: integer-address => ((1 type))
mem: ((1 type)): 1 <= integer-address
run: main 1: (((2 integer)) <- ((copy)) ((34 literal)))
run: main 1: 34 => ((2 integer))
mem: ((2 integer)): 2 <= 34
run: main 2: (((3 boolean)) ((4 boolean)) <- ((maybe-coerce)) ((1 tagged-value)) ((boolean literal)))
mem: ((1 tagged-value)) => #(tagged record (integer-address 34 . nil))
run: maybe-coerce/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/main 0: 1000 => ((default-space space-address))
run: maybe-coerce/main 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/main 1: 1031 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 1002 <= 1031
run: maybe-coerce/main 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (integer-address 34 . nil)) boolean)
run: maybe-coerce/main 2: #(tagged record (integer-address 34 . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 1031 <= integer-address
mem: ((1 tagged-value-address) (deref)): 1032 <= 34
run: maybe-coerce/main 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (integer-address 34 . nil)) boolean)
run: maybe-coerce/main 3: boolean => ((2 type))
mem: ((2 type)): 1003 <= boolean
run: maybe-coerce/main 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((1031 type) (raw)) => integer-address
run: maybe-coerce/main 4: integer-address => ((3 type))
mem: ((3 type)): 1004 <= integer-address
run: maybe-coerce/main 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => integer-address
mem: ((2 type)) => boolean
run: maybe-coerce/main 5: nil => ((4 boolean))
mem: ((4 boolean)): 1005 <= nil
run: maybe-coerce/main 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: maybe-coerce/main 7: (((reply)) ((0 literal)) ((nil literal)))
run: main 2: 0 => ((3 boolean))
mem: ((3 boolean)): 3 <= 0
run: main 2: nil => ((4 boolean))
mem: ((4 boolean)): 4 <= nil
schedule: done with routine 
